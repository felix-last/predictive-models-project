MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.00 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.00 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O10QQ3ZX 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O10QQ3ZX new;
MPRINT(EM_DIAGRAM):   run;
422972     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
422973     set EMWS8.AutoNeural11_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_OUTKEY;
422974     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
422975     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set EMWS8.AUTONEURAL11_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

422976     filename emflow
422976   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
422977     *------------------------------------------------------------*;
422978     * AutoNeural11: Scoring DATA data;
422979     *------------------------------------------------------------*;
422980     data EMWS8.AutoNeural11_TRAIN
422981     / view=EMWS8.AutoNeural11_TRAIN
422982     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_TRAIN / view=EMWS8.AutoNeural11_TRAIN ;
422983     set EMWS8.Meta_TRAIN
422984     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
422985     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas.
422986    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
422987    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
422988    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
422989    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
422990    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
422991    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
422992    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
422993    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
422994    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
422995    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
422996    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
422997    +LENGTH _WARN_ $4
422998    +      F_DepVar  $ 12
422999    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
423000    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
423001    +
423002    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
423003    +
423004    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
423005    +
423006    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
423007    +
423008    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
423009    +
423010    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
423011    +
423012    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
423013    +
423014    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
423015    +
423016    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
423017    +
423018    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
423019    +
423020    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
423021    +
423022    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
423023    +
423024    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
423025    +
423026    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
423027    +
423028    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
423029    +
423030    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
423031    +
423032    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
423033    +
423034    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
423035    +
423036    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
423037    +
423038    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
423039    +
423040    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
423041    +
423042    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
423043    +
423044    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
423045    +
423046    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
423047    +
423048    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
423049    +
423050    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
423051    +
423052    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
423053    +
423054    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
423055    +
423056    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
423057    +
423058    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
423059    +
423060    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
423061    +
423062    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
423063    +
423064    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
423065    +
423066    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
423067    +
423068    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
423069    +
423070    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
423071    +
423072    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
423073    +
423074    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
423075    +
423076    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
423077    +
423078    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
423079    +
423080    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
423081    +
423082    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
423083    +
423084    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
423085    +
423086    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
423087    +
423088    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
423089    +
423090    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
423091    +
423092    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
423093    +
423094    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
423095    +
423096    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
423097    +
423098    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
423099    +
423100    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
423101    +
423102    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
423103    +
423104    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
423105    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
423106    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
423107    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
423108    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
423109    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423110    +end;
MPRINT(EM_DIAGRAM):   end;
423111    +else do;
MPRINT(EM_DIAGRAM):   else do;
423112    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
423113    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
423114    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
423115    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
423116    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
423117    +   end;
MPRINT(EM_DIAGRAM):   end;
423118    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
423119    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
423120    +   end;
MPRINT(EM_DIAGRAM):   end;
423121    +   else do;
MPRINT(EM_DIAGRAM):   else do;
423122    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
423123    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
423124    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423125    +   end;
MPRINT(EM_DIAGRAM):   end;
423126    +end;
MPRINT(EM_DIAGRAM):   end;
423127    +
423128    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
423129    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
423130    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
423131    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
423132    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
423133    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423134    +end;
MPRINT(EM_DIAGRAM):   end;
423135    +else do;
MPRINT(EM_DIAGRAM):   else do;
423136    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
423137    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
423138    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
423139    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
423140    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
423141    +   end;
MPRINT(EM_DIAGRAM):   end;
423142    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
423143    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
423144    +   end;
MPRINT(EM_DIAGRAM):   end;
423145    +   else do;
MPRINT(EM_DIAGRAM):   else do;
423146    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
423147    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
423148    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423149    +   end;
MPRINT(EM_DIAGRAM):   end;
423150    +end;
MPRINT(EM_DIAGRAM):   end;
423151    +
423152    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
423153    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
423154    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
423155    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
423156    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
423157    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423158    +end;
MPRINT(EM_DIAGRAM):   end;
423159    +else do;
MPRINT(EM_DIAGRAM):   else do;
423160    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
423161    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
423162    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
423163    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
423164    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
423165    +   end;
MPRINT(EM_DIAGRAM):   end;
423166    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
423167    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
423168    +   end;
MPRINT(EM_DIAGRAM):   end;
423169    +   else do;
MPRINT(EM_DIAGRAM):   else do;
423170    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
423171    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
423172    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423173    +   end;
MPRINT(EM_DIAGRAM):   end;
423174    +end;
MPRINT(EM_DIAGRAM):   end;
423175    +
423176    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
423177    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
423178    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
423179    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
423180    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
423181    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423182    +end;
MPRINT(EM_DIAGRAM):   end;
423183    +else do;
MPRINT(EM_DIAGRAM):   else do;
423184    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
423185    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
423186    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
423187    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
423188    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
423189    +   end;
MPRINT(EM_DIAGRAM):   end;
423190    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
423191    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
423192    +   end;
MPRINT(EM_DIAGRAM):   end;
423193    +   else do;
MPRINT(EM_DIAGRAM):   else do;
423194    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
423195    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
423196    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423197    +   end;
MPRINT(EM_DIAGRAM):   end;
423198    +end;
MPRINT(EM_DIAGRAM):   end;
423199    +
423200    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
423201    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
423202    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
423203    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
423204    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
423205    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423206    +end;
MPRINT(EM_DIAGRAM):   end;
423207    +else do;
MPRINT(EM_DIAGRAM):   else do;
423208    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
423209    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
423210    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
423211    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
423212    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
423213    +   end;
MPRINT(EM_DIAGRAM):   end;
423214    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
423215    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
423216    +   end;
MPRINT(EM_DIAGRAM):   end;
423217    +   else do;
MPRINT(EM_DIAGRAM):   else do;
423218    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
423219    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
423220    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423221    +   end;
MPRINT(EM_DIAGRAM):   end;
423222    +end;
MPRINT(EM_DIAGRAM):   end;
423223    +
423224    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
423225    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
423226    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
423227    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
423228    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
423229    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423230    +end;
MPRINT(EM_DIAGRAM):   end;
423231    +else do;
MPRINT(EM_DIAGRAM):   else do;
423232    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
423233    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
423234    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
423235    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
423236    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
423237    +   end;
MPRINT(EM_DIAGRAM):   end;
423238    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
423239    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
423240    +   end;
MPRINT(EM_DIAGRAM):   end;
423241    +   else do;
MPRINT(EM_DIAGRAM):   else do;
423242    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
423243    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
423244    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423245    +   end;
MPRINT(EM_DIAGRAM):   end;
423246    +end;
MPRINT(EM_DIAGRAM):   end;
423247    +
423248    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
423249    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
423250    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
423251    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
423252    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
423253    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423254    +end;
MPRINT(EM_DIAGRAM):   end;
423255    +else do;
MPRINT(EM_DIAGRAM):   else do;
423256    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
423257    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
423258    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
423259    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
423260    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
423261    +   end;
MPRINT(EM_DIAGRAM):   end;
423262    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
423263    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
423264    +   end;
MPRINT(EM_DIAGRAM):   end;
423265    +   else do;
MPRINT(EM_DIAGRAM):   else do;
423266    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
423267    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
423268    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423269    +   end;
MPRINT(EM_DIAGRAM):   end;
423270    +end;
MPRINT(EM_DIAGRAM):   end;
423271    +
423272    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
423273    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
423274    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
423275    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
423276    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
423277    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
423278    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
423279    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
423280    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
423281    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
423282    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
423283    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
423284    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
423285    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423286    +end;
MPRINT(EM_DIAGRAM):   end;
423287    +else do;
MPRINT(EM_DIAGRAM):   else do;
423288    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
423289    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
423290    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
423291    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
423292    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
423293    +   end;
MPRINT(EM_DIAGRAM):   end;
423294    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
423295    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
423296    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
423297    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
423298    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
423299    +   end;
MPRINT(EM_DIAGRAM):   end;
423300    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
423301    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
423302    +   end;
MPRINT(EM_DIAGRAM):   end;
423303    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
423304    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
423305    +   end;
MPRINT(EM_DIAGRAM):   end;
423306    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
423307    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
423308    +   end;
MPRINT(EM_DIAGRAM):   end;
423309    +   else do;
MPRINT(EM_DIAGRAM):   else do;
423310    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
423311    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
423312    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
423313    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
423314    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
423315    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423316    +   end;
MPRINT(EM_DIAGRAM):   end;
423317    +end;
MPRINT(EM_DIAGRAM):   end;
423318    +
423319    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
423320    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
423321    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
423322    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
423323    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
423324    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
423325    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
423326    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
423327    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
423328    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
423329    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
423330    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
423331    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
423332    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
423333    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423334    +end;
MPRINT(EM_DIAGRAM):   end;
423335    +else do;
MPRINT(EM_DIAGRAM):   else do;
423336    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
423337    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
423338    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
423339    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
423340    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
423341    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
423342    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
423343    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
423344    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
423345    +         end;
MPRINT(EM_DIAGRAM):   end;
423346    +         else do;
MPRINT(EM_DIAGRAM):   else do;
423347    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
423348    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
423349    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
423350    +            end;
MPRINT(EM_DIAGRAM):   end;
423351    +         end;
MPRINT(EM_DIAGRAM):   end;
423352    +      end;
MPRINT(EM_DIAGRAM):   end;
423353    +      else do;
MPRINT(EM_DIAGRAM):   else do;
423354    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
423355    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
423356    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
423357    +         end;
MPRINT(EM_DIAGRAM):   end;
423358    +      end;
MPRINT(EM_DIAGRAM):   end;
423359    +   end;
MPRINT(EM_DIAGRAM):   end;
423360    +   else do;
MPRINT(EM_DIAGRAM):   else do;
423361    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
423362    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
423363    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
423364    +      end;
MPRINT(EM_DIAGRAM):   end;
423365    +      else do;
MPRINT(EM_DIAGRAM):   else do;
423366    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
423367    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
423368    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
423369    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
423370    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
423371    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
423372    +         end;
MPRINT(EM_DIAGRAM):   end;
423373    +      end;
MPRINT(EM_DIAGRAM):   end;
423374    +   end;
MPRINT(EM_DIAGRAM):   end;
423375    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
423376    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
423377    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
423378    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
423379    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
423380    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
423381    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423382    +   end;
MPRINT(EM_DIAGRAM):   end;
423383    +end;
MPRINT(EM_DIAGRAM):   end;
423384    +
423385    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
423386    +*** Checking missing input Interval
423387    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
423388    +
423389    +IF NMISS(
423390    +   AcceptedCmpTotal ,
423391    +   Age ,
423392    +   Frq ,
423393    +   Income ,
423394    +   Kidhome ,
423395    +   Mnt ,
423396    +   MntFishProducts ,
423397    +   MntFruits ,
423398    +   MntGoldProds ,
423399    +   MntMeatProducts ,
423400    +   MntSweetProducts ,
423401    +   MntWines ,
423402    +   MonthsAsCustomer ,
423403    +   NumCatalogPurchases ,
423404    +   NumDealsPurchases ,
423405    +   NumDistPurchases ,
423406    +   NumStorePurchases ,
423407    +   NumWebPurchases ,
423408    +   NumWebVisitsMonth ,
423409    +   RFMstat ,
423410    +   RMntFrq ,
423411    +   Recency ,
423412    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
423413    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
423414    +
423415    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423416    +END;
MPRINT(EM_DIAGRAM):   END;
423417    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
423418    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
423419    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
423420    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
423421    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
423422    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
423423    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
423424    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
423425    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
423426    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
423427    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
423428    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
423429    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
423430    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
423431    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
423432    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
423433    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
423434    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
423435    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
423436    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
423437    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
423438    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
423439    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
423440    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
423441    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
423442    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
423443    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
423444    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
423445    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
423446    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
423447    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
423448    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
423449    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
423450    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
423451    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
423452    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
423453    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
423454    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
423455    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
423456    +END;
MPRINT(EM_DIAGRAM):   END;
423457    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
423458    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
423459    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
423460    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
423461    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
423462    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
423463    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
423464    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
423465    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
423466    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
423467    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
423468    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
423469    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
423470    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
423471    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
423472    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
423473    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
423474    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
423475    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
423476    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
423477    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
423478    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
423479    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
423480    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
423481    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
423482    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
423483    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
423484    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
423485    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
423486    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
423487    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
423488    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
423489    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
423490    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
423491    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
423492    +   ELSE S_NumCatalogPurchases
423493    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
423494    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
423495    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
423496    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
423497    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
423498    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
423499    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
423500    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
423501    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
423502    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
423503    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
423504    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
423505    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
423506    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
423507    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
423508    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
423509    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
423510    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
423511    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
423512    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
423513    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
423514    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
423515    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
423516    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
423517    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
423518    +END;
MPRINT(EM_DIAGRAM):   END;
423519    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
423520    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
423521    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
423522    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
423523    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
423524    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
423525    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
423526    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
423527    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
423528    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
423529    +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
423530    +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
423531    +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
423532    +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
423533    +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
423534    +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
423535    +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
423536    +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
423537    +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
423538    +          +     0.19770934886328 * S_NumDealsPurchases
423539    +          +      0.0515215988111 * S_NumDistPurchases
423540    +          +    -0.34569346346089 * S_NumStorePurchases
423541    +          +    -0.27122293596124 * S_NumWebPurchases
423542    +          +    -0.17061565609755 * S_NumWebVisitsMonth
423543    +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
423544    +        S_RMntFrq  +     0.05823588653853 * S_Recency
423545    +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
423546    +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
423547    +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
423548    +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
423549    +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
423550    +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
423551    +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
423552    +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
423553    +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
423554    +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
423555    +          +     0.54308887602031 * S_NumDealsPurchases
423556    +          +    -0.22507315320192 * S_NumDistPurchases
423557    +          +    -0.79861387328361 * S_NumStorePurchases
423558    +          +    -0.45467494002747 * S_NumWebPurchases
423559    +          +      0.2119048824613 * S_NumWebVisitsMonth
423560    +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
423561    +        S_RMntFrq  +    -0.03061918029089 * S_Recency
423562    +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
423563    +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
423564    +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
423565    +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
423566    +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
423567    +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
423568    +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
423569    +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
423570    +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
423571    +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
423572    +          +     -0.0771083149302 * S_NumDealsPurchases
423573    +          +     0.03403621221162 * S_NumDistPurchases
423574    +          +     0.61303946422025 * S_NumStorePurchases
423575    +          +     0.27126793634053 * S_NumWebPurchases
423576    +          +     -0.9769688424222 * S_NumWebVisitsMonth
423577    +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
423578    +        S_RMntFrq  +     0.94872655811163 * S_Recency
423579    +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
423580    +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
423581    +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
423582    +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
423583    +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
423584    +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
423585    +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
423586    +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
423587    +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
423588    +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
423589    +          +     0.29894603062327 * S_NumDealsPurchases
423590    +          +     0.07614620530875 * S_NumDistPurchases
423591    +          +     0.15402335009896 * S_NumStorePurchases
423592    +          +     0.10615749096863 * S_NumWebPurchases
423593    +          +     0.41962286816879 * S_NumWebVisitsMonth
423594    +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
423595    +        S_RMntFrq  +    -0.84751074132422 * S_Recency
423596    +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
423597    +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
423598    +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
423599    +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
423600    +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
423601    +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
423602    +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
423603    +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
423604    +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
423605    +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
423606    +          +     0.14392502416642 * S_NumDealsPurchases
423607    +          +    -0.10026304978633 * S_NumDistPurchases
423608    +          +     -0.0588453022746 * S_NumStorePurchases
423609    +          +     0.24799398610395 * S_NumWebPurchases
423610    +          +    -0.52695548549717 * S_NumWebVisitsMonth
423611    +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
423612    +        S_RMntFrq  +     0.51841177421912 * S_Recency
423613    +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
423614    +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
423615    +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
423616    +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
423617    +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
423618    +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
423619    +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
423620    +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
423621    +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
423622    +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
423623    +          +     0.08149600854964 * S_NumDealsPurchases
423624    +          +     0.16873541613513 * S_NumDistPurchases
423625    +          +    -0.20437343413446 * S_NumStorePurchases
423626    +          +     -0.1671107527288 * S_NumWebPurchases
423627    +          +     0.03677043100993 * S_NumWebVisitsMonth
423628    +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
423629    +        S_RMntFrq  +    -0.28802122451372 * S_Recency
423630    +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
423631    +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
423632    +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
423633    +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
423634    +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
423635    +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
423636    +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
423637    +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
423638    +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
423639    +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
423640    +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
423641    +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
423642    +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
423643    +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
423644    +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
423645    +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
423646    +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
423647    +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
423648    +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
423649    +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
423650    +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
423651    +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
423652    +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
423653    +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
423654    +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
423655    +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
423656    +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
423657    +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
423658    +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
423659    +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
423660    +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
423661    +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
423662    +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
423663    +        EducationGraduation  +      0.0228208538951 * EducationMaster
423664    +          +    -0.31045295887604 * Marital_StatusDivorced
423665    +          +    -0.01109401001539 * Marital_StatusMarried
423666    +          +     0.01325135981025 * Marital_StatusSingle
423667    +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
423668    +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
423669    +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
423670    +        EducationGraduation  +     0.07524128723108 * EducationMaster
423671    +          +     0.02275101861599 * Marital_StatusDivorced
423672    +          +     0.20271548664903 * Marital_StatusMarried
423673    +          +    -0.12132069210718 * Marital_StatusSingle
423674    +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
423675    +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
423676    +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
423677    +        EducationGraduation  +     0.17299848976308 * EducationMaster
423678    +          +     -0.4992959703281 * Marital_StatusDivorced
423679    +          +     0.62071659624138 * Marital_StatusMarried
423680    +          +    -0.21776202274494 * Marital_StatusSingle
423681    +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
423682    +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
423683    +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
423684    +        EducationGraduation  +    -0.22448876765089 * EducationMaster
423685    +          +     0.05626212670587 * Marital_StatusDivorced
423686    +          +     0.14353891364597 * Marital_StatusMarried
423687    +          +    -0.29006765622997 * Marital_StatusSingle
423688    +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
423689    +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
423690    +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
423691    +        EducationGraduation  +    -0.06568730318683 * EducationMaster
423692    +          +    -0.21206913700604 * Marital_StatusDivorced
423693    +          +     0.58790643614629 * Marital_StatusMarried
423694    +          +    -0.65995982578062 * Marital_StatusSingle
423695    +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
423696    +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
423697    +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
423698    +        EducationGraduation  +    -0.21389968555475 * EducationMaster
423699    +          +    -0.05047370516008 * Marital_StatusDivorced
423700    +          +    -0.23139090963669 * Marital_StatusMarried
423701    +          +     0.04816197463249 * Marital_StatusSingle
423702    +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
423703    +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
423704    +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
423705    +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
423706    +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
423707    +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
423708    +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
423709    +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
423710    +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
423711    +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
423712    +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
423713    +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
423714    +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
423715    +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
423716    +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
423717    +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
423718    +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
423719    +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
423720    +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
423721    +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
423722    +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
423723    +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
423724    +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
423725    +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
423726    +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
423727    +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
423728    +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
423729    +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
423730    +END;
MPRINT(EM_DIAGRAM):   END;
423731    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
423732    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
423733    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
423734    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
423735    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
423736    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
423737    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
423738    +END;
MPRINT(EM_DIAGRAM):   END;
423739    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
423740    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
423741    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
423742    +
423743    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
423744    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
423745    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
423746    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
423747    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
423748    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
423749    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
423750    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
423751    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
423752    +end;
MPRINT(EM_DIAGRAM):   end;
423753    +else do;
MPRINT(EM_DIAGRAM):   else do;
423754    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
423755    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
423756    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
423757    +   end;
MPRINT(EM_DIAGRAM):   end;
423758    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
423759    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
423760    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
423761    +   end;
MPRINT(EM_DIAGRAM):   end;
423762    +   else do;
MPRINT(EM_DIAGRAM):   else do;
423763    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
423764    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
423765    +   end;
MPRINT(EM_DIAGRAM):   end;
423766    +end;
MPRINT(EM_DIAGRAM):   end;
423767    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
423768    +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
423769    +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
423770    +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
423771    +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
423772    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
423773    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
423774    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
423775    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
423776    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
423777    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
423778    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
423779    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
423780    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
423781    +END;
MPRINT(EM_DIAGRAM):   END;
423782    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
423783    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
423784    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
423785    +END;
MPRINT(EM_DIAGRAM):   END;
423786    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
423787    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
423788    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
423789    +END;
MPRINT(EM_DIAGRAM):   END;
423790    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
423791    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
423792    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
423793    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
423794    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
423795    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
423796    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
423797    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
423798    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
423799    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
423800    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
423801    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
423802    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
423803    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
423804    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
423805    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
423806    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
423807    +END;
MPRINT(EM_DIAGRAM):   END;
423808    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
423809    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
423810    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
423811    +drop
423812    +H1x1_1
423813    +H1x1_2
423814    +H1x1_3
423815    +H1x1_4
423816    +H1x1_5
423817    +H1x1_6
423818    +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
423819    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
423820     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL11_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
423821     quit;
423822     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
423823     filename emflow
423823   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
423824     *------------------------------------------------------------*;
423825     * AutoNeural11: Scoring VALIDATE data;
423826     *------------------------------------------------------------*;
423827     data EMWS8.AutoNeural11_VALIDATE
423828     / view=EMWS8.AutoNeural11_VALIDATE
423829     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_VALIDATE / view=EMWS8.AutoNeural11_VALIDATE ;
423830     set EMWS8.Meta_VALIDATE
423831     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
423832     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas.
423833    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
423834    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
423835    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
423836    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
423837    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
423838    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
423839    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
423840    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
423841    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
423842    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
423843    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
423844    +LENGTH _WARN_ $4
423845    +      F_DepVar  $ 12
423846    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
423847    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
423848    +
423849    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
423850    +
423851    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
423852    +
423853    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
423854    +
423855    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
423856    +
423857    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
423858    +
423859    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
423860    +
423861    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
423862    +
423863    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
423864    +
423865    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
423866    +
423867    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
423868    +
423869    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
423870    +
423871    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
423872    +
423873    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
423874    +
423875    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
423876    +
423877    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
423878    +
423879    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
423880    +
423881    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
423882    +
423883    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
423884    +
423885    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
423886    +
423887    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
423888    +
423889    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
423890    +
423891    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
423892    +
423893    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
423894    +
423895    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
423896    +
423897    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
423898    +
423899    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
423900    +
423901    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
423902    +
423903    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
423904    +
423905    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
423906    +
423907    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
423908    +
423909    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
423910    +
423911    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
423912    +
423913    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
423914    +
423915    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
423916    +
423917    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
423918    +
423919    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
423920    +
423921    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
423922    +
423923    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
423924    +
423925    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
423926    +
423927    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
423928    +
423929    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
423930    +
423931    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
423932    +
423933    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
423934    +
423935    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
423936    +
423937    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
423938    +
423939    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
423940    +
423941    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
423942    +
423943    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
423944    +
423945    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
423946    +
423947    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
423948    +
423949    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
423950    +
423951    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
423952    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
423953    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
423954    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
423955    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
423956    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423957    +end;
MPRINT(EM_DIAGRAM):   end;
423958    +else do;
MPRINT(EM_DIAGRAM):   else do;
423959    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
423960    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
423961    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
423962    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
423963    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
423964    +   end;
MPRINT(EM_DIAGRAM):   end;
423965    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
423966    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
423967    +   end;
MPRINT(EM_DIAGRAM):   end;
423968    +   else do;
MPRINT(EM_DIAGRAM):   else do;
423969    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
423970    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
423971    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423972    +   end;
MPRINT(EM_DIAGRAM):   end;
423973    +end;
MPRINT(EM_DIAGRAM):   end;
423974    +
423975    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
423976    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
423977    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
423978    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
423979    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
423980    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423981    +end;
MPRINT(EM_DIAGRAM):   end;
423982    +else do;
MPRINT(EM_DIAGRAM):   else do;
423983    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
423984    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
423985    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
423986    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
423987    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
423988    +   end;
MPRINT(EM_DIAGRAM):   end;
423989    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
423990    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
423991    +   end;
MPRINT(EM_DIAGRAM):   end;
423992    +   else do;
MPRINT(EM_DIAGRAM):   else do;
423993    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
423994    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
423995    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
423996    +   end;
MPRINT(EM_DIAGRAM):   end;
423997    +end;
MPRINT(EM_DIAGRAM):   end;
423998    +
423999    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
424000    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
424001    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
424002    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
424003    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
424004    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424005    +end;
MPRINT(EM_DIAGRAM):   end;
424006    +else do;
MPRINT(EM_DIAGRAM):   else do;
424007    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
424008    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
424009    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
424010    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
424011    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
424012    +   end;
MPRINT(EM_DIAGRAM):   end;
424013    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
424014    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
424015    +   end;
MPRINT(EM_DIAGRAM):   end;
424016    +   else do;
MPRINT(EM_DIAGRAM):   else do;
424017    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
424018    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
424019    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424020    +   end;
MPRINT(EM_DIAGRAM):   end;
424021    +end;
MPRINT(EM_DIAGRAM):   end;
424022    +
424023    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
424024    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
424025    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
424026    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
424027    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
424028    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424029    +end;
MPRINT(EM_DIAGRAM):   end;
424030    +else do;
MPRINT(EM_DIAGRAM):   else do;
424031    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
424032    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
424033    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
424034    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
424035    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
424036    +   end;
MPRINT(EM_DIAGRAM):   end;
424037    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
424038    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
424039    +   end;
MPRINT(EM_DIAGRAM):   end;
424040    +   else do;
MPRINT(EM_DIAGRAM):   else do;
424041    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
424042    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
424043    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424044    +   end;
MPRINT(EM_DIAGRAM):   end;
424045    +end;
MPRINT(EM_DIAGRAM):   end;
424046    +
424047    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
424048    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
424049    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
424050    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
424051    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
424052    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424053    +end;
MPRINT(EM_DIAGRAM):   end;
424054    +else do;
MPRINT(EM_DIAGRAM):   else do;
424055    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
424056    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
424057    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
424058    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
424059    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
424060    +   end;
MPRINT(EM_DIAGRAM):   end;
424061    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
424062    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
424063    +   end;
MPRINT(EM_DIAGRAM):   end;
424064    +   else do;
MPRINT(EM_DIAGRAM):   else do;
424065    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
424066    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
424067    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424068    +   end;
MPRINT(EM_DIAGRAM):   end;
424069    +end;
MPRINT(EM_DIAGRAM):   end;
424070    +
424071    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
424072    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
424073    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
424074    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
424075    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
424076    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424077    +end;
MPRINT(EM_DIAGRAM):   end;
424078    +else do;
MPRINT(EM_DIAGRAM):   else do;
424079    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
424080    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
424081    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
424082    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
424083    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
424084    +   end;
MPRINT(EM_DIAGRAM):   end;
424085    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
424086    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
424087    +   end;
MPRINT(EM_DIAGRAM):   end;
424088    +   else do;
MPRINT(EM_DIAGRAM):   else do;
424089    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
424090    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
424091    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424092    +   end;
MPRINT(EM_DIAGRAM):   end;
424093    +end;
MPRINT(EM_DIAGRAM):   end;
424094    +
424095    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
424096    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
424097    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
424098    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
424099    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
424100    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424101    +end;
MPRINT(EM_DIAGRAM):   end;
424102    +else do;
MPRINT(EM_DIAGRAM):   else do;
424103    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
424104    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
424105    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
424106    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
424107    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
424108    +   end;
MPRINT(EM_DIAGRAM):   end;
424109    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
424110    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
424111    +   end;
MPRINT(EM_DIAGRAM):   end;
424112    +   else do;
MPRINT(EM_DIAGRAM):   else do;
424113    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
424114    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
424115    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424116    +   end;
MPRINT(EM_DIAGRAM):   end;
424117    +end;
MPRINT(EM_DIAGRAM):   end;
424118    +
424119    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
424120    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
424121    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
424122    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
424123    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
424124    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
424125    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
424126    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
424127    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
424128    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
424129    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
424130    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
424131    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
424132    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424133    +end;
MPRINT(EM_DIAGRAM):   end;
424134    +else do;
MPRINT(EM_DIAGRAM):   else do;
424135    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
424136    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
424137    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
424138    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
424139    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
424140    +   end;
MPRINT(EM_DIAGRAM):   end;
424141    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
424142    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
424143    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
424144    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
424145    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
424146    +   end;
MPRINT(EM_DIAGRAM):   end;
424147    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
424148    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
424149    +   end;
MPRINT(EM_DIAGRAM):   end;
424150    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
424151    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
424152    +   end;
MPRINT(EM_DIAGRAM):   end;
424153    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
424154    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
424155    +   end;
MPRINT(EM_DIAGRAM):   end;
424156    +   else do;
MPRINT(EM_DIAGRAM):   else do;
424157    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
424158    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
424159    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
424160    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
424161    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
424162    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424163    +   end;
MPRINT(EM_DIAGRAM):   end;
424164    +end;
MPRINT(EM_DIAGRAM):   end;
424165    +
424166    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
424167    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
424168    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
424169    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
424170    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
424171    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
424172    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
424173    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
424174    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
424175    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
424176    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
424177    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
424178    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
424179    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
424180    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424181    +end;
MPRINT(EM_DIAGRAM):   end;
424182    +else do;
MPRINT(EM_DIAGRAM):   else do;
424183    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
424184    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
424185    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
424186    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
424187    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
424188    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
424189    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
424190    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
424191    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
424192    +         end;
MPRINT(EM_DIAGRAM):   end;
424193    +         else do;
MPRINT(EM_DIAGRAM):   else do;
424194    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
424195    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
424196    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
424197    +            end;
MPRINT(EM_DIAGRAM):   end;
424198    +         end;
MPRINT(EM_DIAGRAM):   end;
424199    +      end;
MPRINT(EM_DIAGRAM):   end;
424200    +      else do;
MPRINT(EM_DIAGRAM):   else do;
424201    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
424202    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
424203    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
424204    +         end;
MPRINT(EM_DIAGRAM):   end;
424205    +      end;
MPRINT(EM_DIAGRAM):   end;
424206    +   end;
MPRINT(EM_DIAGRAM):   end;
424207    +   else do;
MPRINT(EM_DIAGRAM):   else do;
424208    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
424209    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
424210    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
424211    +      end;
MPRINT(EM_DIAGRAM):   end;
424212    +      else do;
MPRINT(EM_DIAGRAM):   else do;
424213    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
424214    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
424215    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
424216    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
424217    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
424218    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
424219    +         end;
MPRINT(EM_DIAGRAM):   end;
424220    +      end;
MPRINT(EM_DIAGRAM):   end;
424221    +   end;
MPRINT(EM_DIAGRAM):   end;
424222    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
424223    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
424224    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
424225    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
424226    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
424227    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
424228    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424229    +   end;
MPRINT(EM_DIAGRAM):   end;
424230    +end;
MPRINT(EM_DIAGRAM):   end;
424231    +
424232    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
424233    +*** Checking missing input Interval
424234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
424235    +
424236    +IF NMISS(
424237    +   AcceptedCmpTotal ,
424238    +   Age ,
424239    +   Frq ,
424240    +   Income ,
424241    +   Kidhome ,
424242    +   Mnt ,
424243    +   MntFishProducts ,
424244    +   MntFruits ,
424245    +   MntGoldProds ,
424246    +   MntMeatProducts ,
424247    +   MntSweetProducts ,
424248    +   MntWines ,
424249    +   MonthsAsCustomer ,
424250    +   NumCatalogPurchases ,
424251    +   NumDealsPurchases ,
424252    +   NumDistPurchases ,
424253    +   NumStorePurchases ,
424254    +   NumWebPurchases ,
424255    +   NumWebVisitsMonth ,
424256    +   RFMstat ,
424257    +   RMntFrq ,
424258    +   Recency ,
424259    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
424260    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
424261    +
424262    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
424263    +END;
MPRINT(EM_DIAGRAM):   END;
424264    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
424265    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
424266    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
424267    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
424268    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
424269    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
424270    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
424271    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
424272    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
424273    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
424274    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
424275    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
424276    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
424277    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
424278    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
424279    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
424280    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
424281    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
424282    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
424283    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
424284    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
424285    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
424286    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
424287    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
424288    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
424289    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
424290    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
424291    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
424292    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
424293    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
424294    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
424295    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
424296    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
424297    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
424298    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
424299    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
424300    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
424301    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
424302    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
424303    +END;
MPRINT(EM_DIAGRAM):   END;
424304    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
424305    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
424306    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
424307    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
424308    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
424309    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
424310    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
424311    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
424312    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
424313    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
424314    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
424315    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
424316    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
424317    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
424318    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
424319    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
424320    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
424321    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
424322    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
424323    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
424324    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
424325    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
424326    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
424327    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
424328    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
424329    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
424330    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
424331    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
424332    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
424333    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
424334    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
424335    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
424336    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
424337    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
424338    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
424339    +   ELSE S_NumCatalogPurchases
424340    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
424341    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
424342    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
424343    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
424344    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
424345    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
424346    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
424347    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
424348    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
424349    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
424350    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
424351    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
424352    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
424353    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
424354    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
424355    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
424356    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
424357    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
424358    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
424359    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
424360    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
424361    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
424362    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
424363    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
424364    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
424365    +END;
MPRINT(EM_DIAGRAM):   END;
424366    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
424367    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
424368    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
424369    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
424370    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
424371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
424372    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
424373    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
424374    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
424375    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
424376    +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
424377    +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
424378    +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
424379    +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
424380    +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
424381    +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
424382    +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
424383    +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
424384    +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
424385    +          +     0.19770934886328 * S_NumDealsPurchases
424386    +          +      0.0515215988111 * S_NumDistPurchases
424387    +          +    -0.34569346346089 * S_NumStorePurchases
424388    +          +    -0.27122293596124 * S_NumWebPurchases
424389    +          +    -0.17061565609755 * S_NumWebVisitsMonth
424390    +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
424391    +        S_RMntFrq  +     0.05823588653853 * S_Recency
424392    +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
424393    +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
424394    +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
424395    +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
424396    +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
424397    +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
424398    +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
424399    +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
424400    +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
424401    +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
424402    +          +     0.54308887602031 * S_NumDealsPurchases
424403    +          +    -0.22507315320192 * S_NumDistPurchases
424404    +          +    -0.79861387328361 * S_NumStorePurchases
424405    +          +    -0.45467494002747 * S_NumWebPurchases
424406    +          +      0.2119048824613 * S_NumWebVisitsMonth
424407    +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
424408    +        S_RMntFrq  +    -0.03061918029089 * S_Recency
424409    +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
424410    +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
424411    +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
424412    +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
424413    +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
424414    +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
424415    +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
424416    +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
424417    +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
424418    +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
424419    +          +     -0.0771083149302 * S_NumDealsPurchases
424420    +          +     0.03403621221162 * S_NumDistPurchases
424421    +          +     0.61303946422025 * S_NumStorePurchases
424422    +          +     0.27126793634053 * S_NumWebPurchases
424423    +          +     -0.9769688424222 * S_NumWebVisitsMonth
424424    +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
424425    +        S_RMntFrq  +     0.94872655811163 * S_Recency
424426    +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
424427    +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
424428    +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
424429    +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
424430    +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
424431    +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
424432    +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
424433    +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
424434    +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
424435    +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
424436    +          +     0.29894603062327 * S_NumDealsPurchases
424437    +          +     0.07614620530875 * S_NumDistPurchases
424438    +          +     0.15402335009896 * S_NumStorePurchases
424439    +          +     0.10615749096863 * S_NumWebPurchases
424440    +          +     0.41962286816879 * S_NumWebVisitsMonth
424441    +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
424442    +        S_RMntFrq  +    -0.84751074132422 * S_Recency
424443    +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
424444    +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
424445    +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
424446    +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
424447    +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
424448    +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
424449    +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
424450    +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
424451    +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
424452    +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
424453    +          +     0.14392502416642 * S_NumDealsPurchases
424454    +          +    -0.10026304978633 * S_NumDistPurchases
424455    +          +     -0.0588453022746 * S_NumStorePurchases
424456    +          +     0.24799398610395 * S_NumWebPurchases
424457    +          +    -0.52695548549717 * S_NumWebVisitsMonth
424458    +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
424459    +        S_RMntFrq  +     0.51841177421912 * S_Recency
424460    +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
424461    +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
424462    +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
424463    +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
424464    +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
424465    +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
424466    +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
424467    +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
424468    +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
424469    +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
424470    +          +     0.08149600854964 * S_NumDealsPurchases
424471    +          +     0.16873541613513 * S_NumDistPurchases
424472    +          +    -0.20437343413446 * S_NumStorePurchases
424473    +          +     -0.1671107527288 * S_NumWebPurchases
424474    +          +     0.03677043100993 * S_NumWebVisitsMonth
424475    +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
424476    +        S_RMntFrq  +    -0.28802122451372 * S_Recency
424477    +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
424478    +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
424479    +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
424480    +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
424481    +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
424482    +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
424483    +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
424484    +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
424485    +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
424486    +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
424487    +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
424488    +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
424489    +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
424490    +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
424491    +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
424492    +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
424493    +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
424494    +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
424495    +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
424496    +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
424497    +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
424498    +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
424499    +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
424500    +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
424501    +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
424502    +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
424503    +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
424504    +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
424505    +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
424506    +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
424507    +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
424508    +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
424509    +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
424510    +        EducationGraduation  +      0.0228208538951 * EducationMaster
424511    +          +    -0.31045295887604 * Marital_StatusDivorced
424512    +          +    -0.01109401001539 * Marital_StatusMarried
424513    +          +     0.01325135981025 * Marital_StatusSingle
424514    +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
424515    +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
424516    +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
424517    +        EducationGraduation  +     0.07524128723108 * EducationMaster
424518    +          +     0.02275101861599 * Marital_StatusDivorced
424519    +          +     0.20271548664903 * Marital_StatusMarried
424520    +          +    -0.12132069210718 * Marital_StatusSingle
424521    +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
424522    +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
424523    +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
424524    +        EducationGraduation  +     0.17299848976308 * EducationMaster
424525    +          +     -0.4992959703281 * Marital_StatusDivorced
424526    +          +     0.62071659624138 * Marital_StatusMarried
424527    +          +    -0.21776202274494 * Marital_StatusSingle
424528    +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
424529    +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
424530    +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
424531    +        EducationGraduation  +    -0.22448876765089 * EducationMaster
424532    +          +     0.05626212670587 * Marital_StatusDivorced
424533    +          +     0.14353891364597 * Marital_StatusMarried
424534    +          +    -0.29006765622997 * Marital_StatusSingle
424535    +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
424536    +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
424537    +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
424538    +        EducationGraduation  +    -0.06568730318683 * EducationMaster
424539    +          +    -0.21206913700604 * Marital_StatusDivorced
424540    +          +     0.58790643614629 * Marital_StatusMarried
424541    +          +    -0.65995982578062 * Marital_StatusSingle
424542    +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
424543    +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
424544    +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
424545    +        EducationGraduation  +    -0.21389968555475 * EducationMaster
424546    +          +    -0.05047370516008 * Marital_StatusDivorced
424547    +          +    -0.23139090963669 * Marital_StatusMarried
424548    +          +     0.04816197463249 * Marital_StatusSingle
424549    +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
424550    +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
424551    +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
424552    +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
424553    +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
424554    +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
424555    +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
424556    +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
424557    +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
424558    +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
424559    +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
424560    +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
424561    +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
424562    +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
424563    +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
424564    +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
424565    +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
424566    +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
424567    +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
424568    +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
424569    +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
424570    +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
424571    +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
424572    +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
424573    +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
424574    +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
424575    +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
424576    +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
424577    +END;
MPRINT(EM_DIAGRAM):   END;
424578    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
424579    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
424580    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
424581    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
424582    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
424583    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
424584    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
424585    +END;
MPRINT(EM_DIAGRAM):   END;
424586    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
424587    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
424588    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
424589    +
424590    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
424591    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
424592    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
424593    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
424594    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
424595    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
424596    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
424597    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
424598    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
424599    +end;
MPRINT(EM_DIAGRAM):   end;
424600    +else do;
MPRINT(EM_DIAGRAM):   else do;
424601    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
424602    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
424603    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
424604    +   end;
MPRINT(EM_DIAGRAM):   end;
424605    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
424606    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
424607    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
424608    +   end;
MPRINT(EM_DIAGRAM):   end;
424609    +   else do;
MPRINT(EM_DIAGRAM):   else do;
424610    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
424611    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
424612    +   end;
MPRINT(EM_DIAGRAM):   end;
424613    +end;
MPRINT(EM_DIAGRAM):   end;
424614    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
424615    +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
424616    +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
424617    +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
424618    +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
424619    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
424620    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
424621    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
424622    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
424623    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
424624    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
424625    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
424626    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
424627    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
424628    +END;
MPRINT(EM_DIAGRAM):   END;
424629    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
424630    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
424631    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
424632    +END;
MPRINT(EM_DIAGRAM):   END;
424633    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
424634    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
424635    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
424636    +END;
MPRINT(EM_DIAGRAM):   END;
424637    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
424638    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
424639    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
424640    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
424641    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
424642    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
424643    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
424644    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
424645    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
424646    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
424647    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
424648    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
424649    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
424650    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
424651    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
424652    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
424653    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
424654    +END;
MPRINT(EM_DIAGRAM):   END;
424655    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
424656    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
424657    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
424658    +drop
424659    +H1x1_1
424660    +H1x1_2
424661    +H1x1_3
424662    +H1x1_4
424663    +H1x1_5
424664    +H1x1_6
424665    +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
424666    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
424667     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL11_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
424668     quit;
424669     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
424670     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
424671     * AutoNeural11: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Computing metadata for TRAIN data;
424672     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL11_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural11_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural11_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural11_TRAIN out=WORK.M189OH3N 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M189OH3N;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M189OH3N(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M189OH3N;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M189OH3N;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1PI8C8P NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1PI8C8P;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1PI8C8P;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00KUKFA(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1PI8C8P;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1PI8C8P;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1PI8C8P;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1PI8C8P;
MPRINT(EMADVISECOLUMNS):   set WORK.M1PI8C8P;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural11";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
424984     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
424985     set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
424986     where DATA='AutoNeural11' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural11' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
424987     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE (DATA='AutoNeural11') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

424988     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMINFO;
424989     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
424990     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
424991     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
424995     run;
424996     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMINFO;
424997     set EMWS8.AutoNeural11_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO WORK.MODELTEMP_INFO;
424998     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

424999     proc sort data = EMWS8.AutoNeural11_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural11_EMINFO NOTHREADS;
425000     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
425001     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

425002     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
425003     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
425004     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

425005     proc sort data = EMWS8.AutoNeural11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
425006     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
425007     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

425008     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMINFO;
425009     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
425010     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
425011     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

425012     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
425013     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
425014     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
425015     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL11_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.AUTONEURAL11_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
