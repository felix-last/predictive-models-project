MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.42 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                08.42 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O09ICX9U 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O09ICX9U new;
MPRINT(EM_DIAGRAM):   run;
645970     filename emflow
645970   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
645971     *------------------------------------------------------------*;
645972     * AutoNeural11: Scoring DATA data;
645973     *------------------------------------------------------------*;
645974     data EMWS8.AutoNeural11_TRAIN
645975     / view=EMWS8.AutoNeural11_TRAIN
645976     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_TRAIN / view=EMWS8.AutoNeural11_TRAIN ;
645977     set EMWS8.Meta_TRAIN
645978     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
645979     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas.
645980    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
645981    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
645982    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
645983    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
645984    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
645985    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
645986    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
645987    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
645988    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
645989    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
645990    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
645991    +LENGTH _WARN_ $4
645992    +      F_DepVar  $ 12
645993    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
645994    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
645995    +
645996    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
645997    +
645998    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
645999    +
646000    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
646001    +
646002    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
646003    +
646004    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
646005    +
646006    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
646007    +
646008    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
646009    +
646010    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
646011    +
646012    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
646013    +
646014    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
646015    +
646016    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
646017    +
646018    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
646019    +
646020    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
646021    +
646022    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
646023    +
646024    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
646025    +
646026    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
646027    +
646028    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
646029    +
646030    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
646031    +
646032    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
646033    +
646034    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
646035    +
646036    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
646037    +
646038    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
646039    +
646040    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
646041    +
646042    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
646043    +
646044    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
646045    +
646046    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
646047    +
646048    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
646049    +
646050    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
646051    +
646052    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
646053    +
646054    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
646055    +
646056    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
646057    +
646058    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
646059    +
646060    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
646061    +
646062    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
646063    +
646064    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
646065    +
646066    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
646067    +
646068    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
646069    +
646070    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
646071    +
646072    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
646073    +
646074    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
646075    +
646076    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
646077    +
646078    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
646079    +
646080    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
646081    +
646082    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
646083    +
646084    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
646085    +
646086    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
646087    +
646088    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
646089    +
646090    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
646091    +
646092    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
646093    +
646094    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
646095    +
646096    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
646097    +
646098    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
646099    +
646100    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
646101    +
646102    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
646103    +
646104    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
646105    +
646106    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
646107    +
646108    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
646109    +
646110    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
646111    +
646112    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
646113    +
646114    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
646115    +
646116    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
646117    +
646118    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
646119    +
646120    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
646121    +
646122    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
646123    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
646124    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
646125    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
646126    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646127    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646128    +end;
MPRINT(EM_DIAGRAM):   end;
646129    +else do;
MPRINT(EM_DIAGRAM):   else do;
646130    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
646131    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
646132    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646133    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
646134    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
646135    +   end;
MPRINT(EM_DIAGRAM):   end;
646136    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
646137    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
646138    +   end;
MPRINT(EM_DIAGRAM):   end;
646139    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646140    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
646141    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646142    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646143    +   end;
MPRINT(EM_DIAGRAM):   end;
646144    +end;
MPRINT(EM_DIAGRAM):   end;
646145    +
646146    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
646147    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
646148    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
646149    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
646150    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646151    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646152    +end;
MPRINT(EM_DIAGRAM):   end;
646153    +else do;
MPRINT(EM_DIAGRAM):   else do;
646154    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
646155    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
646156    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646157    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
646158    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
646159    +   end;
MPRINT(EM_DIAGRAM):   end;
646160    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
646161    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
646162    +   end;
MPRINT(EM_DIAGRAM):   end;
646163    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646164    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
646165    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646166    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646167    +   end;
MPRINT(EM_DIAGRAM):   end;
646168    +end;
MPRINT(EM_DIAGRAM):   end;
646169    +
646170    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
646171    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
646172    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
646173    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
646174    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646175    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646176    +end;
MPRINT(EM_DIAGRAM):   end;
646177    +else do;
MPRINT(EM_DIAGRAM):   else do;
646178    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
646179    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
646180    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646181    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
646182    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
646183    +   end;
MPRINT(EM_DIAGRAM):   end;
646184    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
646185    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
646186    +   end;
MPRINT(EM_DIAGRAM):   end;
646187    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646188    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
646189    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646190    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646191    +   end;
MPRINT(EM_DIAGRAM):   end;
646192    +end;
MPRINT(EM_DIAGRAM):   end;
646193    +
646194    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
646195    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
646196    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
646197    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
646198    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646199    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646200    +end;
MPRINT(EM_DIAGRAM):   end;
646201    +else do;
MPRINT(EM_DIAGRAM):   else do;
646202    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
646203    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
646204    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646205    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
646206    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
646207    +   end;
MPRINT(EM_DIAGRAM):   end;
646208    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
646209    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
646210    +   end;
MPRINT(EM_DIAGRAM):   end;
646211    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646212    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
646213    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646214    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646215    +   end;
MPRINT(EM_DIAGRAM):   end;
646216    +end;
MPRINT(EM_DIAGRAM):   end;
646217    +
646218    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
646219    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
646220    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
646221    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
646222    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646223    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646224    +end;
MPRINT(EM_DIAGRAM):   end;
646225    +else do;
MPRINT(EM_DIAGRAM):   else do;
646226    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
646227    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
646228    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646229    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
646230    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
646231    +   end;
MPRINT(EM_DIAGRAM):   end;
646232    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
646233    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
646234    +   end;
MPRINT(EM_DIAGRAM):   end;
646235    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646236    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
646237    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646238    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646239    +   end;
MPRINT(EM_DIAGRAM):   end;
646240    +end;
MPRINT(EM_DIAGRAM):   end;
646241    +
646242    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
646243    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
646244    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
646245    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
646246    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646247    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646248    +end;
MPRINT(EM_DIAGRAM):   end;
646249    +else do;
MPRINT(EM_DIAGRAM):   else do;
646250    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
646251    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
646252    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646253    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
646254    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
646255    +   end;
MPRINT(EM_DIAGRAM):   end;
646256    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
646257    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
646258    +   end;
MPRINT(EM_DIAGRAM):   end;
646259    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646260    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
646261    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646262    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646263    +   end;
MPRINT(EM_DIAGRAM):   end;
646264    +end;
MPRINT(EM_DIAGRAM):   end;
646265    +
646266    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
646267    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
646268    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
646269    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
646270    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646271    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646272    +end;
MPRINT(EM_DIAGRAM):   end;
646273    +else do;
MPRINT(EM_DIAGRAM):   else do;
646274    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
646275    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
646276    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646277    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
646278    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
646279    +   end;
MPRINT(EM_DIAGRAM):   end;
646280    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
646281    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
646282    +   end;
MPRINT(EM_DIAGRAM):   end;
646283    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646284    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
646285    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646286    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646287    +   end;
MPRINT(EM_DIAGRAM):   end;
646288    +end;
MPRINT(EM_DIAGRAM):   end;
646289    +
646290    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
646291    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
646292    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
646293    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
646294    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
646295    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
646296    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
646297    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
646298    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
646299    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
646300    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
646301    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
646302    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646303    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646304    +end;
MPRINT(EM_DIAGRAM):   end;
646305    +else do;
MPRINT(EM_DIAGRAM):   else do;
646306    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
646307    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
646308    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646309    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
646310    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
646311    +   end;
MPRINT(EM_DIAGRAM):   end;
646312    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
646313    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
646314    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
646315    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
646316    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
646317    +   end;
MPRINT(EM_DIAGRAM):   end;
646318    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
646319    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
646320    +   end;
MPRINT(EM_DIAGRAM):   end;
646321    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
646322    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
646323    +   end;
MPRINT(EM_DIAGRAM):   end;
646324    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
646325    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
646326    +   end;
MPRINT(EM_DIAGRAM):   end;
646327    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646328    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
646329    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
646330    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
646331    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
646332    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646333    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646334    +   end;
MPRINT(EM_DIAGRAM):   end;
646335    +end;
MPRINT(EM_DIAGRAM):   end;
646336    +
646337    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
646338    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
646339    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
646340    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
646341    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
646342    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
646343    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
646344    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
646345    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
646346    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
646347    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
646348    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
646349    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
646350    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
646351    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646352    +end;
MPRINT(EM_DIAGRAM):   end;
646353    +else do;
MPRINT(EM_DIAGRAM):   else do;
646354    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
646355    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
646356    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646357    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
646358    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
646359    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
646360    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
646361    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
646362    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
646363    +         end;
MPRINT(EM_DIAGRAM):   end;
646364    +         else do;
MPRINT(EM_DIAGRAM):   else do;
646365    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
646366    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
646367    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
646368    +            end;
MPRINT(EM_DIAGRAM):   end;
646369    +         end;
MPRINT(EM_DIAGRAM):   end;
646370    +      end;
MPRINT(EM_DIAGRAM):   end;
646371    +      else do;
MPRINT(EM_DIAGRAM):   else do;
646372    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
646373    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
646374    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
646375    +         end;
MPRINT(EM_DIAGRAM):   end;
646376    +      end;
MPRINT(EM_DIAGRAM):   end;
646377    +   end;
MPRINT(EM_DIAGRAM):   end;
646378    +   else do;
MPRINT(EM_DIAGRAM):   else do;
646379    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
646380    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
646381    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
646382    +      end;
MPRINT(EM_DIAGRAM):   end;
646383    +      else do;
MPRINT(EM_DIAGRAM):   else do;
646384    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
646385    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
646386    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
646387    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
646388    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
646389    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
646390    +         end;
MPRINT(EM_DIAGRAM):   end;
646391    +      end;
MPRINT(EM_DIAGRAM):   end;
646392    +   end;
MPRINT(EM_DIAGRAM):   end;
646393    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
646394    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
646395    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
646396    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
646397    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
646398    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
646399    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646400    +   end;
MPRINT(EM_DIAGRAM):   end;
646401    +end;
MPRINT(EM_DIAGRAM):   end;
646402    +
646403    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646404    +*** Checking missing input Interval
646405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
646406    +
646407    +IF NMISS(
646408    +   AcceptedCmpTotal ,
646409    +   Age ,
646410    +   Frq ,
646411    +   Income ,
646412    +   Kidhome ,
646413    +   Mnt ,
646414    +   MntFishProducts ,
646415    +   MntFruits ,
646416    +   MntGoldProds ,
646417    +   MntMeatProducts ,
646418    +   MntSweetProducts ,
646419    +   MntWines ,
646420    +   MonthsAsCustomer ,
646421    +   NumCatalogPurchases ,
646422    +   NumDealsPurchases ,
646423    +   NumDistPurchases ,
646424    +   NumStorePurchases ,
646425    +   NumWebPurchases ,
646426    +   NumWebVisitsMonth ,
646427    +   RFMstat ,
646428    +   RMntFrq ,
646429    +   Recency ,
646430    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
646431    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
646432    +
646433    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
646434    +END;
MPRINT(EM_DIAGRAM):   END;
646435    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646436    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
646437    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646438    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
646439    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
646440    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
646441    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
646442    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
646443    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
646444    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
646445    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
646446    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
646447    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
646448    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
646449    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
646450    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
646451    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
646452    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
646453    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
646454    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
646455    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
646456    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
646457    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
646458    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
646459    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
646460    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
646461    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
646462    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
646463    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
646464    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
646465    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
646466    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
646467    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
646468    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
646469    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
646470    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
646471    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
646472    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
646473    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
646474    +END;
MPRINT(EM_DIAGRAM):   END;
646475    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
646476    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
646477    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
646478    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
646479    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
646480    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
646481    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
646482    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
646483    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
646484    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
646485    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
646486    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
646487    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
646488    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
646489    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
646490    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
646491    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
646492    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
646493    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
646494    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
646495    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
646496    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
646497    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
646498    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
646499    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
646500    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
646501    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
646502    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
646503    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
646504    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
646505    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
646506    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
646507    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
646508    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
646509    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
646510    +   ELSE S_NumCatalogPurchases
646511    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
646512    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
646513    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
646514    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
646515    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
646516    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
646517    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
646518    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
646519    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
646520    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
646521    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
646522    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
646523    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
646524    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
646525    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
646526    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
646527    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
646528    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
646529    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
646530    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
646531    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
646532    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
646533    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
646534    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
646535    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
646536    +END;
MPRINT(EM_DIAGRAM):   END;
646537    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646538    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
646539    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646540    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646541    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
646542    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646543    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646544    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
646545    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646546    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
646547    +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
646548    +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
646549    +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
646550    +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
646551    +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
646552    +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
646553    +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
646554    +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
646555    +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
646556    +          +     0.89422627895323 * S_NumDealsPurchases
646557    +          +    -0.13304125929765 * S_NumDistPurchases
646558    +          +    -1.04568442570811 * S_NumStorePurchases
646559    +          +    -0.28677765126751 * S_NumWebPurchases
646560    +          +      1.2327638737509 * S_NumWebVisitsMonth
646561    +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
646562    +        S_RMntFrq  +    -0.86930969765816 * S_Recency
646563    +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
646564    +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
646565    +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
646566    +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
646567    +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
646568    +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
646569    +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
646570    +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
646571    +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
646572    +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
646573    +          +     0.04224590196535 * S_NumDealsPurchases
646574    +          +     0.76554742700113 * S_NumDistPurchases
646575    +          +    -0.49155496870812 * S_NumStorePurchases
646576    +          +     0.59606812744403 * S_NumWebPurchases
646577    +          +     1.86809286276405 * S_NumWebVisitsMonth
646578    +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
646579    +        S_RMntFrq  +    -2.09222283465666 * S_Recency
646580    +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
646581    +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
646582    +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
646583    +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
646584    +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
646585    +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
646586    +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
646587    +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
646588    +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
646589    +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
646590    +          +    -0.04866536993486 * S_NumDealsPurchases
646591    +          +    -0.53535979020214 * S_NumDistPurchases
646592    +          +     2.20634071253676 * S_NumStorePurchases
646593    +          +      0.6164564989007 * S_NumWebPurchases
646594    +          +    -0.43396314395263 * S_NumWebVisitsMonth
646595    +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
646596    +        S_RMntFrq  +     2.37293441098349 * S_Recency
646597    +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
646598    +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
646599    +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
646600    +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
646601    +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
646602    +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
646603    +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
646604    +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
646605    +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
646606    +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
646607    +          +     1.37461255707863 * S_NumDealsPurchases
646608    +          +    -0.17684775000818 * S_NumDistPurchases
646609    +          +    -0.62755623855535 * S_NumStorePurchases
646610    +          +    -1.46551649022657 * S_NumWebPurchases
646611    +          +     3.35784247878638 * S_NumWebVisitsMonth
646612    +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
646613    +        S_RMntFrq  +    -2.61971612923471 * S_Recency
646614    +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
646615    +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
646616    +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
646617    +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
646618    +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
646619    +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
646620    +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
646621    +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
646622    +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
646623    +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
646624    +          +    -0.76256677907121 * S_NumDealsPurchases
646625    +          +    -0.31591571751692 * S_NumDistPurchases
646626    +          +      0.0506832614089 * S_NumStorePurchases
646627    +          +      1.4636796923764 * S_NumWebPurchases
646628    +          +     0.37743519705036 * S_NumWebVisitsMonth
646629    +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
646630    +        S_RMntFrq  +     0.16854775832723 * S_Recency
646631    +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
646632    +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
646633    +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
646634    +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
646635    +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
646636    +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
646637    +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
646638    +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
646639    +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
646640    +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
646641    +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
646642    +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
646643    +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
646644    +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
646645    +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
646646    +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
646647    +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
646648    +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
646649    +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
646650    +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
646651    +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
646652    +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
646653    +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
646654    +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
646655    +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
646656    +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
646657    +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
646658    +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
646659    +        EducationGraduation  +    -0.37141290775302 * EducationMaster
646660    +          +     0.68641668264565 * Marital_StatusDivorced
646661    +          +    -0.81586871439732 * Marital_StatusMarried
646662    +          +     0.63758920518451 * Marital_StatusSingle
646663    +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
646664    +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
646665    +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
646666    +        EducationGraduation  +     -0.4412391934844 * EducationMaster
646667    +          +     0.05137560133238 * Marital_StatusDivorced
646668    +          +    -2.24401993266209 * Marital_StatusMarried
646669    +          +     1.57359386216115 * Marital_StatusSingle
646670    +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
646671    +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
646672    +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
646673    +        EducationGraduation  +     0.61492669859334 * EducationMaster
646674    +          +     -1.0649987815942 * Marital_StatusDivorced
646675    +          +     0.76065111692388 * Marital_StatusMarried
646676    +          +    -0.21694149754801 * Marital_StatusSingle
646677    +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
646678    +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
646679    +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
646680    +        EducationGraduation  +     0.04208620358211 * EducationMaster
646681    +          +     2.02155453548328 * Marital_StatusDivorced
646682    +          +    -2.60190649735306 * Marital_StatusMarried
646683    +          +     1.09149388354927 * Marital_StatusSingle
646684    +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
646685    +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
646686    +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
646687    +        EducationGraduation  +    -0.60853091001689 * EducationMaster
646688    +          +     0.66315970650309 * Marital_StatusDivorced
646689    +          +    -1.20476729758152 * Marital_StatusMarried
646690    +          +     0.56175027826397 * Marital_StatusSingle
646691    +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
646692    +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
646693    +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
646694    +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
646695    +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
646696    +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
646697    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
646698    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
646699    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
646700    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
646701    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
646702    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
646703    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
646704    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
646705    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
646706    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
646707    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
646708    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
646709    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
646710    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
646711    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
646712    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
646713    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
646714    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
646715    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
646716    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
646717    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
646718    +END;
MPRINT(EM_DIAGRAM):   END;
646719    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
646720    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
646721    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
646722    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
646723    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
646724    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
646725    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
646726    +END;
MPRINT(EM_DIAGRAM):   END;
646727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646728    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
646729    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646730    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
646731    +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
646732    +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
646733    +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
646734    +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
646735    +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
646736    +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
646737    +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
646738    +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
646739    +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
646740    +          +     1.50005927423985 * S_NumDealsPurchases
646741    +          +      0.5590536933569 * S_NumDistPurchases
646742    +          +    -0.61757824339318 * S_NumStorePurchases
646743    +          +     0.37259686538158 * S_NumWebPurchases
646744    +          +     2.59725437895564 * S_NumWebVisitsMonth
646745    +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
646746    +        S_RMntFrq  +    -2.38795796980324 * S_Recency
646747    +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
646748    +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
646749    +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
646750    +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
646751    +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
646752    +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
646753    +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
646754    +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
646755    +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
646756    +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
646757    +          +    -0.09282222088797 * S_NumDealsPurchases
646758    +          +     0.10726247938321 * S_NumDistPurchases
646759    +          +     -1.1235971458527 * S_NumStorePurchases
646760    +          +    -0.78304387839877 * S_NumWebPurchases
646761    +          +    -0.44139243179956 * S_NumWebVisitsMonth
646762    +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
646763    +        S_RMntFrq  +     2.19072220135069 * S_Recency
646764    +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
646765    +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
646766    +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
646767    +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
646768    +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
646769    +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
646770    +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
646771    +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
646772    +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
646773    +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
646774    +          +     0.35349185459988 * S_NumDealsPurchases
646775    +          +     0.06853677714859 * S_NumDistPurchases
646776    +          +    -1.47546012999338 * S_NumStorePurchases
646777    +          +     0.20926435398916 * S_NumWebPurchases
646778    +          +    -1.00535683639093 * S_NumWebVisitsMonth
646779    +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
646780    +        S_RMntFrq  +    -1.59138379954757 * S_Recency
646781    +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
646782    +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
646783    +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
646784    +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
646785    +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
646786    +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
646787    +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
646788    +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
646789    +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
646790    +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
646791    +          +      0.3873586120272 * S_NumDealsPurchases
646792    +          +     0.25911651157596 * S_NumDistPurchases
646793    +          +     1.58922489084287 * S_NumStorePurchases
646794    +          +     0.49041797743368 * S_NumWebPurchases
646795    +          +     -1.5425586871929 * S_NumWebVisitsMonth
646796    +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
646797    +        S_RMntFrq  +     1.03099569333498 * S_Recency
646798    +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
646799    +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
646800    +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
646801    +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
646802    +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
646803    +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
646804    +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
646805    +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
646806    +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
646807    +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
646808    +          +    -0.60830880287865 * S_NumDealsPurchases
646809    +          +      0.0745331267194 * S_NumDistPurchases
646810    +          +    -1.39472448256952 * S_NumStorePurchases
646811    +          +     1.95372179969087 * S_NumWebPurchases
646812    +          +    -0.63307356390404 * S_NumWebVisitsMonth
646813    +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
646814    +        S_RMntFrq  +    -0.29197897313114 * S_Recency
646815    +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
646816    +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
646817    +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
646818    +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
646819    +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
646820    +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
646821    +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
646822    +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
646823    +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
646824    +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
646825    +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
646826    +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
646827    +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
646828    +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
646829    +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
646830    +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
646831    +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
646832    +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
646833    +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
646834    +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
646835    +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
646836    +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
646837    +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
646838    +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
646839    +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
646840    +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
646841    +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
646842    +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
646843    +        EducationGraduation  +    -1.16900224373137 * EducationMaster
646844    +          +    -1.33377871643323 * Marital_StatusDivorced
646845    +          +    -0.87184228840898 * Marital_StatusMarried
646846    +          +     1.41223186340257 * Marital_StatusSingle
646847    +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
646848    +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
646849    +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
646850    +        EducationGraduation  +     0.38341272155343 * EducationMaster
646851    +          +    -0.21479890935233 * Marital_StatusDivorced
646852    +          +     -0.0025459519579 * Marital_StatusMarried
646853    +          +     1.33900491702264 * Marital_StatusSingle
646854    +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
646855    +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
646856    +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
646857    +        EducationGraduation  +     0.60739269725685 * EducationMaster
646858    +          +    -0.38307267471999 * Marital_StatusDivorced
646859    +          +     0.97088969451415 * Marital_StatusMarried
646860    +          +    -0.28578224473381 * Marital_StatusSingle
646861    +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
646862    +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
646863    +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
646864    +        EducationGraduation  +     0.14160673378252 * EducationMaster
646865    +          +    -1.42229401093569 * Marital_StatusDivorced
646866    +          +      0.7234508382397 * Marital_StatusMarried
646867    +          +    -0.29062202974628 * Marital_StatusSingle
646868    +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
646869    +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
646870    +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
646871    +        EducationGraduation  +     -0.7118631990538 * EducationMaster
646872    +          +    -0.99067637207205 * Marital_StatusDivorced
646873    +          +    -0.50245902142079 * Marital_StatusMarried
646874    +          +     0.54214494533793 * Marital_StatusSingle
646875    +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
646876    +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
646877    +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
646878    +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
646879    +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
646880    +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
646881    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
646882    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
646883    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
646884    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
646885    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
646886    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
646887    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
646888    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
646889    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
646890    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
646891    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
646892    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
646893    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
646894    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
646895    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
646896    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
646897    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
646898    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
646899    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
646900    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
646901    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
646902    +END;
MPRINT(EM_DIAGRAM):   END;
646903    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
646904    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
646905    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
646906    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
646907    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
646908    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
646909    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
646910    +END;
MPRINT(EM_DIAGRAM):   END;
646911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646912    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
646913    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646914    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
646915    +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
646916    +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
646917    +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
646918    +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
646919    +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
646920    +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
646921    +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
646922    +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
646923    +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
646924    +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
646925    +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
646926    +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
646927    +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
646928    +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
646929    +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
646930    +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
646931    +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
646932    +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
646933    +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
646934    +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
646935    +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
646936    +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
646937    +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
646938    +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
646939    +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
646940    +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
646941    +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
646942    +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
646943    +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
646944    +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
646945    +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
646946    +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
646947    +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
646948    +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
646949    +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
646950    +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
646951    +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
646952    +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
646953    +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
646954    +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
646955    +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
646956    +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
646957    +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
646958    +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
646959    +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
646960    +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
646961    +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
646962    +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
646963    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
646964    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
646965    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
646966    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
646967    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
646968    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
646969    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
646970    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
646971    +END;
MPRINT(EM_DIAGRAM):   END;
646972    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
646973    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
646974    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
646975    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
646976    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
646977    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
646978    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
646979    +END;
MPRINT(EM_DIAGRAM):   END;
646980    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646981    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
646982    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
646983    +
646984    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
646985    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
646986    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
646987    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
646988    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
646989    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
646990    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
646991    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
646992    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
646993    +end;
MPRINT(EM_DIAGRAM):   end;
646994    +else do;
MPRINT(EM_DIAGRAM):   else do;
646995    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
646996    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
646997    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
646998    +   end;
MPRINT(EM_DIAGRAM):   end;
646999    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
647000    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
647001    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
647002    +   end;
MPRINT(EM_DIAGRAM):   end;
647003    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647004    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
647005    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
647006    +   end;
MPRINT(EM_DIAGRAM):   end;
647007    +end;
MPRINT(EM_DIAGRAM):   end;
647008    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
647009    +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
647010    +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
647011    +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
647012    +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
647013    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
647014    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
647015    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
647016    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
647017    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
647018    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
647019    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
647020    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
647021    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
647022    +END;
MPRINT(EM_DIAGRAM):   END;
647023    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
647024    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
647025    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
647026    +END;
MPRINT(EM_DIAGRAM):   END;
647027    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
647028    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
647029    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
647030    +END;
MPRINT(EM_DIAGRAM):   END;
647031    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
647032    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
647033    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
647034    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
647035    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
647036    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
647037    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
647038    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647039    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
647040    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647041    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
647042    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
647043    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
647044    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
647045    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
647046    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
647047    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
647048    +END;
MPRINT(EM_DIAGRAM):   END;
647049    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
647050    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
647051    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
647052    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
647053     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL11_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
647054     quit;
647055     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
647056     filename emflow
647056   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
647057     *------------------------------------------------------------*;
647058     * AutoNeural11: Scoring VALIDATE data;
647059     *------------------------------------------------------------*;
647060     data EMWS8.AutoNeural11_VALIDATE
647061     / view=EMWS8.AutoNeural11_VALIDATE
647062     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_VALIDATE / view=EMWS8.AutoNeural11_VALIDATE ;
647063     set EMWS8.Meta_VALIDATE
647064     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
647065     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMFLOWSCORE.sas.
647066    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
647067    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
647068    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
647069    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
647070    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
647071    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
647072    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
647073    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
647074    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
647075    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
647076    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
647077    +LENGTH _WARN_ $4
647078    +      F_DepVar  $ 12
647079    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
647080    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
647081    +
647082    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
647083    +
647084    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
647085    +
647086    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
647087    +
647088    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
647089    +
647090    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
647091    +
647092    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
647093    +
647094    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
647095    +
647096    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
647097    +
647098    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
647099    +
647100    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
647101    +
647102    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
647103    +
647104    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
647105    +
647106    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
647107    +
647108    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
647109    +
647110    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
647111    +
647112    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
647113    +
647114    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
647115    +
647116    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
647117    +
647118    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
647119    +
647120    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
647121    +
647122    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
647123    +
647124    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
647125    +
647126    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
647127    +
647128    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
647129    +
647130    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
647131    +
647132    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
647133    +
647134    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
647135    +
647136    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
647137    +
647138    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
647139    +
647140    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
647141    +
647142    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
647143    +
647144    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
647145    +
647146    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
647147    +
647148    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
647149    +
647150    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
647151    +
647152    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
647153    +
647154    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
647155    +
647156    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
647157    +
647158    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
647159    +
647160    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
647161    +
647162    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
647163    +
647164    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
647165    +
647166    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
647167    +
647168    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
647169    +
647170    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
647171    +
647172    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
647173    +
647174    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
647175    +
647176    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
647177    +
647178    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
647179    +
647180    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
647181    +
647182    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
647183    +
647184    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
647185    +
647186    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
647187    +
647188    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
647189    +
647190    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
647191    +
647192    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
647193    +
647194    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
647195    +
647196    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
647197    +
647198    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
647199    +
647200    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
647201    +
647202    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
647203    +
647204    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
647205    +
647206    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
647207    +
647208    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
647209    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
647210    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
647211    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
647212    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647213    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647214    +end;
MPRINT(EM_DIAGRAM):   end;
647215    +else do;
MPRINT(EM_DIAGRAM):   else do;
647216    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
647217    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
647218    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647219    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
647220    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
647221    +   end;
MPRINT(EM_DIAGRAM):   end;
647222    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
647223    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
647224    +   end;
MPRINT(EM_DIAGRAM):   end;
647225    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647226    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
647227    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647228    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647229    +   end;
MPRINT(EM_DIAGRAM):   end;
647230    +end;
MPRINT(EM_DIAGRAM):   end;
647231    +
647232    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
647233    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
647234    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
647235    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
647236    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647237    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647238    +end;
MPRINT(EM_DIAGRAM):   end;
647239    +else do;
MPRINT(EM_DIAGRAM):   else do;
647240    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
647241    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
647242    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647243    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
647244    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
647245    +   end;
MPRINT(EM_DIAGRAM):   end;
647246    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
647247    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
647248    +   end;
MPRINT(EM_DIAGRAM):   end;
647249    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647250    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
647251    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647252    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647253    +   end;
MPRINT(EM_DIAGRAM):   end;
647254    +end;
MPRINT(EM_DIAGRAM):   end;
647255    +
647256    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
647257    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
647258    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
647259    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
647260    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647261    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647262    +end;
MPRINT(EM_DIAGRAM):   end;
647263    +else do;
MPRINT(EM_DIAGRAM):   else do;
647264    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
647265    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
647266    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647267    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
647268    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
647269    +   end;
MPRINT(EM_DIAGRAM):   end;
647270    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
647271    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
647272    +   end;
MPRINT(EM_DIAGRAM):   end;
647273    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647274    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
647275    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647276    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647277    +   end;
MPRINT(EM_DIAGRAM):   end;
647278    +end;
MPRINT(EM_DIAGRAM):   end;
647279    +
647280    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
647281    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
647282    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
647283    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
647284    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647285    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647286    +end;
MPRINT(EM_DIAGRAM):   end;
647287    +else do;
MPRINT(EM_DIAGRAM):   else do;
647288    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
647289    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
647290    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647291    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
647292    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
647293    +   end;
MPRINT(EM_DIAGRAM):   end;
647294    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
647295    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
647296    +   end;
MPRINT(EM_DIAGRAM):   end;
647297    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647298    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
647299    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647300    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647301    +   end;
MPRINT(EM_DIAGRAM):   end;
647302    +end;
MPRINT(EM_DIAGRAM):   end;
647303    +
647304    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
647305    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
647306    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
647307    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
647308    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647309    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647310    +end;
MPRINT(EM_DIAGRAM):   end;
647311    +else do;
MPRINT(EM_DIAGRAM):   else do;
647312    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
647313    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
647314    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647315    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
647316    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
647317    +   end;
MPRINT(EM_DIAGRAM):   end;
647318    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
647319    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
647320    +   end;
MPRINT(EM_DIAGRAM):   end;
647321    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647322    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
647323    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647324    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647325    +   end;
MPRINT(EM_DIAGRAM):   end;
647326    +end;
MPRINT(EM_DIAGRAM):   end;
647327    +
647328    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
647329    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
647330    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
647331    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
647332    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647333    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647334    +end;
MPRINT(EM_DIAGRAM):   end;
647335    +else do;
MPRINT(EM_DIAGRAM):   else do;
647336    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
647337    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
647338    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647339    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
647340    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
647341    +   end;
MPRINT(EM_DIAGRAM):   end;
647342    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
647343    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
647344    +   end;
MPRINT(EM_DIAGRAM):   end;
647345    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647346    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
647347    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647348    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647349    +   end;
MPRINT(EM_DIAGRAM):   end;
647350    +end;
MPRINT(EM_DIAGRAM):   end;
647351    +
647352    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
647353    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
647354    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
647355    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
647356    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647357    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647358    +end;
MPRINT(EM_DIAGRAM):   end;
647359    +else do;
MPRINT(EM_DIAGRAM):   else do;
647360    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
647361    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
647362    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647363    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
647364    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
647365    +   end;
MPRINT(EM_DIAGRAM):   end;
647366    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
647367    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
647368    +   end;
MPRINT(EM_DIAGRAM):   end;
647369    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647370    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
647371    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647372    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647373    +   end;
MPRINT(EM_DIAGRAM):   end;
647374    +end;
MPRINT(EM_DIAGRAM):   end;
647375    +
647376    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
647377    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
647378    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
647379    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
647380    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
647381    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
647382    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
647383    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
647384    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
647385    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
647386    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
647387    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
647388    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647389    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647390    +end;
MPRINT(EM_DIAGRAM):   end;
647391    +else do;
MPRINT(EM_DIAGRAM):   else do;
647392    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
647393    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
647394    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647395    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
647396    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
647397    +   end;
MPRINT(EM_DIAGRAM):   end;
647398    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
647399    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
647400    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
647401    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
647402    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
647403    +   end;
MPRINT(EM_DIAGRAM):   end;
647404    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
647405    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
647406    +   end;
MPRINT(EM_DIAGRAM):   end;
647407    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
647408    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
647409    +   end;
MPRINT(EM_DIAGRAM):   end;
647410    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
647411    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
647412    +   end;
MPRINT(EM_DIAGRAM):   end;
647413    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647414    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
647415    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
647416    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
647417    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
647418    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647419    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647420    +   end;
MPRINT(EM_DIAGRAM):   end;
647421    +end;
MPRINT(EM_DIAGRAM):   end;
647422    +
647423    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
647424    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
647425    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
647426    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
647427    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
647428    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
647429    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
647430    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
647431    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
647432    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
647433    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
647434    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
647435    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
647436    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
647437    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647438    +end;
MPRINT(EM_DIAGRAM):   end;
647439    +else do;
MPRINT(EM_DIAGRAM):   else do;
647440    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
647441    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
647442    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
647443    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
647444    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
647445    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
647446    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
647447    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
647448    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
647449    +         end;
MPRINT(EM_DIAGRAM):   end;
647450    +         else do;
MPRINT(EM_DIAGRAM):   else do;
647451    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
647452    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
647453    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
647454    +            end;
MPRINT(EM_DIAGRAM):   end;
647455    +         end;
MPRINT(EM_DIAGRAM):   end;
647456    +      end;
MPRINT(EM_DIAGRAM):   end;
647457    +      else do;
MPRINT(EM_DIAGRAM):   else do;
647458    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
647459    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
647460    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
647461    +         end;
MPRINT(EM_DIAGRAM):   end;
647462    +      end;
MPRINT(EM_DIAGRAM):   end;
647463    +   end;
MPRINT(EM_DIAGRAM):   end;
647464    +   else do;
MPRINT(EM_DIAGRAM):   else do;
647465    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
647466    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
647467    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
647468    +      end;
MPRINT(EM_DIAGRAM):   end;
647469    +      else do;
MPRINT(EM_DIAGRAM):   else do;
647470    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
647471    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
647472    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
647473    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
647474    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
647475    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
647476    +         end;
MPRINT(EM_DIAGRAM):   end;
647477    +      end;
MPRINT(EM_DIAGRAM):   end;
647478    +   end;
MPRINT(EM_DIAGRAM):   end;
647479    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
647480    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
647481    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
647482    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
647483    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
647484    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
647485    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647486    +   end;
MPRINT(EM_DIAGRAM):   end;
647487    +end;
MPRINT(EM_DIAGRAM):   end;
647488    +
647489    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647490    +*** Checking missing input Interval
647491    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
647492    +
647493    +IF NMISS(
647494    +   AcceptedCmpTotal ,
647495    +   Age ,
647496    +   Frq ,
647497    +   Income ,
647498    +   Kidhome ,
647499    +   Mnt ,
647500    +   MntFishProducts ,
647501    +   MntFruits ,
647502    +   MntGoldProds ,
647503    +   MntMeatProducts ,
647504    +   MntSweetProducts ,
647505    +   MntWines ,
647506    +   MonthsAsCustomer ,
647507    +   NumCatalogPurchases ,
647508    +   NumDealsPurchases ,
647509    +   NumDistPurchases ,
647510    +   NumStorePurchases ,
647511    +   NumWebPurchases ,
647512    +   NumWebVisitsMonth ,
647513    +   RFMstat ,
647514    +   RMntFrq ,
647515    +   Recency ,
647516    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
647517    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
647518    +
647519    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
647520    +END;
MPRINT(EM_DIAGRAM):   END;
647521    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647522    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
647523    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647524    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
647525    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
647526    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
647527    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
647528    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
647529    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
647530    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
647531    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
647532    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
647533    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
647534    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
647535    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
647536    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
647537    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
647538    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
647539    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
647540    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
647541    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
647542    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
647543    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
647544    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
647545    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
647546    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
647547    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
647548    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
647549    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
647550    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
647551    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
647552    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
647553    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
647554    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
647555    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
647556    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
647557    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
647558    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
647559    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
647560    +END;
MPRINT(EM_DIAGRAM):   END;
647561    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
647562    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
647563    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
647564    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
647565    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
647566    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
647567    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
647568    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
647569    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
647570    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
647571    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
647572    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
647573    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
647574    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
647575    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
647576    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
647577    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
647578    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
647579    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
647580    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
647581    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
647582    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
647583    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
647584    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
647585    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
647586    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
647587    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
647588    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
647589    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
647590    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
647591    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
647592    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
647593    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
647594    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
647595    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
647596    +   ELSE S_NumCatalogPurchases
647597    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
647598    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
647599    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
647600    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
647601    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
647602    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
647603    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
647604    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
647605    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
647606    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
647607    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
647608    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
647609    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
647610    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
647611    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
647612    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
647613    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
647614    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
647615    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
647616    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
647617    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
647618    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
647619    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
647620    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
647621    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
647622    +END;
MPRINT(EM_DIAGRAM):   END;
647623    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647624    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
647625    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647626    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647627    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
647628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647629    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647630    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
647631    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647632    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
647633    +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
647634    +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
647635    +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
647636    +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
647637    +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
647638    +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
647639    +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
647640    +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
647641    +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
647642    +          +     0.89422627895323 * S_NumDealsPurchases
647643    +          +    -0.13304125929765 * S_NumDistPurchases
647644    +          +    -1.04568442570811 * S_NumStorePurchases
647645    +          +    -0.28677765126751 * S_NumWebPurchases
647646    +          +      1.2327638737509 * S_NumWebVisitsMonth
647647    +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
647648    +        S_RMntFrq  +    -0.86930969765816 * S_Recency
647649    +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
647650    +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
647651    +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
647652    +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
647653    +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
647654    +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
647655    +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
647656    +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
647657    +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
647658    +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
647659    +          +     0.04224590196535 * S_NumDealsPurchases
647660    +          +     0.76554742700113 * S_NumDistPurchases
647661    +          +    -0.49155496870812 * S_NumStorePurchases
647662    +          +     0.59606812744403 * S_NumWebPurchases
647663    +          +     1.86809286276405 * S_NumWebVisitsMonth
647664    +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
647665    +        S_RMntFrq  +    -2.09222283465666 * S_Recency
647666    +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
647667    +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
647668    +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
647669    +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
647670    +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
647671    +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
647672    +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
647673    +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
647674    +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
647675    +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
647676    +          +    -0.04866536993486 * S_NumDealsPurchases
647677    +          +    -0.53535979020214 * S_NumDistPurchases
647678    +          +     2.20634071253676 * S_NumStorePurchases
647679    +          +      0.6164564989007 * S_NumWebPurchases
647680    +          +    -0.43396314395263 * S_NumWebVisitsMonth
647681    +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
647682    +        S_RMntFrq  +     2.37293441098349 * S_Recency
647683    +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
647684    +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
647685    +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
647686    +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
647687    +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
647688    +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
647689    +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
647690    +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
647691    +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
647692    +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
647693    +          +     1.37461255707863 * S_NumDealsPurchases
647694    +          +    -0.17684775000818 * S_NumDistPurchases
647695    +          +    -0.62755623855535 * S_NumStorePurchases
647696    +          +    -1.46551649022657 * S_NumWebPurchases
647697    +          +     3.35784247878638 * S_NumWebVisitsMonth
647698    +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
647699    +        S_RMntFrq  +    -2.61971612923471 * S_Recency
647700    +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
647701    +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
647702    +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
647703    +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
647704    +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
647705    +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
647706    +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
647707    +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
647708    +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
647709    +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
647710    +          +    -0.76256677907121 * S_NumDealsPurchases
647711    +          +    -0.31591571751692 * S_NumDistPurchases
647712    +          +      0.0506832614089 * S_NumStorePurchases
647713    +          +      1.4636796923764 * S_NumWebPurchases
647714    +          +     0.37743519705036 * S_NumWebVisitsMonth
647715    +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
647716    +        S_RMntFrq  +     0.16854775832723 * S_Recency
647717    +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
647718    +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
647719    +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
647720    +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
647721    +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
647722    +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
647723    +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
647724    +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
647725    +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
647726    +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
647727    +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
647728    +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
647729    +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
647730    +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
647731    +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
647732    +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
647733    +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
647734    +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
647735    +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
647736    +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
647737    +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
647738    +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
647739    +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
647740    +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
647741    +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
647742    +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
647743    +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
647744    +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
647745    +        EducationGraduation  +    -0.37141290775302 * EducationMaster
647746    +          +     0.68641668264565 * Marital_StatusDivorced
647747    +          +    -0.81586871439732 * Marital_StatusMarried
647748    +          +     0.63758920518451 * Marital_StatusSingle
647749    +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
647750    +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
647751    +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
647752    +        EducationGraduation  +     -0.4412391934844 * EducationMaster
647753    +          +     0.05137560133238 * Marital_StatusDivorced
647754    +          +    -2.24401993266209 * Marital_StatusMarried
647755    +          +     1.57359386216115 * Marital_StatusSingle
647756    +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
647757    +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
647758    +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
647759    +        EducationGraduation  +     0.61492669859334 * EducationMaster
647760    +          +     -1.0649987815942 * Marital_StatusDivorced
647761    +          +     0.76065111692388 * Marital_StatusMarried
647762    +          +    -0.21694149754801 * Marital_StatusSingle
647763    +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
647764    +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
647765    +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
647766    +        EducationGraduation  +     0.04208620358211 * EducationMaster
647767    +          +     2.02155453548328 * Marital_StatusDivorced
647768    +          +    -2.60190649735306 * Marital_StatusMarried
647769    +          +     1.09149388354927 * Marital_StatusSingle
647770    +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
647771    +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
647772    +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
647773    +        EducationGraduation  +    -0.60853091001689 * EducationMaster
647774    +          +     0.66315970650309 * Marital_StatusDivorced
647775    +          +    -1.20476729758152 * Marital_StatusMarried
647776    +          +     0.56175027826397 * Marital_StatusSingle
647777    +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
647778    +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
647779    +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
647780    +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
647781    +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
647782    +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
647783    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
647784    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
647785    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
647786    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
647787    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
647788    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
647789    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
647790    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
647791    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
647792    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
647793    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
647794    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
647795    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
647796    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
647797    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
647798    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
647799    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
647800    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
647801    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
647802    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
647803    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
647804    +END;
MPRINT(EM_DIAGRAM):   END;
647805    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
647806    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
647807    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
647808    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
647809    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
647810    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
647811    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
647812    +END;
MPRINT(EM_DIAGRAM):   END;
647813    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647814    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
647815    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647816    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
647817    +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
647818    +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
647819    +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
647820    +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
647821    +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
647822    +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
647823    +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
647824    +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
647825    +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
647826    +          +     1.50005927423985 * S_NumDealsPurchases
647827    +          +      0.5590536933569 * S_NumDistPurchases
647828    +          +    -0.61757824339318 * S_NumStorePurchases
647829    +          +     0.37259686538158 * S_NumWebPurchases
647830    +          +     2.59725437895564 * S_NumWebVisitsMonth
647831    +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
647832    +        S_RMntFrq  +    -2.38795796980324 * S_Recency
647833    +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
647834    +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
647835    +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
647836    +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
647837    +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
647838    +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
647839    +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
647840    +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
647841    +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
647842    +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
647843    +          +    -0.09282222088797 * S_NumDealsPurchases
647844    +          +     0.10726247938321 * S_NumDistPurchases
647845    +          +     -1.1235971458527 * S_NumStorePurchases
647846    +          +    -0.78304387839877 * S_NumWebPurchases
647847    +          +    -0.44139243179956 * S_NumWebVisitsMonth
647848    +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
647849    +        S_RMntFrq  +     2.19072220135069 * S_Recency
647850    +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
647851    +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
647852    +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
647853    +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
647854    +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
647855    +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
647856    +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
647857    +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
647858    +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
647859    +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
647860    +          +     0.35349185459988 * S_NumDealsPurchases
647861    +          +     0.06853677714859 * S_NumDistPurchases
647862    +          +    -1.47546012999338 * S_NumStorePurchases
647863    +          +     0.20926435398916 * S_NumWebPurchases
647864    +          +    -1.00535683639093 * S_NumWebVisitsMonth
647865    +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
647866    +        S_RMntFrq  +    -1.59138379954757 * S_Recency
647867    +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
647868    +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
647869    +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
647870    +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
647871    +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
647872    +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
647873    +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
647874    +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
647875    +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
647876    +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
647877    +          +      0.3873586120272 * S_NumDealsPurchases
647878    +          +     0.25911651157596 * S_NumDistPurchases
647879    +          +     1.58922489084287 * S_NumStorePurchases
647880    +          +     0.49041797743368 * S_NumWebPurchases
647881    +          +     -1.5425586871929 * S_NumWebVisitsMonth
647882    +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
647883    +        S_RMntFrq  +     1.03099569333498 * S_Recency
647884    +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
647885    +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
647886    +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
647887    +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
647888    +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
647889    +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
647890    +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
647891    +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
647892    +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
647893    +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
647894    +          +    -0.60830880287865 * S_NumDealsPurchases
647895    +          +      0.0745331267194 * S_NumDistPurchases
647896    +          +    -1.39472448256952 * S_NumStorePurchases
647897    +          +     1.95372179969087 * S_NumWebPurchases
647898    +          +    -0.63307356390404 * S_NumWebVisitsMonth
647899    +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
647900    +        S_RMntFrq  +    -0.29197897313114 * S_Recency
647901    +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
647902    +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
647903    +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
647904    +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
647905    +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
647906    +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
647907    +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
647908    +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
647909    +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
647910    +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
647911    +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
647912    +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
647913    +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
647914    +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
647915    +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
647916    +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
647917    +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
647918    +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
647919    +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
647920    +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
647921    +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
647922    +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
647923    +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
647924    +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
647925    +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
647926    +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
647927    +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
647928    +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
647929    +        EducationGraduation  +    -1.16900224373137 * EducationMaster
647930    +          +    -1.33377871643323 * Marital_StatusDivorced
647931    +          +    -0.87184228840898 * Marital_StatusMarried
647932    +          +     1.41223186340257 * Marital_StatusSingle
647933    +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
647934    +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
647935    +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
647936    +        EducationGraduation  +     0.38341272155343 * EducationMaster
647937    +          +    -0.21479890935233 * Marital_StatusDivorced
647938    +          +     -0.0025459519579 * Marital_StatusMarried
647939    +          +     1.33900491702264 * Marital_StatusSingle
647940    +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
647941    +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
647942    +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
647943    +        EducationGraduation  +     0.60739269725685 * EducationMaster
647944    +          +    -0.38307267471999 * Marital_StatusDivorced
647945    +          +     0.97088969451415 * Marital_StatusMarried
647946    +          +    -0.28578224473381 * Marital_StatusSingle
647947    +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
647948    +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
647949    +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
647950    +        EducationGraduation  +     0.14160673378252 * EducationMaster
647951    +          +    -1.42229401093569 * Marital_StatusDivorced
647952    +          +      0.7234508382397 * Marital_StatusMarried
647953    +          +    -0.29062202974628 * Marital_StatusSingle
647954    +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
647955    +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
647956    +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
647957    +        EducationGraduation  +     -0.7118631990538 * EducationMaster
647958    +          +    -0.99067637207205 * Marital_StatusDivorced
647959    +          +    -0.50245902142079 * Marital_StatusMarried
647960    +          +     0.54214494533793 * Marital_StatusSingle
647961    +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
647962    +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
647963    +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
647964    +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
647965    +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
647966    +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
647967    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
647968    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
647969    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
647970    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
647971    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
647972    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
647973    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
647974    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
647975    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
647976    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
647977    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
647978    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
647979    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
647980    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
647981    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
647982    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
647983    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
647984    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
647985    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
647986    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
647987    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
647988    +END;
MPRINT(EM_DIAGRAM):   END;
647989    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
647990    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
647991    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
647992    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
647993    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
647994    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
647995    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
647996    +END;
MPRINT(EM_DIAGRAM):   END;
647997    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
647998    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
647999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
648000    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
648001    +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
648002    +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
648003    +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
648004    +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
648005    +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
648006    +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
648007    +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
648008    +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
648009    +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
648010    +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
648011    +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
648012    +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
648013    +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
648014    +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
648015    +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
648016    +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
648017    +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
648018    +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
648019    +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
648020    +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
648021    +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
648022    +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
648023    +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
648024    +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
648025    +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
648026    +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
648027    +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
648028    +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
648029    +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
648030    +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
648031    +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
648032    +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
648033    +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
648034    +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
648035    +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
648036    +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
648037    +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
648038    +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
648039    +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
648040    +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
648041    +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
648042    +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
648043    +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
648044    +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
648045    +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
648046    +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
648047    +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
648048    +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
648049    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
648050    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
648051    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
648052    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
648053    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
648054    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
648055    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
648056    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
648057    +END;
MPRINT(EM_DIAGRAM):   END;
648058    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
648059    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
648060    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
648061    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
648062    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
648063    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
648064    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
648065    +END;
MPRINT(EM_DIAGRAM):   END;
648066    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
648067    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
648068    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
648069    +
648070    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
648071    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
648072    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
648073    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
648074    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
648075    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
648076    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
648077    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
648078    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
648079    +end;
MPRINT(EM_DIAGRAM):   end;
648080    +else do;
MPRINT(EM_DIAGRAM):   else do;
648081    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
648082    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
648083    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
648084    +   end;
MPRINT(EM_DIAGRAM):   end;
648085    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
648086    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
648087    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
648088    +   end;
MPRINT(EM_DIAGRAM):   end;
648089    +   else do;
MPRINT(EM_DIAGRAM):   else do;
648090    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
648091    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
648092    +   end;
MPRINT(EM_DIAGRAM):   end;
648093    +end;
MPRINT(EM_DIAGRAM):   end;
648094    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
648095    +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
648096    +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
648097    +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
648098    +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
648099    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
648100    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
648101    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
648102    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
648103    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
648104    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
648105    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
648106    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
648107    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
648108    +END;
MPRINT(EM_DIAGRAM):   END;
648109    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
648110    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
648111    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
648112    +END;
MPRINT(EM_DIAGRAM):   END;
648113    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
648114    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
648115    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
648116    +END;
MPRINT(EM_DIAGRAM):   END;
648117    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
648118    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
648119    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
648120    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
648121    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
648122    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
648123    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
648124    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
648125    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
648126    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
648127    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
648128    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
648129    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
648130    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
648131    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
648132    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
648133    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
648134    +END;
MPRINT(EM_DIAGRAM):   END;
648135    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
648136    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
648137    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
648138    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
648139     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL11_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
648140     quit;
648141     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
648142     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
648143     * AutoNeural11: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Computing metadata for TRAIN data;
648144     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL11_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural11_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural11_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural11_TRAIN out=WORK.M02LURGL 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M02LURGL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M02LURGL(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M02LURGL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M02LURGL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0CSUTGR NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CSUTGR;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CSUTGR;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M18VDZXD(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CSUTGR;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CSUTGR;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CSUTGR;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CSUTGR;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CSUTGR;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural11";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural11";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural11: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
648456     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
648457     set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
648458     where DATA='AutoNeural11' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural11' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
648459     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE (DATA='AutoNeural11') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

648460     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural11_EMINFO;
648461     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
648462     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
648463     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
648467     run;
648468     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMINFO;
648469     set EMWS8.AutoNeural11_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO WORK.MODELTEMP_INFO;
648470     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

648471     proc sort data = EMWS8.AutoNeural11_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural11_EMINFO NOTHREADS;
648472     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
648473     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

648474     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
648475     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
648476     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

648477     proc sort data = EMWS8.AutoNeural11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
648478     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
648479     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

648480     data EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural11_EMINFO;
648481     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
648482     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
648483     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL11_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

648484     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
648485     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
648486     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
648487     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.AUTONEURAL11_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.AUTONEURAL11_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
