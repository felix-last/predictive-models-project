MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.35 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                13.35 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1REQ57R 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl13\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1REQ57R new;
MPRINT(EM_DIAGRAM):   run;
401018     filename emflow
401018   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl13\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl13\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Scoring AUTONEURAL7_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401019     *------------------------------------------------------------*;
401020     * Ensmbl13: Scoring AUTONEURAL7_TRAIN data;
401021     *------------------------------------------------------------*;
401022     data EMWS8.Ensmbl13_TRAIN
401023     / view=EMWS8.Ensmbl13_TRAIN
401024     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl13_TRAIN / view=EMWS8.Ensmbl13_TRAIN ;
401025     set EMWS8.AutoNeural7_TRAIN
401026     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_TRAIN ;
401027     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl13\EMFLOWSCORE.sas.
401028    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401029    +* Ensmbl13: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Combine model for DepVar;
401030    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401031    +* Ensmbl13: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Scoring Code of model 1 of 3;
401032    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401033    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401034    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
401035    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
401036    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
401037    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401038    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401039    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
401040    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
401041    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
401042    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401043    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401044    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
401045    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
401046    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
401047    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401048    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401049    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
401050    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
401051    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
401052    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401053    +
401054    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
401055    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
401055   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
401056    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
401057    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
401058    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
401059    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
401060    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
401061    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401062    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
401063    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
401064    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
401065    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401066    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401067    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
401068    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401069    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
401070    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
401071    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
401072    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401073    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
401074    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
401075    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
401076    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401077    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401078    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
401079    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
401080    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
401081    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401082    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401083    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
401084    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
401085    +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
401086    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401087    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
401088    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
401089    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
401090    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
401091    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
401092    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
401093    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
401094    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
401095    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
401096    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
401097    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
401098    +LENGTH _WARN_ $4
401099    +      F_DepVar  $ 12
401100    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
401101    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
401102    +
401103    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
401104    +
401105    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
401106    +
401107    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
401108    +
401109    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
401110    +
401111    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
401112    +
401113    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
401114    +
401115    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
401116    +
401117    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
401118    +
401119    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
401120    +
401121    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
401122    +
401123    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
401124    +
401125    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
401126    +
401127    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
401128    +
401129    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
401130    +
401131    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
401132    +
401133    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
401134    +
401135    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
401136    +
401137    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
401138    +
401139    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
401140    +
401141    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
401142    +
401143    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
401144    +
401145    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
401146    +
401147    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
401148    +
401149    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
401150    +
401151    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
401152    +
401153    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
401154    +
401155    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
401156    +
401157    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
401158    +
401159    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
401160    +
401161    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
401162    +
401163    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
401164    +
401165    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
401166    +
401167    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
401168    +
401169    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
401170    +
401171    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
401172    +
401173    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
401174    +
401175    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
401176    +
401177    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
401178    +
401179    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
401180    +
401181    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
401182    +
401183    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
401184    +
401185    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
401186    +
401187    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
401188    +
401189    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
401190    +
401191    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
401192    +
401193    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
401194    +
401195    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
401196    +
401197    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
401198    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
401199    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
401200    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
401201    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
401202    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401203    +end;
MPRINT(EM_DIAGRAM):   end;
401204    +else do;
MPRINT(EM_DIAGRAM):   else do;
401205    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
401206    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
401207    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
401208    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
401209    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
401210    +   end;
MPRINT(EM_DIAGRAM):   end;
401211    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
401212    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
401213    +   end;
MPRINT(EM_DIAGRAM):   end;
401214    +   else do;
MPRINT(EM_DIAGRAM):   else do;
401215    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
401216    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
401217    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401218    +   end;
MPRINT(EM_DIAGRAM):   end;
401219    +end;
MPRINT(EM_DIAGRAM):   end;
401220    +
401221    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
401222    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
401223    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
401224    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
401225    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
401226    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401227    +end;
MPRINT(EM_DIAGRAM):   end;
401228    +else do;
MPRINT(EM_DIAGRAM):   else do;
401229    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
401230    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
401231    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
401232    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
401233    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
401234    +   end;
MPRINT(EM_DIAGRAM):   end;
401235    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
401236    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
401237    +   end;
MPRINT(EM_DIAGRAM):   end;
401238    +   else do;
MPRINT(EM_DIAGRAM):   else do;
401239    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
401240    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
401241    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401242    +   end;
MPRINT(EM_DIAGRAM):   end;
401243    +end;
MPRINT(EM_DIAGRAM):   end;
401244    +
401245    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
401246    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
401247    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
401248    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
401249    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
401250    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401251    +end;
MPRINT(EM_DIAGRAM):   end;
401252    +else do;
MPRINT(EM_DIAGRAM):   else do;
401253    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
401254    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
401255    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
401256    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
401257    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
401258    +   end;
MPRINT(EM_DIAGRAM):   end;
401259    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
401260    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
401261    +   end;
MPRINT(EM_DIAGRAM):   end;
401262    +   else do;
MPRINT(EM_DIAGRAM):   else do;
401263    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
401264    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
401265    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401266    +   end;
MPRINT(EM_DIAGRAM):   end;
401267    +end;
MPRINT(EM_DIAGRAM):   end;
401268    +
401269    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
401270    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
401271    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
401272    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
401273    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
401274    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401275    +end;
MPRINT(EM_DIAGRAM):   end;
401276    +else do;
MPRINT(EM_DIAGRAM):   else do;
401277    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
401278    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
401279    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
401280    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
401281    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
401282    +   end;
MPRINT(EM_DIAGRAM):   end;
401283    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
401284    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
401285    +   end;
MPRINT(EM_DIAGRAM):   end;
401286    +   else do;
MPRINT(EM_DIAGRAM):   else do;
401287    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
401288    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
401289    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401290    +   end;
MPRINT(EM_DIAGRAM):   end;
401291    +end;
MPRINT(EM_DIAGRAM):   end;
401292    +
401293    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
401294    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
401295    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
401296    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
401297    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
401298    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401299    +end;
MPRINT(EM_DIAGRAM):   end;
401300    +else do;
MPRINT(EM_DIAGRAM):   else do;
401301    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
401302    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
401303    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
401304    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
401305    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
401306    +   end;
MPRINT(EM_DIAGRAM):   end;
401307    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
401308    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
401309    +   end;
MPRINT(EM_DIAGRAM):   end;
401310    +   else do;
MPRINT(EM_DIAGRAM):   else do;
401311    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
401312    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
401313    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401314    +   end;
MPRINT(EM_DIAGRAM):   end;
401315    +end;
MPRINT(EM_DIAGRAM):   end;
401316    +
401317    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
401318    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
401319    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
401320    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
401321    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
401322    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401323    +end;
MPRINT(EM_DIAGRAM):   end;
401324    +else do;
MPRINT(EM_DIAGRAM):   else do;
401325    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
401326    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
401327    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
401328    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
401329    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
401330    +   end;
MPRINT(EM_DIAGRAM):   end;
401331    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
401332    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
401333    +   end;
MPRINT(EM_DIAGRAM):   end;
401334    +   else do;
MPRINT(EM_DIAGRAM):   else do;
401335    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
401336    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
401337    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401338    +   end;
MPRINT(EM_DIAGRAM):   end;
401339    +end;
MPRINT(EM_DIAGRAM):   end;
401340    +
401341    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
401342    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
401343    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
401344    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
401345    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
401346    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401347    +end;
MPRINT(EM_DIAGRAM):   end;
401348    +else do;
MPRINT(EM_DIAGRAM):   else do;
401349    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
401350    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
401351    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
401352    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
401353    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
401354    +   end;
MPRINT(EM_DIAGRAM):   end;
401355    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
401356    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
401357    +   end;
MPRINT(EM_DIAGRAM):   end;
401358    +   else do;
MPRINT(EM_DIAGRAM):   else do;
401359    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
401360    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
401361    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401362    +   end;
MPRINT(EM_DIAGRAM):   end;
401363    +end;
MPRINT(EM_DIAGRAM):   end;
401364    +
401365    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
401366    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
401367    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
401368    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
401369    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
401370    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
401371    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
401372    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
401373    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
401374    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
401375    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
401376    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
401377    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
401378    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401379    +end;
MPRINT(EM_DIAGRAM):   end;
401380    +else do;
MPRINT(EM_DIAGRAM):   else do;
401381    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
401382    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
401383    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
401384    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
401385    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
401386    +   end;
MPRINT(EM_DIAGRAM):   end;
401387    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
401388    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
401389    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
401390    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
401391    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
401392    +   end;
MPRINT(EM_DIAGRAM):   end;
401393    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
401394    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
401395    +   end;
MPRINT(EM_DIAGRAM):   end;
401396    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
401397    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
401398    +   end;
MPRINT(EM_DIAGRAM):   end;
401399    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
401400    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
401401    +   end;
MPRINT(EM_DIAGRAM):   end;
401402    +   else do;
MPRINT(EM_DIAGRAM):   else do;
401403    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
401404    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
401405    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
401406    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
401407    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
401408    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401409    +   end;
MPRINT(EM_DIAGRAM):   end;
401410    +end;
MPRINT(EM_DIAGRAM):   end;
401411    +
401412    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
401413    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
401414    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
401415    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
401416    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
401417    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
401418    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
401419    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
401420    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
401421    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
401422    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
401423    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
401424    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
401425    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
401426    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401427    +end;
MPRINT(EM_DIAGRAM):   end;
401428    +else do;
MPRINT(EM_DIAGRAM):   else do;
401429    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
401430    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
401431    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
401432    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
401433    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
401434    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
401435    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
401436    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
401437    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
401438    +         end;
MPRINT(EM_DIAGRAM):   end;
401439    +         else do;
MPRINT(EM_DIAGRAM):   else do;
401440    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
401441    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
401442    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
401443    +            end;
MPRINT(EM_DIAGRAM):   end;
401444    +         end;
MPRINT(EM_DIAGRAM):   end;
401445    +      end;
MPRINT(EM_DIAGRAM):   end;
401446    +      else do;
MPRINT(EM_DIAGRAM):   else do;
401447    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
401448    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
401449    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
401450    +         end;
MPRINT(EM_DIAGRAM):   end;
401451    +      end;
MPRINT(EM_DIAGRAM):   end;
401452    +   end;
MPRINT(EM_DIAGRAM):   end;
401453    +   else do;
MPRINT(EM_DIAGRAM):   else do;
401454    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
401455    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
401456    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
401457    +      end;
MPRINT(EM_DIAGRAM):   end;
401458    +      else do;
MPRINT(EM_DIAGRAM):   else do;
401459    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
401460    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
401461    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
401462    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
401463    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
401464    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
401465    +         end;
MPRINT(EM_DIAGRAM):   end;
401466    +      end;
MPRINT(EM_DIAGRAM):   end;
401467    +   end;
MPRINT(EM_DIAGRAM):   end;
401468    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
401469    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
401470    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
401471    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
401472    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
401473    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
401474    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401475    +   end;
MPRINT(EM_DIAGRAM):   end;
401476    +end;
MPRINT(EM_DIAGRAM):   end;
401477    +
401478    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
401479    +*** Checking missing input Interval
401480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
401481    +
401482    +IF NMISS(
401483    +   AcceptedCmpTotal ,
401484    +   Age ,
401485    +   Frq ,
401486    +   Income ,
401487    +   Kidhome ,
401488    +   Mnt ,
401489    +   MntFishProducts ,
401490    +   MntFruits ,
401491    +   MntGoldProds ,
401492    +   MntMeatProducts ,
401493    +   MntSweetProducts ,
401494    +   MntWines ,
401495    +   MonthsAsCustomer ,
401496    +   NumCatalogPurchases ,
401497    +   NumDealsPurchases ,
401498    +   NumDistPurchases ,
401499    +   NumStorePurchases ,
401500    +   NumWebPurchases ,
401501    +   NumWebVisitsMonth ,
401502    +   RFMstat ,
401503    +   RMntFrq ,
401504    +   Recency ,
401505    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
401506    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
401507    +
401508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401509    +END;
MPRINT(EM_DIAGRAM):   END;
401510    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
401511    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
401512    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
401513    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
401514    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
401515    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
401516    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
401517    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
401518    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
401519    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
401520    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
401521    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
401522    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
401523    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
401524    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
401525    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
401526    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
401527    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
401528    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
401529    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
401530    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
401531    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
401532    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
401533    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
401534    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
401535    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
401536    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
401537    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
401538    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
401539    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
401540    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
401541    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
401542    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
401543    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
401544    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
401545    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
401546    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
401547    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
401548    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
401549    +END;
MPRINT(EM_DIAGRAM):   END;
401550    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
401551    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
401552    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
401553    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
401554    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
401555    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
401556    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
401557    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
401558    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
401559    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
401560    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
401561    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
401562    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
401563    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
401564    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
401565    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
401566    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
401567    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
401568    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
401569    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
401570    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
401571    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
401572    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
401573    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
401574    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
401575    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
401576    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
401577    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
401578    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
401579    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
401580    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
401581    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
401582    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
401583    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
401584    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
401585    +   ELSE S_NumCatalogPurchases
401586    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
401587    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
401588    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
401589    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
401590    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
401591    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
401592    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
401593    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
401594    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
401595    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
401596    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
401597    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
401598    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
401599    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
401600    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
401601    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
401602    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
401603    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
401604    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
401605    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
401606    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
401607    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
401608    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
401609    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
401610    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
401611    +END;
MPRINT(EM_DIAGRAM):   END;
401612    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
401613    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
401614    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
401615    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
401616    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
401617    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
401618    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
401619    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
401620    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
401621    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
401622    +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
401623    +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
401624    +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
401625    +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
401626    +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
401627    +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
401628    +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
401629    +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
401630    +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
401631    +          +     0.09708841024031 * S_NumDealsPurchases
401632    +          +    -0.29075561032014 * S_NumDistPurchases
401633    +          +    -0.14495394259873 * S_NumStorePurchases
401634    +          +     0.11890705145732 * S_NumWebPurchases
401635    +          +    -0.16954189911344 * S_NumWebVisitsMonth
401636    +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
401637    +        S_RMntFrq  +     0.17150719398884 * S_Recency
401638    +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
401639    +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
401640    +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
401641    +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
401642    +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
401643    +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
401644    +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
401645    +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
401646    +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
401647    +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
401648    +          +     0.16274478997892 * S_NumDealsPurchases
401649    +          +     0.03966958784582 * S_NumDistPurchases
401650    +          +    -0.04714110726598 * S_NumStorePurchases
401651    +          +    -0.02124229528082 * S_NumWebPurchases
401652    +          +     0.29753299776832 * S_NumWebVisitsMonth
401653    +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
401654    +        S_RMntFrq  +     -0.3340129986623 * S_Recency
401655    +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
401656    +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
401657    +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
401658    +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
401659    +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
401660    +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
401661    +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
401662    +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
401663    +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
401664    +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
401665    +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
401666    +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
401667    +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
401668    +        EducationGraduation  +     0.00619669837452 * EducationMaster
401669    +          +    -0.05037639679806 * Marital_StatusDivorced
401670    +          +     0.28781968727878 * Marital_StatusMarried
401671    +          +    -0.20382417074384 * Marital_StatusSingle
401672    +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
401673    +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
401674    +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
401675    +        EducationGraduation  +    -0.06952670554019 * EducationMaster
401676    +          +     0.06970969219123 * Marital_StatusDivorced
401677    +          +    -0.15787475744986 * Marital_StatusMarried
401678    +          +     0.14345344072192 * Marital_StatusSingle
401679    +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
401680    +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
401681    +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
401682    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
401683    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
401684    +END;
MPRINT(EM_DIAGRAM):   END;
401685    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
401686    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
401687    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
401688    +END;
MPRINT(EM_DIAGRAM):   END;
401689    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
401690    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
401691    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
401692    +
401693    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
401694    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
401695    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
401696    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
401697    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
401698    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
401699    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
401700    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
401701    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
401702    +end;
MPRINT(EM_DIAGRAM):   end;
401703    +else do;
MPRINT(EM_DIAGRAM):   else do;
401704    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
401705    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
401706    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
401707    +   end;
MPRINT(EM_DIAGRAM):   end;
401708    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
401709    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
401710    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
401711    +   end;
MPRINT(EM_DIAGRAM):   end;
401712    +   else do;
MPRINT(EM_DIAGRAM):   else do;
401713    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
401714    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
401715    +   end;
MPRINT(EM_DIAGRAM):   end;
401716    +end;
MPRINT(EM_DIAGRAM):   end;
401717    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
401718    +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
401719    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
401720    +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
401721    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
401722    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
401723    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
401724    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
401725    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
401726    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
401727    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
401728    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
401729    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
401730    +END;
MPRINT(EM_DIAGRAM):   END;
401731    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
401732    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
401733    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
401734    +END;
MPRINT(EM_DIAGRAM):   END;
401735    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
401736    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
401737    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
401738    +END;
MPRINT(EM_DIAGRAM):   END;
401739    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
401740    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
401741    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
401742    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
401743    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
401744    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
401745    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
401746    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
401747    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
401748    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
401749    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
401750    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
401751    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
401752    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
401753    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
401754    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
401755    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
401756    +END;
MPRINT(EM_DIAGRAM):   END;
401757    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
401758    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
401759    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
401760    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
401761    +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
401762    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401763    +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
401764    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401765    +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
401766    +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
401767    +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
401768    +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
401769    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401770    +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
401771    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401772    +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
401773    +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
401774    +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
401775    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401776    +* Ensmbl13: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Scoring Code of model 2 of 3;
401777    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401778    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401779    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
401780    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
401781    +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
401782    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
401783    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
401784    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
401785    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
401786    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
401787    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
401788    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
401789    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
401790    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
401791    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
401792    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
401793    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
401794    +LENGTH _WARN_ $4
401795    +      F_DepVar  $ 12
401796    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
401797    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
401798    +
401799    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
401800    +
401801    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
401802    +
401803    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
401804    +
401805    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
401806    +
401807    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
401808    +
401809    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
401810    +
401811    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
401812    +
401813    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
401814    +
401815    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
401816    +
401817    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
401818    +
401819    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
401820    +
401821    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
401822    +
401823    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
401824    +
401825    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
401826    +
401827    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
401828    +
401829    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
401830    +
401831    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
401832    +
401833    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
401834    +
401835    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
401836    +
401837    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
401838    +
401839    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
401840    +
401841    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
401842    +
401843    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
401844    +
401845    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
401846    +
401847    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
401848    +
401849    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
401850    +
401851    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
401852    +
401853    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
401854    +
401855    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
401856    +
401857    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
401858    +
401859    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
401860    +
401861    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
401862    +
401863    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
401864    +
401865    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
401866    +
401867    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
401868    +
401869    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
401870    +
401871    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
401872    +
401873    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
401874    +
401875    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
401876    +
401877    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
401878    +
401879    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
401880    +
401881    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
401882    +
401883    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
401884    +
401885    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
401886    +
401887    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
401888    +
401889    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
401890    +
401891    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
401892    +
401893    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
401894    +
401895    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
401896    +
401897    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
401898    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
401899    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
401900    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
401901    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
401902    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401903    +end;
MPRINT(EM_DIAGRAM):   end;
401904    +else do;
MPRINT(EM_DIAGRAM):   else do;
401905    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
401906    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
401907    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
401908    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
401909    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
401910    +   end;
MPRINT(EM_DIAGRAM):   end;
401911    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
401912    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
401913    +   end;
MPRINT(EM_DIAGRAM):   end;
401914    +   else do;
MPRINT(EM_DIAGRAM):   else do;
401915    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
401916    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
401917    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401918    +   end;
MPRINT(EM_DIAGRAM):   end;
401919    +end;
MPRINT(EM_DIAGRAM):   end;
401920    +
401921    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
401922    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
401923    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
401924    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
401925    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
401926    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401927    +end;
MPRINT(EM_DIAGRAM):   end;
401928    +else do;
MPRINT(EM_DIAGRAM):   else do;
401929    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
401930    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
401931    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
401932    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
401933    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
401934    +   end;
MPRINT(EM_DIAGRAM):   end;
401935    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
401936    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
401937    +   end;
MPRINT(EM_DIAGRAM):   end;
401938    +   else do;
MPRINT(EM_DIAGRAM):   else do;
401939    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
401940    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
401941    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401942    +   end;
MPRINT(EM_DIAGRAM):   end;
401943    +end;
MPRINT(EM_DIAGRAM):   end;
401944    +
401945    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
401946    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
401947    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
401948    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
401949    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
401950    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401951    +end;
MPRINT(EM_DIAGRAM):   end;
401952    +else do;
MPRINT(EM_DIAGRAM):   else do;
401953    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
401954    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
401955    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
401956    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
401957    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
401958    +   end;
MPRINT(EM_DIAGRAM):   end;
401959    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
401960    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
401961    +   end;
MPRINT(EM_DIAGRAM):   end;
401962    +   else do;
MPRINT(EM_DIAGRAM):   else do;
401963    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
401964    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
401965    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401966    +   end;
MPRINT(EM_DIAGRAM):   end;
401967    +end;
MPRINT(EM_DIAGRAM):   end;
401968    +
401969    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
401970    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
401971    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
401972    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
401973    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
401974    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401975    +end;
MPRINT(EM_DIAGRAM):   end;
401976    +else do;
MPRINT(EM_DIAGRAM):   else do;
401977    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
401978    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
401979    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
401980    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
401981    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
401982    +   end;
MPRINT(EM_DIAGRAM):   end;
401983    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
401984    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
401985    +   end;
MPRINT(EM_DIAGRAM):   end;
401986    +   else do;
MPRINT(EM_DIAGRAM):   else do;
401987    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
401988    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
401989    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401990    +   end;
MPRINT(EM_DIAGRAM):   end;
401991    +end;
MPRINT(EM_DIAGRAM):   end;
401992    +
401993    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
401994    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
401995    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
401996    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
401997    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
401998    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
401999    +end;
MPRINT(EM_DIAGRAM):   end;
402000    +else do;
MPRINT(EM_DIAGRAM):   else do;
402001    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
402002    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
402003    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402004    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
402005    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
402006    +   end;
MPRINT(EM_DIAGRAM):   end;
402007    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
402008    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
402009    +   end;
MPRINT(EM_DIAGRAM):   end;
402010    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402011    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
402012    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
402013    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402014    +   end;
MPRINT(EM_DIAGRAM):   end;
402015    +end;
MPRINT(EM_DIAGRAM):   end;
402016    +
402017    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
402018    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
402019    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
402020    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
402021    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
402022    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402023    +end;
MPRINT(EM_DIAGRAM):   end;
402024    +else do;
MPRINT(EM_DIAGRAM):   else do;
402025    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
402026    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
402027    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402028    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
402029    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
402030    +   end;
MPRINT(EM_DIAGRAM):   end;
402031    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
402032    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
402033    +   end;
MPRINT(EM_DIAGRAM):   end;
402034    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402035    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
402036    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
402037    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402038    +   end;
MPRINT(EM_DIAGRAM):   end;
402039    +end;
MPRINT(EM_DIAGRAM):   end;
402040    +
402041    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
402042    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
402043    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
402044    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
402045    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
402046    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402047    +end;
MPRINT(EM_DIAGRAM):   end;
402048    +else do;
MPRINT(EM_DIAGRAM):   else do;
402049    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
402050    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
402051    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402052    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
402053    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
402054    +   end;
MPRINT(EM_DIAGRAM):   end;
402055    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
402056    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
402057    +   end;
MPRINT(EM_DIAGRAM):   end;
402058    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402059    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
402060    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
402061    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402062    +   end;
MPRINT(EM_DIAGRAM):   end;
402063    +end;
MPRINT(EM_DIAGRAM):   end;
402064    +
402065    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
402066    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
402067    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
402068    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
402069    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
402070    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
402071    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
402072    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
402073    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
402074    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
402075    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
402076    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
402077    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
402078    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402079    +end;
MPRINT(EM_DIAGRAM):   end;
402080    +else do;
MPRINT(EM_DIAGRAM):   else do;
402081    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
402082    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
402083    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402084    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
402085    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
402086    +   end;
MPRINT(EM_DIAGRAM):   end;
402087    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
402088    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
402089    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
402090    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
402091    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
402092    +   end;
MPRINT(EM_DIAGRAM):   end;
402093    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
402094    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
402095    +   end;
MPRINT(EM_DIAGRAM):   end;
402096    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
402097    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
402098    +   end;
MPRINT(EM_DIAGRAM):   end;
402099    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
402100    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
402101    +   end;
MPRINT(EM_DIAGRAM):   end;
402102    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402103    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
402104    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
402105    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
402106    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
402107    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
402108    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402109    +   end;
MPRINT(EM_DIAGRAM):   end;
402110    +end;
MPRINT(EM_DIAGRAM):   end;
402111    +
402112    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
402113    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
402114    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
402115    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
402116    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
402117    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
402118    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
402119    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
402120    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
402121    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
402122    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
402123    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
402124    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
402125    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
402126    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402127    +end;
MPRINT(EM_DIAGRAM):   end;
402128    +else do;
MPRINT(EM_DIAGRAM):   else do;
402129    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
402130    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
402131    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402132    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
402133    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
402134    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
402135    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
402136    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
402137    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
402138    +         end;
MPRINT(EM_DIAGRAM):   end;
402139    +         else do;
MPRINT(EM_DIAGRAM):   else do;
402140    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
402141    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
402142    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
402143    +            end;
MPRINT(EM_DIAGRAM):   end;
402144    +         end;
MPRINT(EM_DIAGRAM):   end;
402145    +      end;
MPRINT(EM_DIAGRAM):   end;
402146    +      else do;
MPRINT(EM_DIAGRAM):   else do;
402147    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
402148    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
402149    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
402150    +         end;
MPRINT(EM_DIAGRAM):   end;
402151    +      end;
MPRINT(EM_DIAGRAM):   end;
402152    +   end;
MPRINT(EM_DIAGRAM):   end;
402153    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402154    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
402155    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
402156    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
402157    +      end;
MPRINT(EM_DIAGRAM):   end;
402158    +      else do;
MPRINT(EM_DIAGRAM):   else do;
402159    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
402160    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
402161    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
402162    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
402163    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
402164    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
402165    +         end;
MPRINT(EM_DIAGRAM):   end;
402166    +      end;
MPRINT(EM_DIAGRAM):   end;
402167    +   end;
MPRINT(EM_DIAGRAM):   end;
402168    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
402169    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
402170    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
402171    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
402172    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
402173    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
402174    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402175    +   end;
MPRINT(EM_DIAGRAM):   end;
402176    +end;
MPRINT(EM_DIAGRAM):   end;
402177    +
402178    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402179    +*** Checking missing input Interval
402180    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
402181    +
402182    +IF NMISS(
402183    +   AcceptedCmpTotal ,
402184    +   Age ,
402185    +   Frq ,
402186    +   Income ,
402187    +   Kidhome ,
402188    +   Mnt ,
402189    +   MntFishProducts ,
402190    +   MntFruits ,
402191    +   MntGoldProds ,
402192    +   MntMeatProducts ,
402193    +   MntSweetProducts ,
402194    +   MntWines ,
402195    +   MonthsAsCustomer ,
402196    +   NumCatalogPurchases ,
402197    +   NumDealsPurchases ,
402198    +   NumDistPurchases ,
402199    +   NumStorePurchases ,
402200    +   NumWebPurchases ,
402201    +   NumWebVisitsMonth ,
402202    +   RFMstat ,
402203    +   RMntFrq ,
402204    +   Recency ,
402205    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
402206    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
402207    +
402208    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402209    +END;
MPRINT(EM_DIAGRAM):   END;
402210    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402211    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
402212    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402213    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
402214    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
402215    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
402216    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
402217    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
402218    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
402219    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
402220    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
402221    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
402222    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
402223    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
402224    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
402225    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
402226    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
402227    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
402228    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
402229    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
402230    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
402231    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
402232    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
402233    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
402234    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
402235    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
402236    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
402237    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
402238    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
402239    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
402240    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
402241    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
402242    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
402243    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
402244    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
402245    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
402246    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
402247    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
402248    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
402249    +END;
MPRINT(EM_DIAGRAM):   END;
402250    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
402251    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
402252    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
402253    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
402254    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
402255    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
402256    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
402257    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
402258    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
402259    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
402260    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
402261    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
402262    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
402263    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
402264    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
402265    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
402266    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
402267    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
402268    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
402269    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
402270    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
402271    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
402272    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
402273    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
402274    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
402275    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
402276    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
402277    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
402278    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
402279    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
402280    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
402281    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
402282    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
402283    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
402284    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
402285    +   ELSE S_NumCatalogPurchases
402286    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
402287    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
402288    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
402289    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
402290    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
402291    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
402292    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
402293    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
402294    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
402295    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
402296    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
402297    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
402298    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
402299    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
402300    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
402301    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
402302    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
402303    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
402304    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
402305    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
402306    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
402307    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
402308    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
402309    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
402310    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
402311    +END;
MPRINT(EM_DIAGRAM):   END;
402312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402313    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
402314    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402315    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402316    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
402317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402318    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402319    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
402320    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402321    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
402322    +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
402323    +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
402324    +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
402325    +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
402326    +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
402327    +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
402328    +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
402329    +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
402330    +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
402331    +          +    -1.14704878034134 * S_NumDealsPurchases
402332    +          +    -0.17763404274659 * S_NumDistPurchases
402333    +          +     0.08894400267969 * S_NumStorePurchases
402334    +          +     0.59283747891957 * S_NumWebPurchases
402335    +          +     0.85268274682505 * S_NumWebVisitsMonth
402336    +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
402337    +        S_RMntFrq  +    -1.22871580072103 * S_Recency
402338    +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
402339    +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
402340    +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
402341    +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
402342    +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
402343    +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
402344    +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
402345    +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
402346    +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
402347    +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
402348    +          +    -0.80841566068716 * S_NumDealsPurchases
402349    +          +    -0.17995640033768 * S_NumDistPurchases
402350    +          +     0.00713417460936 * S_NumStorePurchases
402351    +          +     0.57881024323076 * S_NumWebPurchases
402352    +          +    -1.35134224257365 * S_NumWebVisitsMonth
402353    +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
402354    +        S_RMntFrq  +     1.16978656262499 * S_Recency
402355    +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
402356    +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
402357    +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
402358    +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
402359    +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
402360    +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
402361    +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
402362    +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
402363    +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
402364    +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
402365    +          +     0.57891364118717 * S_NumDealsPurchases
402366    +          +    -0.31024556838688 * S_NumDistPurchases
402367    +          +    -1.48708542986704 * S_NumStorePurchases
402368    +          +    -0.93009875249206 * S_NumWebPurchases
402369    +          +     2.01900039122935 * S_NumWebVisitsMonth
402370    +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
402371    +        S_RMntFrq  +    -2.30414631760388 * S_Recency
402372    +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
402373    +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
402374    +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
402375    +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
402376    +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
402377    +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
402378    +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
402379    +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
402380    +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
402381    +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
402382    +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
402383    +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
402384    +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
402385    +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
402386    +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
402387    +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
402388    +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
402389    +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
402390    +        EducationGraduation  +    -0.68730596079478 * EducationMaster
402391    +          +     0.55883606830033 * Marital_StatusDivorced
402392    +          +    -0.54530037567066 * Marital_StatusMarried
402393    +          +    -0.52994736075753 * Marital_StatusSingle
402394    +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
402395    +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
402396    +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
402397    +        EducationGraduation  +     0.31201349236277 * EducationMaster
402398    +          +    -1.07368484057033 * Marital_StatusDivorced
402399    +          +     2.73313504711262 * Marital_StatusMarried
402400    +          +    -2.18530462876058 * Marital_StatusSingle
402401    +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
402402    +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
402403    +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
402404    +        EducationGraduation  +    -0.35544166792219 * EducationMaster
402405    +          +     0.49993144243043 * Marital_StatusDivorced
402406    +          +    -0.38953339116829 * Marital_StatusMarried
402407    +          +    -0.10836287319942 * Marital_StatusSingle
402408    +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
402409    +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
402410    +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
402411    +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
402412    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
402413    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
402414    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
402415    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
402416    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
402417    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
402418    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
402419    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
402420    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
402421    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
402422    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
402423    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
402424    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
402425    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
402426    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
402427    +END;
MPRINT(EM_DIAGRAM):   END;
402428    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
402429    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
402430    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
402431    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
402432    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
402433    +END;
MPRINT(EM_DIAGRAM):   END;
402434    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402435    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
402436    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402437    +
402438    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
402439    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
402440    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
402441    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
402442    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
402443    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402444    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
402445    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
402446    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
402447    +end;
MPRINT(EM_DIAGRAM):   end;
402448    +else do;
MPRINT(EM_DIAGRAM):   else do;
402449    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
402450    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
402451    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
402452    +   end;
MPRINT(EM_DIAGRAM):   end;
402453    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
402454    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
402455    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
402456    +   end;
MPRINT(EM_DIAGRAM):   end;
402457    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402458    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
402459    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
402460    +   end;
MPRINT(EM_DIAGRAM):   end;
402461    +end;
MPRINT(EM_DIAGRAM):   end;
402462    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
402463    +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
402464    +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
402465    +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
402466    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
402467    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
402468    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
402469    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
402470    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
402471    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
402472    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
402473    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
402474    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
402475    +END;
MPRINT(EM_DIAGRAM):   END;
402476    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
402477    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
402478    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
402479    +END;
MPRINT(EM_DIAGRAM):   END;
402480    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
402481    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
402482    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
402483    +END;
MPRINT(EM_DIAGRAM):   END;
402484    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
402485    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
402486    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
402487    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
402488    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
402489    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
402490    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
402491    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402492    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
402493    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402494    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
402495    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
402496    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
402497    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
402498    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
402499    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
402500    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
402501    +END;
MPRINT(EM_DIAGRAM):   END;
402502    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
402503    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
402504    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
402505    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
402506    +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
402507    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
402508    +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
402509    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
402510    +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
402511    +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
402512    +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
402513    +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
402514    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
402515    +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
402516    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
402517    +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
402518    +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
402519    +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
402520    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
402521    +* Ensmbl13: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Scoring Code of model 3 of 3;
402522    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
402523    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
402524    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
402525    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
402526    +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
402527    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
402528    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
402529    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
402530    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
402531    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
402532    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
402533    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
402534    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
402535    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
402536    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
402537    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
402538    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
402539    +LENGTH _WARN_ $4
402540    +      F_DepVar  $ 12
402541    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
402542    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
402543    +
402544    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
402545    +
402546    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
402547    +
402548    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
402549    +
402550    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
402551    +
402552    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
402553    +
402554    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
402555    +
402556    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
402557    +
402558    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
402559    +
402560    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
402561    +
402562    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
402563    +
402564    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
402565    +
402566    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
402567    +
402568    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
402569    +
402570    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
402571    +
402572    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
402573    +
402574    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
402575    +
402576    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
402577    +
402578    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
402579    +
402580    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
402581    +
402582    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
402583    +
402584    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
402585    +
402586    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
402587    +
402588    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
402589    +
402590    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
402591    +
402592    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
402593    +
402594    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
402595    +
402596    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
402597    +
402598    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
402599    +
402600    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
402601    +
402602    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
402603    +
402604    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
402605    +
402606    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
402607    +
402608    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
402609    +
402610    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
402611    +
402612    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
402613    +
402614    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
402615    +
402616    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
402617    +
402618    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
402619    +
402620    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
402621    +
402622    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
402623    +
402624    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
402625    +
402626    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
402627    +
402628    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
402629    +
402630    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
402631    +
402632    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
402633    +
402634    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
402635    +
402636    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
402637    +
402638    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
402639    +
402640    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
402641    +
402642    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
402643    +
402644    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
402645    +
402646    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
402647    +
402648    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
402649    +
402650    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
402651    +
402652    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
402653    +
402654    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
402655    +
402656    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
402657    +
402658    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
402659    +
402660    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
402661    +
402662    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
402663    +
402664    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
402665    +
402666    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
402667    +
402668    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
402669    +
402670    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
402671    +
402672    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
402673    +
402674    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
402675    +
402676    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
402677    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
402678    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
402679    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
402680    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
402681    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402682    +end;
MPRINT(EM_DIAGRAM):   end;
402683    +else do;
MPRINT(EM_DIAGRAM):   else do;
402684    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
402685    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
402686    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402687    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
402688    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
402689    +   end;
MPRINT(EM_DIAGRAM):   end;
402690    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
402691    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
402692    +   end;
MPRINT(EM_DIAGRAM):   end;
402693    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402694    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
402695    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
402696    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402697    +   end;
MPRINT(EM_DIAGRAM):   end;
402698    +end;
MPRINT(EM_DIAGRAM):   end;
402699    +
402700    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
402701    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
402702    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
402703    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
402704    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
402705    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402706    +end;
MPRINT(EM_DIAGRAM):   end;
402707    +else do;
MPRINT(EM_DIAGRAM):   else do;
402708    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
402709    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
402710    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402711    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
402712    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
402713    +   end;
MPRINT(EM_DIAGRAM):   end;
402714    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
402715    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
402716    +   end;
MPRINT(EM_DIAGRAM):   end;
402717    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402718    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
402719    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
402720    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402721    +   end;
MPRINT(EM_DIAGRAM):   end;
402722    +end;
MPRINT(EM_DIAGRAM):   end;
402723    +
402724    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
402725    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
402726    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
402727    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
402728    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
402729    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402730    +end;
MPRINT(EM_DIAGRAM):   end;
402731    +else do;
MPRINT(EM_DIAGRAM):   else do;
402732    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
402733    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
402734    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402735    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
402736    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
402737    +   end;
MPRINT(EM_DIAGRAM):   end;
402738    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
402739    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
402740    +   end;
MPRINT(EM_DIAGRAM):   end;
402741    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402742    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
402743    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
402744    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402745    +   end;
MPRINT(EM_DIAGRAM):   end;
402746    +end;
MPRINT(EM_DIAGRAM):   end;
402747    +
402748    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
402749    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
402750    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
402751    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
402752    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
402753    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402754    +end;
MPRINT(EM_DIAGRAM):   end;
402755    +else do;
MPRINT(EM_DIAGRAM):   else do;
402756    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
402757    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
402758    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402759    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
402760    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
402761    +   end;
MPRINT(EM_DIAGRAM):   end;
402762    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
402763    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
402764    +   end;
MPRINT(EM_DIAGRAM):   end;
402765    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402766    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
402767    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
402768    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402769    +   end;
MPRINT(EM_DIAGRAM):   end;
402770    +end;
MPRINT(EM_DIAGRAM):   end;
402771    +
402772    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
402773    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
402774    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
402775    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
402776    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
402777    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402778    +end;
MPRINT(EM_DIAGRAM):   end;
402779    +else do;
MPRINT(EM_DIAGRAM):   else do;
402780    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
402781    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
402782    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402783    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
402784    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
402785    +   end;
MPRINT(EM_DIAGRAM):   end;
402786    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
402787    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
402788    +   end;
MPRINT(EM_DIAGRAM):   end;
402789    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402790    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
402791    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
402792    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402793    +   end;
MPRINT(EM_DIAGRAM):   end;
402794    +end;
MPRINT(EM_DIAGRAM):   end;
402795    +
402796    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
402797    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
402798    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
402799    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
402800    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
402801    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402802    +end;
MPRINT(EM_DIAGRAM):   end;
402803    +else do;
MPRINT(EM_DIAGRAM):   else do;
402804    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
402805    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
402806    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402807    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
402808    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
402809    +   end;
MPRINT(EM_DIAGRAM):   end;
402810    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
402811    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
402812    +   end;
MPRINT(EM_DIAGRAM):   end;
402813    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402814    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
402815    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
402816    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402817    +   end;
MPRINT(EM_DIAGRAM):   end;
402818    +end;
MPRINT(EM_DIAGRAM):   end;
402819    +
402820    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
402821    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
402822    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
402823    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
402824    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
402825    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402826    +end;
MPRINT(EM_DIAGRAM):   end;
402827    +else do;
MPRINT(EM_DIAGRAM):   else do;
402828    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
402829    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
402830    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402831    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
402832    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
402833    +   end;
MPRINT(EM_DIAGRAM):   end;
402834    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
402835    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
402836    +   end;
MPRINT(EM_DIAGRAM):   end;
402837    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402838    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
402839    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
402840    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402841    +   end;
MPRINT(EM_DIAGRAM):   end;
402842    +end;
MPRINT(EM_DIAGRAM):   end;
402843    +
402844    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
402845    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
402846    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
402847    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
402848    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
402849    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
402850    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
402851    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
402852    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
402853    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
402854    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
402855    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
402856    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
402857    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402858    +end;
MPRINT(EM_DIAGRAM):   end;
402859    +else do;
MPRINT(EM_DIAGRAM):   else do;
402860    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
402861    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
402862    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402863    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
402864    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
402865    +   end;
MPRINT(EM_DIAGRAM):   end;
402866    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
402867    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
402868    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
402869    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
402870    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
402871    +   end;
MPRINT(EM_DIAGRAM):   end;
402872    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
402873    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
402874    +   end;
MPRINT(EM_DIAGRAM):   end;
402875    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
402876    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
402877    +   end;
MPRINT(EM_DIAGRAM):   end;
402878    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
402879    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
402880    +   end;
MPRINT(EM_DIAGRAM):   end;
402881    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402882    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
402883    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
402884    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
402885    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
402886    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
402887    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402888    +   end;
MPRINT(EM_DIAGRAM):   end;
402889    +end;
MPRINT(EM_DIAGRAM):   end;
402890    +
402891    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
402892    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
402893    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
402894    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
402895    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
402896    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
402897    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
402898    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
402899    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
402900    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
402901    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
402902    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
402903    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
402904    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
402905    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402906    +end;
MPRINT(EM_DIAGRAM):   end;
402907    +else do;
MPRINT(EM_DIAGRAM):   else do;
402908    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
402909    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
402910    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
402911    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
402912    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
402913    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
402914    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
402915    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
402916    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
402917    +         end;
MPRINT(EM_DIAGRAM):   end;
402918    +         else do;
MPRINT(EM_DIAGRAM):   else do;
402919    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
402920    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
402921    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
402922    +            end;
MPRINT(EM_DIAGRAM):   end;
402923    +         end;
MPRINT(EM_DIAGRAM):   end;
402924    +      end;
MPRINT(EM_DIAGRAM):   end;
402925    +      else do;
MPRINT(EM_DIAGRAM):   else do;
402926    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
402927    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
402928    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
402929    +         end;
MPRINT(EM_DIAGRAM):   end;
402930    +      end;
MPRINT(EM_DIAGRAM):   end;
402931    +   end;
MPRINT(EM_DIAGRAM):   end;
402932    +   else do;
MPRINT(EM_DIAGRAM):   else do;
402933    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
402934    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
402935    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
402936    +      end;
MPRINT(EM_DIAGRAM):   end;
402937    +      else do;
MPRINT(EM_DIAGRAM):   else do;
402938    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
402939    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
402940    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
402941    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
402942    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
402943    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
402944    +         end;
MPRINT(EM_DIAGRAM):   end;
402945    +      end;
MPRINT(EM_DIAGRAM):   end;
402946    +   end;
MPRINT(EM_DIAGRAM):   end;
402947    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
402948    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
402949    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
402950    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
402951    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
402952    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
402953    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402954    +   end;
MPRINT(EM_DIAGRAM):   end;
402955    +end;
MPRINT(EM_DIAGRAM):   end;
402956    +
402957    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402958    +*** Checking missing input Interval
402959    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
402960    +
402961    +IF NMISS(
402962    +   AcceptedCmpTotal ,
402963    +   Age ,
402964    +   Frq ,
402965    +   Income ,
402966    +   Kidhome ,
402967    +   Mnt ,
402968    +   MntFishProducts ,
402969    +   MntFruits ,
402970    +   MntGoldProds ,
402971    +   MntMeatProducts ,
402972    +   MntSweetProducts ,
402973    +   MntWines ,
402974    +   MonthsAsCustomer ,
402975    +   NumCatalogPurchases ,
402976    +   NumDealsPurchases ,
402977    +   NumDistPurchases ,
402978    +   NumStorePurchases ,
402979    +   NumWebPurchases ,
402980    +   NumWebVisitsMonth ,
402981    +   RFMstat ,
402982    +   RMntFrq ,
402983    +   Recency ,
402984    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
402985    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
402986    +
402987    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
402988    +END;
MPRINT(EM_DIAGRAM):   END;
402989    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402990    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
402991    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
402992    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
402993    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
402994    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
402995    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
402996    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
402997    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
402998    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
402999    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
403000    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
403001    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
403002    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
403003    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
403004    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
403005    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
403006    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
403007    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
403008    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
403009    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
403010    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
403011    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
403012    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
403013    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
403014    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
403015    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
403016    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
403017    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
403018    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
403019    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
403020    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
403021    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
403022    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
403023    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
403024    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
403025    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
403026    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
403027    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
403028    +END;
MPRINT(EM_DIAGRAM):   END;
403029    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
403030    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
403031    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
403032    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
403033    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
403034    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
403035    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
403036    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
403037    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
403038    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
403039    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
403040    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
403041    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
403042    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
403043    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
403044    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
403045    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
403046    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
403047    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
403048    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
403049    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
403050    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
403051    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
403052    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
403053    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
403054    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
403055    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
403056    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
403057    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
403058    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
403059    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
403060    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
403061    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
403062    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
403063    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
403064    +   ELSE S_NumCatalogPurchases
403065    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
403066    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
403067    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
403068    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
403069    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
403070    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
403071    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
403072    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
403073    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
403074    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
403075    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
403076    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
403077    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
403078    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
403079    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
403080    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
403081    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
403082    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
403083    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
403084    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
403085    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
403086    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
403087    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
403088    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
403089    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
403090    +END;
MPRINT(EM_DIAGRAM):   END;
403091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
403092    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
403093    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
403094    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
403095    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
403096    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
403097    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
403098    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
403099    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
403100    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
403101    +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
403102    +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
403103    +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
403104    +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
403105    +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
403106    +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
403107    +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
403108    +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
403109    +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
403110    +          +     1.17276395296242 * S_NumDealsPurchases
403111    +          +     0.26632768295477 * S_NumDistPurchases
403112    +          +    -1.26575615903579 * S_NumStorePurchases
403113    +          +    -0.95316107557927 * S_NumWebPurchases
403114    +          +     1.01828574356487 * S_NumWebVisitsMonth
403115    +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
403116    +        S_RMntFrq  +    -0.82943281422857 * S_Recency
403117    +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
403118    +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
403119    +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
403120    +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
403121    +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
403122    +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
403123    +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
403124    +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
403125    +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
403126    +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
403127    +          +     1.14485571201233 * S_NumDealsPurchases
403128    +          +     0.21414266588987 * S_NumDistPurchases
403129    +          +    -0.10530090074297 * S_NumStorePurchases
403130    +          +    -0.41712321238458 * S_NumWebPurchases
403131    +          +    -0.99760766791108 * S_NumWebVisitsMonth
403132    +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
403133    +        S_RMntFrq  +     1.10040128548883 * S_Recency
403134    +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
403135    +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
403136    +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
403137    +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
403138    +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
403139    +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
403140    +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
403141    +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
403142    +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
403143    +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
403144    +          +      0.7196418967437 * S_NumDealsPurchases
403145    +          +     0.69035286374177 * S_NumDistPurchases
403146    +          +     0.38027656631135 * S_NumStorePurchases
403147    +          +    -0.18878358997924 * S_NumWebPurchases
403148    +          +     1.61962062004798 * S_NumWebVisitsMonth
403149    +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
403150    +        S_RMntFrq  +    -2.13821542142822 * S_Recency
403151    +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
403152    +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
403153    +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
403154    +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
403155    +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
403156    +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
403157    +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
403158    +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
403159    +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
403160    +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
403161    +          +    -0.00642902007204 * S_NumDealsPurchases
403162    +          +     0.29785069480367 * S_NumDistPurchases
403163    +          +    -0.42243322063147 * S_NumStorePurchases
403164    +          +     0.54880896338383 * S_NumWebPurchases
403165    +          +    -0.12525846016886 * S_NumWebVisitsMonth
403166    +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
403167    +        S_RMntFrq  +     0.10252211581449 * S_Recency
403168    +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
403169    +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
403170    +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
403171    +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
403172    +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
403173    +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
403174    +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
403175    +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
403176    +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
403177    +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
403178    +          +    -0.48404738328225 * S_NumDealsPurchases
403179    +          +    -0.02464180457879 * S_NumDistPurchases
403180    +          +     1.17201831082067 * S_NumStorePurchases
403181    +          +     0.57453655167516 * S_NumWebPurchases
403182    +          +    -1.94417019790248 * S_NumWebVisitsMonth
403183    +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
403184    +        S_RMntFrq  +      1.6169916658132 * S_Recency
403185    +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
403186    +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
403187    +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
403188    +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
403189    +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
403190    +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
403191    +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
403192    +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
403193    +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
403194    +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
403195    +          +    -1.49850531967483 * S_NumDealsPurchases
403196    +          +    -0.82105466264223 * S_NumDistPurchases
403197    +          +     0.29984603642824 * S_NumStorePurchases
403198    +          +     0.06557123721611 * S_NumWebPurchases
403199    +          +     1.04754749365002 * S_NumWebVisitsMonth
403200    +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
403201    +        S_RMntFrq  +     0.12396789666359 * S_Recency
403202    +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
403203    +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
403204    +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
403205    +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
403206    +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
403207    +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
403208    +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
403209    +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
403210    +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
403211    +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
403212    +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
403213    +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
403214    +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
403215    +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
403216    +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
403217    +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
403218    +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
403219    +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
403220    +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
403221    +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
403222    +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
403223    +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
403224    +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
403225    +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
403226    +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
403227    +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
The SAS System

403228    +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
403229    +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
403230    +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
403231    +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
403232    +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
403233    +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
403234    +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
403235    +        EducationGraduation  +     0.07595631354847 * EducationMaster
403236    +          +     0.24583509957712 * Marital_StatusDivorced
403237    +          +    -0.22681931588361 * Marital_StatusMarried
403238    +          +    -0.12924106229536 * Marital_StatusSingle
403239    +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
403240    +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
403241    +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
403242    +        EducationGraduation  +     0.23015089246655 * EducationMaster
403243    +          +    -0.12585334311068 * Marital_StatusDivorced
403244    +          +    -0.20835502467207 * Marital_StatusMarried
403245    +          +    -0.13839534449368 * Marital_StatusSingle
403246    +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
403247    +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
403248    +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
403249    +        EducationGraduation  +    -0.03608560158257 * EducationMaster
403250    +          +     0.35106363238113 * Marital_StatusDivorced
403251    +          +     -1.3414808583918 * Marital_StatusMarried
403252    +          +     1.40835320798486 * Marital_StatusSingle
403253    +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
403254    +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
403255    +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
403256    +        EducationGraduation  +      0.1746658332011 * EducationMaster
403257    +          +     0.48174546958393 * Marital_StatusDivorced
403258    +          +    -0.41416978858191 * Marital_StatusMarried
403259    +          +    -0.23376801546265 * Marital_StatusSingle
403260    +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
403261    +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
403262    +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
403263    +        EducationGraduation  +     0.68875064631577 * EducationMaster
403264    +          +    -0.67557643774246 * Marital_StatusDivorced
403265    +          +     1.63844045917367 * Marital_StatusMarried
403266    +          +    -0.70320960247699 * Marital_StatusSingle
403267    +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
403268    +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
403269    +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
403270    +        EducationGraduation  +    -0.68011360002443 * EducationMaster
403271    +          +    -0.11371453086883 * Marital_StatusDivorced
403272    +          +    -0.34226997176291 * Marital_StatusMarried
403273    +          +    -1.01568676685754 * Marital_StatusSingle
403274    +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
403275    +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
403276    +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
403277    +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
403278    +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
403279    +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
403280    +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
403281    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
403282    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
403283    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
403284    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
403285    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
403286    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
403287    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
403288    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
403289    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
403290    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
403291    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
403292    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
403293    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
403294    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
403295    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
403296    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
403297    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
403298    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
403299    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
403300    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
403301    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
403302    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
403303    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
403304    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
403305    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
403306    +END;
MPRINT(EM_DIAGRAM):   END;
403307    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
403308    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
403309    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
403310    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
403311    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
403312    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
403313    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
403314    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
403315    +END;
MPRINT(EM_DIAGRAM):   END;
403316    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
403317    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
403318    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
403319    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
403320    +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
403321    +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
403322    +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
403323    +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
403324    +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
403325    +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
403326    +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
403327    +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
403328    +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
403329    +          +    -0.87259051567474 * S_NumDealsPurchases
403330    +          +    -0.36454149529139 * S_NumDistPurchases
403331    +          +     0.12447759925061 * S_NumStorePurchases
403332    +          +    -1.08133487947367 * S_NumWebPurchases
403333    +          +    -0.49882157745454 * S_NumWebVisitsMonth
403334    +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
403335    +        S_RMntFrq  +    -0.01174101172444 * S_Recency
403336    +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
403337    +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
403338    +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
403339    +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
403340    +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
403341    +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
403342    +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
403343    +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
403344    +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
403345    +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
403346    +          +     2.23121497416403 * S_NumDealsPurchases
403347    +          +    -0.48674842191071 * S_NumDistPurchases
403348    +          +     1.77510728607544 * S_NumStorePurchases
403349    +          +     0.14647433155436 * S_NumWebPurchases
403350    +          +    -0.95892686924419 * S_NumWebVisitsMonth
403351    +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
403352    +        S_RMntFrq  +     2.46497777428475 * S_Recency
403353    +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
403354    +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
403355    +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
403356    +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
403357    +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
403358    +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
403359    +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
403360    +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
403361    +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
403362    +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
403363    +          +     0.14338855349611 * S_NumDealsPurchases
403364    +          +    -2.21071010829235 * S_NumDistPurchases
403365    +          +    -0.21795889348002 * S_NumStorePurchases
403366    +          +     1.98825087883535 * S_NumWebPurchases
403367    +          +     1.02482442531149 * S_NumWebVisitsMonth
403368    +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
403369    +        S_RMntFrq  +     -1.0288777281766 * S_Recency
403370    +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
403371    +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
403372    +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
403373    +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
403374    +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
403375    +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
403376    +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
403377    +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
403378    +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
403379    +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
403380    +          +     0.30041205661012 * S_NumDealsPurchases
403381    +          +    -0.63499849986918 * S_NumDistPurchases
403382    +          +    -0.34155713433714 * S_NumStorePurchases
403383    +          +    -1.14183354933936 * S_NumWebPurchases
403384    +          +    -0.42681980262973 * S_NumWebVisitsMonth
403385    +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
403386    +        S_RMntFrq  +     1.25852246467612 * S_Recency
403387    +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
403388    +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
403389    +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
403390    +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
403391    +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
403392    +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
403393    +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
403394    +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
403395    +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
403396    +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
403397    +          +    -0.21237915559831 * S_NumDealsPurchases
403398    +          +     0.48256923764182 * S_NumDistPurchases
403399    +          +    -0.45553093140641 * S_NumStorePurchases
403400    +          +      0.5593655963659 * S_NumWebPurchases
403401    +          +     0.27943768691188 * S_NumWebVisitsMonth
403402    +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
403403    +        S_RMntFrq  +    -1.62796011550484 * S_Recency
403404    +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
403405    +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
403406    +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
403407    +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
403408    +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
403409    +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
403410    +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
403411    +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
403412    +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
403413    +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
403414    +          +     2.38967021388062 * S_NumDealsPurchases
403415    +          +    -0.97722398866481 * S_NumDistPurchases
403416    +          +     1.57612333191312 * S_NumStorePurchases
403417    +          +    -0.75968679115983 * S_NumWebPurchases
403418    +          +    -0.64207187757251 * S_NumWebVisitsMonth
403419    +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
403420    +        S_RMntFrq  +     1.71313869798331 * S_Recency
403421    +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
403422    +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
403423    +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
403424    +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
403425    +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
403426    +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
403427    +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
403428    +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
403429    +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
403430    +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
403431    +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
403432    +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
403433    +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
403434    +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
403435    +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
403436    +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
403437    +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
403438    +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
403439    +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
403440    +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
403441    +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
403442    +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
403443    +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
403444    +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
403445    +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
403446    +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
403447    +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
403448    +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
403449    +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
403450    +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
403451    +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
403452    +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
403453    +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
403454    +        EducationGraduation  +      0.1073450284316 * EducationMaster
403455    +          +     0.96470902298142 * Marital_StatusDivorced
403456    +          +     0.94805959268314 * Marital_StatusMarried
403457    +          +     -0.6523948769616 * Marital_StatusSingle
403458    +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
403459    +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
403460    +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
403461    +        EducationGraduation  +    -1.34927753306064 * EducationMaster
403462    +          +      0.3918249505531 * Marital_StatusDivorced
403463    +          +    -0.00968091979586 * Marital_StatusMarried
403464    +          +     0.84615379885071 * Marital_StatusSingle
403465    +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
403466    +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
403467    +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
403468    +        EducationGraduation  +     -0.8672743321499 * EducationMaster
403469    +          +     1.14335160313191 * Marital_StatusDivorced
403470    +          +     0.50580517192175 * Marital_StatusMarried
403471    +          +     0.17264295020921 * Marital_StatusSingle
403472    +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
403473    +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
403474    +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
403475    +        EducationGraduation  +     1.95818378342783 * EducationMaster
403476    +          +    -0.11238504444225 * Marital_StatusDivorced
403477    +          +    -0.81348274043749 * Marital_StatusMarried
403478    +          +     0.46075415610001 * Marital_StatusSingle
403479    +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
403480    +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
403481    +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
403482    +        EducationGraduation  +     0.08396135672504 * EducationMaster
403483    +          +    -0.46342068701431 * Marital_StatusDivorced
403484    +          +    -0.41667845270204 * Marital_StatusMarried
403485    +          +    -0.47166707496281 * Marital_StatusSingle
403486    +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
403487    +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
403488    +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
403489    +        EducationGraduation  +     0.36656103863186 * EducationMaster
403490    +          +    -0.45376613787812 * Marital_StatusDivorced
403491    +          +     0.01337046049801 * Marital_StatusMarried
403492    +          +    -0.92811489484121 * Marital_StatusSingle
403493    +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
403494    +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
403495    +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
403496    +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
403497    +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
403498    +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
403499    +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
403500    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
403501    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
403502    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
403503    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
403504    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
403505    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
403506    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
403507    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
403508    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
403509    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
403510    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
403511    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
403512    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
403513    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
403514    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
403515    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
403516    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
403517    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
403518    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
403519    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
403520    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
403521    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
403522    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
403523    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
403524    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
403525    +END;
MPRINT(EM_DIAGRAM):   END;
403526    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
403527    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
403528    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
403529    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
403530    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
403531    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
403532    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
403533    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
403534    +END;
MPRINT(EM_DIAGRAM):   END;
403535    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
403536    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
403537    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
403538    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
403539    +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
403540    +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
403541    +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
403542    +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
403543    +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
403544    +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
403545    +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
403546    +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
403547    +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
403548    +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
403549    +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
403550    +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
403551    +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
403552    +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
403553    +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
403554    +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
403555    +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
403556    +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
403557    +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
403558    +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
403559    +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
403560    +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
403561    +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
403562    +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
403563    +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
403564    +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
403565    +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
403566    +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
403567    +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
403568    +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
403569    +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
403570    +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
403571    +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
403572    +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
403573    +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
403574    +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
403575    +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
403576    +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
403577    +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
403578    +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
403579    +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
403580    +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
403581    +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
403582    +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
403583    +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
403584    +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
403585    +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
403586    +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
403587    +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
403588    +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
403589    +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
403590    +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
403591    +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
403592    +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
403593    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
403594    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
403595    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
403596    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
403597    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
403598    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
403599    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
403600    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
403601    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
403602    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
403603    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
403604    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
403605    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
403606    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
403607    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
403608    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
403609    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
403610    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
403611    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
403612    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
403613    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
403614    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
403615    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
403616    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
403617    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
403618    +END;
MPRINT(EM_DIAGRAM):   END;
403619    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
403620    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
403621    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
403622    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
403623    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
403624    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
403625    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
403626    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
403627    +END;
MPRINT(EM_DIAGRAM):   END;
403628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
403629    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
403630    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
403631    +
403632    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
403633    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
403634    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
403635    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
403636    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
403637    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
403638    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
403639    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
403640    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
403641    +end;
MPRINT(EM_DIAGRAM):   end;
403642    +else do;
MPRINT(EM_DIAGRAM):   else do;
403643    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
403644    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
403645    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
403646    +   end;
MPRINT(EM_DIAGRAM):   end;
403647    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
403648    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
403649    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
403650    +   end;
MPRINT(EM_DIAGRAM):   end;
403651    +   else do;
MPRINT(EM_DIAGRAM):   else do;
403652    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
403653    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
403654    +   end;
MPRINT(EM_DIAGRAM):   end;
403655    +end;
MPRINT(EM_DIAGRAM):   end;
403656    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
403657    +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
403658    +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
403659    +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
403660    +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
403661    +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
403662    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
403663    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
403664    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
403665    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
403666    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
403667    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
403668    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
403669    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
403670    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
403671    +END;
MPRINT(EM_DIAGRAM):   END;
403672    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
403673    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
403674    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
403675    +END;
MPRINT(EM_DIAGRAM):   END;
403676    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
403677    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
403678    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
403679    +END;
MPRINT(EM_DIAGRAM):   END;
403680    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
403681    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
403682    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
403683    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
403684    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
403685    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
403686    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
403687    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
403688    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
403689    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
403690    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
403691    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
403692    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
403693    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
403694    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
403695    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
403696    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
403697    +END;
MPRINT(EM_DIAGRAM):   END;
403698    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
403699    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
403700    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
403701    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
403702    +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
403703    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403704    +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
403705    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403706    +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
403707    +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
403708    +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
403709    +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
403710    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403711    +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
403712    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403713    +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
403714    +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
403715    +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
403716    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403717    +* Ensmbl13: Average Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Average Posteriors of 3 models;
403718    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403719    +P_DepVar1 = (
403720    +AutoNeural7_P_DepVar1 +
403721    +AutoNeural9_P_DepVar1 +
403722    +AutoNeural12_P_DepVar1
403723    +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural7_P_DepVar1 + AutoNeural9_P_DepVar1 + 
AutoNeural12_P_DepVar1 )/3;
403724    +P_DepVar0 = (
403725    +AutoNeural7_P_DepVar0 +
403726    +AutoNeural9_P_DepVar0 +
403727    +AutoNeural12_P_DepVar0
403728    +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural7_P_DepVar0 + AutoNeural9_P_DepVar0 + 
AutoNeural12_P_DepVar0 )/3;
403729    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403730    +* Ensmbl13: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Computing Classification Vars;
403731    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403732    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
403733    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
403734    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
403735    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
403736    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
403737    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
403738    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
403739    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
403740    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
403741    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
403742    +end;
MPRINT(EM_DIAGRAM):   end;
403743    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
403744    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
403745    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
403746    +end;
MPRINT(EM_DIAGRAM):   end;
403747    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
403748    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403749    +* Ensmbl13: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Producing Unformatted variable;
403750    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403751    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
403752    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
403753    +else
403754    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
403755    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403756    +* Ensmbl13: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Computing _WARN_ Variable;
403757    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403758    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
403759    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
403760    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
403761    +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
403761   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
403762    +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
403762   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
403763    +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
403763   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
403764    +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
403764   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
403765    +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
403765   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
403766    +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
403766   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
403767    +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
403767   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
403768    +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
403768   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
403769    +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
403769   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
403770    +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
403770   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
403771    +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
403771   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
403772    +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
403772   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
403773    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403774    +* Ensmbl13: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Computing Residual Vars;
403775    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403776    +if
403777    +F_DepVar NE '1'
403778    +AND F_DepVar NE '0'
403779    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
403780    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
403781    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
403782    +end;
MPRINT(EM_DIAGRAM):   end;
403783    +else do;
MPRINT(EM_DIAGRAM):   else do;
403784    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
403785    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
403786    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
403787    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
403788    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
403789    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
403790    +END;
MPRINT(EM_DIAGRAM):   END;
403791    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
403792     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL13_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL7_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_DIAGRAM):   quit;
403793     quit;
403794     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
403795     filename emflow
403795   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl13\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl13\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Scoring AUTONEURAL7_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403796     *------------------------------------------------------------*;
403797     * Ensmbl13: Scoring AUTONEURAL7_VALIDATE data;
403798     *------------------------------------------------------------*;
403799     data EMWS8.Ensmbl13_VALIDATE
403800     / view=EMWS8.Ensmbl13_VALIDATE
403801     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl13_VALIDATE / view=EMWS8.Ensmbl13_VALIDATE ;
403802     set EMWS8.AutoNeural7_VALIDATE
403803     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_VALIDATE ;
403804     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl13\EMFLOWSCORE.sas.
403805    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403806    +* Ensmbl13: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Combine model for DepVar;
403807    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403808    +* Ensmbl13: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Scoring Code of model 1 of 3;
403809    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403810    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403811    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
403812    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
403813    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
403814    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403815    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403816    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
403817    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
403818    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
403819    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403820    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403821    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
403822    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
403823    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
403824    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403825    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403826    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
403827    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
403828    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
403829    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403830    +
403831    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
403832    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
403832   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
403833    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
403834    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
403835    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
403836    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
403837    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
403838    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403839    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
403840    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
403841    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
403842    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403843    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403844    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
403845    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403846    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
403847    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
403848    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
403849    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403850    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
403851    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
403852    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
403853    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403854    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403855    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
403856    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
403857    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
403858    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403859    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403860    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
403861    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
403862    +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
403863    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
403864    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
403865    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
403866    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
403867    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
403868    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
403869    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
403870    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
403871    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
403872    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
403873    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
403874    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
403875    +LENGTH _WARN_ $4
403876    +      F_DepVar  $ 12
403877    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
403878    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
403879    +
403880    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
403881    +
403882    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
403883    +
403884    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
403885    +
403886    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
403887    +
403888    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
403889    +
403890    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
403891    +
403892    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
403893    +
403894    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
403895    +
403896    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
403897    +
403898    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
403899    +
403900    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
403901    +
403902    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
403903    +
403904    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
403905    +
403906    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
403907    +
403908    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
403909    +
403910    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
403911    +
403912    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
403913    +
403914    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
403915    +
403916    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
403917    +
403918    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
403919    +
403920    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
403921    +
403922    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
403923    +
403924    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
403925    +
403926    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
403927    +
403928    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
403929    +
403930    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
403931    +
403932    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
403933    +
403934    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
403935    +
403936    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
403937    +
403938    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
403939    +
403940    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
403941    +
403942    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
403943    +
403944    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
403945    +
403946    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
403947    +
403948    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
403949    +
403950    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
403951    +
403952    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
403953    +
403954    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
403955    +
403956    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
403957    +
403958    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
403959    +
403960    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
403961    +
403962    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
403963    +
403964    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
403965    +
403966    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
403967    +
403968    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
403969    +
403970    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
403971    +
403972    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
403973    +
403974    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
403975    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
403976    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
403977    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
403978    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
403979    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
403980    +end;
MPRINT(EM_DIAGRAM):   end;
403981    +else do;
MPRINT(EM_DIAGRAM):   else do;
403982    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
403983    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
403984    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
403985    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
403986    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
403987    +   end;
MPRINT(EM_DIAGRAM):   end;
403988    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
403989    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
403990    +   end;
MPRINT(EM_DIAGRAM):   end;
403991    +   else do;
MPRINT(EM_DIAGRAM):   else do;
403992    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
403993    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
403994    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
403995    +   end;
MPRINT(EM_DIAGRAM):   end;
403996    +end;
MPRINT(EM_DIAGRAM):   end;
403997    +
403998    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
403999    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
404000    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
404001    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
404002    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404003    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404004    +end;
MPRINT(EM_DIAGRAM):   end;
404005    +else do;
MPRINT(EM_DIAGRAM):   else do;
404006    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404007    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
404008    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404009    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404010    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
404011    +   end;
MPRINT(EM_DIAGRAM):   end;
404012    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404013    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
404014    +   end;
MPRINT(EM_DIAGRAM):   end;
404015    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404016    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
404017    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404018    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404019    +   end;
MPRINT(EM_DIAGRAM):   end;
404020    +end;
MPRINT(EM_DIAGRAM):   end;
404021    +
404022    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
404023    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
404024    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
404025    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
404026    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404027    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404028    +end;
MPRINT(EM_DIAGRAM):   end;
404029    +else do;
MPRINT(EM_DIAGRAM):   else do;
404030    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404031    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
404032    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404033    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404034    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
404035    +   end;
MPRINT(EM_DIAGRAM):   end;
404036    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404037    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
404038    +   end;
MPRINT(EM_DIAGRAM):   end;
404039    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404040    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
404041    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404042    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404043    +   end;
MPRINT(EM_DIAGRAM):   end;
404044    +end;
MPRINT(EM_DIAGRAM):   end;
404045    +
404046    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
404047    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
404048    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
404049    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
404050    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404051    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404052    +end;
MPRINT(EM_DIAGRAM):   end;
404053    +else do;
MPRINT(EM_DIAGRAM):   else do;
404054    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404055    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
404056    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404057    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404058    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
404059    +   end;
MPRINT(EM_DIAGRAM):   end;
404060    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404061    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
404062    +   end;
MPRINT(EM_DIAGRAM):   end;
404063    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404064    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
404065    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404066    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404067    +   end;
MPRINT(EM_DIAGRAM):   end;
404068    +end;
MPRINT(EM_DIAGRAM):   end;
404069    +
404070    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
404071    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
404072    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
404073    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
404074    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404075    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404076    +end;
MPRINT(EM_DIAGRAM):   end;
404077    +else do;
MPRINT(EM_DIAGRAM):   else do;
404078    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404079    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
404080    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404081    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404082    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
404083    +   end;
MPRINT(EM_DIAGRAM):   end;
404084    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404085    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
404086    +   end;
MPRINT(EM_DIAGRAM):   end;
404087    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404088    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
404089    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404090    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404091    +   end;
MPRINT(EM_DIAGRAM):   end;
404092    +end;
MPRINT(EM_DIAGRAM):   end;
404093    +
404094    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
404095    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
404096    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
404097    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
404098    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404099    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404100    +end;
MPRINT(EM_DIAGRAM):   end;
404101    +else do;
MPRINT(EM_DIAGRAM):   else do;
404102    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404103    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
404104    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404105    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404106    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
404107    +   end;
MPRINT(EM_DIAGRAM):   end;
404108    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404109    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
404110    +   end;
MPRINT(EM_DIAGRAM):   end;
404111    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404112    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
404113    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404114    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404115    +   end;
MPRINT(EM_DIAGRAM):   end;
404116    +end;
MPRINT(EM_DIAGRAM):   end;
404117    +
404118    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
404119    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
404120    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
404121    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
404122    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404123    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404124    +end;
MPRINT(EM_DIAGRAM):   end;
404125    +else do;
MPRINT(EM_DIAGRAM):   else do;
404126    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404127    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
404128    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404129    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
404130    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
404131    +   end;
MPRINT(EM_DIAGRAM):   end;
404132    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
404133    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
404134    +   end;
MPRINT(EM_DIAGRAM):   end;
404135    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404136    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
404137    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404138    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404139    +   end;
MPRINT(EM_DIAGRAM):   end;
404140    +end;
MPRINT(EM_DIAGRAM):   end;
404141    +
404142    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
404143    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
404144    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
404145    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
404146    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
404147    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
404148    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
404149    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
404150    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
404151    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
404152    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
404153    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
404154    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404155    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404156    +end;
MPRINT(EM_DIAGRAM):   end;
404157    +else do;
MPRINT(EM_DIAGRAM):   else do;
404158    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
404159    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
404160    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404161    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
404162    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
404163    +   end;
MPRINT(EM_DIAGRAM):   end;
404164    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
404165    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
404166    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
404167    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
404168    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
404169    +   end;
MPRINT(EM_DIAGRAM):   end;
404170    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
404171    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
404172    +   end;
MPRINT(EM_DIAGRAM):   end;
404173    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
404174    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
404175    +   end;
MPRINT(EM_DIAGRAM):   end;
404176    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
404177    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
404178    +   end;
MPRINT(EM_DIAGRAM):   end;
404179    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404180    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
404181    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
404182    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
404183    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
404184    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404185    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404186    +   end;
MPRINT(EM_DIAGRAM):   end;
404187    +end;
MPRINT(EM_DIAGRAM):   end;
404188    +
404189    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
404190    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
404191    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
404192    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
404193    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
404194    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
404195    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
404196    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
404197    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
404198    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
404199    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
404200    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
404201    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
404202    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404203    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404204    +end;
MPRINT(EM_DIAGRAM):   end;
404205    +else do;
MPRINT(EM_DIAGRAM):   else do;
404206    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
404207    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
404208    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404209    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
404210    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
404211    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
404212    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
404213    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
404214    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404215    +         end;
MPRINT(EM_DIAGRAM):   end;
404216    +         else do;
MPRINT(EM_DIAGRAM):   else do;
404217    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
404218    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
404219    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404220    +            end;
MPRINT(EM_DIAGRAM):   end;
404221    +         end;
MPRINT(EM_DIAGRAM):   end;
404222    +      end;
MPRINT(EM_DIAGRAM):   end;
404223    +      else do;
MPRINT(EM_DIAGRAM):   else do;
404224    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
404225    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
404226    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404227    +         end;
MPRINT(EM_DIAGRAM):   end;
404228    +      end;
MPRINT(EM_DIAGRAM):   end;
404229    +   end;
MPRINT(EM_DIAGRAM):   end;
404230    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404231    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
404232    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
404233    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404234    +      end;
MPRINT(EM_DIAGRAM):   end;
404235    +      else do;
MPRINT(EM_DIAGRAM):   else do;
404236    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
404237    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
404238    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
404239    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
404240    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
404241    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404242    +         end;
MPRINT(EM_DIAGRAM):   end;
404243    +      end;
MPRINT(EM_DIAGRAM):   end;
404244    +   end;
MPRINT(EM_DIAGRAM):   end;
404245    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
404246    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
404247    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
404248    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
404249    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
404250    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404251    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404252    +   end;
MPRINT(EM_DIAGRAM):   end;
404253    +end;
MPRINT(EM_DIAGRAM):   end;
404254    +
404255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404256    +*** Checking missing input Interval
404257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
404258    +
404259    +IF NMISS(
404260    +   AcceptedCmpTotal ,
404261    +   Age ,
404262    +   Frq ,
404263    +   Income ,
404264    +   Kidhome ,
404265    +   Mnt ,
404266    +   MntFishProducts ,
404267    +   MntFruits ,
404268    +   MntGoldProds ,
404269    +   MntMeatProducts ,
404270    +   MntSweetProducts ,
404271    +   MntWines ,
404272    +   MonthsAsCustomer ,
404273    +   NumCatalogPurchases ,
404274    +   NumDealsPurchases ,
404275    +   NumDistPurchases ,
404276    +   NumStorePurchases ,
404277    +   NumWebPurchases ,
404278    +   NumWebVisitsMonth ,
404279    +   RFMstat ,
404280    +   RMntFrq ,
404281    +   Recency ,
404282    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
404283    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
404284    +
404285    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404286    +END;
MPRINT(EM_DIAGRAM):   END;
404287    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404288    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
404289    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404290    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
404291    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
404292    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
404293    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
404294    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
404295    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
404296    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
404297    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
404298    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
404299    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
404300    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
404301    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
404302    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
404303    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
404304    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
404305    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
404306    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
404307    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
404308    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
404309    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
404310    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
404311    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
404312    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
404313    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
404314    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
404315    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
404316    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
404317    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
404318    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
404319    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
404320    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
404321    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
404322    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
404323    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
404324    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
404325    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
404326    +END;
MPRINT(EM_DIAGRAM):   END;
404327    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
404328    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
404329    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
404330    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
404331    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
404332    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
404333    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
404334    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
404335    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
404336    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
404337    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
404338    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
404339    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
404340    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
404341    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
404342    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
404343    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
404344    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
404345    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
404346    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
404347    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
404348    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
404349    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
404350    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
404351    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
404352    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
404353    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
404354    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
404355    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
404356    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
404357    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
404358    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
404359    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
404360    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
404361    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
404362    +   ELSE S_NumCatalogPurchases
404363    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
404364    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
404365    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
404366    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
404367    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
404368    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
404369    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
404370    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
404371    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
404372    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
404373    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
404374    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
404375    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
404376    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
404377    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
404378    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
404379    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
404380    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
404381    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
404382    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
404383    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
404384    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
404385    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
404386    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
404387    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
404388    +END;
MPRINT(EM_DIAGRAM):   END;
404389    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404390    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
404391    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404392    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404393    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
404394    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404395    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404396    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
404397    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404398    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
404399    +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
404400    +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
404401    +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
404402    +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
404403    +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
404404    +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
404405    +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
404406    +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
404407    +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
404408    +          +     0.09708841024031 * S_NumDealsPurchases
404409    +          +    -0.29075561032014 * S_NumDistPurchases
404410    +          +    -0.14495394259873 * S_NumStorePurchases
404411    +          +     0.11890705145732 * S_NumWebPurchases
404412    +          +    -0.16954189911344 * S_NumWebVisitsMonth
404413    +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
404414    +        S_RMntFrq  +     0.17150719398884 * S_Recency
404415    +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
404416    +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
404417    +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
404418    +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
404419    +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
404420    +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
404421    +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
404422    +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
404423    +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
404424    +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
404425    +          +     0.16274478997892 * S_NumDealsPurchases
404426    +          +     0.03966958784582 * S_NumDistPurchases
404427    +          +    -0.04714110726598 * S_NumStorePurchases
404428    +          +    -0.02124229528082 * S_NumWebPurchases
404429    +          +     0.29753299776832 * S_NumWebVisitsMonth
404430    +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
404431    +        S_RMntFrq  +     -0.3340129986623 * S_Recency
404432    +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
404433    +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
404434    +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
404435    +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
404436    +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
404437    +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
404438    +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
404439    +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
404440    +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
404441    +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
404442    +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
404443    +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
404444    +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
404445    +        EducationGraduation  +     0.00619669837452 * EducationMaster
404446    +          +    -0.05037639679806 * Marital_StatusDivorced
404447    +          +     0.28781968727878 * Marital_StatusMarried
404448    +          +    -0.20382417074384 * Marital_StatusSingle
404449    +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
404450    +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
404451    +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
404452    +        EducationGraduation  +    -0.06952670554019 * EducationMaster
404453    +          +     0.06970969219123 * Marital_StatusDivorced
404454    +          +    -0.15787475744986 * Marital_StatusMarried
404455    +          +     0.14345344072192 * Marital_StatusSingle
404456    +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
404457    +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
404458    +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
404459    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
404460    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
404461    +END;
MPRINT(EM_DIAGRAM):   END;
404462    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
404463    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
404464    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
404465    +END;
MPRINT(EM_DIAGRAM):   END;
404466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404467    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
404468    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404469    +
404470    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
404471    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
404472    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
404473    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
404474    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
404475    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404476    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
404477    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
404478    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
404479    +end;
MPRINT(EM_DIAGRAM):   end;
404480    +else do;
MPRINT(EM_DIAGRAM):   else do;
404481    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
404482    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
404483    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
404484    +   end;
MPRINT(EM_DIAGRAM):   end;
404485    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
404486    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
404487    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
404488    +   end;
MPRINT(EM_DIAGRAM):   end;
404489    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404490    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
404491    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
404492    +   end;
MPRINT(EM_DIAGRAM):   end;
404493    +end;
MPRINT(EM_DIAGRAM):   end;
404494    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
404495    +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
404496    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
404497    +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
404498    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
404499    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
404500    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
404501    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
404502    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
404503    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
404504    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
404505    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
404506    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
404507    +END;
MPRINT(EM_DIAGRAM):   END;
404508    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
404509    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
404510    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
404511    +END;
MPRINT(EM_DIAGRAM):   END;
404512    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
404513    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
404514    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
404515    +END;
MPRINT(EM_DIAGRAM):   END;
404516    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
404517    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
404518    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
404519    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
404520    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
404521    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
404522    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
404523    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404524    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
404525    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404526    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
404527    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
404528    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
404529    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
404530    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
404531    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
404532    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
404533    +END;
MPRINT(EM_DIAGRAM):   END;
404534    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
404535    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
404536    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
404537    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
404538    +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
404539    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
404540    +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
404541    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
404542    +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
404543    +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
404544    +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
404545    +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
404546    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
404547    +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
404548    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
404549    +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
404550    +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
404551    +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
404552    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
404553    +* Ensmbl13: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Scoring Code of model 2 of 3;
404554    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
404555    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
404556    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
404557    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
404558    +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
404559    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
404560    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
404561    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
404562    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
404563    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
404564    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
404565    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
404566    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
404567    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
404568    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
404569    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
404570    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
404571    +LENGTH _WARN_ $4
404572    +      F_DepVar  $ 12
404573    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
404574    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
404575    +
404576    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
404577    +
404578    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
404579    +
404580    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
404581    +
404582    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
404583    +
404584    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
404585    +
404586    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
404587    +
404588    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
404589    +
404590    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
404591    +
404592    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
404593    +
404594    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
404595    +
404596    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
404597    +
404598    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
404599    +
404600    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
404601    +
404602    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
404603    +
404604    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
404605    +
404606    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
404607    +
404608    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
404609    +
404610    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
404611    +
404612    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
404613    +
404614    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
404615    +
404616    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
404617    +
404618    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
404619    +
404620    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
404621    +
404622    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
404623    +
404624    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
404625    +
404626    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
404627    +
404628    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
404629    +
404630    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
404631    +
404632    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
404633    +
404634    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
404635    +
404636    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
404637    +
404638    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
404639    +
404640    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
404641    +
404642    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
404643    +
404644    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
404645    +
404646    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
404647    +
404648    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
404649    +
404650    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
404651    +
404652    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
404653    +
404654    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
404655    +
404656    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
404657    +
404658    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
404659    +
404660    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
404661    +
404662    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
404663    +
404664    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
404665    +
404666    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
404667    +
404668    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
404669    +
404670    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
404671    +
404672    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
404673    +
404674    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
404675    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
404676    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
404677    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
404678    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404679    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404680    +end;
MPRINT(EM_DIAGRAM):   end;
404681    +else do;
MPRINT(EM_DIAGRAM):   else do;
404682    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404683    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
404684    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404685    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404686    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
404687    +   end;
MPRINT(EM_DIAGRAM):   end;
404688    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404689    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
404690    +   end;
MPRINT(EM_DIAGRAM):   end;
404691    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404692    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
404693    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404694    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404695    +   end;
MPRINT(EM_DIAGRAM):   end;
404696    +end;
MPRINT(EM_DIAGRAM):   end;
404697    +
404698    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
404699    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
404700    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
404701    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
404702    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404703    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404704    +end;
MPRINT(EM_DIAGRAM):   end;
404705    +else do;
MPRINT(EM_DIAGRAM):   else do;
404706    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404707    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
404708    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404709    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404710    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
404711    +   end;
MPRINT(EM_DIAGRAM):   end;
404712    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404713    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
404714    +   end;
MPRINT(EM_DIAGRAM):   end;
404715    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404716    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
404717    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404718    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404719    +   end;
MPRINT(EM_DIAGRAM):   end;
404720    +end;
MPRINT(EM_DIAGRAM):   end;
404721    +
404722    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
404723    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
404724    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
404725    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
404726    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404727    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404728    +end;
MPRINT(EM_DIAGRAM):   end;
404729    +else do;
MPRINT(EM_DIAGRAM):   else do;
404730    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404731    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
404732    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404733    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404734    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
404735    +   end;
MPRINT(EM_DIAGRAM):   end;
404736    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404737    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
404738    +   end;
MPRINT(EM_DIAGRAM):   end;
404739    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404740    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
404741    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404742    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404743    +   end;
MPRINT(EM_DIAGRAM):   end;
404744    +end;
MPRINT(EM_DIAGRAM):   end;
404745    +
404746    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
404747    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
404748    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
404749    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
404750    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404751    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404752    +end;
MPRINT(EM_DIAGRAM):   end;
404753    +else do;
MPRINT(EM_DIAGRAM):   else do;
404754    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404755    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
404756    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404757    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404758    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
404759    +   end;
MPRINT(EM_DIAGRAM):   end;
404760    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404761    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
404762    +   end;
MPRINT(EM_DIAGRAM):   end;
404763    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404764    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
404765    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404766    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404767    +   end;
MPRINT(EM_DIAGRAM):   end;
404768    +end;
MPRINT(EM_DIAGRAM):   end;
404769    +
404770    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
404771    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
404772    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
404773    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
404774    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404775    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404776    +end;
MPRINT(EM_DIAGRAM):   end;
404777    +else do;
MPRINT(EM_DIAGRAM):   else do;
404778    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404779    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
404780    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404781    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404782    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
404783    +   end;
MPRINT(EM_DIAGRAM):   end;
404784    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404785    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
404786    +   end;
MPRINT(EM_DIAGRAM):   end;
404787    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404788    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
404789    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404790    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404791    +   end;
MPRINT(EM_DIAGRAM):   end;
404792    +end;
MPRINT(EM_DIAGRAM):   end;
404793    +
404794    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
404795    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
404796    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
404797    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
404798    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404799    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404800    +end;
MPRINT(EM_DIAGRAM):   end;
404801    +else do;
MPRINT(EM_DIAGRAM):   else do;
404802    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404803    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
404804    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404805    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404806    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
404807    +   end;
MPRINT(EM_DIAGRAM):   end;
404808    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404809    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
404810    +   end;
MPRINT(EM_DIAGRAM):   end;
404811    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404812    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
404813    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404814    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404815    +   end;
MPRINT(EM_DIAGRAM):   end;
404816    +end;
MPRINT(EM_DIAGRAM):   end;
404817    +
404818    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
404819    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
404820    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
404821    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
404822    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404823    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404824    +end;
MPRINT(EM_DIAGRAM):   end;
404825    +else do;
MPRINT(EM_DIAGRAM):   else do;
404826    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404827    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
404828    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404829    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
404830    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
404831    +   end;
MPRINT(EM_DIAGRAM):   end;
404832    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
404833    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
404834    +   end;
MPRINT(EM_DIAGRAM):   end;
404835    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404836    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
404837    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404838    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404839    +   end;
MPRINT(EM_DIAGRAM):   end;
404840    +end;
MPRINT(EM_DIAGRAM):   end;
404841    +
404842    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
404843    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
404844    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
404845    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
404846    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
404847    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
404848    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
404849    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
404850    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
404851    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
404852    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
404853    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
404854    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404855    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404856    +end;
MPRINT(EM_DIAGRAM):   end;
404857    +else do;
MPRINT(EM_DIAGRAM):   else do;
404858    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
404859    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
404860    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404861    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
404862    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
404863    +   end;
MPRINT(EM_DIAGRAM):   end;
404864    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
404865    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
404866    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
404867    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
404868    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
404869    +   end;
MPRINT(EM_DIAGRAM):   end;
404870    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
404871    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
404872    +   end;
MPRINT(EM_DIAGRAM):   end;
404873    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
404874    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
404875    +   end;
MPRINT(EM_DIAGRAM):   end;
404876    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
404877    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
404878    +   end;
MPRINT(EM_DIAGRAM):   end;
404879    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404880    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
404881    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
404882    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
404883    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
404884    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404885    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404886    +   end;
MPRINT(EM_DIAGRAM):   end;
404887    +end;
MPRINT(EM_DIAGRAM):   end;
404888    +
404889    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
404890    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
404891    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
404892    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
404893    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
404894    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
404895    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
404896    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
404897    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
404898    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
404899    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
404900    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
404901    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
404902    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404903    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404904    +end;
MPRINT(EM_DIAGRAM):   end;
404905    +else do;
MPRINT(EM_DIAGRAM):   else do;
404906    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
404907    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
404908    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404909    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
404910    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
404911    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
404912    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
404913    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
404914    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404915    +         end;
MPRINT(EM_DIAGRAM):   end;
404916    +         else do;
MPRINT(EM_DIAGRAM):   else do;
404917    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
404918    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
404919    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404920    +            end;
MPRINT(EM_DIAGRAM):   end;
404921    +         end;
MPRINT(EM_DIAGRAM):   end;
404922    +      end;
MPRINT(EM_DIAGRAM):   end;
404923    +      else do;
MPRINT(EM_DIAGRAM):   else do;
404924    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
404925    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
404926    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404927    +         end;
MPRINT(EM_DIAGRAM):   end;
404928    +      end;
MPRINT(EM_DIAGRAM):   end;
404929    +   end;
MPRINT(EM_DIAGRAM):   end;
404930    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404931    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
404932    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
404933    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404934    +      end;
MPRINT(EM_DIAGRAM):   end;
404935    +      else do;
MPRINT(EM_DIAGRAM):   else do;
404936    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
404937    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
404938    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
404939    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
404940    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
404941    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404942    +         end;
MPRINT(EM_DIAGRAM):   end;
404943    +      end;
MPRINT(EM_DIAGRAM):   end;
404944    +   end;
MPRINT(EM_DIAGRAM):   end;
404945    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
404946    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
404947    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
404948    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
404949    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
404950    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404951    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404952    +   end;
MPRINT(EM_DIAGRAM):   end;
404953    +end;
MPRINT(EM_DIAGRAM):   end;
404954    +
404955    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404956    +*** Checking missing input Interval
404957    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
404958    +
404959    +IF NMISS(
404960    +   AcceptedCmpTotal ,
404961    +   Age ,
404962    +   Frq ,
404963    +   Income ,
404964    +   Kidhome ,
404965    +   Mnt ,
404966    +   MntFishProducts ,
404967    +   MntFruits ,
404968    +   MntGoldProds ,
404969    +   MntMeatProducts ,
404970    +   MntSweetProducts ,
404971    +   MntWines ,
404972    +   MonthsAsCustomer ,
404973    +   NumCatalogPurchases ,
404974    +   NumDealsPurchases ,
404975    +   NumDistPurchases ,
404976    +   NumStorePurchases ,
404977    +   NumWebPurchases ,
404978    +   NumWebVisitsMonth ,
404979    +   RFMstat ,
404980    +   RMntFrq ,
404981    +   Recency ,
404982    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
404983    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
404984    +
404985    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404986    +END;
MPRINT(EM_DIAGRAM):   END;
404987    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404988    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
404989    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404990    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
404991    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
404992    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
404993    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
404994    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
404995    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
404996    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
404997    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
404998    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
404999    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
405000    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
405001    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
405002    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
405003    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
405004    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
405005    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
405006    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
405007    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
405008    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
405009    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
405010    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
405011    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
405012    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
405013    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
405014    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
405015    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
405016    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
405017    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
405018    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
405019    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
405020    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
405021    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
405022    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
405023    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
405024    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
405025    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
405026    +END;
MPRINT(EM_DIAGRAM):   END;
405027    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
405028    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
405029    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
405030    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
405031    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
405032    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
405033    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
405034    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
405035    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
405036    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
405037    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
405038    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
405039    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
405040    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
405041    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
405042    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
405043    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
405044    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
405045    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
405046    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
405047    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
405048    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
405049    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
405050    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
405051    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
405052    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
405053    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
405054    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
405055    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
405056    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
405057    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
405058    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
405059    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
405060    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
405061    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
405062    +   ELSE S_NumCatalogPurchases
405063    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
405064    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
405065    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
405066    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
405067    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
405068    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
405069    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
405070    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
405071    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
405072    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
405073    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
405074    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
405075    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
405076    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
405077    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
405078    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
405079    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
405080    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
405081    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
405082    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
405083    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
405084    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
405085    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
405086    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
405087    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
405088    +END;
MPRINT(EM_DIAGRAM):   END;
405089    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405090    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
405091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405092    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405093    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
405094    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405095    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405096    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
405097    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405098    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
405099    +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
405100    +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
405101    +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
405102    +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
405103    +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
405104    +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
405105    +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
405106    +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
405107    +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
405108    +          +    -1.14704878034134 * S_NumDealsPurchases
405109    +          +    -0.17763404274659 * S_NumDistPurchases
405110    +          +     0.08894400267969 * S_NumStorePurchases
405111    +          +     0.59283747891957 * S_NumWebPurchases
405112    +          +     0.85268274682505 * S_NumWebVisitsMonth
405113    +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
405114    +        S_RMntFrq  +    -1.22871580072103 * S_Recency
405115    +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
405116    +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
405117    +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
405118    +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
405119    +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
405120    +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
405121    +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
405122    +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
405123    +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
405124    +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
405125    +          +    -0.80841566068716 * S_NumDealsPurchases
405126    +          +    -0.17995640033768 * S_NumDistPurchases
405127    +          +     0.00713417460936 * S_NumStorePurchases
405128    +          +     0.57881024323076 * S_NumWebPurchases
405129    +          +    -1.35134224257365 * S_NumWebVisitsMonth
405130    +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
405131    +        S_RMntFrq  +     1.16978656262499 * S_Recency
405132    +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
405133    +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
405134    +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
405135    +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
405136    +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
405137    +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
405138    +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
405139    +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
405140    +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
405141    +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
405142    +          +     0.57891364118717 * S_NumDealsPurchases
405143    +          +    -0.31024556838688 * S_NumDistPurchases
405144    +          +    -1.48708542986704 * S_NumStorePurchases
405145    +          +    -0.93009875249206 * S_NumWebPurchases
405146    +          +     2.01900039122935 * S_NumWebVisitsMonth
405147    +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
405148    +        S_RMntFrq  +    -2.30414631760388 * S_Recency
405149    +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
405150    +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
405151    +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
405152    +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
405153    +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
405154    +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
405155    +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
405156    +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
405157    +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
405158    +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
405159    +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
405160    +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
405161    +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
405162    +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
405163    +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
405164    +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
405165    +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
405166    +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
405167    +        EducationGraduation  +    -0.68730596079478 * EducationMaster
405168    +          +     0.55883606830033 * Marital_StatusDivorced
405169    +          +    -0.54530037567066 * Marital_StatusMarried
405170    +          +    -0.52994736075753 * Marital_StatusSingle
405171    +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
405172    +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
405173    +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
405174    +        EducationGraduation  +     0.31201349236277 * EducationMaster
405175    +          +    -1.07368484057033 * Marital_StatusDivorced
405176    +          +     2.73313504711262 * Marital_StatusMarried
405177    +          +    -2.18530462876058 * Marital_StatusSingle
405178    +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
405179    +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
405180    +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
405181    +        EducationGraduation  +    -0.35544166792219 * EducationMaster
405182    +          +     0.49993144243043 * Marital_StatusDivorced
405183    +          +    -0.38953339116829 * Marital_StatusMarried
405184    +          +    -0.10836287319942 * Marital_StatusSingle
405185    +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
405186    +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
405187    +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
405188    +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
405189    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
405190    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
405191    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
405192    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
405193    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
405194    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
405195    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
405196    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
405197    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
405198    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
405199    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
405200    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
405201    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
405202    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
405203    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
405204    +END;
MPRINT(EM_DIAGRAM):   END;
405205    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
405206    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
405207    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
405208    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
405209    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
405210    +END;
MPRINT(EM_DIAGRAM):   END;
405211    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405212    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
405213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405214    +
405215    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
405216    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
405217    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
405218    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
405219    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
405220    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405221    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
405222    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
405223    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
405224    +end;
MPRINT(EM_DIAGRAM):   end;
405225    +else do;
MPRINT(EM_DIAGRAM):   else do;
405226    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
405227    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
405228    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
405229    +   end;
MPRINT(EM_DIAGRAM):   end;
405230    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
405231    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
405232    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
405233    +   end;
MPRINT(EM_DIAGRAM):   end;
405234    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405235    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
405236    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
405237    +   end;
MPRINT(EM_DIAGRAM):   end;
405238    +end;
MPRINT(EM_DIAGRAM):   end;
405239    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
405240    +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
405241    +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
405242    +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
405243    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
405244    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
405245    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
405246    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
405247    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
405248    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
405249    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
405250    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
405251    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
405252    +END;
MPRINT(EM_DIAGRAM):   END;
405253    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
405254    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
405255    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
405256    +END;
MPRINT(EM_DIAGRAM):   END;
405257    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
405258    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
405259    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
405260    +END;
MPRINT(EM_DIAGRAM):   END;
405261    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
405262    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
405263    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
405264    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
405265    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
405266    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
405267    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
405268    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405269    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
405270    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405271    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
405272    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
405273    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
405274    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
405275    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
405276    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
405277    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
405278    +END;
MPRINT(EM_DIAGRAM):   END;
405279    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
405280    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
405281    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
405282    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
405283    +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
405284    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
405285    +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
405286    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
405287    +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
405288    +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
405289    +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
405290    +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
405291    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
405292    +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
405293    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
405294    +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
405295    +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
405296    +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
405297    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
405298    +* Ensmbl13: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Scoring Code of model 3 of 3;
405299    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
405300    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
405301    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
405302    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
405303    +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
405304    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
405305    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
405306    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
405307    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
405308    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
405309    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
405310    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
405311    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
405312    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
405313    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
405314    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
405315    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
405316    +LENGTH _WARN_ $4
405317    +      F_DepVar  $ 12
405318    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
405319    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
405320    +
405321    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
405322    +
405323    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
405324    +
405325    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
405326    +
405327    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
405328    +
405329    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
405330    +
405331    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
405332    +
405333    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
405334    +
405335    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
405336    +
405337    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
405338    +
405339    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
405340    +
405341    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
405342    +
405343    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
405344    +
405345    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
405346    +
405347    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
405348    +
405349    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
405350    +
405351    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
405352    +
405353    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
405354    +
405355    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
405356    +
405357    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
405358    +
405359    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
405360    +
405361    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
405362    +
405363    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
405364    +
405365    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
405366    +
405367    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
405368    +
405369    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
405370    +
405371    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
405372    +
405373    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
405374    +
405375    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
405376    +
405377    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
405378    +
405379    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
405380    +
405381    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
405382    +
405383    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
405384    +
405385    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
405386    +
405387    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
405388    +
405389    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
405390    +
405391    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
405392    +
405393    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
405394    +
405395    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
405396    +
405397    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
405398    +
405399    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
405400    +
405401    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
405402    +
405403    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
405404    +
405405    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
405406    +
405407    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
405408    +
405409    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
405410    +
405411    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
405412    +
405413    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
405414    +
405415    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
405416    +
405417    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
405418    +
405419    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
405420    +
405421    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
405422    +
405423    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
405424    +
405425    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
405426    +
405427    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
405428    +
405429    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
405430    +
405431    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
405432    +
405433    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
405434    +
405435    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
405436    +
405437    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
405438    +
405439    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
405440    +
405441    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
405442    +
405443    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
405444    +
405445    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
405446    +
405447    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
405448    +
405449    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
405450    +
405451    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
405452    +
405453    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
405454    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
405455    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
405456    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
405457    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405458    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405459    +end;
MPRINT(EM_DIAGRAM):   end;
405460    +else do;
MPRINT(EM_DIAGRAM):   else do;
405461    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
405462    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
405463    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405464    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
405465    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
405466    +   end;
MPRINT(EM_DIAGRAM):   end;
405467    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
405468    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
405469    +   end;
MPRINT(EM_DIAGRAM):   end;
405470    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405471    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
405472    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405473    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405474    +   end;
MPRINT(EM_DIAGRAM):   end;
405475    +end;
MPRINT(EM_DIAGRAM):   end;
405476    +
405477    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
405478    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
405479    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
405480    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
405481    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405482    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405483    +end;
MPRINT(EM_DIAGRAM):   end;
405484    +else do;
MPRINT(EM_DIAGRAM):   else do;
405485    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
405486    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
405487    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405488    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
405489    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
405490    +   end;
MPRINT(EM_DIAGRAM):   end;
405491    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
405492    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
405493    +   end;
MPRINT(EM_DIAGRAM):   end;
405494    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405495    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
405496    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405497    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405498    +   end;
MPRINT(EM_DIAGRAM):   end;
405499    +end;
MPRINT(EM_DIAGRAM):   end;
405500    +
405501    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
405502    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
405503    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
405504    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
405505    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405506    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405507    +end;
MPRINT(EM_DIAGRAM):   end;
405508    +else do;
MPRINT(EM_DIAGRAM):   else do;
405509    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
405510    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
405511    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405512    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
405513    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
405514    +   end;
MPRINT(EM_DIAGRAM):   end;
405515    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
405516    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
405517    +   end;
MPRINT(EM_DIAGRAM):   end;
405518    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405519    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
405520    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405521    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405522    +   end;
MPRINT(EM_DIAGRAM):   end;
405523    +end;
MPRINT(EM_DIAGRAM):   end;
405524    +
405525    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
405526    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
405527    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
405528    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
405529    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405530    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405531    +end;
MPRINT(EM_DIAGRAM):   end;
405532    +else do;
MPRINT(EM_DIAGRAM):   else do;
405533    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
405534    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
405535    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405536    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
405537    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
405538    +   end;
MPRINT(EM_DIAGRAM):   end;
405539    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
405540    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
405541    +   end;
MPRINT(EM_DIAGRAM):   end;
405542    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405543    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
405544    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405545    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405546    +   end;
MPRINT(EM_DIAGRAM):   end;
405547    +end;
MPRINT(EM_DIAGRAM):   end;
405548    +
405549    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
405550    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
405551    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
405552    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
405553    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405554    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405555    +end;
MPRINT(EM_DIAGRAM):   end;
405556    +else do;
MPRINT(EM_DIAGRAM):   else do;
405557    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
405558    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
405559    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405560    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
405561    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
405562    +   end;
MPRINT(EM_DIAGRAM):   end;
405563    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
405564    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
405565    +   end;
MPRINT(EM_DIAGRAM):   end;
405566    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405567    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
405568    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405569    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405570    +   end;
MPRINT(EM_DIAGRAM):   end;
405571    +end;
MPRINT(EM_DIAGRAM):   end;
405572    +
405573    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
405574    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
405575    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
405576    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
405577    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405578    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405579    +end;
MPRINT(EM_DIAGRAM):   end;
405580    +else do;
MPRINT(EM_DIAGRAM):   else do;
405581    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
405582    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
405583    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405584    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
405585    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
405586    +   end;
MPRINT(EM_DIAGRAM):   end;
405587    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
405588    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
405589    +   end;
MPRINT(EM_DIAGRAM):   end;
405590    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405591    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
405592    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405593    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405594    +   end;
MPRINT(EM_DIAGRAM):   end;
405595    +end;
MPRINT(EM_DIAGRAM):   end;
405596    +
405597    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
405598    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
405599    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
405600    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
405601    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405602    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405603    +end;
MPRINT(EM_DIAGRAM):   end;
405604    +else do;
MPRINT(EM_DIAGRAM):   else do;
405605    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
405606    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
405607    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405608    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
405609    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
405610    +   end;
MPRINT(EM_DIAGRAM):   end;
405611    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
405612    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
405613    +   end;
MPRINT(EM_DIAGRAM):   end;
405614    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405615    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
405616    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405617    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405618    +   end;
MPRINT(EM_DIAGRAM):   end;
405619    +end;
MPRINT(EM_DIAGRAM):   end;
405620    +
405621    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
405622    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
405623    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
405624    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
405625    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
405626    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
405627    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
405628    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
405629    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
405630    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
405631    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
405632    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
405633    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405634    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405635    +end;
MPRINT(EM_DIAGRAM):   end;
405636    +else do;
MPRINT(EM_DIAGRAM):   else do;
405637    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
405638    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
405639    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405640    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
405641    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
405642    +   end;
MPRINT(EM_DIAGRAM):   end;
405643    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
405644    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
405645    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
405646    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
405647    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
405648    +   end;
MPRINT(EM_DIAGRAM):   end;
405649    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
405650    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
405651    +   end;
MPRINT(EM_DIAGRAM):   end;
405652    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
405653    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
405654    +   end;
MPRINT(EM_DIAGRAM):   end;
405655    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
405656    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
405657    +   end;
MPRINT(EM_DIAGRAM):   end;
405658    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405659    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
405660    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
405661    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
405662    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
405663    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405664    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405665    +   end;
MPRINT(EM_DIAGRAM):   end;
405666    +end;
MPRINT(EM_DIAGRAM):   end;
405667    +
405668    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
405669    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
405670    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
405671    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
405672    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
405673    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
405674    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
405675    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
405676    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
405677    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
405678    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
405679    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
405680    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
405681    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405682    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405683    +end;
MPRINT(EM_DIAGRAM):   end;
405684    +else do;
MPRINT(EM_DIAGRAM):   else do;
405685    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
405686    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
405687    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405688    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
405689    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
405690    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
405691    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
405692    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
405693    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
405694    +         end;
MPRINT(EM_DIAGRAM):   end;
405695    +         else do;
MPRINT(EM_DIAGRAM):   else do;
405696    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
405697    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
405698    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
405699    +            end;
MPRINT(EM_DIAGRAM):   end;
405700    +         end;
MPRINT(EM_DIAGRAM):   end;
405701    +      end;
MPRINT(EM_DIAGRAM):   end;
405702    +      else do;
MPRINT(EM_DIAGRAM):   else do;
405703    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
405704    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
405705    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
405706    +         end;
MPRINT(EM_DIAGRAM):   end;
405707    +      end;
MPRINT(EM_DIAGRAM):   end;
405708    +   end;
MPRINT(EM_DIAGRAM):   end;
405709    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405710    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
405711    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
405712    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
405713    +      end;
MPRINT(EM_DIAGRAM):   end;
405714    +      else do;
MPRINT(EM_DIAGRAM):   else do;
405715    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
405716    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
405717    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
405718    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
405719    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
405720    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
405721    +         end;
MPRINT(EM_DIAGRAM):   end;
405722    +      end;
MPRINT(EM_DIAGRAM):   end;
405723    +   end;
MPRINT(EM_DIAGRAM):   end;
405724    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
405725    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
405726    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
405727    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
405728    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
405729    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405730    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405731    +   end;
MPRINT(EM_DIAGRAM):   end;
405732    +end;
MPRINT(EM_DIAGRAM):   end;
405733    +
405734    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405735    +*** Checking missing input Interval
405736    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
405737    +
405738    +IF NMISS(
405739    +   AcceptedCmpTotal ,
405740    +   Age ,
405741    +   Frq ,
405742    +   Income ,
405743    +   Kidhome ,
405744    +   Mnt ,
405745    +   MntFishProducts ,
405746    +   MntFruits ,
405747    +   MntGoldProds ,
405748    +   MntMeatProducts ,
405749    +   MntSweetProducts ,
405750    +   MntWines ,
405751    +   MonthsAsCustomer ,
405752    +   NumCatalogPurchases ,
405753    +   NumDealsPurchases ,
405754    +   NumDistPurchases ,
405755    +   NumStorePurchases ,
405756    +   NumWebPurchases ,
405757    +   NumWebVisitsMonth ,
405758    +   RFMstat ,
405759    +   RMntFrq ,
405760    +   Recency ,
405761    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
405762    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
405763    +
405764    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405765    +END;
MPRINT(EM_DIAGRAM):   END;
405766    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405767    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
405768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405769    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
405770    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
405771    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
405772    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
405773    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
405774    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
405775    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
405776    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
405777    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
405778    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
405779    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
405780    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
405781    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
405782    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
405783    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
405784    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
405785    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
405786    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
405787    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
405788    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
405789    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
405790    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
405791    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
405792    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
405793    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
405794    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
405795    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
405796    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
405797    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
405798    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
405799    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
405800    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
405801    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
405802    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
405803    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
405804    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
405805    +END;
MPRINT(EM_DIAGRAM):   END;
405806    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
405807    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
405808    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
405809    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
405810    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
405811    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
405812    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
405813    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
405814    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
405815    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
405816    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
405817    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
405818    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
405819    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
405820    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
405821    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
405822    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
405823    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
405824    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
405825    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
405826    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
405827    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
405828    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
405829    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
405830    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
405831    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
405832    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
405833    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
405834    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
405835    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
405836    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
405837    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
405838    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
405839    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
405840    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
405841    +   ELSE S_NumCatalogPurchases
405842    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
405843    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
405844    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
405845    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
405846    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
405847    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
405848    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
405849    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
405850    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
405851    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
405852    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
405853    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
405854    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
405855    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
405856    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
405857    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
405858    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
405859    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
405860    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
405861    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
405862    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
405863    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
405864    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
405865    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
405866    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
405867    +END;
MPRINT(EM_DIAGRAM):   END;
405868    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405869    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
405870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405871    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405872    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
405873    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405874    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405875    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
405876    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405877    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
405878    +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
405879    +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
405880    +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
405881    +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
405882    +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
405883    +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
405884    +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
405885    +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
405886    +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
405887    +          +     1.17276395296242 * S_NumDealsPurchases
405888    +          +     0.26632768295477 * S_NumDistPurchases
405889    +          +    -1.26575615903579 * S_NumStorePurchases
405890    +          +    -0.95316107557927 * S_NumWebPurchases
405891    +          +     1.01828574356487 * S_NumWebVisitsMonth
405892    +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
405893    +        S_RMntFrq  +    -0.82943281422857 * S_Recency
405894    +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
405895    +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
405896    +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
405897    +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
405898    +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
405899    +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
405900    +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
405901    +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
405902    +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
405903    +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
405904    +          +     1.14485571201233 * S_NumDealsPurchases
405905    +          +     0.21414266588987 * S_NumDistPurchases
405906    +          +    -0.10530090074297 * S_NumStorePurchases
405907    +          +    -0.41712321238458 * S_NumWebPurchases
405908    +          +    -0.99760766791108 * S_NumWebVisitsMonth
405909    +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
405910    +        S_RMntFrq  +     1.10040128548883 * S_Recency
405911    +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
405912    +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
405913    +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
405914    +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
405915    +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
405916    +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
405917    +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
405918    +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
405919    +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
405920    +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
405921    +          +      0.7196418967437 * S_NumDealsPurchases
405922    +          +     0.69035286374177 * S_NumDistPurchases
405923    +          +     0.38027656631135 * S_NumStorePurchases
405924    +          +    -0.18878358997924 * S_NumWebPurchases
405925    +          +     1.61962062004798 * S_NumWebVisitsMonth
405926    +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
405927    +        S_RMntFrq  +    -2.13821542142822 * S_Recency
405928    +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
405929    +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
405930    +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
405931    +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
405932    +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
405933    +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
405934    +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
405935    +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
405936    +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
405937    +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
405938    +          +    -0.00642902007204 * S_NumDealsPurchases
405939    +          +     0.29785069480367 * S_NumDistPurchases
405940    +          +    -0.42243322063147 * S_NumStorePurchases
405941    +          +     0.54880896338383 * S_NumWebPurchases
405942    +          +    -0.12525846016886 * S_NumWebVisitsMonth
405943    +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
405944    +        S_RMntFrq  +     0.10252211581449 * S_Recency
405945    +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
405946    +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
405947    +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
405948    +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
405949    +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
405950    +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
405951    +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
405952    +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
405953    +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
405954    +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
405955    +          +    -0.48404738328225 * S_NumDealsPurchases
405956    +          +    -0.02464180457879 * S_NumDistPurchases
405957    +          +     1.17201831082067 * S_NumStorePurchases
405958    +          +     0.57453655167516 * S_NumWebPurchases
405959    +          +    -1.94417019790248 * S_NumWebVisitsMonth
405960    +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
405961    +        S_RMntFrq  +      1.6169916658132 * S_Recency
405962    +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
405963    +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
405964    +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
405965    +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
405966    +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
405967    +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
405968    +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
405969    +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
405970    +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
405971    +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
405972    +          +    -1.49850531967483 * S_NumDealsPurchases
405973    +          +    -0.82105466264223 * S_NumDistPurchases
405974    +          +     0.29984603642824 * S_NumStorePurchases
405975    +          +     0.06557123721611 * S_NumWebPurchases
405976    +          +     1.04754749365002 * S_NumWebVisitsMonth
405977    +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
405978    +        S_RMntFrq  +     0.12396789666359 * S_Recency
405979    +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
405980    +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
405981    +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
405982    +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
405983    +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
405984    +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
405985    +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
405986    +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
405987    +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
405988    +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
405989    +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
405990    +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
405991    +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
405992    +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
405993    +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
405994    +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
405995    +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
405996    +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
405997    +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
405998    +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
405999    +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
406000    +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
406001    +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
406002    +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
406003    +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
406004    +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
406005    +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
406006    +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
406007    +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
406008    +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
406009    +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
406010    +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
406011    +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
406012    +        EducationGraduation  +     0.07595631354847 * EducationMaster
406013    +          +     0.24583509957712 * Marital_StatusDivorced
406014    +          +    -0.22681931588361 * Marital_StatusMarried
406015    +          +    -0.12924106229536 * Marital_StatusSingle
406016    +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
406017    +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
406018    +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
406019    +        EducationGraduation  +     0.23015089246655 * EducationMaster
406020    +          +    -0.12585334311068 * Marital_StatusDivorced
406021    +          +    -0.20835502467207 * Marital_StatusMarried
406022    +          +    -0.13839534449368 * Marital_StatusSingle
406023    +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
406024    +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
406025    +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
406026    +        EducationGraduation  +    -0.03608560158257 * EducationMaster
406027    +          +     0.35106363238113 * Marital_StatusDivorced
406028    +          +     -1.3414808583918 * Marital_StatusMarried
406029    +          +     1.40835320798486 * Marital_StatusSingle
406030    +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
406031    +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
406032    +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
406033    +        EducationGraduation  +      0.1746658332011 * EducationMaster
406034    +          +     0.48174546958393 * Marital_StatusDivorced
406035    +          +    -0.41416978858191 * Marital_StatusMarried
406036    +          +    -0.23376801546265 * Marital_StatusSingle
406037    +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
406038    +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
406039    +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
406040    +        EducationGraduation  +     0.68875064631577 * EducationMaster
406041    +          +    -0.67557643774246 * Marital_StatusDivorced
406042    +          +     1.63844045917367 * Marital_StatusMarried
406043    +          +    -0.70320960247699 * Marital_StatusSingle
406044    +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
406045    +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
406046    +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
406047    +        EducationGraduation  +    -0.68011360002443 * EducationMaster
406048    +          +    -0.11371453086883 * Marital_StatusDivorced
406049    +          +    -0.34226997176291 * Marital_StatusMarried
406050    +          +    -1.01568676685754 * Marital_StatusSingle
406051    +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
406052    +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
406053    +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
406054    +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
406055    +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
406056    +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
406057    +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
406058    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
406059    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
406060    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
406061    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
406062    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
406063    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
406064    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
406065    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
406066    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
406067    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
406068    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
406069    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
406070    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
406071    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
406072    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
406073    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
406074    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
406075    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
406076    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
406077    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
406078    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
406079    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
406080    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
406081    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
406082    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
406083    +END;
MPRINT(EM_DIAGRAM):   END;
406084    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
406085    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
406086    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
406087    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
406088    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
406089    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
406090    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
406091    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
406092    +END;
MPRINT(EM_DIAGRAM):   END;
406093    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
406094    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
406095    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
406096    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
406097    +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
406098    +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
406099    +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
406100    +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
406101    +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
406102    +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
406103    +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
406104    +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
406105    +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
406106    +          +    -0.87259051567474 * S_NumDealsPurchases
406107    +          +    -0.36454149529139 * S_NumDistPurchases
406108    +          +     0.12447759925061 * S_NumStorePurchases
406109    +          +    -1.08133487947367 * S_NumWebPurchases
406110    +          +    -0.49882157745454 * S_NumWebVisitsMonth
406111    +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
406112    +        S_RMntFrq  +    -0.01174101172444 * S_Recency
406113    +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
406114    +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
406115    +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
406116    +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
406117    +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
406118    +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
406119    +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
406120    +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
406121    +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
406122    +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
406123    +          +     2.23121497416403 * S_NumDealsPurchases
406124    +          +    -0.48674842191071 * S_NumDistPurchases
406125    +          +     1.77510728607544 * S_NumStorePurchases
406126    +          +     0.14647433155436 * S_NumWebPurchases
406127    +          +    -0.95892686924419 * S_NumWebVisitsMonth
406128    +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
406129    +        S_RMntFrq  +     2.46497777428475 * S_Recency
406130    +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
406131    +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
406132    +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
406133    +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
406134    +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
406135    +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
406136    +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
406137    +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
406138    +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
406139    +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
406140    +          +     0.14338855349611 * S_NumDealsPurchases
406141    +          +    -2.21071010829235 * S_NumDistPurchases
406142    +          +    -0.21795889348002 * S_NumStorePurchases
406143    +          +     1.98825087883535 * S_NumWebPurchases
406144    +          +     1.02482442531149 * S_NumWebVisitsMonth
406145    +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
406146    +        S_RMntFrq  +     -1.0288777281766 * S_Recency
406147    +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
406148    +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
406149    +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
406150    +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
406151    +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
406152    +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
406153    +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
406154    +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
406155    +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
406156    +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
406157    +          +     0.30041205661012 * S_NumDealsPurchases
406158    +          +    -0.63499849986918 * S_NumDistPurchases
406159    +          +    -0.34155713433714 * S_NumStorePurchases
406160    +          +    -1.14183354933936 * S_NumWebPurchases
406161    +          +    -0.42681980262973 * S_NumWebVisitsMonth
406162    +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
406163    +        S_RMntFrq  +     1.25852246467612 * S_Recency
406164    +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
406165    +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
406166    +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
406167    +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
406168    +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
406169    +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
406170    +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
406171    +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
406172    +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
406173    +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
406174    +          +    -0.21237915559831 * S_NumDealsPurchases
406175    +          +     0.48256923764182 * S_NumDistPurchases
406176    +          +    -0.45553093140641 * S_NumStorePurchases
406177    +          +      0.5593655963659 * S_NumWebPurchases
406178    +          +     0.27943768691188 * S_NumWebVisitsMonth
406179    +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
406180    +        S_RMntFrq  +    -1.62796011550484 * S_Recency
406181    +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
406182    +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
406183    +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
406184    +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
406185    +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
406186    +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
406187    +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
406188    +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
406189    +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
406190    +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
406191    +          +     2.38967021388062 * S_NumDealsPurchases
406192    +          +    -0.97722398866481 * S_NumDistPurchases
406193    +          +     1.57612333191312 * S_NumStorePurchases
406194    +          +    -0.75968679115983 * S_NumWebPurchases
406195    +          +    -0.64207187757251 * S_NumWebVisitsMonth
406196    +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
406197    +        S_RMntFrq  +     1.71313869798331 * S_Recency
406198    +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
406199    +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
406200    +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
406201    +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
406202    +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
406203    +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
406204    +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
406205    +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
406206    +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
406207    +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
406208    +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
406209    +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
406210    +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
406211    +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
406212    +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
406213    +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
406214    +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
406215    +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
406216    +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
406217    +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
406218    +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
406219    +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
406220    +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
406221    +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
406222    +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
406223    +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
406224    +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
406225    +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
406226    +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
406227    +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
406228    +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
406229    +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
406230    +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
406231    +        EducationGraduation  +      0.1073450284316 * EducationMaster
406232    +          +     0.96470902298142 * Marital_StatusDivorced
406233    +          +     0.94805959268314 * Marital_StatusMarried
406234    +          +     -0.6523948769616 * Marital_StatusSingle
406235    +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
406236    +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
406237    +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
406238    +        EducationGraduation  +    -1.34927753306064 * EducationMaster
406239    +          +      0.3918249505531 * Marital_StatusDivorced
406240    +          +    -0.00968091979586 * Marital_StatusMarried
406241    +          +     0.84615379885071 * Marital_StatusSingle
406242    +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
406243    +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
406244    +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
406245    +        EducationGraduation  +     -0.8672743321499 * EducationMaster
406246    +          +     1.14335160313191 * Marital_StatusDivorced
406247    +          +     0.50580517192175 * Marital_StatusMarried
406248    +          +     0.17264295020921 * Marital_StatusSingle
406249    +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
406250    +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
406251    +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
406252    +        EducationGraduation  +     1.95818378342783 * EducationMaster
406253    +          +    -0.11238504444225 * Marital_StatusDivorced
406254    +          +    -0.81348274043749 * Marital_StatusMarried
406255    +          +     0.46075415610001 * Marital_StatusSingle
406256    +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
406257    +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
406258    +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
406259    +        EducationGraduation  +     0.08396135672504 * EducationMaster
406260    +          +    -0.46342068701431 * Marital_StatusDivorced
406261    +          +    -0.41667845270204 * Marital_StatusMarried
406262    +          +    -0.47166707496281 * Marital_StatusSingle
406263    +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
406264    +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
406265    +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
406266    +        EducationGraduation  +     0.36656103863186 * EducationMaster
406267    +          +    -0.45376613787812 * Marital_StatusDivorced
406268    +          +     0.01337046049801 * Marital_StatusMarried
406269    +          +    -0.92811489484121 * Marital_StatusSingle
406270    +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
406271    +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
406272    +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
406273    +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
406274    +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
406275    +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
406276    +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
406277    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
406278    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
406279    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
406280    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
406281    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
406282    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
406283    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
406284    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
406285    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
406286    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
406287    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
406288    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
406289    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
406290    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
406291    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
406292    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
406293    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
406294    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
406295    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
406296    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
406297    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
406298    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
406299    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
406300    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
406301    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
406302    +END;
MPRINT(EM_DIAGRAM):   END;
406303    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
406304    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
406305    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
406306    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
406307    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
406308    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
406309    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
406310    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
406311    +END;
MPRINT(EM_DIAGRAM):   END;
406312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
406313    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
406314    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
406315    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
406316    +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
406317    +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
406318    +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
406319    +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
406320    +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
406321    +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
406322    +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
406323    +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
406324    +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
406325    +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
406326    +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
406327    +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
406328    +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
406329    +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
406330    +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
406331    +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
406332    +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
406333    +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
406334    +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
406335    +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
406336    +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
406337    +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
406338    +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
406339    +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
406340    +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
406341    +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
406342    +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
406343    +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
406344    +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
406345    +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
406346    +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
406347    +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
406348    +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
406349    +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
406350    +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
406351    +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
406352    +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
406353    +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
406354    +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
406355    +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
406356    +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
406357    +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
406358    +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
406359    +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
406360    +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
406361    +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
406362    +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
406363    +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
406364    +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
406365    +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
406366    +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
406367    +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
406368    +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
406369    +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
406370    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
406371    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
406372    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
406373    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
406374    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
406375    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
406376    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
406377    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
406378    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
406379    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
406380    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
406381    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
406382    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
406383    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
406384    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
406385    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
406386    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
406387    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
406388    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
406389    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
406390    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
406391    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
406392    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
406393    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
406394    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
406395    +END;
MPRINT(EM_DIAGRAM):   END;
406396    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
406397    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
406398    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
406399    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
406400    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
406401    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
406402    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
406403    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
406404    +END;
MPRINT(EM_DIAGRAM):   END;
406405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
406406    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
406407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
406408    +
406409    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
406410    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
406411    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
406412    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
406413    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
406414    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
406415    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
406416    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
406417    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
406418    +end;
MPRINT(EM_DIAGRAM):   end;
406419    +else do;
MPRINT(EM_DIAGRAM):   else do;
406420    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
406421    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
406422    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
406423    +   end;
MPRINT(EM_DIAGRAM):   end;
406424    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
406425    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
406426    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
406427    +   end;
MPRINT(EM_DIAGRAM):   end;
406428    +   else do;
MPRINT(EM_DIAGRAM):   else do;
406429    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
406430    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
406431    +   end;
MPRINT(EM_DIAGRAM):   end;
406432    +end;
MPRINT(EM_DIAGRAM):   end;
406433    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
406434    +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
406435    +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
406436    +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
406437    +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
406438    +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
406439    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
406440    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
406441    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
406442    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
406443    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
406444    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
406445    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
406446    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
406447    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
406448    +END;
MPRINT(EM_DIAGRAM):   END;
406449    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
406450    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
406451    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
406452    +END;
MPRINT(EM_DIAGRAM):   END;
406453    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
406454    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
406455    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
406456    +END;
MPRINT(EM_DIAGRAM):   END;
406457    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
406458    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
406459    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
406460    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
406461    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
406462    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
406463    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
406464    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
406465    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
406466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
406467    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
406468    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
406469    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
406470    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
406471    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
406472    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
406473    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
406474    +END;
MPRINT(EM_DIAGRAM):   END;
406475    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
406476    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
406477    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
406478    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
406479    +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
406480    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
406481    +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
406482    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
406483    +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
406484    +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
406485    +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
406486    +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
406487    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
406488    +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
406489    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
406490    +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
406491    +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
406492    +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
406493    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
406494    +* Ensmbl13: Average Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Average Posteriors of 3 models;
406495    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
406496    +P_DepVar1 = (
406497    +AutoNeural7_P_DepVar1 +
406498    +AutoNeural9_P_DepVar1 +
406499    +AutoNeural12_P_DepVar1
406500    +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural7_P_DepVar1 + AutoNeural9_P_DepVar1 + 
AutoNeural12_P_DepVar1 )/3;
406501    +P_DepVar0 = (
406502    +AutoNeural7_P_DepVar0 +
406503    +AutoNeural9_P_DepVar0 +
406504    +AutoNeural12_P_DepVar0
406505    +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural7_P_DepVar0 + AutoNeural9_P_DepVar0 + 
AutoNeural12_P_DepVar0 )/3;
406506    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
406507    +* Ensmbl13: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Computing Classification Vars;
406508    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
406509    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
406510    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
406511    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
406512    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
406513    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
406514    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
406515    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
406516    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
406517    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
406518    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
406519    +end;
MPRINT(EM_DIAGRAM):   end;
406520    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
406521    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
406522    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
406523    +end;
MPRINT(EM_DIAGRAM):   end;
406524    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
406525    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
406526    +* Ensmbl13: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Producing Unformatted variable;
406527    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
406528    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
406529    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
406530    +else
406531    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
406532    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
406533    +* Ensmbl13: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Computing _WARN_ Variable;
406534    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
406535    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
406536    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
406537    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
406538    +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
406538   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
406539    +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
406539   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
406540    +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
406540   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
406541    +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
406541   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
406542    +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
406542   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
406543    +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
406543   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
406544    +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
406544   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
406545    +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
406545   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
406546    +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
406546   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
406547    +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
406547   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
406548    +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
406548   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
406549    +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
406549   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
406550    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
406551    +* Ensmbl13: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Computing Residual Vars;
406552    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
406553    +if
406554    +F_DepVar NE '1'
406555    +AND F_DepVar NE '0'
406556    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
406557    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
406558    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
406559    +end;
MPRINT(EM_DIAGRAM):   end;
406560    +else do;
MPRINT(EM_DIAGRAM):   else do;
406561    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
406562    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
406563    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
406564    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
406565    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
406566    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
406567    +END;
MPRINT(EM_DIAGRAM):   END;
406568    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
406569     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL13_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL7_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_DIAGRAM):   quit;
406570     quit;
406571     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl13_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl13_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl13_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl13_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl13_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
406631     filename _pref
406631   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
406632     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
406633     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
406634    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
406635    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
406636    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
406637    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
406638    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
406639    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
406640    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
406641    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
406642    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
406643    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
406644    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
406645    +LENGTH _WARN_ $4
406646    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
406647    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
406648    +
406649    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
406650    +
406651    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
406652    +
406653    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
406654    +
406655    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
406656    +
406657    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
406658    +
406659    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
406660    +
406661    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
406662    +
406663    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
406664    +
406665    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
406666    +
406667    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
406668    +
406669    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
406670    +
406671    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
406672    +
406673    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
406674    +
406675    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
406676    +
406677    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
406678    +
406679    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
406680    +
406681    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
406682    +
406683    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
406684    +
406685    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
406686    +
406687    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
406688    +
406689    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
406690    +
406691    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
406692    +
406693    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
406694    +
406695    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
406696    +
406697    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
406698    +
406699    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
406700    +
406701    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
406702    +
406703    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
406704    +
406705    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
406706    +
406707    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
406708    +
406709    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
406710    +
406711    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
406712    +
406713    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
406714    +
406715    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
406716    +
406717    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
406718    +
406719    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
406720    +
406721    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
406722    +
406723    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
406724    +
406725    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
406726    +
406727    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
406728    +
406729    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
406730    +
406731    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
406732    +
406733    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
406734    +
406735    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
406736    +
406737    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
406738    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
406739    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
406740    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
406741    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
406742    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406743    +end;
MPRINT(EM_DIAGRAM):   end;
406744    +else do;
MPRINT(EM_DIAGRAM):   else do;
406745    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
406746    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
406747    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
406748    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
406749    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
406750    +   end;
MPRINT(EM_DIAGRAM):   end;
406751    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
406752    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
406753    +   end;
MPRINT(EM_DIAGRAM):   end;
406754    +   else do;
MPRINT(EM_DIAGRAM):   else do;
406755    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
406756    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
406757    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406758    +   end;
MPRINT(EM_DIAGRAM):   end;
406759    +end;
MPRINT(EM_DIAGRAM):   end;
406760    +
406761    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
406762    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
406763    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
406764    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
406765    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
406766    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406767    +end;
MPRINT(EM_DIAGRAM):   end;
406768    +else do;
MPRINT(EM_DIAGRAM):   else do;
406769    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
406770    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
406771    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
406772    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
406773    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
406774    +   end;
MPRINT(EM_DIAGRAM):   end;
406775    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
406776    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
406777    +   end;
MPRINT(EM_DIAGRAM):   end;
406778    +   else do;
MPRINT(EM_DIAGRAM):   else do;
406779    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
406780    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
406781    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406782    +   end;
MPRINT(EM_DIAGRAM):   end;
406783    +end;
MPRINT(EM_DIAGRAM):   end;
406784    +
406785    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
406786    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
406787    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
406788    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
406789    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
406790    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406791    +end;
MPRINT(EM_DIAGRAM):   end;
406792    +else do;
MPRINT(EM_DIAGRAM):   else do;
406793    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
406794    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
406795    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
406796    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
406797    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
406798    +   end;
MPRINT(EM_DIAGRAM):   end;
406799    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
406800    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
406801    +   end;
MPRINT(EM_DIAGRAM):   end;
406802    +   else do;
MPRINT(EM_DIAGRAM):   else do;
406803    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
406804    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
406805    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406806    +   end;
MPRINT(EM_DIAGRAM):   end;
406807    +end;
MPRINT(EM_DIAGRAM):   end;
406808    +
406809    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
406810    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
406811    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
406812    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
406813    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
406814    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406815    +end;
MPRINT(EM_DIAGRAM):   end;
406816    +else do;
MPRINT(EM_DIAGRAM):   else do;
406817    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
406818    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
406819    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
406820    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
406821    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
406822    +   end;
MPRINT(EM_DIAGRAM):   end;
406823    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
406824    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
406825    +   end;
MPRINT(EM_DIAGRAM):   end;
406826    +   else do;
MPRINT(EM_DIAGRAM):   else do;
406827    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
406828    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
406829    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406830    +   end;
MPRINT(EM_DIAGRAM):   end;
406831    +end;
MPRINT(EM_DIAGRAM):   end;
406832    +
406833    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
406834    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
406835    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
406836    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
406837    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
406838    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406839    +end;
MPRINT(EM_DIAGRAM):   end;
406840    +else do;
MPRINT(EM_DIAGRAM):   else do;
406841    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
406842    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
406843    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
406844    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
406845    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
406846    +   end;
MPRINT(EM_DIAGRAM):   end;
406847    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
406848    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
406849    +   end;
MPRINT(EM_DIAGRAM):   end;
406850    +   else do;
MPRINT(EM_DIAGRAM):   else do;
406851    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
406852    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
406853    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406854    +   end;
MPRINT(EM_DIAGRAM):   end;
406855    +end;
MPRINT(EM_DIAGRAM):   end;
406856    +
406857    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
406858    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
406859    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
406860    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
406861    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
406862    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406863    +end;
MPRINT(EM_DIAGRAM):   end;
406864    +else do;
MPRINT(EM_DIAGRAM):   else do;
406865    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
406866    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
406867    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
406868    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
406869    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
406870    +   end;
MPRINT(EM_DIAGRAM):   end;
406871    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
406872    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
406873    +   end;
MPRINT(EM_DIAGRAM):   end;
406874    +   else do;
MPRINT(EM_DIAGRAM):   else do;
406875    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
406876    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
406877    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406878    +   end;
MPRINT(EM_DIAGRAM):   end;
406879    +end;
MPRINT(EM_DIAGRAM):   end;
406880    +
406881    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
406882    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
406883    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
406884    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
406885    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
406886    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406887    +end;
MPRINT(EM_DIAGRAM):   end;
406888    +else do;
MPRINT(EM_DIAGRAM):   else do;
406889    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
406890    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
406891    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
406892    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
406893    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
406894    +   end;
MPRINT(EM_DIAGRAM):   end;
406895    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
406896    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
406897    +   end;
MPRINT(EM_DIAGRAM):   end;
406898    +   else do;
MPRINT(EM_DIAGRAM):   else do;
406899    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
406900    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
406901    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406902    +   end;
MPRINT(EM_DIAGRAM):   end;
406903    +end;
MPRINT(EM_DIAGRAM):   end;
406904    +
406905    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
406906    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
406907    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
406908    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
406909    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
406910    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
406911    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
406912    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
406913    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
406914    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
406915    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
406916    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
406917    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
406918    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406919    +end;
MPRINT(EM_DIAGRAM):   end;
406920    +else do;
MPRINT(EM_DIAGRAM):   else do;
406921    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
406922    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
406923    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
406924    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
406925    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
406926    +   end;
MPRINT(EM_DIAGRAM):   end;
406927    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
406928    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
406929    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
406930    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
406931    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
406932    +   end;
MPRINT(EM_DIAGRAM):   end;
406933    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
406934    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
406935    +   end;
MPRINT(EM_DIAGRAM):   end;
406936    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
406937    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
406938    +   end;
MPRINT(EM_DIAGRAM):   end;
406939    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
406940    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
406941    +   end;
MPRINT(EM_DIAGRAM):   end;
406942    +   else do;
MPRINT(EM_DIAGRAM):   else do;
406943    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
406944    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
406945    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
406946    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
406947    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
406948    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406949    +   end;
MPRINT(EM_DIAGRAM):   end;
406950    +end;
MPRINT(EM_DIAGRAM):   end;
406951    +
406952    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
406953    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
406954    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
406955    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
406956    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
406957    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
406958    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
406959    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
406960    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
406961    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
406962    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
406963    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
406964    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
406965    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
406966    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
406967    +end;
MPRINT(EM_DIAGRAM):   end;
406968    +else do;
MPRINT(EM_DIAGRAM):   else do;
406969    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
406970    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
406971    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
406972    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
406973    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
406974    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
406975    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
406976    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
406977    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
406978    +         end;
MPRINT(EM_DIAGRAM):   end;
406979    +         else do;
MPRINT(EM_DIAGRAM):   else do;
406980    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
406981    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
406982    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
406983    +            end;
MPRINT(EM_DIAGRAM):   end;
406984    +         end;
MPRINT(EM_DIAGRAM):   end;
406985    +      end;
MPRINT(EM_DIAGRAM):   end;
406986    +      else do;
MPRINT(EM_DIAGRAM):   else do;
406987    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
406988    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
406989    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
406990    +         end;
MPRINT(EM_DIAGRAM):   end;
406991    +      end;
MPRINT(EM_DIAGRAM):   end;
406992    +   end;
MPRINT(EM_DIAGRAM):   end;
406993    +   else do;
MPRINT(EM_DIAGRAM):   else do;
406994    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
406995    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
406996    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
406997    +      end;
MPRINT(EM_DIAGRAM):   end;
406998    +      else do;
MPRINT(EM_DIAGRAM):   else do;
406999    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
407000    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
407001    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
407002    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
407003    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
407004    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
407005    +         end;
MPRINT(EM_DIAGRAM):   end;
407006    +      end;
MPRINT(EM_DIAGRAM):   end;
407007    +   end;
MPRINT(EM_DIAGRAM):   end;
407008    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
407009    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
407010    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
407011    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
407012    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
407013    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407014    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407015    +   end;
MPRINT(EM_DIAGRAM):   end;
407016    +end;
MPRINT(EM_DIAGRAM):   end;
407017    +
407018    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407019    +*** Checking missing input Interval
407020    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
407021    +
407022    +IF NMISS(
407023    +   AcceptedCmpTotal ,
407024    +   Age ,
407025    +   Frq ,
407026    +   Income ,
407027    +   Kidhome ,
407028    +   Mnt ,
407029    +   MntFishProducts ,
407030    +   MntFruits ,
407031    +   MntGoldProds ,
407032    +   MntMeatProducts ,
407033    +   MntSweetProducts ,
407034    +   MntWines ,
407035    +   MonthsAsCustomer ,
407036    +   NumCatalogPurchases ,
407037    +   NumDealsPurchases ,
407038    +   NumDistPurchases ,
407039    +   NumStorePurchases ,
407040    +   NumWebPurchases ,
407041    +   NumWebVisitsMonth ,
407042    +   RFMstat ,
407043    +   RMntFrq ,
407044    +   Recency ,
407045    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
407046    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
407047    +
407048    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407049    +END;
MPRINT(EM_DIAGRAM):   END;
407050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407051    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
407052    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407053    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
407054    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
407055    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
407056    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
407057    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
407058    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
407059    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
407060    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
407061    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
407062    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
407063    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
407064    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
407065    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
407066    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
407067    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
407068    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
407069    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
407070    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
407071    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
407072    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
407073    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
407074    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
407075    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
407076    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
407077    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
407078    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
407079    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
407080    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
407081    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
407082    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
407083    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
407084    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
407085    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
407086    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
407087    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
407088    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
407089    +END;
MPRINT(EM_DIAGRAM):   END;
407090    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
407091    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
407092    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
407093    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
407094    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
407095    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
407096    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
407097    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
407098    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
407099    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
407100    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
407101    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
407102    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
407103    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
407104    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
407105    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
407106    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
407107    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
407108    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
407109    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
407110    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
407111    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
407112    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
407113    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
407114    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
407115    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
407116    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
407117    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
407118    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
407119    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
407120    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
407121    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
407122    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
407123    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
407124    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
407125    +   ELSE S_NumCatalogPurchases
407126    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
407127    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
407128    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
407129    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
407130    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
407131    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
407132    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
407133    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
407134    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
407135    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
407136    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
407137    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
407138    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
407139    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
407140    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
407141    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
407142    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
407143    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
407144    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
407145    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
407146    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
407147    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
407148    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
407149    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
407150    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
407151    +END;
MPRINT(EM_DIAGRAM):   END;
407152    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407153    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
407154    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407155    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407156    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
407157    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407158    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407159    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
407160    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407161    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
407162    +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
407163    +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
407164    +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
407165    +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
407166    +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
407167    +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
407168    +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
407169    +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
407170    +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
407171    +          +     0.09708841024031 * S_NumDealsPurchases
407172    +          +    -0.29075561032014 * S_NumDistPurchases
407173    +          +    -0.14495394259873 * S_NumStorePurchases
407174    +          +     0.11890705145732 * S_NumWebPurchases
407175    +          +    -0.16954189911344 * S_NumWebVisitsMonth
407176    +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
407177    +        S_RMntFrq  +     0.17150719398884 * S_Recency
407178    +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
407179    +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
407180    +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
407181    +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
407182    +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
407183    +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
407184    +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
407185    +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
407186    +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
407187    +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
407188    +          +     0.16274478997892 * S_NumDealsPurchases
407189    +          +     0.03966958784582 * S_NumDistPurchases
407190    +          +    -0.04714110726598 * S_NumStorePurchases
407191    +          +    -0.02124229528082 * S_NumWebPurchases
407192    +          +     0.29753299776832 * S_NumWebVisitsMonth
407193    +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
407194    +        S_RMntFrq  +     -0.3340129986623 * S_Recency
407195    +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
407196    +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
407197    +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
407198    +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
407199    +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
407200    +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
407201    +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
407202    +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
407203    +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
407204    +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
407205    +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
407206    +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
407207    +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
407208    +        EducationGraduation  +     0.00619669837452 * EducationMaster
407209    +          +    -0.05037639679806 * Marital_StatusDivorced
407210    +          +     0.28781968727878 * Marital_StatusMarried
407211    +          +    -0.20382417074384 * Marital_StatusSingle
407212    +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
407213    +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
407214    +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
407215    +        EducationGraduation  +    -0.06952670554019 * EducationMaster
407216    +          +     0.06970969219123 * Marital_StatusDivorced
407217    +          +    -0.15787475744986 * Marital_StatusMarried
407218    +          +     0.14345344072192 * Marital_StatusSingle
407219    +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
407220    +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
407221    +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
407222    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
407223    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
407224    +END;
MPRINT(EM_DIAGRAM):   END;
407225    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
407226    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
407227    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
407228    +END;
MPRINT(EM_DIAGRAM):   END;
407229    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407230    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
407231    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407232    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
407233    +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
407234    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
407235    +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
407236    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
407237    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
407238    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
407239    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
407240    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
407241    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
407242    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
407243    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
407244    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
407245    +END;
MPRINT(EM_DIAGRAM):   END;
407246    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
407247    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
407248    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
407249    +END;
MPRINT(EM_DIAGRAM):   END;
407250    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
407251    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
407252    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
407253    +END;
MPRINT(EM_DIAGRAM):   END;
407254    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407255    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
407256    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
407257    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
407258    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
407259    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
407260    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
407261    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
407262    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
407263    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
407264    +END;
MPRINT(EM_DIAGRAM):   END;
407265    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
407266    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
407267    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
407268    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
407269     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
407270     quit;
407271     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
407272     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
407273     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
407274     retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
407275     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
407276     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407277     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
407278     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407279     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407280     proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME 
CREATOR);
407281     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407282     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407283     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
407284     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
407285     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
407286     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

407287     proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
407288     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

407289     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
407290     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407291     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

407292     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
407293     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
407294     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407295     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407296     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
407297     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
407297   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.

407298     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407299     proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
407300     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL13_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL13_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

407301     filename _pref
407301   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
407302     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
407303     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
407304    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
407305    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
407306    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
407307    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
407308    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
407309    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
407310     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
407311     quit;
407312     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
407313     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
407314     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
407315     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
407316     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
407317     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

407318     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
407319     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407320     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407321     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
407322     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407323     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407324     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
407325     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
407326     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
407327     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407328     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
407329     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

407330     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
407331     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407332     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407333     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
407334     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
407335     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407336     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

407337     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
407338     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
407338   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

407339     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407340     proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
407341     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL13_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL13_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407342     filename _pref
407342   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
407343     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
407344     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
407345    +
407346    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
407347    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
407347   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
407348    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
407349    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
407350    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
407351    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
407352    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
407353     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
407354     quit;
407355     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
407356     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
407357     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
407358     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
407359     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
407360     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407361     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
407362     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407363     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

407364     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
407365     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407366     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407367     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
407368     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
407369     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
407370     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407371     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
407372     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407373     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
407374     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407375     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407376     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
407377     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
407378     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407379     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407380     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
407381     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
407381   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

407382     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407383     proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
407384     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL13_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL13_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

407385     filename _pref
407385   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
407386     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
407387     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
407388    +
407389    +
407390    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
407391    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
407392    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
407393    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
407394    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
407395    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
407396    +
407397    +
407398    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
407399    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
407400    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
407401    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
407402    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
407403    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
407404    +
407405    +
407406    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
407407    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
407408    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
407409    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
407410    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
407411    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
407412    +
407413    +
407414    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
407415    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
407416    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
407417    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
407418    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
407419    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
407420    +
407421    +
407422    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
407423    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
407424    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
407425    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
407426    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
407427    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
407428    +
407429    +
407430    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
407431    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
407432    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
407433    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
407434    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
407435    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
407436    +
407437    +
407438    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
407439    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
407440    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
407441    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
407442    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
407443    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
407444    +
407445    +
407446    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
407447    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
407448    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
407449    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
407450    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
407451    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
407452    +if
407453    +_FILTERNORM1 not in ( '.')
407454    + and
407455    +_FILTERNORM2 not in ( '.')
407456    + and
407457    +_FILTERNORM3 not in ( '.')
407458    + and
407459    +_FILTERNORM4 not in ( '.')
407460    + and
407461    +_FILTERNORM5 not in ( '.')
407462    + and
407463    +_FILTERNORM6 not in ( '.')
407464    + and
407465    +_FILTERNORM7 not in ( ' ')
407466    + and
407467    +_FILTERNORM8 not in ( ' ')
407468    +and
407469    +( Dt_Customer ne .)
407470    +and ( Income ne . and (Income<=107000))
407471    +and ( Kidhome ne .)
407472    +and ( MntFishProducts ne .)
407473    +and ( MntFruits ne .)
407474    +and ( MntGoldProds ne .)
407475    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
407476    +and ( MntSweetProducts ne .)
407477    +and ( MntWines ne .)
407478    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
407479    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
407480    +and ( NumStorePurchases ne .)
407481    +and ( NumWebPurchases ne .)
407482    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
407483    +and ( Recency ne .)
407484    +and ( Teenhome ne .)
407485    +and ( Year_Birth ne .)
407486    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
407487    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
407488    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
407489    +end;
MPRINT(EM_DIAGRAM):   end;
407490    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
407491    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
407492     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
407493     quit;
407494     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
407495     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
407496     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
407497     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
407498     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
407499     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407500     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
407501     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407502     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407503     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
407504     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407505     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407506     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
407507     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
407508     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
407509     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

407510     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
407511     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

407512     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
407513     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407514     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407515     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
407516     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
407517     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
407518     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407519     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
407520     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
407520   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

407521     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

407522     proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
407523     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL13_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL13_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407524     %macro varDept(fcmpdata=,id=);
407525     %global nobs&id scoreFlag&id;
407526     %let scoreFlag&id = 0;
407527     %if &id=1 or ^&fcmpStart %then %do;
407528     proc sort data=&fcmpdata out=_temp&id nodupkey;
407529     by NAME;
407530     where id=&id and LHS in( %let j=1;
407531     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
407532     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
407533     "&var" %let j = %eval(&j+1);
407534     %end;
407535     );
407536     run;
407537     %let dsid = %sysfunc(open(_temp&id));
407538     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
407539     %let dsid = %sysfunc(close(&dsid));
407540     %if &&nobs&id %then %do;
407541     %let scoreFlag&id = 1;
407542     %let fcmpStart = 1;
407543     %end;
407544     %else %let fcmpStart = 0;
407545     %end;
407546     %else %do;
407547     proc sort data=&fcmpdata out=_tempid;
407548     where id=&id;
407549     by LHS;
407550     run;
407551     %let dsid = %sysfunc(open(_tempid));
407552     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
407553     %let dsid = %sysfunc(close(&dsid));
407554     %if ^&&nobs&id %then %do;
407555     proc datasets lib=work nolist;
407556     delete _tempid;
407557     run;
407558     quit;
407559     %end;
407560     %else %do;
407561     data _tempAll;
407562     set %let j=%eval(&id-1);
407563     %do x=1 %to &j;
407564     %if &&nobs&x %then %do;
407565     _temp&x %end;
407566     %end;
407567     ;
407568     run;
407569     proc sql;
407570     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
407570   ! work._tempid p2 where p.name=p2.lhs;
407571     quit;
407572     data _temp&id;
407573     set _temp&id;
407574     where LHS ne '' and NAME ne '' and Node ne '';
407575     run;
407576     proc datasets lib=work nolist;
407577     delete _tempAll;
407578     run;
407579     %let dsid = %sysfunc(open(_temp&id));
407580     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
407581     %let dsid = %sysfunc(close(&dsid));
407582     %if ^&&nobs&id %then %do;
407583     proc datasets lib=work nolist;
407584     delete _temp&id;
407585     run;
407586     quit;
407587     %end;
407588     %else %do;
407589     %let scoreFlag&id = 1;
407590     data _temp&id;
407591     set _temp&id;
407592     where LHS ne NAME and node ne '';
407593     run;
407594     %let dsid = %sysfunc(open(_temp&id));
407595     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
407596     %let dsid = %sysfunc(close(&dsid));
407597     %if ^&&nobs&id %then %do;
407598     proc datasets lib=work nolist;
407599     delete _temp&id;
407600     run;
407601     quit;
407602     %end;
407603     %else %do;
407604     proc sort data=_temp&id nodupkey;
407605     by LHS NAME;
407606     run;
407607     %end;
407608     %end;
407609     %end;
407610     %end;
407611     %mend varDept;
407612     %macro optCode(outdata=fcmpdata);
407613     %global fcmpStart;
407614     %let fcmpStart = 0;
407615     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
407616     %let NumNodes=9;
407617     %do k=1 %to &NumNodes;
407618     %vardept(fcmpdata=&outdata, id=&k);
407619     %end;
407620     %mend optCode;
407621     %optcode(outData=EMWS8.Ensmbl13_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 140 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

407622     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
407623     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
407624     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
407625     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

407626     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
407627     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
407628     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
407629     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407630     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
407631     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
407631   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

407632     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407633     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
407634     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
407635     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

407636     filename _pref
407636   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
407637     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
407638     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
407639    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
407640    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
407641    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
407642    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
407643    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
407644    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
407645    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
407646    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
407647    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
407648    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
407649    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
407650    +LENGTH _WARN_ $4
407651    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
407652    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
407653    +
407654    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
407655    +
407656    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
407657    +
407658    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
407659    +
407660    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
407661    +
407662    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
407663    +
407664    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
407665    +
407666    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
407667    +
407668    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
407669    +
407670    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
407671    +
407672    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
407673    +
407674    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
407675    +
407676    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
407677    +
407678    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
407679    +
407680    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
407681    +
407682    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
407683    +
407684    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
407685    +
407686    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
407687    +
407688    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
407689    +
407690    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
407691    +
407692    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
407693    +
407694    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
407695    +
407696    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
407697    +
407698    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
407699    +
407700    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
407701    +
407702    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
407703    +
407704    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
407705    +
407706    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
407707    +
407708    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
407709    +
407710    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
407711    +
407712    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
407713    +
407714    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
407715    +
407716    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
407717    +
407718    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
407719    +
407720    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
407721    +
407722    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
407723    +
407724    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
407725    +
407726    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
407727    +
407728    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
407729    +
407730    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
407731    +
407732    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
407733    +
407734    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
407735    +
407736    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
407737    +
407738    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
407739    +
407740    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
407741    +
407742    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
407743    +
407744    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
407745    +
407746    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
407747    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
407748    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
407749    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
407750    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407751    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407752    +end;
MPRINT(EM_DIAGRAM):   end;
407753    +else do;
MPRINT(EM_DIAGRAM):   else do;
407754    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407755    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
407756    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407757    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407758    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
407759    +   end;
MPRINT(EM_DIAGRAM):   end;
407760    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407761    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
407762    +   end;
MPRINT(EM_DIAGRAM):   end;
407763    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407764    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
407765    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407766    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407767    +   end;
MPRINT(EM_DIAGRAM):   end;
407768    +end;
MPRINT(EM_DIAGRAM):   end;
407769    +
407770    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
407771    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
407772    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
407773    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
407774    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407775    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407776    +end;
MPRINT(EM_DIAGRAM):   end;
407777    +else do;
MPRINT(EM_DIAGRAM):   else do;
407778    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407779    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
407780    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407781    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407782    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
407783    +   end;
MPRINT(EM_DIAGRAM):   end;
407784    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407785    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
407786    +   end;
MPRINT(EM_DIAGRAM):   end;
407787    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407788    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
407789    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407790    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407791    +   end;
MPRINT(EM_DIAGRAM):   end;
407792    +end;
MPRINT(EM_DIAGRAM):   end;
407793    +
407794    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
407795    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
407796    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
407797    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
407798    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407799    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407800    +end;
MPRINT(EM_DIAGRAM):   end;
407801    +else do;
MPRINT(EM_DIAGRAM):   else do;
407802    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407803    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
407804    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407805    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407806    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
407807    +   end;
MPRINT(EM_DIAGRAM):   end;
407808    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407809    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
407810    +   end;
MPRINT(EM_DIAGRAM):   end;
407811    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407812    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
407813    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407814    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407815    +   end;
MPRINT(EM_DIAGRAM):   end;
407816    +end;
MPRINT(EM_DIAGRAM):   end;
407817    +
407818    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
407819    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
407820    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
407821    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
407822    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407823    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407824    +end;
MPRINT(EM_DIAGRAM):   end;
407825    +else do;
MPRINT(EM_DIAGRAM):   else do;
407826    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407827    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
407828    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407829    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407830    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
407831    +   end;
MPRINT(EM_DIAGRAM):   end;
407832    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407833    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
407834    +   end;
MPRINT(EM_DIAGRAM):   end;
407835    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407836    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
407837    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407838    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407839    +   end;
MPRINT(EM_DIAGRAM):   end;
407840    +end;
MPRINT(EM_DIAGRAM):   end;
407841    +
407842    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
407843    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
407844    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
407845    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
407846    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407847    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407848    +end;
MPRINT(EM_DIAGRAM):   end;
407849    +else do;
MPRINT(EM_DIAGRAM):   else do;
407850    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407851    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
407852    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407853    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407854    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
407855    +   end;
MPRINT(EM_DIAGRAM):   end;
407856    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407857    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
407858    +   end;
MPRINT(EM_DIAGRAM):   end;
407859    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407860    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
407861    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407862    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407863    +   end;
MPRINT(EM_DIAGRAM):   end;
407864    +end;
MPRINT(EM_DIAGRAM):   end;
407865    +
407866    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
407867    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
407868    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
407869    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
407870    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407871    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407872    +end;
MPRINT(EM_DIAGRAM):   end;
407873    +else do;
MPRINT(EM_DIAGRAM):   else do;
407874    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407875    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
407876    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407877    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
407878    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
407879    +   end;
MPRINT(EM_DIAGRAM):   end;
407880    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
407881    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
407882    +   end;
MPRINT(EM_DIAGRAM):   end;
407883    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407884    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
407885    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407886    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407887    +   end;
MPRINT(EM_DIAGRAM):   end;
407888    +end;
MPRINT(EM_DIAGRAM):   end;
407889    +
407890    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
407891    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
407892    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
407893    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
407894    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407895    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407896    +end;
MPRINT(EM_DIAGRAM):   end;
407897    +else do;
MPRINT(EM_DIAGRAM):   else do;
407898    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
407899    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
407900    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407901    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
407902    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
407903    +   end;
MPRINT(EM_DIAGRAM):   end;
407904    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
407905    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
407906    +   end;
MPRINT(EM_DIAGRAM):   end;
407907    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407908    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
407909    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407910    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407911    +   end;
MPRINT(EM_DIAGRAM):   end;
407912    +end;
MPRINT(EM_DIAGRAM):   end;
407913    +
407914    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
407915    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
407916    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
407917    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
407918    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
407919    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
407920    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
407921    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
407922    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
407923    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
407924    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
407925    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
407926    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407927    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407928    +end;
MPRINT(EM_DIAGRAM):   end;
407929    +else do;
MPRINT(EM_DIAGRAM):   else do;
407930    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
407931    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
407932    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407933    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
407934    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
407935    +   end;
MPRINT(EM_DIAGRAM):   end;
407936    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
407937    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
407938    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
407939    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
407940    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
407941    +   end;
MPRINT(EM_DIAGRAM):   end;
407942    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
407943    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
407944    +   end;
MPRINT(EM_DIAGRAM):   end;
407945    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
407946    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
407947    +   end;
MPRINT(EM_DIAGRAM):   end;
407948    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
407949    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
407950    +   end;
MPRINT(EM_DIAGRAM):   end;
407951    +   else do;
MPRINT(EM_DIAGRAM):   else do;
407952    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
407953    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
407954    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
407955    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
407956    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
407957    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407958    +   end;
MPRINT(EM_DIAGRAM):   end;
407959    +end;
MPRINT(EM_DIAGRAM):   end;
407960    +
407961    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
407962    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
407963    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
407964    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
407965    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
407966    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
407967    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
407968    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
407969    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
407970    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
407971    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
407972    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
407973    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
407974    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
407975    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
407976    +end;
MPRINT(EM_DIAGRAM):   end;
407977    +else do;
MPRINT(EM_DIAGRAM):   else do;
407978    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
407979    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
407980    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
407981    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
407982    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
407983    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
407984    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
407985    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
407986    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
407987    +         end;
MPRINT(EM_DIAGRAM):   end;
407988    +         else do;
MPRINT(EM_DIAGRAM):   else do;
407989    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
407990    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
407991    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
407992    +            end;
MPRINT(EM_DIAGRAM):   end;
407993    +         end;
MPRINT(EM_DIAGRAM):   end;
407994    +      end;
MPRINT(EM_DIAGRAM):   end;
407995    +      else do;
MPRINT(EM_DIAGRAM):   else do;
407996    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
407997    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
407998    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
407999    +         end;
MPRINT(EM_DIAGRAM):   end;
408000    +      end;
MPRINT(EM_DIAGRAM):   end;
408001    +   end;
MPRINT(EM_DIAGRAM):   end;
408002    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408003    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
408004    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
408005    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
408006    +      end;
MPRINT(EM_DIAGRAM):   end;
408007    +      else do;
MPRINT(EM_DIAGRAM):   else do;
408008    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
408009    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
408010    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
408011    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
408012    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
408013    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
408014    +         end;
MPRINT(EM_DIAGRAM):   end;
408015    +      end;
MPRINT(EM_DIAGRAM):   end;
408016    +   end;
MPRINT(EM_DIAGRAM):   end;
408017    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
408018    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
408019    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
408020    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
408021    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
408022    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408023    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408024    +   end;
MPRINT(EM_DIAGRAM):   end;
408025    +end;
MPRINT(EM_DIAGRAM):   end;
408026    +
408027    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408028    +*** Checking missing input Interval
408029    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
408030    +
408031    +IF NMISS(
408032    +   AcceptedCmpTotal ,
408033    +   Age ,
408034    +   Frq ,
408035    +   Income ,
408036    +   Kidhome ,
408037    +   Mnt ,
408038    +   MntFishProducts ,
408039    +   MntFruits ,
408040    +   MntGoldProds ,
408041    +   MntMeatProducts ,
408042    +   MntSweetProducts ,
408043    +   MntWines ,
408044    +   MonthsAsCustomer ,
408045    +   NumCatalogPurchases ,
408046    +   NumDealsPurchases ,
408047    +   NumDistPurchases ,
408048    +   NumStorePurchases ,
408049    +   NumWebPurchases ,
408050    +   NumWebVisitsMonth ,
408051    +   RFMstat ,
408052    +   RMntFrq ,
408053    +   Recency ,
408054    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
408055    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
408056    +
408057    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408058    +END;
MPRINT(EM_DIAGRAM):   END;
408059    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408060    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
408061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408062    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
408063    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
408064    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
408065    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
408066    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
408067    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
408068    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
408069    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
408070    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
408071    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
408072    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
408073    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
408074    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
408075    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
408076    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
408077    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
408078    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
408079    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
408080    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
408081    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
408082    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
408083    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
408084    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
408085    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
408086    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
408087    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
408088    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
408089    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
408090    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
408091    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
408092    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
408093    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
408094    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
408095    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
408096    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
408097    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
408098    +END;
MPRINT(EM_DIAGRAM):   END;
408099    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
408100    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
408101    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
408102    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
408103    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
408104    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
408105    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
408106    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
408107    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
408108    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
408109    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
408110    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
408111    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
408112    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
408113    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
408114    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
408115    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
408116    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
408117    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
408118    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
408119    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
408120    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
408121    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
408122    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
408123    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
408124    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
408125    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
408126    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
408127    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
408128    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
408129    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
408130    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
408131    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
408132    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
408133    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
408134    +   ELSE S_NumCatalogPurchases
408135    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
408136    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
408137    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
408138    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
408139    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
408140    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
408141    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
408142    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
408143    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
408144    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
408145    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
408146    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
408147    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
408148    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
408149    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
408150    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
408151    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
408152    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
408153    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
The SAS System

MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
408154    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
408155    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
408156    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
408157    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
408158    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
408159    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
408160    +END;
MPRINT(EM_DIAGRAM):   END;
408161    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408162    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
408163    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408164    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408165    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
408166    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408167    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408168    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
408169    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408170    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
408171    +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
408172    +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
408173    +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
408174    +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
408175    +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
408176    +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
408177    +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
408178    +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
408179    +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
408180    +          +    -1.14704878034134 * S_NumDealsPurchases
408181    +          +    -0.17763404274659 * S_NumDistPurchases
408182    +          +     0.08894400267969 * S_NumStorePurchases
408183    +          +     0.59283747891957 * S_NumWebPurchases
408184    +          +     0.85268274682505 * S_NumWebVisitsMonth
408185    +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
408186    +        S_RMntFrq  +    -1.22871580072103 * S_Recency
408187    +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
408188    +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
408189    +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
408190    +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
408191    +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
408192    +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
408193    +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
408194    +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
408195    +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
408196    +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
408197    +          +    -0.80841566068716 * S_NumDealsPurchases
408198    +          +    -0.17995640033768 * S_NumDistPurchases
408199    +          +     0.00713417460936 * S_NumStorePurchases
408200    +          +     0.57881024323076 * S_NumWebPurchases
408201    +          +    -1.35134224257365 * S_NumWebVisitsMonth
408202    +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
408203    +        S_RMntFrq  +     1.16978656262499 * S_Recency
408204    +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
408205    +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
408206    +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
408207    +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
408208    +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
408209    +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
408210    +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
408211    +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
408212    +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
408213    +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
408214    +          +     0.57891364118717 * S_NumDealsPurchases
408215    +          +    -0.31024556838688 * S_NumDistPurchases
408216    +          +    -1.48708542986704 * S_NumStorePurchases
408217    +          +    -0.93009875249206 * S_NumWebPurchases
408218    +          +     2.01900039122935 * S_NumWebVisitsMonth
408219    +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
408220    +        S_RMntFrq  +    -2.30414631760388 * S_Recency
408221    +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
408222    +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
408223    +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
408224    +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
408225    +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
408226    +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
408227    +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
408228    +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
408229    +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
408230    +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
408231    +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
408232    +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
408233    +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
408234    +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
408235    +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
408236    +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
408237    +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
408238    +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
408239    +        EducationGraduation  +    -0.68730596079478 * EducationMaster
408240    +          +     0.55883606830033 * Marital_StatusDivorced
408241    +          +    -0.54530037567066 * Marital_StatusMarried
408242    +          +    -0.52994736075753 * Marital_StatusSingle
408243    +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
408244    +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
408245    +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
408246    +        EducationGraduation  +     0.31201349236277 * EducationMaster
408247    +          +    -1.07368484057033 * Marital_StatusDivorced
408248    +          +     2.73313504711262 * Marital_StatusMarried
408249    +          +    -2.18530462876058 * Marital_StatusSingle
408250    +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
408251    +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
408252    +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
408253    +        EducationGraduation  +    -0.35544166792219 * EducationMaster
408254    +          +     0.49993144243043 * Marital_StatusDivorced
408255    +          +    -0.38953339116829 * Marital_StatusMarried
408256    +          +    -0.10836287319942 * Marital_StatusSingle
408257    +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
408258    +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
408259    +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
408260    +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
408261    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
408262    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
408263    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
408264    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
408265    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
408266    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
408267    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
408268    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
408269    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
408270    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
408271    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
408272    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
408273    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
408274    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
408275    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
408276    +END;
MPRINT(EM_DIAGRAM):   END;
408277    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
408278    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
408279    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
408280    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
408281    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
408282    +END;
MPRINT(EM_DIAGRAM):   END;
408283    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408284    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
408285    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408286    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
408287    +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
408288    +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
408289    +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
408290    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
408291    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
408292    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
408293    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
408294    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
408295    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
408296    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
408297    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
408298    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
408299    +END;
MPRINT(EM_DIAGRAM):   END;
408300    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
408301    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
408302    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
408303    +END;
MPRINT(EM_DIAGRAM):   END;
408304    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
408305    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
408306    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
408307    +END;
MPRINT(EM_DIAGRAM):   END;
408308    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408309    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
408310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
408311    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
408312    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
408313    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
408314    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
408315    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
408316    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
408317    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
408318    +END;
MPRINT(EM_DIAGRAM):   END;
408319    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
408320    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
408321    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
408322    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
408323     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
408324     quit;
408325     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
408326     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
408327     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
408328     retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
408329     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
408330     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408331     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
408332     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408333     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408334     proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
408335     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408336     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

408337     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
408338     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
408339     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
408340     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408341     proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
408342     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

408343     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
408344     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408345     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408346     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
408347     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
408348     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408349     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408350     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
408351     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
408351   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.

408352     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

408353     proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
408354     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL13_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL13_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408355     filename _pref
408355   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
408356     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
408357     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
408358    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
408359    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
408360    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
408361    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
408362    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
408363    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
408364     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
408365     quit;
408366     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
408367     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
408368     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
408369     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
408370     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
408371     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408372     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
408373     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408374     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408375     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
408376     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408377     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

408378     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
408379     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
408380     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
408381     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408382     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
408383     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

408384     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
408385     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408386     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408387     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
408388     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
408389     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408390     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408391     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
408392     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
408392   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

408393     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408394     proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
408395     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL13_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL13_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

408396     filename _pref
408396   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
408397     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
408398     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
408399    +
408400    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
408401    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
408401   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
408402    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
408403    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
408404    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
408405    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
408406    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
408407     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
408408     quit;
408409     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
408410     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
408411     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
408412     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
408413     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
408414     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408415     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
408416     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408417     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408418     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
408419     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408420     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408421     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
408422     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
408423     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
408424     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

408425     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
408426     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408427     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
408428     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408429     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408430     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
408431     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
408432     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408433     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408434     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
408435     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
408435   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

408436     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408437     proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
408438     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL13_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL13_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408439     filename _pref
408439   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
408440     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
408441     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
408442    +
408443    +
408444    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
408445    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
408446    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
408447    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
408448    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
408449    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
408450    +
408451    +
408452    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
408453    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
408454    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
408455    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
408456    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
408457    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
408458    +
408459    +
408460    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
408461    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
408462    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
408463    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
408464    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
408465    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
408466    +
408467    +
408468    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
408469    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
408470    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
408471    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
408472    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
408473    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
408474    +
408475    +
408476    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
408477    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
408478    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
408479    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
408480    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
408481    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
408482    +
408483    +
408484    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
408485    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
408486    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
408487    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
408488    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
408489    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
408490    +
408491    +
408492    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
408493    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
408494    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
408495    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
408496    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
408497    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
408498    +
408499    +
408500    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
408501    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
408502    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
408503    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
408504    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
408505    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
408506    +if
408507    +_FILTERNORM1 not in ( '.')
408508    + and
408509    +_FILTERNORM2 not in ( '.')
408510    + and
408511    +_FILTERNORM3 not in ( '.')
408512    + and
408513    +_FILTERNORM4 not in ( '.')
408514    + and
408515    +_FILTERNORM5 not in ( '.')
408516    + and
408517    +_FILTERNORM6 not in ( '.')
408518    + and
408519    +_FILTERNORM7 not in ( ' ')
408520    + and
408521    +_FILTERNORM8 not in ( ' ')
408522    +and
408523    +( Dt_Customer ne .)
408524    +and ( Income ne . and (Income<=107000))
408525    +and ( Kidhome ne .)
408526    +and ( MntFishProducts ne .)
408527    +and ( MntFruits ne .)
408528    +and ( MntGoldProds ne .)
408529    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
408530    +and ( MntSweetProducts ne .)
408531    +and ( MntWines ne .)
408532    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
408533    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
408534    +and ( NumStorePurchases ne .)
408535    +and ( NumWebPurchases ne .)
408536    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
408537    +and ( Recency ne .)
408538    +and ( Teenhome ne .)
408539    +and ( Year_Birth ne .)
408540    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
408541    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
408542    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
408543    +end;
MPRINT(EM_DIAGRAM):   end;
408544    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
408545    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
408546     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
408547     quit;
408548     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
408549     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
408550     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
408551     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
408552     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
408553     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408554     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
408555     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408556     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

408557     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
408558     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408559     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408560     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
408561     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
408562     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
408563     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408564     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
408565     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

408566     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
408567     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408568     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408569     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
408570     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
408571     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
408572     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408573     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
408574     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
408574   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

408575     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

408576     proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
408577     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL13_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL13_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408578     %macro varDept(fcmpdata=,id=);
408579     %global nobs&id scoreFlag&id;
408580     %let scoreFlag&id = 0;
408581     %if &id=1 or ^&fcmpStart %then %do;
408582     proc sort data=&fcmpdata out=_temp&id nodupkey;
408583     by NAME;
408584     where id=&id and LHS in( %let j=1;
408585     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
408586     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
408587     "&var" %let j = %eval(&j+1);
408588     %end;
408589     );
408590     run;
408591     %let dsid = %sysfunc(open(_temp&id));
408592     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
408593     %let dsid = %sysfunc(close(&dsid));
408594     %if &&nobs&id %then %do;
408595     %let scoreFlag&id = 1;
408596     %let fcmpStart = 1;
408597     %end;
408598     %else %let fcmpStart = 0;
408599     %end;
408600     %else %do;
408601     proc sort data=&fcmpdata out=_tempid;
408602     where id=&id;
408603     by LHS;
408604     run;
408605     %let dsid = %sysfunc(open(_tempid));
408606     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
408607     %let dsid = %sysfunc(close(&dsid));
408608     %if ^&&nobs&id %then %do;
408609     proc datasets lib=work nolist;
408610     delete _tempid;
408611     run;
408612     quit;
408613     %end;
408614     %else %do;
408615     data _tempAll;
408616     set %let j=%eval(&id-1);
408617     %do x=1 %to &j;
408618     %if &&nobs&x %then %do;
408619     _temp&x %end;
408620     %end;
408621     ;
408622     run;
408623     proc sql;
408624     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
408624   ! work._tempid p2 where p.name=p2.lhs;
408625     quit;
408626     data _temp&id;
408627     set _temp&id;
408628     where LHS ne '' and NAME ne '' and Node ne '';
408629     run;
408630     proc datasets lib=work nolist;
408631     delete _tempAll;
408632     run;
408633     %let dsid = %sysfunc(open(_temp&id));
408634     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
408635     %let dsid = %sysfunc(close(&dsid));
408636     %if ^&&nobs&id %then %do;
408637     proc datasets lib=work nolist;
408638     delete _temp&id;
408639     run;
408640     quit;
408641     %end;
408642     %else %do;
408643     %let scoreFlag&id = 1;
408644     data _temp&id;
408645     set _temp&id;
408646     where LHS ne NAME and node ne '';
408647     run;
408648     %let dsid = %sysfunc(open(_temp&id));
408649     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
408650     %let dsid = %sysfunc(close(&dsid));
408651     %if ^&&nobs&id %then %do;
408652     proc datasets lib=work nolist;
408653     delete _temp&id;
408654     run;
408655     quit;
408656     %end;
408657     %else %do;
408658     proc sort data=_temp&id nodupkey;
408659     by LHS NAME;
408660     run;
408661     %end;
408662     %end;
408663     %end;
408664     %end;
408665     %mend varDept;
408666     %macro optCode(outdata=fcmpdata);
408667     %global fcmpStart;
408668     %let fcmpStart = 0;
408669     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
408670     %let NumNodes=9;
408671     %do k=1 %to &NumNodes;
408672     %vardept(fcmpdata=&outdata, id=&k);
408673     %end;
408674     %mend optCode;
408675     %optcode(outData=EMWS8.Ensmbl13_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 146 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

408676     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
408677     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
408678     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
408679     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408680     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
408681     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
408682     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
408683     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

408684     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
408685     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
408685   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

408686     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

408687     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
408688     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
408689     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

408690     filename _pref
408690   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
408691     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
408692     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
408693    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
408694    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
408695    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
408696    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
408697    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
408698    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
408699    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
408700    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
408701    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
408702    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
408703    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
408704    +LENGTH _WARN_ $4
408705    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
408706    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
408707    +
408708    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
408709    +
408710    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
408711    +
408712    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
408713    +
408714    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
408715    +
408716    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
408717    +
408718    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
408719    +
408720    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
408721    +
408722    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
408723    +
408724    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
408725    +
408726    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
408727    +
408728    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
408729    +
408730    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
408731    +
408732    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
408733    +
408734    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
408735    +
408736    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
408737    +
408738    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
408739    +
408740    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
408741    +
408742    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
408743    +
408744    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
408745    +
408746    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
408747    +
408748    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
408749    +
408750    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
408751    +
408752    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
408753    +
408754    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
408755    +
408756    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
408757    +
408758    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
408759    +
408760    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
408761    +
408762    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
408763    +
408764    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
408765    +
408766    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
408767    +
408768    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
408769    +
408770    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
408771    +
408772    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
408773    +
408774    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
408775    +
408776    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
408777    +
408778    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
408779    +
408780    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
408781    +
408782    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
408783    +
408784    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
408785    +
408786    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
408787    +
408788    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
408789    +
408790    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
408791    +
408792    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
408793    +
408794    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
408795    +
408796    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
408797    +
408798    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
408799    +
408800    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
408801    +
408802    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
408803    +
408804    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
408805    +
408806    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
408807    +
408808    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
408809    +
408810    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
408811    +
408812    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
408813    +
408814    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
408815    +
408816    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
408817    +
408818    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
408819    +
408820    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
408821    +
408822    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
408823    +
408824    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
408825    +
408826    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
408827    +
408828    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
408829    +
408830    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
408831    +
408832    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
408833    +
408834    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
408835    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
408836    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
408837    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
408838    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408839    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408840    +end;
MPRINT(EM_DIAGRAM):   end;
408841    +else do;
MPRINT(EM_DIAGRAM):   else do;
408842    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408843    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
408844    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408845    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408846    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
408847    +   end;
MPRINT(EM_DIAGRAM):   end;
408848    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408849    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
408850    +   end;
MPRINT(EM_DIAGRAM):   end;
408851    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408852    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
408853    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408854    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408855    +   end;
MPRINT(EM_DIAGRAM):   end;
408856    +end;
MPRINT(EM_DIAGRAM):   end;
408857    +
408858    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
408859    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
408860    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
408861    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
408862    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408863    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408864    +end;
MPRINT(EM_DIAGRAM):   end;
408865    +else do;
MPRINT(EM_DIAGRAM):   else do;
408866    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408867    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
408868    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408869    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408870    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
408871    +   end;
MPRINT(EM_DIAGRAM):   end;
408872    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408873    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
408874    +   end;
MPRINT(EM_DIAGRAM):   end;
408875    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408876    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
408877    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408878    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408879    +   end;
MPRINT(EM_DIAGRAM):   end;
408880    +end;
MPRINT(EM_DIAGRAM):   end;
408881    +
408882    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
408883    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
408884    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
408885    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
408886    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408887    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408888    +end;
MPRINT(EM_DIAGRAM):   end;
408889    +else do;
MPRINT(EM_DIAGRAM):   else do;
408890    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408891    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
408892    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408893    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408894    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
408895    +   end;
MPRINT(EM_DIAGRAM):   end;
408896    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408897    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
408898    +   end;
MPRINT(EM_DIAGRAM):   end;
408899    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408900    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
408901    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408902    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408903    +   end;
MPRINT(EM_DIAGRAM):   end;
408904    +end;
MPRINT(EM_DIAGRAM):   end;
408905    +
408906    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
408907    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
408908    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
408909    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
408910    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408911    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408912    +end;
MPRINT(EM_DIAGRAM):   end;
408913    +else do;
MPRINT(EM_DIAGRAM):   else do;
408914    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408915    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
408916    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408917    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408918    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
408919    +   end;
MPRINT(EM_DIAGRAM):   end;
408920    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408921    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
408922    +   end;
MPRINT(EM_DIAGRAM):   end;
408923    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408924    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
408925    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408926    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408927    +   end;
MPRINT(EM_DIAGRAM):   end;
408928    +end;
MPRINT(EM_DIAGRAM):   end;
408929    +
408930    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
408931    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
408932    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
408933    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
408934    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408935    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408936    +end;
MPRINT(EM_DIAGRAM):   end;
408937    +else do;
MPRINT(EM_DIAGRAM):   else do;
408938    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408939    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
408940    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408941    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408942    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
408943    +   end;
MPRINT(EM_DIAGRAM):   end;
408944    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408945    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
408946    +   end;
MPRINT(EM_DIAGRAM):   end;
408947    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408948    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
408949    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408950    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408951    +   end;
MPRINT(EM_DIAGRAM):   end;
408952    +end;
MPRINT(EM_DIAGRAM):   end;
408953    +
408954    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
408955    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
408956    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
408957    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
408958    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408959    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408960    +end;
MPRINT(EM_DIAGRAM):   end;
408961    +else do;
MPRINT(EM_DIAGRAM):   else do;
408962    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408963    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
408964    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408965    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
408966    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
408967    +   end;
MPRINT(EM_DIAGRAM):   end;
408968    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
408969    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
408970    +   end;
MPRINT(EM_DIAGRAM):   end;
408971    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408972    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
408973    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408974    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408975    +   end;
MPRINT(EM_DIAGRAM):   end;
408976    +end;
MPRINT(EM_DIAGRAM):   end;
408977    +
408978    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
408979    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
408980    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
408981    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
408982    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
408983    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408984    +end;
MPRINT(EM_DIAGRAM):   end;
408985    +else do;
MPRINT(EM_DIAGRAM):   else do;
408986    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
408987    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
408988    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
408989    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
408990    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
408991    +   end;
MPRINT(EM_DIAGRAM):   end;
408992    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
408993    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
408994    +   end;
MPRINT(EM_DIAGRAM):   end;
408995    +   else do;
MPRINT(EM_DIAGRAM):   else do;
408996    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
408997    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
408998    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
408999    +   end;
MPRINT(EM_DIAGRAM):   end;
409000    +end;
MPRINT(EM_DIAGRAM):   end;
409001    +
409002    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
409003    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
409004    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
409005    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
409006    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
409007    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
409008    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
409009    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
409010    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
409011    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
409012    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
409013    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
409014    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
409015    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
409016    +end;
MPRINT(EM_DIAGRAM):   end;
409017    +else do;
MPRINT(EM_DIAGRAM):   else do;
409018    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
409019    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
409020    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
409021    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
409022    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
409023    +   end;
MPRINT(EM_DIAGRAM):   end;
409024    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
409025    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
409026    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
409027    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
409028    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
409029    +   end;
MPRINT(EM_DIAGRAM):   end;
409030    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
409031    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
409032    +   end;
MPRINT(EM_DIAGRAM):   end;
409033    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
409034    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
409035    +   end;
MPRINT(EM_DIAGRAM):   end;
409036    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
409037    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
409038    +   end;
MPRINT(EM_DIAGRAM):   end;
409039    +   else do;
MPRINT(EM_DIAGRAM):   else do;
409040    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
409041    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
409042    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
409043    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
409044    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
409045    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
409046    +   end;
MPRINT(EM_DIAGRAM):   end;
409047    +end;
MPRINT(EM_DIAGRAM):   end;
409048    +
409049    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
409050    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
409051    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
409052    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
409053    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
409054    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
409055    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
409056    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
409057    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
409058    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
409059    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
409060    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
409061    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
409062    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
409063    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
409064    +end;
MPRINT(EM_DIAGRAM):   end;
409065    +else do;
MPRINT(EM_DIAGRAM):   else do;
409066    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
409067    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
409068    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
409069    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
409070    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
409071    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
409072    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
409073    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
409074    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
409075    +         end;
MPRINT(EM_DIAGRAM):   end;
409076    +         else do;
MPRINT(EM_DIAGRAM):   else do;
409077    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
409078    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
409079    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
409080    +            end;
MPRINT(EM_DIAGRAM):   end;
409081    +         end;
MPRINT(EM_DIAGRAM):   end;
409082    +      end;
MPRINT(EM_DIAGRAM):   end;
409083    +      else do;
MPRINT(EM_DIAGRAM):   else do;
409084    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
409085    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
409086    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
409087    +         end;
MPRINT(EM_DIAGRAM):   end;
409088    +      end;
MPRINT(EM_DIAGRAM):   end;
409089    +   end;
MPRINT(EM_DIAGRAM):   end;
409090    +   else do;
MPRINT(EM_DIAGRAM):   else do;
409091    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
409092    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
409093    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
409094    +      end;
MPRINT(EM_DIAGRAM):   end;
409095    +      else do;
MPRINT(EM_DIAGRAM):   else do;
409096    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
409097    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
409098    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
409099    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
409100    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
409101    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
409102    +         end;
MPRINT(EM_DIAGRAM):   end;
409103    +      end;
MPRINT(EM_DIAGRAM):   end;
409104    +   end;
MPRINT(EM_DIAGRAM):   end;
409105    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
409106    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
409107    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
409108    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
409109    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
409110    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
409111    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
409112    +   end;
MPRINT(EM_DIAGRAM):   end;
409113    +end;
MPRINT(EM_DIAGRAM):   end;
409114    +
409115    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409116    +*** Checking missing input Interval
409117    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
409118    +
409119    +IF NMISS(
409120    +   AcceptedCmpTotal ,
409121    +   Age ,
409122    +   Frq ,
409123    +   Income ,
409124    +   Kidhome ,
409125    +   Mnt ,
409126    +   MntFishProducts ,
409127    +   MntFruits ,
409128    +   MntGoldProds ,
409129    +   MntMeatProducts ,
409130    +   MntSweetProducts ,
409131    +   MntWines ,
409132    +   MonthsAsCustomer ,
409133    +   NumCatalogPurchases ,
409134    +   NumDealsPurchases ,
409135    +   NumDistPurchases ,
409136    +   NumStorePurchases ,
409137    +   NumWebPurchases ,
409138    +   NumWebVisitsMonth ,
409139    +   RFMstat ,
409140    +   RMntFrq ,
409141    +   Recency ,
409142    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
409143    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
409144    +
409145    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
409146    +END;
MPRINT(EM_DIAGRAM):   END;
409147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409148    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
409149    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409150    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
409151    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
409152    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
409153    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
409154    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
409155    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
409156    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
409157    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
409158    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
409159    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
409160    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
409161    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
409162    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
409163    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
409164    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
409165    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
409166    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
409167    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
409168    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
409169    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
409170    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
409171    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
409172    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
409173    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
409174    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
409175    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
409176    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
409177    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
409178    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
409179    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
409180    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
409181    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
409182    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
409183    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
409184    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
409185    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
409186    +END;
MPRINT(EM_DIAGRAM):   END;
409187    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
409188    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
409189    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
409190    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
409191    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
409192    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
409193    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
409194    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
409195    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
409196    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
409197    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
409198    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
409199    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
409200    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
409201    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
409202    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
409203    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
409204    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
409205    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
409206    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
409207    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
409208    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
409209    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
409210    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
409211    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
409212    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
409213    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
409214    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
409215    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
409216    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
409217    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
409218    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
409219    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
409220    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
409221    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
409222    +   ELSE S_NumCatalogPurchases
409223    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
409224    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
409225    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
409226    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
409227    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
409228    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
409229    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
409230    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
409231    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
409232    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
409233    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
409234    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
409235    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
409236    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
409237    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
409238    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
409239    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
409240    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
409241    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
409242    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
409243    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
409244    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
409245    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
409246    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
409247    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
409248    +END;
MPRINT(EM_DIAGRAM):   END;
409249    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409250    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
409251    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409252    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409253    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
409254    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409256    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
409257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409258    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
409259    +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
409260    +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
409261    +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
409262    +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
409263    +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
409264    +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
409265    +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
409266    +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
409267    +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
409268    +          +     1.17276395296242 * S_NumDealsPurchases
409269    +          +     0.26632768295477 * S_NumDistPurchases
409270    +          +    -1.26575615903579 * S_NumStorePurchases
409271    +          +    -0.95316107557927 * S_NumWebPurchases
409272    +          +     1.01828574356487 * S_NumWebVisitsMonth
409273    +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
409274    +        S_RMntFrq  +    -0.82943281422857 * S_Recency
409275    +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
409276    +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
409277    +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
409278    +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
409279    +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
409280    +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
409281    +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
409282    +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
409283    +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
409284    +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
409285    +          +     1.14485571201233 * S_NumDealsPurchases
409286    +          +     0.21414266588987 * S_NumDistPurchases
409287    +          +    -0.10530090074297 * S_NumStorePurchases
409288    +          +    -0.41712321238458 * S_NumWebPurchases
409289    +          +    -0.99760766791108 * S_NumWebVisitsMonth
409290    +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
409291    +        S_RMntFrq  +     1.10040128548883 * S_Recency
409292    +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
409293    +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
409294    +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
409295    +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
409296    +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
409297    +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
409298    +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
409299    +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
409300    +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
409301    +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
409302    +          +      0.7196418967437 * S_NumDealsPurchases
409303    +          +     0.69035286374177 * S_NumDistPurchases
409304    +          +     0.38027656631135 * S_NumStorePurchases
409305    +          +    -0.18878358997924 * S_NumWebPurchases
409306    +          +     1.61962062004798 * S_NumWebVisitsMonth
409307    +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
409308    +        S_RMntFrq  +    -2.13821542142822 * S_Recency
409309    +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
409310    +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
409311    +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
409312    +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
409313    +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
409314    +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
409315    +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
409316    +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
409317    +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
409318    +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
409319    +          +    -0.00642902007204 * S_NumDealsPurchases
409320    +          +     0.29785069480367 * S_NumDistPurchases
409321    +          +    -0.42243322063147 * S_NumStorePurchases
409322    +          +     0.54880896338383 * S_NumWebPurchases
409323    +          +    -0.12525846016886 * S_NumWebVisitsMonth
409324    +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
409325    +        S_RMntFrq  +     0.10252211581449 * S_Recency
409326    +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
409327    +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
409328    +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
409329    +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
409330    +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
409331    +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
409332    +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
409333    +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
409334    +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
409335    +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
409336    +          +    -0.48404738328225 * S_NumDealsPurchases
409337    +          +    -0.02464180457879 * S_NumDistPurchases
409338    +          +     1.17201831082067 * S_NumStorePurchases
409339    +          +     0.57453655167516 * S_NumWebPurchases
409340    +          +    -1.94417019790248 * S_NumWebVisitsMonth
409341    +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
409342    +        S_RMntFrq  +      1.6169916658132 * S_Recency
409343    +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
409344    +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
409345    +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
409346    +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
409347    +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
409348    +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
409349    +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
409350    +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
409351    +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
409352    +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
409353    +          +    -1.49850531967483 * S_NumDealsPurchases
409354    +          +    -0.82105466264223 * S_NumDistPurchases
409355    +          +     0.29984603642824 * S_NumStorePurchases
409356    +          +     0.06557123721611 * S_NumWebPurchases
409357    +          +     1.04754749365002 * S_NumWebVisitsMonth
409358    +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
409359    +        S_RMntFrq  +     0.12396789666359 * S_Recency
409360    +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
409361    +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
409362    +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
409363    +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
409364    +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
409365    +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
409366    +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
409367    +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
409368    +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
409369    +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
409370    +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
409371    +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
409372    +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
409373    +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
409374    +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
409375    +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
409376    +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
409377    +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
409378    +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
409379    +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
409380    +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
409381    +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
409382    +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
409383    +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
409384    +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
409385    +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
409386    +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
409387    +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
409388    +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
409389    +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
409390    +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
409391    +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
409392    +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
409393    +        EducationGraduation  +     0.07595631354847 * EducationMaster
409394    +          +     0.24583509957712 * Marital_StatusDivorced
409395    +          +    -0.22681931588361 * Marital_StatusMarried
409396    +          +    -0.12924106229536 * Marital_StatusSingle
409397    +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
409398    +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
409399    +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
409400    +        EducationGraduation  +     0.23015089246655 * EducationMaster
409401    +          +    -0.12585334311068 * Marital_StatusDivorced
409402    +          +    -0.20835502467207 * Marital_StatusMarried
409403    +          +    -0.13839534449368 * Marital_StatusSingle
409404    +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
409405    +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
409406    +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
409407    +        EducationGraduation  +    -0.03608560158257 * EducationMaster
409408    +          +     0.35106363238113 * Marital_StatusDivorced
409409    +          +     -1.3414808583918 * Marital_StatusMarried
409410    +          +     1.40835320798486 * Marital_StatusSingle
409411    +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
409412    +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
409413    +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
409414    +        EducationGraduation  +      0.1746658332011 * EducationMaster
409415    +          +     0.48174546958393 * Marital_StatusDivorced
409416    +          +    -0.41416978858191 * Marital_StatusMarried
409417    +          +    -0.23376801546265 * Marital_StatusSingle
409418    +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
409419    +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
409420    +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
409421    +        EducationGraduation  +     0.68875064631577 * EducationMaster
409422    +          +    -0.67557643774246 * Marital_StatusDivorced
409423    +          +     1.63844045917367 * Marital_StatusMarried
409424    +          +    -0.70320960247699 * Marital_StatusSingle
409425    +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
409426    +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
409427    +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
409428    +        EducationGraduation  +    -0.68011360002443 * EducationMaster
409429    +          +    -0.11371453086883 * Marital_StatusDivorced
409430    +          +    -0.34226997176291 * Marital_StatusMarried
409431    +          +    -1.01568676685754 * Marital_StatusSingle
409432    +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
409433    +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
409434    +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
409435    +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
409436    +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
409437    +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
409438    +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
409439    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
409440    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
409441    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
409442    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
409443    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
409444    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
409445    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
409446    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
409447    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
409448    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
409449    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
409450    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
409451    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
409452    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
409453    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
409454    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
409455    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
409456    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
409457    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
409458    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
409459    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
409460    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
409461    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
409462    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
409463    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
409464    +END;
MPRINT(EM_DIAGRAM):   END;
409465    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
409466    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
409467    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
409468    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
409469    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
409470    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
409471    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
409472    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
409473    +END;
MPRINT(EM_DIAGRAM):   END;
409474    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409475    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
409476    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409477    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
409478    +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
409479    +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
409480    +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
409481    +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
409482    +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
409483    +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
409484    +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
409485    +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
409486    +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
409487    +          +    -0.87259051567474 * S_NumDealsPurchases
409488    +          +    -0.36454149529139 * S_NumDistPurchases
409489    +          +     0.12447759925061 * S_NumStorePurchases
409490    +          +    -1.08133487947367 * S_NumWebPurchases
409491    +          +    -0.49882157745454 * S_NumWebVisitsMonth
409492    +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
409493    +        S_RMntFrq  +    -0.01174101172444 * S_Recency
409494    +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
409495    +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
409496    +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
409497    +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
409498    +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
409499    +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
409500    +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
409501    +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
409502    +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
409503    +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
409504    +          +     2.23121497416403 * S_NumDealsPurchases
409505    +          +    -0.48674842191071 * S_NumDistPurchases
409506    +          +     1.77510728607544 * S_NumStorePurchases
409507    +          +     0.14647433155436 * S_NumWebPurchases
409508    +          +    -0.95892686924419 * S_NumWebVisitsMonth
409509    +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
409510    +        S_RMntFrq  +     2.46497777428475 * S_Recency
409511    +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
409512    +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
409513    +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
409514    +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
409515    +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
409516    +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
409517    +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
409518    +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
409519    +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
409520    +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
409521    +          +     0.14338855349611 * S_NumDealsPurchases
409522    +          +    -2.21071010829235 * S_NumDistPurchases
409523    +          +    -0.21795889348002 * S_NumStorePurchases
409524    +          +     1.98825087883535 * S_NumWebPurchases
409525    +          +     1.02482442531149 * S_NumWebVisitsMonth
409526    +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
409527    +        S_RMntFrq  +     -1.0288777281766 * S_Recency
409528    +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
409529    +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
409530    +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
409531    +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
409532    +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
409533    +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
409534    +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
409535    +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
409536    +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
409537    +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
409538    +          +     0.30041205661012 * S_NumDealsPurchases
409539    +          +    -0.63499849986918 * S_NumDistPurchases
409540    +          +    -0.34155713433714 * S_NumStorePurchases
409541    +          +    -1.14183354933936 * S_NumWebPurchases
409542    +          +    -0.42681980262973 * S_NumWebVisitsMonth
409543    +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
409544    +        S_RMntFrq  +     1.25852246467612 * S_Recency
409545    +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
409546    +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
409547    +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
409548    +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
409549    +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
409550    +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
409551    +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
409552    +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
409553    +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
409554    +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
409555    +          +    -0.21237915559831 * S_NumDealsPurchases
409556    +          +     0.48256923764182 * S_NumDistPurchases
409557    +          +    -0.45553093140641 * S_NumStorePurchases
409558    +          +      0.5593655963659 * S_NumWebPurchases
409559    +          +     0.27943768691188 * S_NumWebVisitsMonth
409560    +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
409561    +        S_RMntFrq  +    -1.62796011550484 * S_Recency
409562    +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
409563    +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
409564    +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
409565    +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
409566    +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
409567    +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
409568    +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
409569    +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
409570    +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
409571    +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
409572    +          +     2.38967021388062 * S_NumDealsPurchases
409573    +          +    -0.97722398866481 * S_NumDistPurchases
409574    +          +     1.57612333191312 * S_NumStorePurchases
409575    +          +    -0.75968679115983 * S_NumWebPurchases
409576    +          +    -0.64207187757251 * S_NumWebVisitsMonth
409577    +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
409578    +        S_RMntFrq  +     1.71313869798331 * S_Recency
409579    +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
409580    +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
409581    +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
409582    +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
409583    +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
409584    +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
409585    +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
409586    +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
409587    +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
409588    +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
409589    +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
409590    +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
409591    +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
409592    +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
409593    +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
409594    +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
409595    +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
409596    +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
409597    +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
409598    +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
409599    +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
409600    +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
409601    +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
409602    +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
409603    +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
409604    +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
409605    +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
409606    +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
409607    +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
409608    +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
409609    +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
409610    +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
409611    +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
409612    +        EducationGraduation  +      0.1073450284316 * EducationMaster
409613    +          +     0.96470902298142 * Marital_StatusDivorced
409614    +          +     0.94805959268314 * Marital_StatusMarried
409615    +          +     -0.6523948769616 * Marital_StatusSingle
409616    +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
409617    +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
409618    +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
409619    +        EducationGraduation  +    -1.34927753306064 * EducationMaster
409620    +          +      0.3918249505531 * Marital_StatusDivorced
409621    +          +    -0.00968091979586 * Marital_StatusMarried
409622    +          +     0.84615379885071 * Marital_StatusSingle
409623    +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
409624    +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
409625    +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
409626    +        EducationGraduation  +     -0.8672743321499 * EducationMaster
409627    +          +     1.14335160313191 * Marital_StatusDivorced
409628    +          +     0.50580517192175 * Marital_StatusMarried
409629    +          +     0.17264295020921 * Marital_StatusSingle
409630    +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
409631    +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
409632    +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
409633    +        EducationGraduation  +     1.95818378342783 * EducationMaster
409634    +          +    -0.11238504444225 * Marital_StatusDivorced
409635    +          +    -0.81348274043749 * Marital_StatusMarried
409636    +          +     0.46075415610001 * Marital_StatusSingle
409637    +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
409638    +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
409639    +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
409640    +        EducationGraduation  +     0.08396135672504 * EducationMaster
409641    +          +    -0.46342068701431 * Marital_StatusDivorced
409642    +          +    -0.41667845270204 * Marital_StatusMarried
409643    +          +    -0.47166707496281 * Marital_StatusSingle
409644    +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
409645    +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
409646    +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
409647    +        EducationGraduation  +     0.36656103863186 * EducationMaster
409648    +          +    -0.45376613787812 * Marital_StatusDivorced
409649    +          +     0.01337046049801 * Marital_StatusMarried
409650    +          +    -0.92811489484121 * Marital_StatusSingle
409651    +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
409652    +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
409653    +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
409654    +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
409655    +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
409656    +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
409657    +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
409658    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
409659    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
409660    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
409661    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
409662    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
409663    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
409664    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
409665    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
409666    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
409667    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
409668    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
409669    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
409670    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
409671    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
409672    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
409673    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
409674    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
409675    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
409676    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
409677    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
409678    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
409679    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
409680    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
409681    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
409682    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
409683    +END;
MPRINT(EM_DIAGRAM):   END;
409684    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
409685    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
409686    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
409687    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
409688    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
409689    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
409690    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
409691    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
409692    +END;
MPRINT(EM_DIAGRAM):   END;
409693    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409694    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
409695    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409696    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
409697    +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
409698    +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
409699    +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
409700    +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
409701    +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
409702    +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
409703    +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
409704    +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
409705    +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
409706    +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
409707    +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
409708    +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
409709    +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
409710    +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
409711    +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
409712    +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
409713    +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
409714    +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
409715    +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
409716    +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
409717    +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
409718    +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
409719    +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
409720    +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
409721    +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
409722    +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
409723    +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
409724    +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
409725    +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
409726    +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
409727    +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
409728    +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
409729    +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
409730    +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
409731    +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
409732    +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
409733    +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
409734    +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
409735    +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
409736    +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
409737    +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
409738    +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
409739    +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
409740    +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
409741    +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
409742    +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
409743    +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
409744    +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
409745    +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
409746    +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
409747    +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
409748    +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
409749    +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
409750    +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
409751    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
409752    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
409753    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
409754    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
409755    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
409756    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
409757    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
409758    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
409759    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
409760    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
409761    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
409762    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
409763    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
409764    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
409765    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
409766    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
409767    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
409768    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
409769    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
409770    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
409771    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
409772    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
409773    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
409774    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
409775    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
409776    +END;
MPRINT(EM_DIAGRAM):   END;
409777    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
409778    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
409779    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
409780    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
409781    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
409782    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
409783    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
409784    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
409785    +END;
MPRINT(EM_DIAGRAM):   END;
409786    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409787    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
409788    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409789    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
409790    +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
409791    +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
409792    +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
409793    +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
409794    +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
409795    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
409796    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
409797    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
409798    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
409799    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
409800    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
409801    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
409802    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
409803    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
409804    +END;
MPRINT(EM_DIAGRAM):   END;
409805    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
409806    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
409807    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
409808    +END;
MPRINT(EM_DIAGRAM):   END;
409809    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
409810    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
409811    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
409812    +END;
MPRINT(EM_DIAGRAM):   END;
409813    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409814    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
409815    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
409816    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
409817    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
409818    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
409819    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
409820    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
409821    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
409822    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
409823    +END;
MPRINT(EM_DIAGRAM):   END;
409824    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
409825    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
409826    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
409827    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
409828     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
409829     quit;
409830     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
409831     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
409832     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
409833     retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
409834     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
409835     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

409836     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
409837     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409838     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409839     proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
409840     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409841     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

409842     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
409843     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
409844     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
409845     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409846     proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
409847     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

409848     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
409849     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409850     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

409851     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
409852     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
409853     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409854     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409855     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
409856     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
409856   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3727 rows and 5 columns.

409857     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409858     proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
409859     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL13_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3727 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL13_FCMP has 3727 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409860     filename _pref
409860   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
409861     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
409862     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
409863    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
409864    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
409865    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
409866    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
409867    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
409868    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
409869     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
409870     quit;
409871     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
409872     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
409873     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
409874     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
409875     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
409876     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409877     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
409878     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409879     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

409880     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
409881     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409882     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409883     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
409884     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
409885     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
409886     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409887     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
409888     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

409889     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
409890     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409891     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409892     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
409893     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
409894     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409895     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409896     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
409897     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
409897   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

409898     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

409899     proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
409900     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL13_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL13_FCMP has 3731 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409901     filename _pref
409901   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
409902     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
409903     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
409904    +
409905    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
409906    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
409906   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
409907    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
409908    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
409909    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
409910    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
409911    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
409912     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
409913     quit;
409914     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
409915     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
409916     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
409917     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
409918     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
409919     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409920     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
409921     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409922     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409923     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
409924     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409925     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

409926     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
409927     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
409928     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
409929     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409930     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
409931     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409932     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
409933     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409934     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409935     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
409936     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
409937     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
409938     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

409939     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
409940     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
409940   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

409941     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409942     proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
409943     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL13_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL13_FCMP has 3770 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

409944     filename _pref
409944   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
409945     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
409946     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
409947    +
409948    +
409949    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
409950    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
409951    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
409952    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
409953    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
409954    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
409955    +
409956    +
409957    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
409958    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
409959    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
409960    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
409961    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
409962    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
409963    +
409964    +
409965    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
409966    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
409967    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
409968    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
409969    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
409970    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
409971    +
409972    +
409973    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
409974    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
409975    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
409976    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
409977    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
409978    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
409979    +
409980    +
409981    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
409982    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
409983    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
409984    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
409985    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
409986    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
409987    +
409988    +
409989    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
409990    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
409991    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
409992    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
409993    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
409994    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
409995    +
409996    +
409997    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
409998    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
409999    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
410000    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
410001    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
410002    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
410003    +
410004    +
410005    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
410006    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
410007    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
410008    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
410009    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
410010    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
410011    +if
410012    +_FILTERNORM1 not in ( '.')
410013    + and
410014    +_FILTERNORM2 not in ( '.')
410015    + and
410016    +_FILTERNORM3 not in ( '.')
410017    + and
410018    +_FILTERNORM4 not in ( '.')
410019    + and
410020    +_FILTERNORM5 not in ( '.')
410021    + and
410022    +_FILTERNORM6 not in ( '.')
410023    + and
410024    +_FILTERNORM7 not in ( ' ')
410025    + and
410026    +_FILTERNORM8 not in ( ' ')
410027    +and
410028    +( Dt_Customer ne .)
410029    +and ( Income ne . and (Income<=107000))
410030    +and ( Kidhome ne .)
410031    +and ( MntFishProducts ne .)
410032    +and ( MntFruits ne .)
410033    +and ( MntGoldProds ne .)
410034    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
410035    +and ( MntSweetProducts ne .)
410036    +and ( MntWines ne .)
410037    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
410038    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
410039    +and ( NumStorePurchases ne .)
410040    +and ( NumWebPurchases ne .)
410041    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
410042    +and ( Recency ne .)
410043    +and ( Teenhome ne .)
410044    +and ( Year_Birth ne .)
410045    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
410046    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
410047    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
410048    +end;
MPRINT(EM_DIAGRAM):   end;
410049    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
410050    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
410051     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
410052     quit;
410053     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
410054     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
410055     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
410056     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
410057     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
410058     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

410059     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
410060     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
410061     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

410062     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
410063     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
410064     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

410065     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
410066     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
410067     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
410068     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

410069     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
410070     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

410071     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
410072     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
410073     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

410074     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
410075     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
410076     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
410077     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

410078     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
410079     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
410079   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

410080     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

410081     proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl13_FCMP data=_tempx;
410082     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL13_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL13_FCMP has 3836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

410083     %macro varDept(fcmpdata=,id=);
410084     %global nobs&id scoreFlag&id;
410085     %let scoreFlag&id = 0;
410086     %if &id=1 or ^&fcmpStart %then %do;
410087     proc sort data=&fcmpdata out=_temp&id nodupkey;
410088     by NAME;
410089     where id=&id and LHS in( %let j=1;
410090     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
410091     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
410092     "&var" %let j = %eval(&j+1);
410093     %end;
410094     );
410095     run;
410096     %let dsid = %sysfunc(open(_temp&id));
410097     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
410098     %let dsid = %sysfunc(close(&dsid));
410099     %if &&nobs&id %then %do;
410100     %let scoreFlag&id = 1;
410101     %let fcmpStart = 1;
410102     %end;
410103     %else %let fcmpStart = 0;
410104     %end;
410105     %else %do;
410106     proc sort data=&fcmpdata out=_tempid;
410107     where id=&id;
410108     by LHS;
410109     run;
410110     %let dsid = %sysfunc(open(_tempid));
410111     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
410112     %let dsid = %sysfunc(close(&dsid));
410113     %if ^&&nobs&id %then %do;
410114     proc datasets lib=work nolist;
410115     delete _tempid;
410116     run;
410117     quit;
410118     %end;
410119     %else %do;
410120     data _tempAll;
410121     set %let j=%eval(&id-1);
410122     %do x=1 %to &j;
410123     %if &&nobs&x %then %do;
410124     _temp&x %end;
410125     %end;
410126     ;
410127     run;
410128     proc sql;
410129     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
410129   ! work._tempid p2 where p.name=p2.lhs;
410130     quit;
410131     data _temp&id;
410132     set _temp&id;
410133     where LHS ne '' and NAME ne '' and Node ne '';
410134     run;
410135     proc datasets lib=work nolist;
410136     delete _tempAll;
410137     run;
410138     %let dsid = %sysfunc(open(_temp&id));
410139     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
410140     %let dsid = %sysfunc(close(&dsid));
410141     %if ^&&nobs&id %then %do;
410142     proc datasets lib=work nolist;
410143     delete _temp&id;
410144     run;
410145     quit;
410146     %end;
410147     %else %do;
410148     %let scoreFlag&id = 1;
410149     data _temp&id;
410150     set _temp&id;
410151     where LHS ne NAME and node ne '';
410152     run;
410153     %let dsid = %sysfunc(open(_temp&id));
410154     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
410155     %let dsid = %sysfunc(close(&dsid));
410156     %if ^&&nobs&id %then %do;
410157     proc datasets lib=work nolist;
410158     delete _temp&id;
410159     run;
410160     quit;
410161     %end;
410162     %else %do;
410163     proc sort data=_temp&id nodupkey;
410164     by LHS NAME;
410165     run;
410166     %end;
410167     %end;
410168     %end;
410169     %end;
410170     %mend varDept;
410171     %macro optCode(outdata=fcmpdata);
410172     %global fcmpStart;
410173     %let fcmpStart = 0;
410174     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
410175     %let NumNodes=9;
410176     %do k=1 %to &NumNodes;
410177     %vardept(fcmpdata=&outdata, id=&k);
410178     %end;
410179     %mend optCode;
410180     %optcode(outData=EMWS8.Ensmbl13_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 197 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 142 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 55 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 59 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 98 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl13_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

410181     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
410182     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
410183     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
410184     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

410185     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
410186     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
410187     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
410188     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

410189     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
410190     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
410190   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

410191     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

410192     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
410193     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
410194     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

410195     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
410196     * Ensmbl13: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Computing metadata for TRAIN data;
410197     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL13_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl13\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl13_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl13_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl13_TRAIN out=WORK.M3QKL3YZ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QKL3YZ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QKL3YZ(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QKL3YZ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QKL3YZ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0GNGFHP NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0GNGFHP;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0GNGFHP;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00A3AGI(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0GNGFHP;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0GNGFHP;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0GNGFHP;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0GNGFHP;
MPRINT(EMADVISECOLUMNS):   set WORK.M0GNGFHP;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl13_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl13";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl13";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl13";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl13";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl13";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl13";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl13";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl13";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl13";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl13";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl13: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl13";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
410517     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
410518     set EMWS8.Ensmbl13_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl13_EMINFO;
410519     where DATA='Ensmbl13' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl13' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
410520     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL13_EMINFO.
      WHERE (DATA='Ensmbl13') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

410521     data EMWS8.Ensmbl13_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl13_EMINFO;
410522     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
410523     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
410524     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL13_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
410528     run;
410529     data EMWS8.Ensmbl13_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl13_EMINFO;
410530     set EMWS8.Ensmbl13_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl13_EMINFO WORK.MODELTEMP_INFO;
410531     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL13_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL13_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

410532     proc sort data = EMWS8.Ensmbl13_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl13_EMINFO NOTHREADS;
410533     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
410534     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL13_EMINFO.
NOTE: The data set EMWS8.ENSMBL13_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

410535     proc sort data = EMWS8.AutoNeural7_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural7_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
410536     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
410537     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

410538     proc sort data = EMWS8.Ensmbl13_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl13_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
410539     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
410540     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL13_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

410541     data EMWS8.Ensmbl13_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl13_EMINFO;
410542     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
410543     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
410544     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL13_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

410545     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
410546     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
410547     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
410548     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL13_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      
NOTE: View EMWS8.ENSMBL13_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
