MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.31 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                13.31 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O22SM2NM 
"C:\\predictive-models-project\Workspaces\EMWS8\MdlComp2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O22SM2NM new;
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS8.ENSMBL5_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL5_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
574117     /* Generate assessment metadata, which will be used to generate assessment data step
574117   !  */
574118     /* code, such as retrieving names of temporary variables and summary variables,
574118   !  */
574119     /* labels, etc.  It is used in almost all the assessment computations such as lift,
574119   !  */
574120     /* roc, index, scoreDist and could be thought as a global variable in assessment
574120   !  */
574121     /* computation.
574121   !  */
574122     data work.ASSESS_1FUMC4L_assessMeta_ryQahs;
MPRINT(EM_DIAGRAM):    data work.ASSESS_1FUMC4L_assessMeta_ryQahs;
574123     length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY $32
574123   ! MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32
574123   ! RESULT_MEAN_LABEL $100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32
574123   ! RESULT_MAX $32 RESULT_MAX_LABEL
574124        $100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE
574124   !  $32;
MPRINT(EM_DIAGRAM):   length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY 
$32 MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32 RESULT_MEAN_LABEL 
$100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32 RESULT_MAX $32 RESULT_MAX_LABEL 
$100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE $32;
574125     VARIABLE = "DepVar";
MPRINT(EM_DIAGRAM):   VARIABLE = "DepVar";
574126     PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
574127     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
574128     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
574129     LEVEL = '';
MPRINT(EM_DIAGRAM):   LEVEL = '';
574130     PROPERTY = "TARGET";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET";
574131     MEASUREMENT = "BINARY";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "BINARY";
574132     LAST_LEVEL = '';
MPRINT(EM_DIAGRAM):   LAST_LEVEL = '';
574133     GEN_VAR_IN_TEMP_DATA = "DepVar";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "DepVar";
574134     RESULT_MEAN = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "";
574135     RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
574136     RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
574137     RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
574138     MIN_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "";
574139     RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
574140     RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
574141     MAX_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "";
574142     RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
574143     RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
574144     TEMPORARY_VARIABLE = "DepVar_fMTh212OTHaaq1g";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "DepVar_fMTh212OTHaaq1g";
574145     output;
MPRINT(EM_DIAGRAM):   output;
574146     VARIABLE = "F_DepVar_1";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_DepVar_1";
574147     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
574148     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
574149     PARENT = "F_DepVar";
MPRINT(EM_DIAGRAM):   PARENT = "F_DepVar";
574150     LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
574151     PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
574152     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
574153     LAST_LEVEL = "0";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "0";
574154     GEN_VAR_IN_TEMP_DATA = "F_DepVar_1_44qagZrwasa_BZp";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_DepVar_1_44qagZrwasa_BZp";
574155     RESULT_MEAN = "F_DepVar_1_mean_5Wq4mca3YTFqqj4";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_DepVar_1_mean_5Wq4mca3YTFqqj4";
574156     /* adjust for tied cases */
574157     RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
574158     RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
574159     RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
574160     RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
574161     RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
574162     RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
574163     RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
574163   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
574164     TEMPORARY_VARIABLE = "F_DepVar_1_RjOlBfcgBfVF1lL";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_DepVar_1_RjOlBfcgBfVF1lL";
574165     output;
MPRINT(EM_DIAGRAM):   output;
574166     VARIABLE = "F_DepVar_0";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_DepVar_0";
574167     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
574168     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
574169     PARENT = "F_DepVar";
MPRINT(EM_DIAGRAM):   PARENT = "F_DepVar";
574170     LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
574171     PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
574172     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
574173     LAST_LEVEL = "0";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "0";
574174     GEN_VAR_IN_TEMP_DATA = "F_DepVar_0_zphXvF7BDQylVrv";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_DepVar_0_zphXvF7BDQylVrv";
574175     RESULT_MEAN = "F_DepVar_0_mean_0NGAGzImERmayaU";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_DepVar_0_mean_0NGAGzImERmayaU";
574176     /* adjust for tied cases */
574177     RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
574178     RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
574179     RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
574180     RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
574181     RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
574182     RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
574183     RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
574183   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
574184     TEMPORARY_VARIABLE = "F_DepVar_0_MnbMn8RNIYK2R7A";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_DepVar_0_MnbMn8RNIYK2R7A";
574185     output;
MPRINT(EM_DIAGRAM):   output;
574186     VARIABLE = "P_DepVar1";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DepVar1";
574187     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
574188     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
574189     PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
574190     LEVEL = "1";
MPRINT(EM_DIAGRAM):   LEVEL = "1";
574191     PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
574192     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
574193     LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
574194     GEN_VAR_IN_TEMP_DATA = "P_DepVar1";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DepVar1";
574195     RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
574196     RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
574196   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
574197     RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
574198     RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
574199     MIN_ADJUSTED = "P_DepVar_minAdjusted_ohb76mTjh";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_DepVar_minAdjusted_ohb76mTjh";
574200     RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
574201     RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
574202     MAX_ADJUSTED = "P_DepVar_maxAdjusted_gwQqPfRHZ";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_DepVar_maxAdjusted_gwQqPfRHZ";
574203     RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
574204     RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
574205     TEMPORARY_VARIABLE = "P_DepVar1_3x6gLXHNBqjgDzl";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DepVar1_3x6gLXHNBqjgDzl";
574206     output;
MPRINT(EM_DIAGRAM):   output;
574207     VARIABLE = "P_DepVar0";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DepVar0";
574208     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
574209     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
574210     PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
574211     LEVEL = "0";
MPRINT(EM_DIAGRAM):   LEVEL = "0";
574212     PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
574213     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
574214     LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
574215     GEN_VAR_IN_TEMP_DATA = "P_DepVar0";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DepVar0";
574216     RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
574217     RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
574217   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
574218     RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
574219     RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
574220     MIN_ADJUSTED = "P_DepVar_minAdjusted_G_IrVHpCD";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_DepVar_minAdjusted_G_IrVHpCD";
574221     RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
574222     RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
574223     MAX_ADJUSTED = "P_DepVar_maxAdjusted_CKy23Ii5L";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_DepVar_maxAdjusted_CKy23Ii5L";
574224     RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
574225     RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
574226     TEMPORARY_VARIABLE = "P_DepVar0_HN_AfgYu4AuIcK1";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DepVar0_HN_AfgYu4AuIcK1";
574227     output;
MPRINT(EM_DIAGRAM):   output;
574228     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.ASSESS_1FUMC4L_ASSESSMETA_RYQAHS has 5 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

574229     /* Generate temporary dataset and obtain summary statistics such as total number of
574229   !   */
574230     /* obserations, frequency of target.  However, summary statistics for class
574230   ! reporting */
574231     /* variabels are not computed here since if there exist class reporting variables,
574231   !   */
574232     /* then PROC DMDB will be called. And there is no need to compute interval reporting
574232   !   */
574233     /* summary statisitcs, if any.
574233   !   */
574234     data work.ASSESS_1FUMC4L_normSD_EpGREu(drop=
574235     _numberOfObservation_
574236     _levelFrequency_1
574237     _levelFrequency_2
574238     )
574239     work.ASSESS_1FUMC4L_meansAndTi_NmqY6d (keep=
574240     _numberOfObservation_
574241     _levelFrequency_1
574242     _levelFrequency_2
574243     );
MPRINT(EM_DIAGRAM):    data work.ASSESS_1FUMC4L_normSD_EpGREu(drop= _numberOfObservation_ 
_levelFrequency_1 _levelFrequency_2 ) work.ASSESS_1FUMC4L_meansAndTi_NmqY6d (keep= 
_numberOfObservation_ _levelFrequency_1 _levelFrequency_2 );
574244     set EMWS8.Ensmbl5_TRAIN(
574245     where=(
574246     (DepVar ^= .)
574247     )
574248     ) end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl5_TRAIN( where=( (DepVar ^= .) ) ) end=_lastObservation_;
574249     keep frequency_sz9q9M;
MPRINT(EM_DIAGRAM):   keep frequency_sz9q9M;
574250     frequency_sz9q9M = 1;
MPRINT(EM_DIAGRAM):   frequency_sz9q9M = 1;
574251     keep I_DepVar F_DepVar;
MPRINT(EM_DIAGRAM):   keep I_DepVar F_DepVar;
574252     keep F_DepVar_1_44qagZrwasa_BZp;
MPRINT(EM_DIAGRAM):   keep F_DepVar_1_44qagZrwasa_BZp;
574253     if (F_DepVar = '1') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '1') then do;
574254     F_DepVar_1_44qagZrwasa_BZp = 1;
MPRINT(EM_DIAGRAM):   F_DepVar_1_44qagZrwasa_BZp = 1;
574255     end;
MPRINT(EM_DIAGRAM):   end;
574256     else do;
MPRINT(EM_DIAGRAM):   else do;
574257     F_DepVar_1_44qagZrwasa_BZp = 0;
MPRINT(EM_DIAGRAM):   F_DepVar_1_44qagZrwasa_BZp = 0;
574258     end;
MPRINT(EM_DIAGRAM):   end;
574259     keep F_DepVar_0_zphXvF7BDQylVrv;
MPRINT(EM_DIAGRAM):   keep F_DepVar_0_zphXvF7BDQylVrv;
574260     if (F_DepVar = '0') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '0') then do;
574261     F_DepVar_0_zphXvF7BDQylVrv = 1;
MPRINT(EM_DIAGRAM):   F_DepVar_0_zphXvF7BDQylVrv = 1;
574262     end;
MPRINT(EM_DIAGRAM):   end;
574263     else do;
MPRINT(EM_DIAGRAM):   else do;
574264     F_DepVar_0_zphXvF7BDQylVrv = 0;
MPRINT(EM_DIAGRAM):   F_DepVar_0_zphXvF7BDQylVrv = 0;
574265     end;
MPRINT(EM_DIAGRAM):   end;
574266     keep P_DepVar1;
MPRINT(EM_DIAGRAM):   keep P_DepVar1;
574267     keep P_DepVar0;
MPRINT(EM_DIAGRAM):   keep P_DepVar0;
574268     output work.ASSESS_1FUMC4L_normSD_EpGREu;
MPRINT(EM_DIAGRAM):   output work.ASSESS_1FUMC4L_normSD_EpGREu;
574269     keep _numberOfObservation_;
MPRINT(EM_DIAGRAM):   keep _numberOfObservation_;
574270     retain _numberOfObservation_ 0;
MPRINT(EM_DIAGRAM):   retain _numberOfObservation_ 0;
574271     _numberOfObservation_ + frequency_sz9q9M;
MPRINT(EM_DIAGRAM):   _numberOfObservation_ + frequency_sz9q9M;
574272     keep _levelFrequency_1;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_1;
574273     retain _levelFrequency_1 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_1 0;
574274     if (F_DepVar = '1') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '1') then do;
574275     _levelFrequency_1 + frequency_sz9q9M;
MPRINT(EM_DIAGRAM):   _levelFrequency_1 + frequency_sz9q9M;
574276     end;
MPRINT(EM_DIAGRAM):   end;
574277     keep _levelFrequency_2;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_2;
574278     retain _levelFrequency_2 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_2 0;
574279     if (F_DepVar = '0') then do;
MPRINT(EM_DIAGRAM):   if (F_DepVar = '0') then do;
574280     _levelFrequency_2 + frequency_sz9q9M;
MPRINT(EM_DIAGRAM):   _levelFrequency_2 + frequency_sz9q9M;
574281     end;
MPRINT(EM_DIAGRAM):   end;
574282     if _lastObservation_ then do;
MPRINT(EM_DIAGRAM):   if _lastObservation_ then do;
574283     output work.ASSESS_1FUMC4L_meansAndTi_NmqY6d;
MPRINT(EM_DIAGRAM):   output work.ASSESS_1FUMC4L_meansAndTi_NmqY6d;
574284     end;
MPRINT(EM_DIAGRAM):   end;
574285     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL5_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL3_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL5_TRAIN.
      WHERE DepVar not = .;
NOTE: The data set WORK.ASSESS_1FUMC4L_NORMSD_EPGREU has 2374 observations and 7 variables.
NOTE: The data set WORK.ASSESS_1FUMC4L_MEANSANDTI_NMQY6D has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      

574286     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
574287     set EMWS8.MdlComp2_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS8.MdlComp2_EMRANK;
574288     where MODEL = "Ensmbl5" and TARGET = "DepVar" and dataRole="TRAIN";
MPRINT(EM_DIAGRAM):   where MODEL = "Ensmbl5" and TARGET = "DepVar" and dataRole="TRAIN";
574289     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS8.MDLCOMP2_EMRANK.
      WHERE (MODEL='Ensmbl5') and (TARGET='DepVar') and (dataRole='TRAIN');
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

574290     data work._augment;
MPRINT(EM_DIAGRAM):    data work._augment;
574291     do BIN= 1 to 20;
MPRINT(EM_DIAGRAM):   do BIN= 1 to 20;
574292     DECILE = BIN*5;
MPRINT(EM_DIAGRAM):   DECILE = BIN*5;
574293     output;
MPRINT(EM_DIAGRAM):   output;
574294     end;
MPRINT(EM_DIAGRAM):   end;
574295     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._AUGMENT has 20 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

574296     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):   data WORK._EMRANK;
574297     merge WORK._AUGMENT WORK._EMRANK;
MPRINT(EM_DIAGRAM):   merge WORK._AUGMENT WORK._EMRANK;
574298     by BIN;
MPRINT(EM_DIAGRAM):   by BIN;
574299     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._AUGMENT.
NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

574300     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
574301     set WORK._EMRANK end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK end=_lastObservation_;
574302     retain _previousMinP_ _previousMaxP_;
MPRINT(EM_DIAGRAM):   retain _previousMinP_ _previousMaxP_;
574303     retain _group_ 1;
MPRINT(EM_DIAGRAM):   retain _group_ 1;
574304     keep event;
MPRINT(EM_DIAGRAM):   keep event;
574305     keep bin _cutoff_ _group_;
MPRINT(EM_DIAGRAM):   keep bin _cutoff_ _group_;
574306     if (bin > 1) then do;
MPRINT(EM_DIAGRAM):   if (bin > 1) then do;
574307     bin = bin - 1;
MPRINT(EM_DIAGRAM):   bin = bin - 1;
574308     _cutoff_ = (_maxP_ + _previousMinP_) / 2;
MPRINT(EM_DIAGRAM):   _cutoff_ = (_maxP_ + _previousMinP_) / 2;
574309     if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
574310     /* tied */
574311     _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_/*-1E-6*/
574312     ));
MPRINT(EM_DIAGRAM):   _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_ ));
574313     end;
MPRINT(EM_DIAGRAM):   end;
574314     else if (abs(_maxP_ - _minP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _minP_) < 1E-6) then do;
574315     /* next tied */
574316     _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_/*+ 1E-6*/
574317     ));
MPRINT(EM_DIAGRAM):   _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_ 
));
574318     end;
MPRINT(EM_DIAGRAM):   end;
574319     output;
MPRINT(EM_DIAGRAM):   output;
574320     *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 
1E-6) then do;
574321     * _group_ + 1;
MPRINT(EM_DIAGRAM):   * _group_ + 1;
574322     *end;
MPRINT(EM_DIAGRAM):   *end;
574323     if (_maxP_ le _previousMinP_ - 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (_maxP_ le _previousMinP_ - 1E-6) then do;
574324     _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
574325     end;
MPRINT(EM_DIAGRAM):   end;
574326     else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
574327     if (abs(_maxP_ - _minP_) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_maxP_ - _minP_) > 1E-6) then do;
574328     _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
574329     end;
MPRINT(EM_DIAGRAM):   end;
574330     end;
MPRINT(EM_DIAGRAM):   end;
574331     bin + 1;
MPRINT(EM_DIAGRAM):   bin + 1;
574332     /* correct the previous change */
574333     end;
MPRINT(EM_DIAGRAM):   end;
574334     if (_lastObservation_) then do;
MPRINT(EM_DIAGRAM):   if (_lastObservation_) then do;
574335     _cutoff_ = .;
MPRINT(EM_DIAGRAM):   _cutoff_ = .;
574336     output;
MPRINT(EM_DIAGRAM):   output;
574337     end;
MPRINT(EM_DIAGRAM):   end;
574338     _previousMinP_ = _minP_;
MPRINT(EM_DIAGRAM):   _previousMinP_ = _minP_;
574339     _previousMaxP_ = _maxP_;
MPRINT(EM_DIAGRAM):   _previousMaxP_ = _maxP_;
574340     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

574341     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
574342     set WORK._EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK;
574343     by _group_;
MPRINT(EM_DIAGRAM):   by _group_;
574344     retain _start_;
MPRINT(EM_DIAGRAM):   retain _start_;
574345     if (first._group_) then do;
MPRINT(EM_DIAGRAM):   if (first._group_) then do;
574346     _start_ = _n_;
MPRINT(EM_DIAGRAM):   _start_ = _n_;
574347     end;
MPRINT(EM_DIAGRAM):   end;
574348     if (last._group_) then do;
MPRINT(EM_DIAGRAM):   if (last._group_) then do;
574349     _end_ = _n_;
MPRINT(EM_DIAGRAM):   _end_ = _n_;
574350     output;
MPRINT(EM_DIAGRAM):   output;
574351     end;
MPRINT(EM_DIAGRAM):   end;
574352     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

574353     filename emflow
574353   ! "C:\\predictive-models-project\Workspaces\EMWS8\MdlComp2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\MdlComp2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp2: Scoring ENSMBL5_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
574354     *------------------------------------------------------------*;
574355     * MdlComp2: Scoring ENSMBL5_TRAIN data;
574356     *------------------------------------------------------------*;
574357     data EMWS8.MdlComp2_TRAIN
574358     / view=EMWS8.MdlComp2_TRAIN
574359     ;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp2_TRAIN / view=EMWS8.MdlComp2_TRAIN ;
574360     set EMWS8.Ensmbl5_TRAIN
574361     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl5_TRAIN ;
574362     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\MdlComp2\EMFLOWSCORE.sas.
574363    +if (P_DepVar1 ge 0.97596035223601) then do;
MPRINT(EM_DIAGRAM):   if (P_DepVar1 ge 0.97596035223601) then do;
574364    +b_DepVar = 1;
MPRINT(EM_DIAGRAM):   b_DepVar = 1;
574365    +end;
MPRINT(EM_DIAGRAM):   end;
574366    +else
574367    +if (P_DepVar1 ge 0.82461545517682) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.82461545517682) then do;
574368    +b_DepVar = 2;
MPRINT(EM_DIAGRAM):   b_DepVar = 2;
574369    +end;
MPRINT(EM_DIAGRAM):   end;
574370    +else
574371    +if (P_DepVar1 ge 0.43851560202145) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.43851560202145) then do;
574372    +b_DepVar = 3;
MPRINT(EM_DIAGRAM):   b_DepVar = 3;
574373    +end;
MPRINT(EM_DIAGRAM):   end;
574374    +else
574375    +if (P_DepVar1 ge 0.15875702188516) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.15875702188516) then do;
574376    +b_DepVar = 4;
MPRINT(EM_DIAGRAM):   b_DepVar = 4;
574377    +end;
MPRINT(EM_DIAGRAM):   end;
574378    +else
574379    +if (P_DepVar1 ge 0.05580974220059) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.05580974220059) then do;
574380    +b_DepVar = 5;
MPRINT(EM_DIAGRAM):   b_DepVar = 5;
574381    +end;
MPRINT(EM_DIAGRAM):   end;
574382    +else
574383    +if (P_DepVar1 ge 0.02475639187003) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.02475639187003) then do;
574384    +b_DepVar = 6;
MPRINT(EM_DIAGRAM):   b_DepVar = 6;
574385    +end;
MPRINT(EM_DIAGRAM):   end;
574386    +else
574387    +if (P_DepVar1 ge 0.01303706875541) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.01303706875541) then do;
574388    +b_DepVar = 7;
MPRINT(EM_DIAGRAM):   b_DepVar = 7;
574389    +end;
MPRINT(EM_DIAGRAM):   end;
574390    +else
574391    +if (P_DepVar1 ge 0.00677929077893) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00677929077893) then do;
574392    +b_DepVar = 8;
MPRINT(EM_DIAGRAM):   b_DepVar = 8;
574393    +end;
MPRINT(EM_DIAGRAM):   end;
574394    +else
574395    +if (P_DepVar1 ge 0.0035748271898) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0035748271898) then do;
574396    +b_DepVar = 9;
MPRINT(EM_DIAGRAM):   b_DepVar = 9;
574397    +end;
MPRINT(EM_DIAGRAM):   end;
574398    +else
574399    +if (P_DepVar1 ge 0.00207501314718) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00207501314718) then do;
574400    +b_DepVar = 10;
MPRINT(EM_DIAGRAM):   b_DepVar = 10;
574401    +end;
MPRINT(EM_DIAGRAM):   end;
574402    +else
574403    +if (P_DepVar1 ge 0.00118469478068) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00118469478068) then do;
574404    +b_DepVar = 11;
MPRINT(EM_DIAGRAM):   b_DepVar = 11;
574405    +end;
MPRINT(EM_DIAGRAM):   end;
574406    +else
574407    +if (P_DepVar1 ge 0.00067685903439) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00067685903439) then do;
574408    +b_DepVar = 12;
MPRINT(EM_DIAGRAM):   b_DepVar = 12;
574409    +end;
MPRINT(EM_DIAGRAM):   end;
574410    +else
574411    +if (P_DepVar1 ge 0.0004127740982) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0004127740982) then do;
574412    +b_DepVar = 13;
MPRINT(EM_DIAGRAM):   b_DepVar = 13;
574413    +end;
MPRINT(EM_DIAGRAM):   end;
574414    +else
574415    +if (P_DepVar1 ge 0.00028653518082) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00028653518082) then do;
574416    +b_DepVar = 14;
MPRINT(EM_DIAGRAM):   b_DepVar = 14;
574417    +end;
MPRINT(EM_DIAGRAM):   end;
574418    +else
574419    +if (P_DepVar1 ge 0.00019854581739) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00019854581739) then do;
574420    +b_DepVar = 15;
MPRINT(EM_DIAGRAM):   b_DepVar = 15;
574421    +end;
MPRINT(EM_DIAGRAM):   end;
574422    +else
574423    +if (P_DepVar1 ge 0.00015165953031) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00015165953031) then do;
574424    +b_DepVar = 16;
MPRINT(EM_DIAGRAM):   b_DepVar = 16;
574425    +end;
MPRINT(EM_DIAGRAM):   end;
574426    +else
574427    +if (P_DepVar1 ge 0.00012430543393) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00012430543393) then do;
574428    +b_DepVar = 17;
MPRINT(EM_DIAGRAM):   b_DepVar = 17;
574429    +end;
MPRINT(EM_DIAGRAM):   end;
574430    +else
574431    +if (P_DepVar1 ge 0.00009474647395) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00009474647395) then do;
574432    +b_DepVar = 18;
MPRINT(EM_DIAGRAM):   b_DepVar = 18;
574433    +end;
MPRINT(EM_DIAGRAM):   end;
574434    +else
574435    +if (P_DepVar1 ge 0.00007581491619) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00007581491619) then do;
574436    +b_DepVar = 19;
MPRINT(EM_DIAGRAM):   b_DepVar = 19;
574437    +end;
MPRINT(EM_DIAGRAM):   end;
574438    +else
574439    +do;
MPRINT(EM_DIAGRAM):   else do;
574440    +b_DepVar = 20;
MPRINT(EM_DIAGRAM):   b_DepVar = 20;
574441    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
574442     run;

NOTE: DATA STEP view saved on file EMWS8.MDLCOMP2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.ENSMBL5_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
574443     quit;
574444     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
574445     filename emflow
574445   ! "C:\\predictive-models-project\Workspaces\EMWS8\MdlComp2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\MdlComp2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp2: Scoring ENSMBL5_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
574446     *------------------------------------------------------------*;
574447     * MdlComp2: Scoring ENSMBL5_VALIDATE data;
574448     *------------------------------------------------------------*;
574449     data EMWS8.MdlComp2_VALIDATE
574450     / view=EMWS8.MdlComp2_VALIDATE
574451     ;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp2_VALIDATE / view=EMWS8.MdlComp2_VALIDATE ;
574452     set EMWS8.Ensmbl5_VALIDATE
574453     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl5_VALIDATE ;
574454     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\MdlComp2\EMFLOWSCORE.sas.
574455    +if (P_DepVar1 ge 0.97596035223601) then do;
MPRINT(EM_DIAGRAM):   if (P_DepVar1 ge 0.97596035223601) then do;
574456    +b_DepVar = 1;
MPRINT(EM_DIAGRAM):   b_DepVar = 1;
574457    +end;
MPRINT(EM_DIAGRAM):   end;
574458    +else
574459    +if (P_DepVar1 ge 0.82461545517682) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.82461545517682) then do;
574460    +b_DepVar = 2;
MPRINT(EM_DIAGRAM):   b_DepVar = 2;
574461    +end;
MPRINT(EM_DIAGRAM):   end;
574462    +else
574463    +if (P_DepVar1 ge 0.43851560202145) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.43851560202145) then do;
574464    +b_DepVar = 3;
MPRINT(EM_DIAGRAM):   b_DepVar = 3;
574465    +end;
MPRINT(EM_DIAGRAM):   end;
574466    +else
574467    +if (P_DepVar1 ge 0.15875702188516) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.15875702188516) then do;
574468    +b_DepVar = 4;
MPRINT(EM_DIAGRAM):   b_DepVar = 4;
574469    +end;
MPRINT(EM_DIAGRAM):   end;
574470    +else
574471    +if (P_DepVar1 ge 0.05580974220059) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.05580974220059) then do;
574472    +b_DepVar = 5;
MPRINT(EM_DIAGRAM):   b_DepVar = 5;
574473    +end;
MPRINT(EM_DIAGRAM):   end;
574474    +else
574475    +if (P_DepVar1 ge 0.02475639187003) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.02475639187003) then do;
574476    +b_DepVar = 6;
MPRINT(EM_DIAGRAM):   b_DepVar = 6;
574477    +end;
MPRINT(EM_DIAGRAM):   end;
574478    +else
574479    +if (P_DepVar1 ge 0.01303706875541) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.01303706875541) then do;
574480    +b_DepVar = 7;
MPRINT(EM_DIAGRAM):   b_DepVar = 7;
574481    +end;
MPRINT(EM_DIAGRAM):   end;
574482    +else
574483    +if (P_DepVar1 ge 0.00677929077893) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00677929077893) then do;
574484    +b_DepVar = 8;
MPRINT(EM_DIAGRAM):   b_DepVar = 8;
574485    +end;
MPRINT(EM_DIAGRAM):   end;
574486    +else
574487    +if (P_DepVar1 ge 0.0035748271898) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0035748271898) then do;
574488    +b_DepVar = 9;
MPRINT(EM_DIAGRAM):   b_DepVar = 9;
574489    +end;
MPRINT(EM_DIAGRAM):   end;
574490    +else
574491    +if (P_DepVar1 ge 0.00207501314718) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00207501314718) then do;
574492    +b_DepVar = 10;
MPRINT(EM_DIAGRAM):   b_DepVar = 10;
574493    +end;
MPRINT(EM_DIAGRAM):   end;
574494    +else
574495    +if (P_DepVar1 ge 0.00118469478068) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00118469478068) then do;
574496    +b_DepVar = 11;
MPRINT(EM_DIAGRAM):   b_DepVar = 11;
574497    +end;
MPRINT(EM_DIAGRAM):   end;
574498    +else
574499    +if (P_DepVar1 ge 0.00067685903439) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00067685903439) then do;
574500    +b_DepVar = 12;
MPRINT(EM_DIAGRAM):   b_DepVar = 12;
574501    +end;
MPRINT(EM_DIAGRAM):   end;
574502    +else
574503    +if (P_DepVar1 ge 0.0004127740982) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.0004127740982) then do;
574504    +b_DepVar = 13;
MPRINT(EM_DIAGRAM):   b_DepVar = 13;
574505    +end;
MPRINT(EM_DIAGRAM):   end;
574506    +else
574507    +if (P_DepVar1 ge 0.00028653518082) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00028653518082) then do;
574508    +b_DepVar = 14;
MPRINT(EM_DIAGRAM):   b_DepVar = 14;
574509    +end;
MPRINT(EM_DIAGRAM):   end;
574510    +else
574511    +if (P_DepVar1 ge 0.00019854581739) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00019854581739) then do;
574512    +b_DepVar = 15;
MPRINT(EM_DIAGRAM):   b_DepVar = 15;
574513    +end;
MPRINT(EM_DIAGRAM):   end;
574514    +else
574515    +if (P_DepVar1 ge 0.00015165953031) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00015165953031) then do;
574516    +b_DepVar = 16;
MPRINT(EM_DIAGRAM):   b_DepVar = 16;
574517    +end;
MPRINT(EM_DIAGRAM):   end;
574518    +else
574519    +if (P_DepVar1 ge 0.00012430543393) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00012430543393) then do;
574520    +b_DepVar = 17;
MPRINT(EM_DIAGRAM):   b_DepVar = 17;
574521    +end;
MPRINT(EM_DIAGRAM):   end;
574522    +else
574523    +if (P_DepVar1 ge 0.00009474647395) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00009474647395) then do;
574524    +b_DepVar = 18;
MPRINT(EM_DIAGRAM):   b_DepVar = 18;
574525    +end;
MPRINT(EM_DIAGRAM):   end;
574526    +else
574527    +if (P_DepVar1 ge 0.00007581491619) then do;
MPRINT(EM_DIAGRAM):   else if (P_DepVar1 ge 0.00007581491619) then do;
574528    +b_DepVar = 19;
MPRINT(EM_DIAGRAM):   b_DepVar = 19;
574529    +end;
MPRINT(EM_DIAGRAM):   end;
574530    +else
574531    +do;
MPRINT(EM_DIAGRAM):   else do;
574532    +b_DepVar = 20;
MPRINT(EM_DIAGRAM):   b_DepVar = 20;
574533    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
574534     run;

NOTE: DATA STEP view saved on file EMWS8.MDLCOMP2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.ENSMBL5_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
574535     quit;
574536     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
574537     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
574538     * MdlComp2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * MdlComp2: Computing metadata for TRAIN data;
574539     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.MDLCOMP2_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.09 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.MdlComp2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.MdlComp2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.MdlComp2_TRAIN out=WORK.M0I_90AM noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0I_90AM;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0I_90AM(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0I_90AM;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0I_90AM;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2K4IZJ0 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2K4IZJ0;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2K4IZJ0;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2F346LD(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2K4IZJ0;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2K4IZJ0;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2K4IZJ0;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2K4IZJ0;
MPRINT(EMADVISECOLUMNS):   set WORK.M2K4IZJ0;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Ensmbl5_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl5_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.MdlComp2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "MdlComp2";
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS8.MDLCOMP2_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
NOTE: View EMWS8.MDLCOMP2_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
