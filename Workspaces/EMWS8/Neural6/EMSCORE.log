MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "10 de Março de 
2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "06H11m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                10 de Março de 2016
Time:                06H11m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3KX0PYZ 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural6\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3KX0PYZ new;
MPRINT(EM_DIAGRAM):   run;
169585     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
169586     set EMWS8.Neural6_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural6_OUTKEY;
169587     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
169588     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.NEURAL6_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

169589     filename emflow
169589   ! "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural6: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169590     *------------------------------------------------------------*;
169591     * Neural6: Scoring DATA data;
169592     *------------------------------------------------------------*;
169593     data EMWS8.Neural6_TRAIN
169594     / view=EMWS8.Neural6_TRAIN
169595     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural6_TRAIN / view=EMWS8.Neural6_TRAIN ;
169596     set EMWS8.Varsel_TRAIN
169597     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN ;
169598     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural6\EMFLOWSCORE.sas.
169599    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
169600    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
169601    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
169602    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
169603    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
169604    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
169605    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
169606    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
169607    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
169608    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
169609    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
169610    +LENGTH _WARN_ $4
169611    +      F_DepVar  $ 12
169612    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
169613    +      label S_CatPurchase = 'Standard: CatPurchase' ;
MPRINT(EM_DIAGRAM):   label S_CatPurchase = 'Standard: CatPurchase' ;
169614    +
169615    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
169616    +
169617    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
169618    +
169619    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
169620    +
169621    +      label S_RMntFrq_Exmpl2 = 'Standard: RMntFrq_Exmpl2' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq_Exmpl2 = 'Standard: RMntFrq_Exmpl2' ;
169622    +
169623    +      label S_Recomendation = 'Standard: Recomendation' ;
MPRINT(EM_DIAGRAM):   label S_Recomendation = 'Standard: Recomendation' ;
169624    +
169625    +      label G_Education0 = 'Dummy: G_Education=0' ;
MPRINT(EM_DIAGRAM):   label G_Education0 = 'Dummy: G_Education=0' ;
169626    +
169627    +      label G_Education1 = 'Dummy: G_Education=1' ;
MPRINT(EM_DIAGRAM):   label G_Education1 = 'Dummy: G_Education=1' ;
169628    +
169629    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
169630    +
169631    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
169632    +
169633    +      label G_Marital_Status2 = 'Dummy: G_Marital_Status=2' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status2 = 'Dummy: G_Marital_Status=2' ;
169634    +
169635    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
169636    +
169637    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
169638    +
169639    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
169640    +
169641    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
169642    +
169643    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
169644    +
169645    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
169646    +
169647    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
169648    +
169649    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
169650    +
169651    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
169652    +
169653    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
169654    +
169655    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
169656    +
169657    +*** Generate dummy variables for G_Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Education ;
169658    +drop G_Education0 G_Education1 ;
MPRINT(EM_DIAGRAM):   drop G_Education0 G_Education1 ;
169659    +if missing( G_Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Education ) then do;
169660    +   G_Education0 = .;
MPRINT(EM_DIAGRAM):   G_Education0 = .;
169661    +   G_Education1 = .;
MPRINT(EM_DIAGRAM):   G_Education1 = .;
169662    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169663    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169664    +end;
MPRINT(EM_DIAGRAM):   end;
169665    +else do;
MPRINT(EM_DIAGRAM):   else do;
169666    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
169667    +   _dm12 = put( G_Education , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Education , BEST12. );
169668    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169669    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
169670    +      G_Education0 = -1;
MPRINT(EM_DIAGRAM):   G_Education0 = -1;
169671    +      G_Education1 = -1;
MPRINT(EM_DIAGRAM):   G_Education1 = -1;
169672    +   end;
MPRINT(EM_DIAGRAM):   end;
169673    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
169674    +      G_Education0 = 0;
MPRINT(EM_DIAGRAM):   G_Education0 = 0;
169675    +      G_Education1 = 1;
MPRINT(EM_DIAGRAM):   G_Education1 = 1;
169676    +   end;
MPRINT(EM_DIAGRAM):   end;
169677    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
169678    +      G_Education0 = 1;
MPRINT(EM_DIAGRAM):   G_Education0 = 1;
169679    +      G_Education1 = 0;
MPRINT(EM_DIAGRAM):   G_Education1 = 0;
169680    +   end;
MPRINT(EM_DIAGRAM):   end;
169681    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169682    +      G_Education0 = .;
MPRINT(EM_DIAGRAM):   G_Education0 = .;
169683    +      G_Education1 = .;
MPRINT(EM_DIAGRAM):   G_Education1 = .;
169684    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169685    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169686    +   end;
MPRINT(EM_DIAGRAM):   end;
169687    +end;
MPRINT(EM_DIAGRAM):   end;
169688    +
169689    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
169690    +drop G_Marital_Status0 G_Marital_Status1 G_Marital_Status2 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 G_Marital_Status2 ;
169691    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
169692    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
169693    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
169694    +   G_Marital_Status2 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status2 = .;
169695    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169696    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169697    +end;
MPRINT(EM_DIAGRAM):   end;
169698    +else do;
MPRINT(EM_DIAGRAM):   else do;
169699    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
169700    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
169701    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169702    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
169703    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
169704    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
169705    +      G_Marital_Status2 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status2 = 1;
169706    +   end;
MPRINT(EM_DIAGRAM):   end;
169707    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
169708    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
169709    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
169710    +      G_Marital_Status2 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status2 = -1;
169711    +   end;
MPRINT(EM_DIAGRAM):   end;
169712    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
169713    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
169714    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
169715    +      G_Marital_Status2 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status2 = 0;
169716    +   end;
MPRINT(EM_DIAGRAM):   end;
169717    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
169718    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
169719    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
169720    +      G_Marital_Status2 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status2 = 0;
169721    +   end;
MPRINT(EM_DIAGRAM):   end;
169722    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169723    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
169724    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
169725    +      G_Marital_Status2 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status2 = .;
169726    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169727    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169728    +   end;
MPRINT(EM_DIAGRAM):   end;
169729    +end;
MPRINT(EM_DIAGRAM):   end;
169730    +
169731    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169732    +*** Checking missing input Interval
169733    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
169734    +
169735    +IF NMISS(
169736    +   CatPurchase ,
169737    +   Frq ,
169738    +   Income ,
169739    +   Mnt ,
169740    +   RMntFrq_Exmpl2 ,
169741    +   Recomendation   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( CatPurchase , Frq , Income , Mnt , RMntFrq_Exmpl2 , 
Recomendation ) THEN DO;
169742    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
169743    +
169744    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169745    +END;
MPRINT(EM_DIAGRAM):   END;
169746    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169747    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
169748    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169749    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
169750    +   S_CatPurchase  =    -3.17624192684474 +     0.05492769453828 * CatPurchase
169751    +         ;
MPRINT(EM_DIAGRAM):   S_CatPurchase = -3.17624192684474 + 0.05492769453828 * CatPurchase ;
169752    +   S_Frq  =    -1.82502911267462 +     0.09007239636797 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.82502911267462 + 0.09007239636797 * Frq ;
169753    +   S_Income  =    -2.63433937820015 +     0.00003528796161 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.63433937820015 + 0.00003528796161 * Income ;
169754    +   S_Mnt  =     -0.9789629518701 +     0.00146441725342 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -0.9789629518701 + 0.00146441725342 * Mnt ;
169755    +   S_RMntFrq_Exmpl2  =    -1.44858342808669 +     0.05925088238452 *
169756    +        RMntFrq_Exmpl2 ;
MPRINT(EM_DIAGRAM):   S_RMntFrq_Exmpl2 = -1.44858342808669 + 0.05925088238452 * RMntFrq_Exmpl2 
;
169757    +   S_Recomendation  =    -3.46611377322712 +     0.87281636006383 *
169758    +        Recomendation ;
MPRINT(EM_DIAGRAM):   S_Recomendation = -3.46611377322712 + 0.87281636006383 * Recomendation ;
169759    +END;
MPRINT(EM_DIAGRAM):   END;
169760    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
169761    +   IF MISSING( CatPurchase ) THEN S_CatPurchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( CatPurchase ) THEN S_CatPurchase = . ;
169762    +   ELSE S_CatPurchase  =    -3.17624192684474 +     0.05492769453828 *
169763    +        CatPurchase ;
MPRINT(EM_DIAGRAM):   ELSE S_CatPurchase = -3.17624192684474 + 0.05492769453828 * CatPurchase ;
169764    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
169765    +   ELSE S_Frq  =    -1.82502911267462 +     0.09007239636797 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.82502911267462 + 0.09007239636797 * Frq ;
169766    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
169767    +   ELSE S_Income  =    -2.63433937820015 +     0.00003528796161 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.63433937820015 + 0.00003528796161 * Income ;
169768    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
169769    +   ELSE S_Mnt  =     -0.9789629518701 +     0.00146441725342 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -0.9789629518701 + 0.00146441725342 * Mnt ;
169770    +   IF MISSING( RMntFrq_Exmpl2 ) THEN S_RMntFrq_Exmpl2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq_Exmpl2 ) THEN S_RMntFrq_Exmpl2 = . ;
169771    +   ELSE S_RMntFrq_Exmpl2  =    -1.44858342808669 +     0.05925088238452 *
169772    +        RMntFrq_Exmpl2 ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq_Exmpl2 = -1.44858342808669 + 0.05925088238452 * 
RMntFrq_Exmpl2 ;
169773    +   IF MISSING( Recomendation ) THEN S_Recomendation  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recomendation ) THEN S_Recomendation = . ;
169774    +   ELSE S_Recomendation  =    -3.46611377322712 +     0.87281636006383 *
169775    +        Recomendation ;
MPRINT(EM_DIAGRAM):   ELSE S_Recomendation = -3.46611377322712 + 0.87281636006383 * 
Recomendation ;
169776    +END;
MPRINT(EM_DIAGRAM):   END;
169777    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169778    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
169779    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169780    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169781    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
169782    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169783    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
169784    +   H11  =    -3.11560279145094 * S_CatPurchase  +    -2.98746437818575 * S_Frq
169785    +          +    -3.18166954013426 * S_Income  +     2.06131459525333 * S_Mnt
169786    +          +    -0.60691351685759 * S_RMntFrq_Exmpl2  +     -1.8953924671976 *
169787    +        S_Recomendation ;
MPRINT(EM_DIAGRAM):   H11 = -3.11560279145094 * S_CatPurchase + -2.98746437818575 * S_Frq + 
-3.18166954013426 * S_Income + 2.06131459525333 * S_Mnt + -0.60691351685759 * S_RMntFrq_Exmpl2 
+ -1.8953924671976 * S_Recomendation ;
169788    +   H12  =        0.20567294398 * S_CatPurchase  +     0.68140438555215 * S_Frq
169789    +          +     0.25414713104295 * S_Income  +    -0.24200124374579 * S_Mnt
169790    +          +    -0.28877851221069 * S_RMntFrq_Exmpl2  +     0.06595475445787 *
169791    +        S_Recomendation ;
MPRINT(EM_DIAGRAM):   H12 = 0.20567294398 * S_CatPurchase + 0.68140438555215 * S_Frq + 
0.25414713104295 * S_Income + -0.24200124374579 * S_Mnt + -0.28877851221069 * S_RMntFrq_Exmpl2 
+ 0.06595475445787 * S_Recomendation ;
169792    +   H13  =     1.85459275018905 * S_CatPurchase  +    -0.20122942207126 * S_Frq
169793    +          +     3.25484715317542 * S_Income  +     1.90804142554281 * S_Mnt
169794    +          +     4.33709602868161 * S_RMntFrq_Exmpl2  +    -1.38461020724642 *
169795    +        S_Recomendation ;
MPRINT(EM_DIAGRAM):   H13 = 1.85459275018905 * S_CatPurchase + -0.20122942207126 * S_Frq + 
3.25484715317542 * S_Income + 1.90804142554281 * S_Mnt + 4.33709602868161 * S_RMntFrq_Exmpl2 + 
-1.38461020724642 * S_Recomendation ;
169796    +   H11  = H11  +     0.80285063041667 * G_Education0
169797    +          +     0.85648290810406 * G_Education1  +     3.53182703250341 *
169798    +        G_Marital_Status0  +     -4.8880482805563 * G_Marital_Status1
169799    +          +    -1.61176366658641 * G_Marital_Status2 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.80285063041667 * G_Education0 + 0.85648290810406 * 
G_Education1 + 3.53182703250341 * G_Marital_Status0 + -4.8880482805563 * G_Marital_Status1 + 
-1.61176366658641 * G_Marital_Status2 ;
169800    +   H12  = H12  +     0.00046445188866 * G_Education0
169801    +          +      0.0020518728321 * G_Education1  +     0.07055369307704 *
169802    +        G_Marital_Status0  +     0.05945850400586 * G_Marital_Status1
169803    +          +     0.00511807054093 * G_Marital_Status2 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00046445188866 * G_Education0 + 0.0020518728321 * 
G_Education1 + 0.07055369307704 * G_Marital_Status0 + 0.05945850400586 * G_Marital_Status1 + 
0.00511807054093 * G_Marital_Status2 ;
169804    +   H13  = H13  +     1.00785565186553 * G_Education0
169805    +          +     0.22682328873964 * G_Education1  +     0.23316846763935 *
169806    +        G_Marital_Status0  +     1.58222741921609 * G_Marital_Status1
169807    +          +     0.42777325831913 * G_Marital_Status2 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.00785565186553 * G_Education0 + 0.22682328873964 * 
G_Education1 + 0.23316846763935 * G_Marital_Status0 + 1.58222741921609 * G_Marital_Status1 + 
0.42777325831913 * G_Marital_Status2 ;
169808    +   H11  =    -0.72250231964496 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.72250231964496 + H11 ;
169809    +   H12  =    -0.43449149632867 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.43449149632867 + H12 ;
169810    +   H13  =     0.21053714247565 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.21053714247565 + H13 ;
169811    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
169812    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
169813    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
169814    +END;
MPRINT(EM_DIAGRAM):   END;
169815    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
169816    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
169817    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
169818    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
169819    +END;
MPRINT(EM_DIAGRAM):   END;
169820    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169821    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
169822    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169823    +
169824    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
169825    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
169826    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
169827    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
169828    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
169829    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169830    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
169831    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
169832    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
169833    +end;
MPRINT(EM_DIAGRAM):   end;
169834    +else do;
MPRINT(EM_DIAGRAM):   else do;
169835    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
169836    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
169837    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
169838    +   end;
MPRINT(EM_DIAGRAM):   end;
169839    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
169840    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
169841    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
169842    +   end;
MPRINT(EM_DIAGRAM):   end;
169843    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169844    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
169845    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
169846    +   end;
MPRINT(EM_DIAGRAM):   end;
169847    +end;
MPRINT(EM_DIAGRAM):   end;
169848    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
169849    +   P_DepVar1  =     2.39994341984673 * H11  +     4.50843119675702 * H12
169850    +          +     3.86718762236728 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.39994341984673 * H11 + 4.50843119675702 * H12 + 
3.86718762236728 * H13 ;
169851    +   P_DepVar1  =    -4.31618221958636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.31618221958636 + P_DepVar1 ;
169852    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
169853    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
169854    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
169855    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
169856    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
169857    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
169858    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
169859    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
169860    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
169861    +END;
MPRINT(EM_DIAGRAM):   END;
169862    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
169863    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
169864    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
169865    +END;
MPRINT(EM_DIAGRAM):   END;
169866    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
169867    +   P_DepVar1  =     0.06989576946658;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.06989576946658;
169868    +   P_DepVar0  =     0.93010423053341;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.93010423053341;
169869    +END;
MPRINT(EM_DIAGRAM):   END;
169870    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
169871    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
169872    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
169873    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
169874    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
169875    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
169876    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
169877    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169878    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
169879    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169880    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
169881    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
169882    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
169883    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
169884    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
169885    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
169886    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
169887    +END;
MPRINT(EM_DIAGRAM):   END;
169888    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
169889    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
169890    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
169891    +drop
169892    +H11
169893    +H12
169894    +H13
169895    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
169896    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
169897     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL6_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
169898     quit;
169899     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
169900     filename emflow
169900   ! "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural6: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169901     *------------------------------------------------------------*;
169902     * Neural6: Scoring VALIDATE data;
169903     *------------------------------------------------------------*;
169904     data EMWS8.Neural6_VALIDATE
169905     / view=EMWS8.Neural6_VALIDATE
169906     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural6_VALIDATE / view=EMWS8.Neural6_VALIDATE ;
169907     set EMWS8.Varsel_VALIDATE
169908     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_VALIDATE ;
169909     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural6\EMFLOWSCORE.sas.
169910    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
169911    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
169912    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
169913    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
169914    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
169915    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
169916    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
169917    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
169918    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
169919    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
169920    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
169921    +LENGTH _WARN_ $4
169922    +      F_DepVar  $ 12
169923    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
169924    +      label S_CatPurchase = 'Standard: CatPurchase' ;
MPRINT(EM_DIAGRAM):   label S_CatPurchase = 'Standard: CatPurchase' ;
169925    +
169926    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
169927    +
169928    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
169929    +
169930    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
169931    +
169932    +      label S_RMntFrq_Exmpl2 = 'Standard: RMntFrq_Exmpl2' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq_Exmpl2 = 'Standard: RMntFrq_Exmpl2' ;
169933    +
169934    +      label S_Recomendation = 'Standard: Recomendation' ;
MPRINT(EM_DIAGRAM):   label S_Recomendation = 'Standard: Recomendation' ;
169935    +
169936    +      label G_Education0 = 'Dummy: G_Education=0' ;
MPRINT(EM_DIAGRAM):   label G_Education0 = 'Dummy: G_Education=0' ;
169937    +
169938    +      label G_Education1 = 'Dummy: G_Education=1' ;
MPRINT(EM_DIAGRAM):   label G_Education1 = 'Dummy: G_Education=1' ;
169939    +
169940    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
169941    +
169942    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
169943    +
169944    +      label G_Marital_Status2 = 'Dummy: G_Marital_Status=2' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status2 = 'Dummy: G_Marital_Status=2' ;
169945    +
169946    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
169947    +
169948    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
169949    +
169950    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
169951    +
169952    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
169953    +
169954    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
169955    +
169956    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
169957    +
169958    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
169959    +
169960    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
169961    +
169962    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
169963    +
169964    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
169965    +
169966    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
169967    +
169968    +*** Generate dummy variables for G_Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Education ;
169969    +drop G_Education0 G_Education1 ;
MPRINT(EM_DIAGRAM):   drop G_Education0 G_Education1 ;
169970    +if missing( G_Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Education ) then do;
169971    +   G_Education0 = .;
MPRINT(EM_DIAGRAM):   G_Education0 = .;
169972    +   G_Education1 = .;
MPRINT(EM_DIAGRAM):   G_Education1 = .;
169973    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169974    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169975    +end;
MPRINT(EM_DIAGRAM):   end;
169976    +else do;
MPRINT(EM_DIAGRAM):   else do;
169977    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
169978    +   _dm12 = put( G_Education , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Education , BEST12. );
169979    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169980    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
169981    +      G_Education0 = -1;
MPRINT(EM_DIAGRAM):   G_Education0 = -1;
169982    +      G_Education1 = -1;
MPRINT(EM_DIAGRAM):   G_Education1 = -1;
169983    +   end;
MPRINT(EM_DIAGRAM):   end;
169984    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
169985    +      G_Education0 = 0;
MPRINT(EM_DIAGRAM):   G_Education0 = 0;
169986    +      G_Education1 = 1;
MPRINT(EM_DIAGRAM):   G_Education1 = 1;
169987    +   end;
MPRINT(EM_DIAGRAM):   end;
169988    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
169989    +      G_Education0 = 1;
MPRINT(EM_DIAGRAM):   G_Education0 = 1;
169990    +      G_Education1 = 0;
MPRINT(EM_DIAGRAM):   G_Education1 = 0;
169991    +   end;
MPRINT(EM_DIAGRAM):   end;
169992    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169993    +      G_Education0 = .;
MPRINT(EM_DIAGRAM):   G_Education0 = .;
169994    +      G_Education1 = .;
MPRINT(EM_DIAGRAM):   G_Education1 = .;
169995    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169996    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169997    +   end;
MPRINT(EM_DIAGRAM):   end;
169998    +end;
MPRINT(EM_DIAGRAM):   end;
169999    +
170000    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
170001    +drop G_Marital_Status0 G_Marital_Status1 G_Marital_Status2 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 G_Marital_Status2 ;
170002    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
170003    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
170004    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
170005    +   G_Marital_Status2 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status2 = .;
170006    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170007    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170008    +end;
MPRINT(EM_DIAGRAM):   end;
170009    +else do;
MPRINT(EM_DIAGRAM):   else do;
170010    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170011    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
170012    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170013    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
170014    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
170015    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
170016    +      G_Marital_Status2 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status2 = 1;
170017    +   end;
MPRINT(EM_DIAGRAM):   end;
170018    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
170019    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
170020    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
170021    +      G_Marital_Status2 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status2 = -1;
170022    +   end;
MPRINT(EM_DIAGRAM):   end;
170023    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
170024    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
170025    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
170026    +      G_Marital_Status2 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status2 = 0;
170027    +   end;
MPRINT(EM_DIAGRAM):   end;
170028    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
170029    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
170030    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
170031    +      G_Marital_Status2 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status2 = 0;
170032    +   end;
MPRINT(EM_DIAGRAM):   end;
170033    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170034    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
170035    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
170036    +      G_Marital_Status2 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status2 = .;
170037    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170038    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170039    +   end;
MPRINT(EM_DIAGRAM):   end;
170040    +end;
MPRINT(EM_DIAGRAM):   end;
170041    +
170042    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170043    +*** Checking missing input Interval
170044    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
170045    +
170046    +IF NMISS(
170047    +   CatPurchase ,
170048    +   Frq ,
170049    +   Income ,
170050    +   Mnt ,
170051    +   RMntFrq_Exmpl2 ,
170052    +   Recomendation   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( CatPurchase , Frq , Income , Mnt , RMntFrq_Exmpl2 , 
Recomendation ) THEN DO;
170053    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
170054    +
170055    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170056    +END;
MPRINT(EM_DIAGRAM):   END;
170057    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170058    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
170059    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170060    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170061    +   S_CatPurchase  =    -3.17624192684474 +     0.05492769453828 * CatPurchase
170062    +         ;
MPRINT(EM_DIAGRAM):   S_CatPurchase = -3.17624192684474 + 0.05492769453828 * CatPurchase ;
170063    +   S_Frq  =    -1.82502911267462 +     0.09007239636797 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.82502911267462 + 0.09007239636797 * Frq ;
170064    +   S_Income  =    -2.63433937820015 +     0.00003528796161 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.63433937820015 + 0.00003528796161 * Income ;
170065    +   S_Mnt  =     -0.9789629518701 +     0.00146441725342 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -0.9789629518701 + 0.00146441725342 * Mnt ;
170066    +   S_RMntFrq_Exmpl2  =    -1.44858342808669 +     0.05925088238452 *
170067    +        RMntFrq_Exmpl2 ;
MPRINT(EM_DIAGRAM):   S_RMntFrq_Exmpl2 = -1.44858342808669 + 0.05925088238452 * RMntFrq_Exmpl2 
;
170068    +   S_Recomendation  =    -3.46611377322712 +     0.87281636006383 *
170069    +        Recomendation ;
MPRINT(EM_DIAGRAM):   S_Recomendation = -3.46611377322712 + 0.87281636006383 * Recomendation ;
170070    +END;
MPRINT(EM_DIAGRAM):   END;
170071    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170072    +   IF MISSING( CatPurchase ) THEN S_CatPurchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( CatPurchase ) THEN S_CatPurchase = . ;
170073    +   ELSE S_CatPurchase  =    -3.17624192684474 +     0.05492769453828 *
170074    +        CatPurchase ;
MPRINT(EM_DIAGRAM):   ELSE S_CatPurchase = -3.17624192684474 + 0.05492769453828 * CatPurchase ;
170075    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
170076    +   ELSE S_Frq  =    -1.82502911267462 +     0.09007239636797 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.82502911267462 + 0.09007239636797 * Frq ;
170077    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
170078    +   ELSE S_Income  =    -2.63433937820015 +     0.00003528796161 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.63433937820015 + 0.00003528796161 * Income ;
170079    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
170080    +   ELSE S_Mnt  =     -0.9789629518701 +     0.00146441725342 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -0.9789629518701 + 0.00146441725342 * Mnt ;
170081    +   IF MISSING( RMntFrq_Exmpl2 ) THEN S_RMntFrq_Exmpl2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq_Exmpl2 ) THEN S_RMntFrq_Exmpl2 = . ;
170082    +   ELSE S_RMntFrq_Exmpl2  =    -1.44858342808669 +     0.05925088238452 *
170083    +        RMntFrq_Exmpl2 ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq_Exmpl2 = -1.44858342808669 + 0.05925088238452 * 
RMntFrq_Exmpl2 ;
170084    +   IF MISSING( Recomendation ) THEN S_Recomendation  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recomendation ) THEN S_Recomendation = . ;
170085    +   ELSE S_Recomendation  =    -3.46611377322712 +     0.87281636006383 *
170086    +        Recomendation ;
MPRINT(EM_DIAGRAM):   ELSE S_Recomendation = -3.46611377322712 + 0.87281636006383 * 
Recomendation ;
170087    +END;
MPRINT(EM_DIAGRAM):   END;
170088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170089    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
170090    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170092    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
170093    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170094    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170095    +   H11  =    -3.11560279145094 * S_CatPurchase  +    -2.98746437818575 * S_Frq
170096    +          +    -3.18166954013426 * S_Income  +     2.06131459525333 * S_Mnt
170097    +          +    -0.60691351685759 * S_RMntFrq_Exmpl2  +     -1.8953924671976 *
170098    +        S_Recomendation ;
MPRINT(EM_DIAGRAM):   H11 = -3.11560279145094 * S_CatPurchase + -2.98746437818575 * S_Frq + 
-3.18166954013426 * S_Income + 2.06131459525333 * S_Mnt + -0.60691351685759 * S_RMntFrq_Exmpl2 
+ -1.8953924671976 * S_Recomendation ;
170099    +   H12  =        0.20567294398 * S_CatPurchase  +     0.68140438555215 * S_Frq
170100    +          +     0.25414713104295 * S_Income  +    -0.24200124374579 * S_Mnt
170101    +          +    -0.28877851221069 * S_RMntFrq_Exmpl2  +     0.06595475445787 *
170102    +        S_Recomendation ;
MPRINT(EM_DIAGRAM):   H12 = 0.20567294398 * S_CatPurchase + 0.68140438555215 * S_Frq + 
0.25414713104295 * S_Income + -0.24200124374579 * S_Mnt + -0.28877851221069 * S_RMntFrq_Exmpl2 
+ 0.06595475445787 * S_Recomendation ;
170103    +   H13  =     1.85459275018905 * S_CatPurchase  +    -0.20122942207126 * S_Frq
170104    +          +     3.25484715317542 * S_Income  +     1.90804142554281 * S_Mnt
170105    +          +     4.33709602868161 * S_RMntFrq_Exmpl2  +    -1.38461020724642 *
170106    +        S_Recomendation ;
MPRINT(EM_DIAGRAM):   H13 = 1.85459275018905 * S_CatPurchase + -0.20122942207126 * S_Frq + 
3.25484715317542 * S_Income + 1.90804142554281 * S_Mnt + 4.33709602868161 * S_RMntFrq_Exmpl2 + 
-1.38461020724642 * S_Recomendation ;
170107    +   H11  = H11  +     0.80285063041667 * G_Education0
170108    +          +     0.85648290810406 * G_Education1  +     3.53182703250341 *
170109    +        G_Marital_Status0  +     -4.8880482805563 * G_Marital_Status1
170110    +          +    -1.61176366658641 * G_Marital_Status2 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.80285063041667 * G_Education0 + 0.85648290810406 * 
G_Education1 + 3.53182703250341 * G_Marital_Status0 + -4.8880482805563 * G_Marital_Status1 + 
-1.61176366658641 * G_Marital_Status2 ;
170111    +   H12  = H12  +     0.00046445188866 * G_Education0
170112    +          +      0.0020518728321 * G_Education1  +     0.07055369307704 *
170113    +        G_Marital_Status0  +     0.05945850400586 * G_Marital_Status1
170114    +          +     0.00511807054093 * G_Marital_Status2 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00046445188866 * G_Education0 + 0.0020518728321 * 
G_Education1 + 0.07055369307704 * G_Marital_Status0 + 0.05945850400586 * G_Marital_Status1 + 
0.00511807054093 * G_Marital_Status2 ;
170115    +   H13  = H13  +     1.00785565186553 * G_Education0
170116    +          +     0.22682328873964 * G_Education1  +     0.23316846763935 *
170117    +        G_Marital_Status0  +     1.58222741921609 * G_Marital_Status1
170118    +          +     0.42777325831913 * G_Marital_Status2 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.00785565186553 * G_Education0 + 0.22682328873964 * 
G_Education1 + 0.23316846763935 * G_Marital_Status0 + 1.58222741921609 * G_Marital_Status1 + 
0.42777325831913 * G_Marital_Status2 ;
170119    +   H11  =    -0.72250231964496 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.72250231964496 + H11 ;
170120    +   H12  =    -0.43449149632867 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.43449149632867 + H12 ;
170121    +   H13  =     0.21053714247565 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.21053714247565 + H13 ;
170122    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
170123    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
170124    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
170125    +END;
MPRINT(EM_DIAGRAM):   END;
170126    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170127    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
170128    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
170129    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
170130    +END;
MPRINT(EM_DIAGRAM):   END;
170131    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170132    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
170133    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170134    +
170135    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
170136    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
170137    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
170138    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
170139    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
170140    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170141    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
170142    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
170143    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
170144    +end;
MPRINT(EM_DIAGRAM):   end;
170145    +else do;
MPRINT(EM_DIAGRAM):   else do;
170146    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
170147    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
170148    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
170149    +   end;
MPRINT(EM_DIAGRAM):   end;
170150    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
170151    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
170152    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
170153    +   end;
MPRINT(EM_DIAGRAM):   end;
170154    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170155    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
170156    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
170157    +   end;
MPRINT(EM_DIAGRAM):   end;
170158    +end;
MPRINT(EM_DIAGRAM):   end;
170159    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170160    +   P_DepVar1  =     2.39994341984673 * H11  +     4.50843119675702 * H12
170161    +          +     3.86718762236728 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.39994341984673 * H11 + 4.50843119675702 * H12 + 
3.86718762236728 * H13 ;
170162    +   P_DepVar1  =    -4.31618221958636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.31618221958636 + P_DepVar1 ;
170163    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
170164    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
170165    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
170166    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
170167    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
170168    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
170169    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
170170    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
170171    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
170172    +END;
MPRINT(EM_DIAGRAM):   END;
170173    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170174    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
170175    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
170176    +END;
MPRINT(EM_DIAGRAM):   END;
170177    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
170178    +   P_DepVar1  =     0.06989576946658;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.06989576946658;
170179    +   P_DepVar0  =     0.93010423053341;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.93010423053341;
170180    +END;
MPRINT(EM_DIAGRAM):   END;
170181    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
170182    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
170183    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
170184    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
170185    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
170186    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
170187    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
170188    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170189    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
170190    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170191    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
170192    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
170193    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
170194    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
170195    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
170196    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
170197    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
170198    +END;
MPRINT(EM_DIAGRAM):   END;
170199    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
170200    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
170201    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
170202    +drop
170203    +H11
170204    +H12
170205    +H13
170206    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
170207    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
170208     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL6_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
170209     quit;
170210     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
170211     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
170212     * Neural6: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural6: Computing metadata for TRAIN data;
170213     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural6\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural6_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural6_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural6_TRAIN out=WORK.M1FGG5NL noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1FGG5NL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1FGG5NL(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1FGG5NL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1FGG5NL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M06I88B9 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M06I88B9;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M06I88B9;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2XAL_S_(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M06I88B9;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M06I88B9;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M06I88B9;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M06I88B9;
MPRINT(EMADVISECOLUMNS):   set WORK.M06I88B9;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural6";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural6";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural6";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural6: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
170525     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
170526     set EMWS8.Neural6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural6_EMINFO;
170527     where DATA='Neural6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
170528     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL6_EMINFO.
      WHERE (DATA='Neural6') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

170529     data EMWS8.Neural6_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural6_EMINFO;
170530     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
170531     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
170532     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
170536     run;
170537     data EMWS8.Neural6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural6_EMINFO;
170538     set EMWS8.Neural6_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural6_EMINFO WORK.MODELTEMP_INFO;
170539     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL6_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

170540     proc sort data = EMWS8.Neural6_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural6_EMINFO NOTHREADS;
170541     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
170542     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL6_EMINFO.
NOTE: The data set EMWS8.NEURAL6_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

170543     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
170544     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
170545     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

170546     proc sort data = EMWS8.Neural6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
170547     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
170548     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL6_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

170549     data EMWS8.Neural6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural6_EMINFO;
170550     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
170551     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
170552     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL6_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

170553     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
170554     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
170555     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
170556     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: View EMWS8.NEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
