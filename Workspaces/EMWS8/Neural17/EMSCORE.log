MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.25 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                09.25 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1N26YDS 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1N26YDS new;
MPRINT(EM_DIAGRAM):   run;
1522736    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
1522737    set EMWS8.Neural17_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural17_OUTKEY;
1522738    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
1522739    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.NEURAL17_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1522740    filename emflow
1522740  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural17: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1522741    *------------------------------------------------------------*;
1522742    * Neural17: Scoring DATA data;
1522743    *------------------------------------------------------------*;
1522744    data EMWS8.Neural17_TRAIN
1522745    / view=EMWS8.Neural17_TRAIN
1522746    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_TRAIN / view=EMWS8.Neural17_TRAIN ;
1522747    set EMWS8.PRINCOMP_TRAIN
1522748    ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
1522749    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas.
1522750   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1522751   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1522752   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1522753   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1522754   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1522755   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1522756   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1522757   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1522758   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1522759   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1522760   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1522761   +LENGTH _WARN_ $4
1522762   +      F_DepVar  $ 12
1522763   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1522764   +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
1522765   +
1522766   +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
1522767   +
1522768   +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
1522769   +
1522770   +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
1522771   +
1522772   +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
1522773   +
1522774   +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
1522775   +
1522776   +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
1522777   +
1522778   +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
1522779   +
1522780   +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
1522781   +
1522782   +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
1522783   +
1522784   +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
1522785   +
1522786   +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
1522787   +
1522788   +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
1522789   +
1522790   +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
1522791   +
1522792   +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
1522793   +
1522794   +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
1522795   +
1522796   +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
1522797   +
1522798   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1522799   +
1522800   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1522801   +
1522802   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1522803   +
1522804   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1522805   +
1522806   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1522807   +
1522808   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1522809   +
1522810   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1522811   +
1522812   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1522813   +
1522814   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1522815   +
1522816   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1522817   +
1522818   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1522819   +
1522820   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1522821   +
1522822   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1522823   +
1522824   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1522825   +
1522826   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1522827   +
1522828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522829   +*** Checking missing input Interval
1522830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1522831   +
1522832   +IF NMISS(
1522833   +   PC_1 ,
1522834   +   PC_10 ,
1522835   +   PC_11 ,
1522836   +   PC_12 ,
1522837   +   PC_13 ,
1522838   +   PC_14 ,
1522839   +   PC_15 ,
1522840   +   PC_16 ,
1522841   +   PC_17 ,
1522842   +   PC_2 ,
1522843   +   PC_3 ,
1522844   +   PC_4 ,
1522845   +   PC_5 ,
1522846   +   PC_6 ,
1522847   +   PC_7 ,
1522848   +   PC_8 ,
1522849   +   PC_9 ,
1522850   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
1522851   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1522852   +
1522853   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1522854   +END;
MPRINT(EM_DIAGRAM):   END;
1522855   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522856   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1522857   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522858   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1522859   +   S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1522860   +   S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1522861   +   S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1522862   +   S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1522863   +   S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1522864   +   S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1522865   +   S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1522866   +   S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1522867   +   S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1522868   +   S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1522869   +   S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1522870   +   S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1522871   +   S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1522872   +   S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1522873   +   S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1522874   +   S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1522875   +   S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1522876   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1522877   +END;
MPRINT(EM_DIAGRAM):   END;
1522878   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1522879   +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
1522880   +   ELSE S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1522881   +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
1522882   +   ELSE S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1522883   +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
1522884   +   ELSE S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1522885   +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
1522886   +   ELSE S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1522887   +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
1522888   +   ELSE S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1522889   +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
1522890   +   ELSE S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1522891   +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
1522892   +   ELSE S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1522893   +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
1522894   +   ELSE S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1522895   +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
1522896   +   ELSE S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1522897   +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
1522898   +   ELSE S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1522899   +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
1522900   +   ELSE S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1522901   +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
1522902   +   ELSE S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1522903   +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
1522904   +   ELSE S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1522905   +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
1522906   +   ELSE S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1522907   +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
1522908   +   ELSE S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1522909   +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
1522910   +   ELSE S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1522911   +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
1522912   +   ELSE S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1522913   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1522914   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1522915   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1522916   +END;
MPRINT(EM_DIAGRAM):   END;
1522917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522918   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1522919   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1522920   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1522921   +   H11  =     0.38540057734726 * S_PC_1  +    -0.43279453099596 * S_PC_10
1522922   +          +     0.59920506067633 * S_PC_11  +     0.48682242130264 * S_PC_12
1522923   +          +    -1.08699816133264 * S_PC_13  +     0.53744402592188 * S_PC_14
1522924   +          +    -0.48691779739696 * S_PC_15  +      0.1451667676912 * S_PC_16
1522925   +          +    -0.18650180951922 * S_PC_17  +    -0.25138739339948 * S_PC_2
1522926   +          +    -0.46370648806799 * S_PC_3  +     0.12330133579362 * S_PC_4
The SAS System

1522927   +          +    -0.04856622507452 * S_PC_5  +     0.11419647439533 * S_PC_6
1522928   +          +     0.31123941806644 * S_PC_7  +     0.34505865042606 * S_PC_8
1522929   +          +     0.26460680138987 * S_PC_9  +     0.26341199844406 *
1522930   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.38540057734726 * S_PC_1 + -0.43279453099596 * S_PC_10 + 
0.59920506067633 * S_PC_11 + 0.48682242130264 * S_PC_12 + -1.08699816133264 * S_PC_13 + 
0.53744402592188 * S_PC_14 + -0.48691779739696 * S_PC_15 + 0.1451667676912 * S_PC_16 + 
-0.18650180951922 * S_PC_17 + -0.25138739339948 * S_PC_2 + -0.46370648806799 * S_PC_3 + 
0.12330133579362 * S_PC_4 + -0.04856622507452 * S_PC_5 + 0.11419647439533 * S_PC_6 + 
0.31123941806644 * S_PC_7 + 0.34505865042606 * S_PC_8 + 0.26460680138987 * S_PC_9 + 
0.26341199844406 * S_Year_Birth ;
1522931   +   H12  =     0.40687324472096 * S_PC_1  +      0.1276016200478 * S_PC_10
1522932   +          +     0.02447385286653 * S_PC_11  +     0.14792924282834 * S_PC_12
1522933   +          +    -0.34908855710684 * S_PC_13  +     0.02963069560741 * S_PC_14
1522934   +          +     0.37626439148462 * S_PC_15  +     0.56033000528649 * S_PC_16
1522935   +          +    -0.55088490053836 * S_PC_17  +     -0.3322155548583 * S_PC_2
1522936   +          +    -0.02606666149303 * S_PC_3  +    -0.30668742927556 * S_PC_4
1522937   +          +    -0.07231771082496 * S_PC_5  +    -0.22889814669629 * S_PC_6
1522938   +          +     0.10728585083792 * S_PC_7  +     0.03501184370062 * S_PC_8
1522939   +          +    -0.03615073442528 * S_PC_9  +    -0.10870162717056 *
1522940   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.40687324472096 * S_PC_1 + 0.1276016200478 * S_PC_10 + 
0.02447385286653 * S_PC_11 + 0.14792924282834 * S_PC_12 + -0.34908855710684 * S_PC_13 + 
0.02963069560741 * S_PC_14 + 0.37626439148462 * S_PC_15 + 0.56033000528649 * S_PC_16 + 
-0.55088490053836 * S_PC_17 + -0.3322155548583 * S_PC_2 + -0.02606666149303 * S_PC_3 + 
-0.30668742927556 * S_PC_4 + -0.07231771082496 * S_PC_5 + -0.22889814669629 * S_PC_6 + 
0.10728585083792 * S_PC_7 + 0.03501184370062 * S_PC_8 + -0.03615073442528 * S_PC_9 + 
-0.10870162717056 * S_Year_Birth ;
1522941   +   H13  =    -0.33318211865559 * S_PC_1  +    -0.22286884176504 * S_PC_10
1522942   +          +    -0.24682716658778 * S_PC_11  +    -0.01163728763928 * S_PC_12
1522943   +          +     -0.3454456718463 * S_PC_13  +     0.73829435479942 * S_PC_14
1522944   +          +     -0.0990081836407 * S_PC_15  +     0.23161347911742 * S_PC_16
1522945   +          +     0.07564769050949 * S_PC_17  +    -1.04244198590504 * S_PC_2
1522946   +          +    -0.25844197601783 * S_PC_3  +     0.47152373003238 * S_PC_4
1522947   +          +    -0.19259781937509 * S_PC_5  +     0.00078589875849 * S_PC_6
1522948   +          +     -0.0888806128036 * S_PC_7  +     0.26564757892785 * S_PC_8
1522949   +          +     0.00956258863309 * S_PC_9  +    -0.41142005522589 *
1522950   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.33318211865559 * S_PC_1 + -0.22286884176504 * S_PC_10 + 
-0.24682716658778 * S_PC_11 + -0.01163728763928 * S_PC_12 + -0.3454456718463 * S_PC_13 + 
0.73829435479942 * S_PC_14 + -0.0990081836407 * S_PC_15 + 0.23161347911742 * S_PC_16 + 
0.07564769050949 * S_PC_17 + -1.04244198590504 * S_PC_2 + -0.25844197601783 * S_PC_3 + 
0.47152373003238 * S_PC_4 + -0.19259781937509 * S_PC_5 + 0.00078589875849 * S_PC_6 + 
-0.0888806128036 * S_PC_7 + 0.26564757892785 * S_PC_8 + 0.00956258863309 * S_PC_9 + 
-0.41142005522589 * S_Year_Birth ;
1522951   +   H14  =    -0.01410480224419 * S_PC_1  +     0.23581611886737 * S_PC_10
1522952   +          +    -0.54508192527959 * S_PC_11  +    -0.59388368211378 * S_PC_12
1522953   +          +     0.56351374615403 * S_PC_13  +     0.22919203465721 * S_PC_14
1522954   +          +    -0.07283089782334 * S_PC_15  +    -0.02491533703095 * S_PC_16
1522955   +          +     0.46708752546199 * S_PC_17  +     0.27437505233669 * S_PC_2
1522956   +          +    -0.22391635521238 * S_PC_3  +     0.40520551507185 * S_PC_4
1522957   +          +     0.40102783403095 * S_PC_5  +     -0.1949097882652 * S_PC_6
1522958   +          +     0.29494008634339 * S_PC_7  +    -0.20895351116474 * S_PC_8
1522959   +          +    -0.08435641721926 * S_PC_9  +    -0.04482587880914 *
1522960   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.01410480224419 * S_PC_1 + 0.23581611886737 * S_PC_10 + 
-0.54508192527959 * S_PC_11 + -0.59388368211378 * S_PC_12 + 0.56351374615403 * S_PC_13 + 
0.22919203465721 * S_PC_14 + -0.07283089782334 * S_PC_15 + -0.02491533703095 * S_PC_16 + 
0.46708752546199 * S_PC_17 + 0.27437505233669 * S_PC_2 + -0.22391635521238 * S_PC_3 + 
0.40520551507185 * S_PC_4 + 0.40102783403095 * S_PC_5 + -0.1949097882652 * S_PC_6 + 
0.29494008634339 * S_PC_7 + -0.20895351116474 * S_PC_8 + -0.08435641721926 * S_PC_9 + 
-0.04482587880914 * S_Year_Birth ;
1522961   +   H15  =     0.80399628556177 * S_PC_1  +    -0.38115756514784 * S_PC_10
1522962   +          +    -0.16836635895264 * S_PC_11  +    -0.49700220301883 * S_PC_12
1522963   +          +    -0.15419701300407 * S_PC_13  +    -0.12262605462744 * S_PC_14
1522964   +          +     0.05055464593811 * S_PC_15  +    -0.08029669705648 * S_PC_16
1522965   +          +     0.34596061551155 * S_PC_17  +     -0.4853190843731 * S_PC_2
1522966   +          +     0.34643598338729 * S_PC_3  +     0.35149689283798 * S_PC_4
1522967   +          +    -0.51092356339588 * S_PC_5  +    -0.19503486634854 * S_PC_6
1522968   +          +    -0.46872319403931 * S_PC_7  +    -0.19832664785317 * S_PC_8
1522969   +          +     0.46629992385752 * S_PC_9  +     0.14919176659144 *
1522970   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.80399628556177 * S_PC_1 + -0.38115756514784 * S_PC_10 + 
-0.16836635895264 * S_PC_11 + -0.49700220301883 * S_PC_12 + -0.15419701300407 * S_PC_13 + 
-0.12262605462744 * S_PC_14 + 0.05055464593811 * S_PC_15 + -0.08029669705648 * S_PC_16 + 
0.34596061551155 * S_PC_17 + -0.4853190843731 * S_PC_2 + 0.34643598338729 * S_PC_3 + 
0.35149689283798 * S_PC_4 + -0.51092356339588 * S_PC_5 + -0.19503486634854 * S_PC_6 + 
-0.46872319403931 * S_PC_7 + -0.19832664785317 * S_PC_8 + 0.46629992385752 * S_PC_9 + 
0.14919176659144 * S_Year_Birth ;
1522971   +   H16  =     0.70004906077419 * S_PC_1  +    -0.46566023468255 * S_PC_10
1522972   +          +    -0.58036944108267 * S_PC_11  +    -0.28859914628773 * S_PC_12
1522973   +          +     0.03246147791321 * S_PC_13  +    -0.15481919967001 * S_PC_14
1522974   +          +     0.16704288888396 * S_PC_15  +     0.02640713196493 * S_PC_16
1522975   +          +     0.14521434182645 * S_PC_17  +     0.24973656239109 * S_PC_2
1522976   +          +     0.60652552593628 * S_PC_3  +    -0.39443886486824 * S_PC_4
1522977   +          +     -0.0298254056298 * S_PC_5  +     0.12271810717246 * S_PC_6
1522978   +          +    -0.05803269423954 * S_PC_7  +     0.61770305466274 * S_PC_8
1522979   +          +     0.46041035686688 * S_PC_9  +    -0.16207215047224 *
1522980   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.70004906077419 * S_PC_1 + -0.46566023468255 * S_PC_10 + 
-0.58036944108267 * S_PC_11 + -0.28859914628773 * S_PC_12 + 0.03246147791321 * S_PC_13 + 
-0.15481919967001 * S_PC_14 + 0.16704288888396 * S_PC_15 + 0.02640713196493 * S_PC_16 + 
0.14521434182645 * S_PC_17 + 0.24973656239109 * S_PC_2 + 0.60652552593628 * S_PC_3 + 
-0.39443886486824 * S_PC_4 + -0.0298254056298 * S_PC_5 + 0.12271810717246 * S_PC_6 + 
-0.05803269423954 * S_PC_7 + 0.61770305466274 * S_PC_8 + 0.46041035686688 * S_PC_9 + 
-0.16207215047224 * S_Year_Birth ;
1522981   +   H11  =    -0.90636151424262 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.90636151424262 + H11 ;
1522982   +   H12  =     0.98573157514204 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.98573157514204 + H12 ;
1522983   +   H13  =     -1.6752760530043 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.6752760530043 + H13 ;
1522984   +   H14  =    -1.56754819037661 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.56754819037661 + H14 ;
1522985   +   H15  =    -1.33852536109645 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.33852536109645 + H15 ;
1522986   +   H16  =    -1.58885672585511 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.58885672585511 + H16 ;
1522987   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1522988   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1522989   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1522990   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1522991   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1522992   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1522993   +END;
MPRINT(EM_DIAGRAM):   END;
1522994   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1522995   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1522996   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1522997   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1522998   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1522999   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1523000   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1523001   +END;
MPRINT(EM_DIAGRAM):   END;
1523002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1523003   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1523004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1523005   +
1523006   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1523007   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1523008   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1523009   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1523010   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1523011   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1523012   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1523013   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1523014   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1523015   +end;
MPRINT(EM_DIAGRAM):   end;
1523016   +else do;
MPRINT(EM_DIAGRAM):   else do;
1523017   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1523018   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1523019   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1523020   +   end;
MPRINT(EM_DIAGRAM):   end;
1523021   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1523022   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1523023   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1523024   +   end;
MPRINT(EM_DIAGRAM):   end;
1523025   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1523026   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1523027   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1523028   +   end;
MPRINT(EM_DIAGRAM):   end;
1523029   +end;
MPRINT(EM_DIAGRAM):   end;
1523030   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1523031   +   P_DepVar1  =     2.33532267522445 * H11  +     0.43128954284481 * H12
1523032   +          +     1.21301237342546 * H13  +    -1.14394517252631 * H14
1523033   +          +      1.2623603421152 * H15  +     1.41221284776522 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.33532267522445 * H11 + 0.43128954284481 * H12 + 
1.21301237342546 * H13 + -1.14394517252631 * H14 + 1.2623603421152 * H15 + 1.41221284776522 * 
H16 ;
1523034   +   P_DepVar1  =    -0.84619267276197 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.84619267276197 + P_DepVar1 ;
1523035   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1523036   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1523037   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1523038   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1523039   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1523040   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1523041   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1523042   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1523043   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1523044   +END;
MPRINT(EM_DIAGRAM):   END;
1523045   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1523046   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1523047   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1523048   +END;
MPRINT(EM_DIAGRAM):   END;
1523049   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1523050   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1523051   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1523052   +END;
MPRINT(EM_DIAGRAM):   END;
1523053   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1523054   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1523055   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1523056   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1523057   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1523058   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1523059   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1523060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1523061   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1523062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1523063   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1523064   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1523065   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1523066   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1523067   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1523068   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1523069   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1523070   +END;
MPRINT(EM_DIAGRAM):   END;
1523071   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1523072   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1523073   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1523074   +drop
1523075   +H11
1523076   +H12
1523077   +H13
1523078   +H14
1523079   +H15
1523080   +H16
1523081   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1523082   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1523083    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL17_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1523084    quit;
1523085    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1523086    filename emflow
1523086  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural17: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1523087    *------------------------------------------------------------*;
1523088    * Neural17: Scoring VALIDATE data;
1523089    *------------------------------------------------------------*;
1523090    data EMWS8.Neural17_VALIDATE
1523091    / view=EMWS8.Neural17_VALIDATE
1523092    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_VALIDATE / view=EMWS8.Neural17_VALIDATE ;
1523093    set EMWS8.PRINCOMP_VALIDATE
1523094    ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
1523095    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas.
1523096   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1523097   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1523098   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1523099   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1523100   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1523101   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1523102   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1523103   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1523104   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1523105   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1523106   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1523107   +LENGTH _WARN_ $4
1523108   +      F_DepVar  $ 12
1523109   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1523110   +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
1523111   +
1523112   +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
1523113   +
1523114   +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
1523115   +
1523116   +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
1523117   +
1523118   +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
1523119   +
1523120   +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
1523121   +
1523122   +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
1523123   +
1523124   +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
1523125   +
1523126   +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
1523127   +
1523128   +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
1523129   +
1523130   +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
1523131   +
1523132   +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
1523133   +
1523134   +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
1523135   +
1523136   +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
1523137   +
1523138   +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
1523139   +
1523140   +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
1523141   +
1523142   +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
1523143   +
1523144   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1523145   +
1523146   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1523147   +
1523148   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1523149   +
1523150   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1523151   +
1523152   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1523153   +
1523154   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1523155   +
1523156   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1523157   +
1523158   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1523159   +
1523160   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1523161   +
1523162   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1523163   +
1523164   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1523165   +
1523166   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1523167   +
1523168   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1523169   +
1523170   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1523171   +
1523172   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1523173   +
1523174   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1523175   +*** Checking missing input Interval
1523176   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1523177   +
1523178   +IF NMISS(
1523179   +   PC_1 ,
1523180   +   PC_10 ,
1523181   +   PC_11 ,
1523182   +   PC_12 ,
1523183   +   PC_13 ,
1523184   +   PC_14 ,
1523185   +   PC_15 ,
1523186   +   PC_16 ,
1523187   +   PC_17 ,
1523188   +   PC_2 ,
1523189   +   PC_3 ,
1523190   +   PC_4 ,
1523191   +   PC_5 ,
1523192   +   PC_6 ,
1523193   +   PC_7 ,
1523194   +   PC_8 ,
1523195   +   PC_9 ,
1523196   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
1523197   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1523198   +
1523199   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1523200   +END;
MPRINT(EM_DIAGRAM):   END;
1523201   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1523202   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1523203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1523204   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1523205   +   S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1523206   +   S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1523207   +   S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1523208   +   S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1523209   +   S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1523210   +   S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1523211   +   S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1523212   +   S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1523213   +   S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1523214   +   S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1523215   +   S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1523216   +   S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1523217   +   S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1523218   +   S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1523219   +   S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1523220   +   S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1523221   +   S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1523222   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1523223   +END;
MPRINT(EM_DIAGRAM):   END;
1523224   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1523225   +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
1523226   +   ELSE S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1523227   +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
1523228   +   ELSE S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1523229   +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
1523230   +   ELSE S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1523231   +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
1523232   +   ELSE S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1523233   +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
1523234   +   ELSE S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1523235   +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
1523236   +   ELSE S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1523237   +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
1523238   +   ELSE S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1523239   +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
1523240   +   ELSE S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1523241   +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
1523242   +   ELSE S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1523243   +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
1523244   +   ELSE S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1523245   +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
1523246   +   ELSE S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1523247   +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
1523248   +   ELSE S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1523249   +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
1523250   +   ELSE S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1523251   +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
1523252   +   ELSE S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1523253   +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
1523254   +   ELSE S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1523255   +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
1523256   +   ELSE S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1523257   +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
1523258   +   ELSE S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1523259   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1523260   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1523261   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1523262   +END;
MPRINT(EM_DIAGRAM):   END;
1523263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1523264   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1523265   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1523266   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1523267   +   H11  =     0.38540057734726 * S_PC_1  +    -0.43279453099596 * S_PC_10
1523268   +          +     0.59920506067633 * S_PC_11  +     0.48682242130264 * S_PC_12
1523269   +          +    -1.08699816133264 * S_PC_13  +     0.53744402592188 * S_PC_14
1523270   +          +    -0.48691779739696 * S_PC_15  +      0.1451667676912 * S_PC_16
1523271   +          +    -0.18650180951922 * S_PC_17  +    -0.25138739339948 * S_PC_2
1523272   +          +    -0.46370648806799 * S_PC_3  +     0.12330133579362 * S_PC_4
1523273   +          +    -0.04856622507452 * S_PC_5  +     0.11419647439533 * S_PC_6
1523274   +          +     0.31123941806644 * S_PC_7  +     0.34505865042606 * S_PC_8
1523275   +          +     0.26460680138987 * S_PC_9  +     0.26341199844406 *
1523276   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.38540057734726 * S_PC_1 + -0.43279453099596 * S_PC_10 + 
0.59920506067633 * S_PC_11 + 0.48682242130264 * S_PC_12 + -1.08699816133264 * S_PC_13 + 
0.53744402592188 * S_PC_14 + -0.48691779739696 * S_PC_15 + 0.1451667676912 * S_PC_16 + 
-0.18650180951922 * S_PC_17 + -0.25138739339948 * S_PC_2 + -0.46370648806799 * S_PC_3 + 
0.12330133579362 * S_PC_4 + -0.04856622507452 * S_PC_5 + 0.11419647439533 * S_PC_6 + 
0.31123941806644 * S_PC_7 + 0.34505865042606 * S_PC_8 + 0.26460680138987 * S_PC_9 + 
0.26341199844406 * S_Year_Birth ;
1523277   +   H12  =     0.40687324472096 * S_PC_1  +      0.1276016200478 * S_PC_10
1523278   +          +     0.02447385286653 * S_PC_11  +     0.14792924282834 * S_PC_12
1523279   +          +    -0.34908855710684 * S_PC_13  +     0.02963069560741 * S_PC_14
1523280   +          +     0.37626439148462 * S_PC_15  +     0.56033000528649 * S_PC_16
1523281   +          +    -0.55088490053836 * S_PC_17  +     -0.3322155548583 * S_PC_2
1523282   +          +    -0.02606666149303 * S_PC_3  +    -0.30668742927556 * S_PC_4
1523283   +          +    -0.07231771082496 * S_PC_5  +    -0.22889814669629 * S_PC_6
1523284   +          +     0.10728585083792 * S_PC_7  +     0.03501184370062 * S_PC_8
1523285   +          +    -0.03615073442528 * S_PC_9  +    -0.10870162717056 *
1523286   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.40687324472096 * S_PC_1 + 0.1276016200478 * S_PC_10 + 
0.02447385286653 * S_PC_11 + 0.14792924282834 * S_PC_12 + -0.34908855710684 * S_PC_13 + 
0.02963069560741 * S_PC_14 + 0.37626439148462 * S_PC_15 + 0.56033000528649 * S_PC_16 + 
-0.55088490053836 * S_PC_17 + -0.3322155548583 * S_PC_2 + -0.02606666149303 * S_PC_3 + 
-0.30668742927556 * S_PC_4 + -0.07231771082496 * S_PC_5 + -0.22889814669629 * S_PC_6 + 
0.10728585083792 * S_PC_7 + 0.03501184370062 * S_PC_8 + -0.03615073442528 * S_PC_9 + 
-0.10870162717056 * S_Year_Birth ;
1523287   +   H13  =    -0.33318211865559 * S_PC_1  +    -0.22286884176504 * S_PC_10
1523288   +          +    -0.24682716658778 * S_PC_11  +    -0.01163728763928 * S_PC_12
1523289   +          +     -0.3454456718463 * S_PC_13  +     0.73829435479942 * S_PC_14
1523290   +          +     -0.0990081836407 * S_PC_15  +     0.23161347911742 * S_PC_16
1523291   +          +     0.07564769050949 * S_PC_17  +    -1.04244198590504 * S_PC_2
1523292   +          +    -0.25844197601783 * S_PC_3  +     0.47152373003238 * S_PC_4
1523293   +          +    -0.19259781937509 * S_PC_5  +     0.00078589875849 * S_PC_6
1523294   +          +     -0.0888806128036 * S_PC_7  +     0.26564757892785 * S_PC_8
1523295   +          +     0.00956258863309 * S_PC_9  +    -0.41142005522589 *
1523296   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.33318211865559 * S_PC_1 + -0.22286884176504 * S_PC_10 + 
-0.24682716658778 * S_PC_11 + -0.01163728763928 * S_PC_12 + -0.3454456718463 * S_PC_13 + 
0.73829435479942 * S_PC_14 + -0.0990081836407 * S_PC_15 + 0.23161347911742 * S_PC_16 + 
0.07564769050949 * S_PC_17 + -1.04244198590504 * S_PC_2 + -0.25844197601783 * S_PC_3 + 
0.47152373003238 * S_PC_4 + -0.19259781937509 * S_PC_5 + 0.00078589875849 * S_PC_6 + 
-0.0888806128036 * S_PC_7 + 0.26564757892785 * S_PC_8 + 0.00956258863309 * S_PC_9 + 
-0.41142005522589 * S_Year_Birth ;
1523297   +   H14  =    -0.01410480224419 * S_PC_1  +     0.23581611886737 * S_PC_10
1523298   +          +    -0.54508192527959 * S_PC_11  +    -0.59388368211378 * S_PC_12
1523299   +          +     0.56351374615403 * S_PC_13  +     0.22919203465721 * S_PC_14
1523300   +          +    -0.07283089782334 * S_PC_15  +    -0.02491533703095 * S_PC_16
1523301   +          +     0.46708752546199 * S_PC_17  +     0.27437505233669 * S_PC_2
1523302   +          +    -0.22391635521238 * S_PC_3  +     0.40520551507185 * S_PC_4
1523303   +          +     0.40102783403095 * S_PC_5  +     -0.1949097882652 * S_PC_6
1523304   +          +     0.29494008634339 * S_PC_7  +    -0.20895351116474 * S_PC_8
1523305   +          +    -0.08435641721926 * S_PC_9  +    -0.04482587880914 *
1523306   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.01410480224419 * S_PC_1 + 0.23581611886737 * S_PC_10 + 
-0.54508192527959 * S_PC_11 + -0.59388368211378 * S_PC_12 + 0.56351374615403 * S_PC_13 + 
0.22919203465721 * S_PC_14 + -0.07283089782334 * S_PC_15 + -0.02491533703095 * S_PC_16 + 
0.46708752546199 * S_PC_17 + 0.27437505233669 * S_PC_2 + -0.22391635521238 * S_PC_3 + 
0.40520551507185 * S_PC_4 + 0.40102783403095 * S_PC_5 + -0.1949097882652 * S_PC_6 + 
0.29494008634339 * S_PC_7 + -0.20895351116474 * S_PC_8 + -0.08435641721926 * S_PC_9 + 
-0.04482587880914 * S_Year_Birth ;
1523307   +   H15  =     0.80399628556177 * S_PC_1  +    -0.38115756514784 * S_PC_10
1523308   +          +    -0.16836635895264 * S_PC_11  +    -0.49700220301883 * S_PC_12
1523309   +          +    -0.15419701300407 * S_PC_13  +    -0.12262605462744 * S_PC_14
1523310   +          +     0.05055464593811 * S_PC_15  +    -0.08029669705648 * S_PC_16
1523311   +          +     0.34596061551155 * S_PC_17  +     -0.4853190843731 * S_PC_2
1523312   +          +     0.34643598338729 * S_PC_3  +     0.35149689283798 * S_PC_4
1523313   +          +    -0.51092356339588 * S_PC_5  +    -0.19503486634854 * S_PC_6
1523314   +          +    -0.46872319403931 * S_PC_7  +    -0.19832664785317 * S_PC_8
1523315   +          +     0.46629992385752 * S_PC_9  +     0.14919176659144 *
1523316   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.80399628556177 * S_PC_1 + -0.38115756514784 * S_PC_10 + 
-0.16836635895264 * S_PC_11 + -0.49700220301883 * S_PC_12 + -0.15419701300407 * S_PC_13 + 
-0.12262605462744 * S_PC_14 + 0.05055464593811 * S_PC_15 + -0.08029669705648 * S_PC_16 + 
0.34596061551155 * S_PC_17 + -0.4853190843731 * S_PC_2 + 0.34643598338729 * S_PC_3 + 
0.35149689283798 * S_PC_4 + -0.51092356339588 * S_PC_5 + -0.19503486634854 * S_PC_6 + 
-0.46872319403931 * S_PC_7 + -0.19832664785317 * S_PC_8 + 0.46629992385752 * S_PC_9 + 
0.14919176659144 * S_Year_Birth ;
1523317   +   H16  =     0.70004906077419 * S_PC_1  +    -0.46566023468255 * S_PC_10
1523318   +          +    -0.58036944108267 * S_PC_11  +    -0.28859914628773 * S_PC_12
1523319   +          +     0.03246147791321 * S_PC_13  +    -0.15481919967001 * S_PC_14
1523320   +          +     0.16704288888396 * S_PC_15  +     0.02640713196493 * S_PC_16
1523321   +          +     0.14521434182645 * S_PC_17  +     0.24973656239109 * S_PC_2
1523322   +          +     0.60652552593628 * S_PC_3  +    -0.39443886486824 * S_PC_4
1523323   +          +     -0.0298254056298 * S_PC_5  +     0.12271810717246 * S_PC_6
1523324   +          +    -0.05803269423954 * S_PC_7  +     0.61770305466274 * S_PC_8
1523325   +          +     0.46041035686688 * S_PC_9  +    -0.16207215047224 *
1523326   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.70004906077419 * S_PC_1 + -0.46566023468255 * S_PC_10 + 
-0.58036944108267 * S_PC_11 + -0.28859914628773 * S_PC_12 + 0.03246147791321 * S_PC_13 + 
-0.15481919967001 * S_PC_14 + 0.16704288888396 * S_PC_15 + 0.02640713196493 * S_PC_16 + 
0.14521434182645 * S_PC_17 + 0.24973656239109 * S_PC_2 + 0.60652552593628 * S_PC_3 + 
-0.39443886486824 * S_PC_4 + -0.0298254056298 * S_PC_5 + 0.12271810717246 * S_PC_6 + 
-0.05803269423954 * S_PC_7 + 0.61770305466274 * S_PC_8 + 0.46041035686688 * S_PC_9 + 
-0.16207215047224 * S_Year_Birth ;
1523327   +   H11  =    -0.90636151424262 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.90636151424262 + H11 ;
1523328   +   H12  =     0.98573157514204 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.98573157514204 + H12 ;
1523329   +   H13  =     -1.6752760530043 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.6752760530043 + H13 ;
1523330   +   H14  =    -1.56754819037661 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.56754819037661 + H14 ;
1523331   +   H15  =    -1.33852536109645 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.33852536109645 + H15 ;
1523332   +   H16  =    -1.58885672585511 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.58885672585511 + H16 ;
1523333   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1523334   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1523335   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1523336   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1523337   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1523338   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1523339   +END;
MPRINT(EM_DIAGRAM):   END;
1523340   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1523341   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1523342   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1523343   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1523344   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1523345   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1523346   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1523347   +END;
MPRINT(EM_DIAGRAM):   END;
1523348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1523349   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1523350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1523351   +
1523352   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1523353   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1523354   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1523355   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1523356   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1523357   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1523358   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1523359   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1523360   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1523361   +end;
MPRINT(EM_DIAGRAM):   end;
1523362   +else do;
MPRINT(EM_DIAGRAM):   else do;
1523363   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1523364   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1523365   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1523366   +   end;
MPRINT(EM_DIAGRAM):   end;
1523367   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1523368   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1523369   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1523370   +   end;
MPRINT(EM_DIAGRAM):   end;
1523371   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1523372   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1523373   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1523374   +   end;
MPRINT(EM_DIAGRAM):   end;
1523375   +end;
MPRINT(EM_DIAGRAM):   end;
1523376   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1523377   +   P_DepVar1  =     2.33532267522445 * H11  +     0.43128954284481 * H12
1523378   +          +     1.21301237342546 * H13  +    -1.14394517252631 * H14
1523379   +          +      1.2623603421152 * H15  +     1.41221284776522 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.33532267522445 * H11 + 0.43128954284481 * H12 + 
1.21301237342546 * H13 + -1.14394517252631 * H14 + 1.2623603421152 * H15 + 1.41221284776522 * 
H16 ;
1523380   +   P_DepVar1  =    -0.84619267276197 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.84619267276197 + P_DepVar1 ;
1523381   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1523382   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1523383   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1523384   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1523385   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1523386   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1523387   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1523388   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1523389   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1523390   +END;
MPRINT(EM_DIAGRAM):   END;
1523391   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1523392   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1523393   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1523394   +END;
MPRINT(EM_DIAGRAM):   END;
1523395   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1523396   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1523397   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1523398   +END;
MPRINT(EM_DIAGRAM):   END;
1523399   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1523400   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1523401   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1523402   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1523403   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1523404   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1523405   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1523406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1523407   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1523408   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1523409   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1523410   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1523411   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1523412   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1523413   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1523414   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1523415   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1523416   +END;
MPRINT(EM_DIAGRAM):   END;
1523417   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1523418   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1523419   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1523420   +drop
1523421   +H11
1523422   +H12
1523423   +H13
1523424   +H14
1523425   +H15
1523426   +H16
1523427   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1523428   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1523429    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL17_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1523430    quit;
1523431    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1523432    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1523433    * Neural17: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural17: Computing metadata for TRAIN data;
1523434    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL17_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural17\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural17_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural17_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural17_TRAIN out=WORK.M33V0KGH noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M33V0KGH;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M33V0KGH(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M33V0KGH;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M33V0KGH;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2B1QJPK NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2B1QJPK;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2B1QJPK;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2OTCME8(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2B1QJPK;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2B1QJPK;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2B1QJPK;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2B1QJPK;
MPRINT(EMADVISECOLUMNS):   set WORK.M2B1QJPK;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural17";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural17";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural17: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1523746    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1523747    set EMWS8.Neural17_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural17_EMINFO;
1523748    where DATA='Neural17' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural17' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1523749    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL17_EMINFO.
      WHERE (DATA='Neural17') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1523750    data EMWS8.Neural17_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural17_EMINFO;
1523751    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1523752    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1523753    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL17_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
1523757    run;
1523758    data EMWS8.Neural17_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_EMINFO;
1523759    set EMWS8.Neural17_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural17_EMINFO WORK.MODELTEMP_INFO;
1523760    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL17_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL17_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1523761    proc sort data = EMWS8.Neural17_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural17_EMINFO NOTHREADS;
1523762    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1523763    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL17_EMINFO.
NOTE: The data set EMWS8.NEURAL17_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1523764    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1523765    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1523766    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1523767    proc sort data = EMWS8.Neural17_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural17_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1523768    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1523769    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL17_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1523770    data EMWS8.Neural17_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_EMINFO;
1523771    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1523772    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1523773    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL17_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1523774    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1523775    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1523776    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1523777    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL17_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL17_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
