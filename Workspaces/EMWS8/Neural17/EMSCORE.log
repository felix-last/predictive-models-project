MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.12 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                16. April 2016
Time:                20.12 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O37XEOS9 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O37XEOS9 new;
MPRINT(EM_DIAGRAM):   run;
413153     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
413154     set EMWS8.Neural17_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural17_OUTKEY;
413155     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
413156     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 38 observations read from the data set EMWS8.NEURAL17_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

413157     filename emflow
413157   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural17: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
413158     *------------------------------------------------------------*;
413159     * Neural17: Scoring DATA data;
413160     *------------------------------------------------------------*;
413161     data EMWS8.Neural17_TRAIN
413162     / view=EMWS8.Neural17_TRAIN
413163     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_TRAIN / view=EMWS8.Neural17_TRAIN ;
413164     set EMWS8.PRINCOMP_TRAIN
413165     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
413166     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas.
413167    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
413168    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
413169    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
413170    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
413171    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
413172    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
413173    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
413174    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
413175    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
413176    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
413177    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
413178    +LENGTH _WARN_ $4
413179    +      F_DepVar  $ 12
413180    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
413181    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
413182    +
413183    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
413184    +
413185    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
413186    +
413187    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
413188    +
413189    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
413190    +
413191    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
413192    +
413193    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
413194    +
413195    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
413196    +
413197    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
413198    +
413199    +      label S_PC_18 = 'Standard: PC_18' ;
MPRINT(EM_DIAGRAM):   label S_PC_18 = 'Standard: PC_18' ;
413200    +
413201    +      label S_PC_19 = 'Standard: PC_19' ;
MPRINT(EM_DIAGRAM):   label S_PC_19 = 'Standard: PC_19' ;
413202    +
413203    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
413204    +
413205    +      label S_PC_20 = 'Standard: PC_20' ;
MPRINT(EM_DIAGRAM):   label S_PC_20 = 'Standard: PC_20' ;
413206    +
413207    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
413208    +
413209    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
413210    +
413211    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
413212    +
413213    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
413214    +
413215    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
413216    +
413217    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
413218    +
413219    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
413220    +
413221    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
413222    +
413223    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
413224    +
413225    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
413226    +
413227    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
413228    +
413229    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
413230    +
413231    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
413232    +
413233    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
413234    +
413235    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
413236    +
413237    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
413238    +
413239    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
413240    +
413241    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
413242    +
413243    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
413244    +
413245    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
413246    +
413247    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
413248    +
413249    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413250    +*** Checking missing input Interval
413251    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
413252    +
413253    +IF NMISS(
413254    +   PC_1 ,
413255    +   PC_10 ,
413256    +   PC_11 ,
413257    +   PC_12 ,
413258    +   PC_13 ,
413259    +   PC_14 ,
413260    +   PC_15 ,
413261    +   PC_16 ,
413262    +   PC_17 ,
413263    +   PC_18 ,
413264    +   PC_19 ,
413265    +   PC_2 ,
413266    +   PC_20 ,
413267    +   PC_3 ,
413268    +   PC_4 ,
413269    +   PC_5 ,
413270    +   PC_6 ,
413271    +   PC_7 ,
413272    +   PC_8 ,
413273    +   PC_9   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_18 , PC_19 , PC_2 , PC_20 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 ) THEN 
DO;
413274    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
413275    +
413276    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413277    +END;
MPRINT(EM_DIAGRAM):   END;
413278    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413279    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
413280    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413281    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
413282    +   S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
413283    +   S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
413284    +   S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
413285    +   S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
413286    +   S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
413287    +   S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
413288    +   S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
413289    +   S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
413290    +   S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
413291    +   S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
413292    +   S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
413293    +   S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
413294    +   S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
413295    +   S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
413296    +   S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
413297    +   S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
413298    +   S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
413299    +   S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
413300    +   S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
413301    +   S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
413302    +END;
MPRINT(EM_DIAGRAM):   END;
413303    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
413304    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
413305    +   ELSE S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
413306    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
413307    +   ELSE S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
413308    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
413309    +   ELSE S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
413310    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
413311    +   ELSE S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
413312    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
413313    +   ELSE S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
413314    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
413315    +   ELSE S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
413316    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
413317    +   ELSE S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
413318    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
413319    +   ELSE S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
413320    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
413321    +   ELSE S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
413322    +   IF MISSING( PC_18 ) THEN S_PC_18  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_18 ) THEN S_PC_18 = . ;
413323    +   ELSE S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
413324    +   IF MISSING( PC_19 ) THEN S_PC_19  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_19 ) THEN S_PC_19 = . ;
413325    +   ELSE S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
413326    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
413327    +   ELSE S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
413328    +   IF MISSING( PC_20 ) THEN S_PC_20  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_20 ) THEN S_PC_20 = . ;
413329    +   ELSE S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
413330    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
413331    +   ELSE S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
413332    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
413333    +   ELSE S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
413334    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
413335    +   ELSE S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
413336    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
413337    +   ELSE S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
413338    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
413339    +   ELSE S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
413340    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
413341    +   ELSE S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
413342    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
413343    +   ELSE S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
413344    +END;
MPRINT(EM_DIAGRAM):   END;
413345    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413346    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
413347    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413348    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
413349    +   H11  =     0.80198391473189 * S_PC_1  +     0.07708508420536 * S_PC_10
413350    +          +     -0.5948998693841 * S_PC_11  +    -0.30258026092996 * S_PC_12
413351    +          +     0.62978702534845 * S_PC_13  +    -0.18440367078326 * S_PC_14
413352    +          +     0.03609752993847 * S_PC_15  +     -0.0158699190811 * S_PC_16
413353    +          +     0.08479109608464 * S_PC_17  +     0.22074179293199 * S_PC_18
413354    +          +     0.05587168708953 * S_PC_19  +    -0.52582185578693 * S_PC_2
413355    +          +     -0.1704911233661 * S_PC_20  +     0.18407674284966 * S_PC_3
413356    +          +    -0.16074562523243 * S_PC_4  +     0.25965461789084 * S_PC_5
413357    +          +     0.02193795171249 * S_PC_6  +    -0.43234039683813 * S_PC_7
413358    +          +     0.11315161819822 * S_PC_8  +     0.33948270631366 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H11 = 0.80198391473189 * S_PC_1 + 0.07708508420536 * S_PC_10 + 
-0.5948998693841 * S_PC_11 + -0.30258026092996 * S_PC_12 + 0.62978702534845 * S_PC_13 + 
-0.18440367078326 * S_PC_14 + 0.03609752993847 * S_PC_15 + -0.0158699190811 * S_PC_16 + 
0.08479109608464 * S_PC_17 + 0.22074179293199 * S_PC_18 + 0.05587168708953 * S_PC_19 + 
-0.52582185578693 * S_PC_2 + -0.1704911233661 * S_PC_20 + 0.18407674284966 * S_PC_3 + 
-0.16074562523243 * S_PC_4 + 0.25965461789084 * S_PC_5 + 0.02193795171249 * S_PC_6 + 
-0.43234039683813 * S_PC_7 + 0.11315161819822 * S_PC_8 + 0.33948270631366 * S_PC_9 ;
413359    +   H12  =     0.32630640539486 * S_PC_1  +    -0.18827402438513 * S_PC_10
413360    +          +    -0.23087928007265 * S_PC_11  +     0.03493530555871 * S_PC_12
413361    +          +     0.12051812703396 * S_PC_13  +      0.0513581513656 * S_PC_14
413362    +          +    -0.49135083322755 * S_PC_15  +    -0.23424715443797 * S_PC_16
413363    +          +     0.03914512655981 * S_PC_17  +    -0.53824791847252 * S_PC_18
413364    +          +     0.30776644946853 * S_PC_19  +     0.13349406224181 * S_PC_2
413365    +          +    -0.11394672965484 * S_PC_20  +      -0.173025831095 * S_PC_3
413366    +          +      0.0596702766945 * S_PC_4  +      0.0198642679923 * S_PC_5
413367    +          +     0.33517478651526 * S_PC_6  +     0.34391129030453 * S_PC_7
413368    +          +       0.244214398189 * S_PC_8  +     0.20060837127761 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H12 = 0.32630640539486 * S_PC_1 + -0.18827402438513 * S_PC_10 + 
-0.23087928007265 * S_PC_11 + 0.03493530555871 * S_PC_12 + 0.12051812703396 * S_PC_13 + 
0.0513581513656 * S_PC_14 + -0.49135083322755 * S_PC_15 + -0.23424715443797 * S_PC_16 + 
0.03914512655981 * S_PC_17 + -0.53824791847252 * S_PC_18 + 0.30776644946853 * S_PC_19 + 
0.13349406224181 * S_PC_2 + -0.11394672965484 * S_PC_20 + -0.173025831095 * S_PC_3 + 
0.0596702766945 * S_PC_4 + 0.0198642679923 * S_PC_5 + 0.33517478651526 * S_PC_6 + 
0.34391129030453 * S_PC_7 + 0.244214398189 * S_PC_8 + 0.20060837127761 * S_PC_9 ;
413369    +   H13  =    -0.50165061292441 * S_PC_1  +    -0.04906900800182 * S_PC_10
413370    +          +      0.2094735190825 * S_PC_11  +    -1.09134317241624 * S_PC_12
413371    +          +    -0.45730759613847 * S_PC_13  +     0.27941725761496 * S_PC_14
413372    +          +     0.39576395537005 * S_PC_15  +    -0.27911526586632 * S_PC_16
413373    +          +    -0.21488175741829 * S_PC_17  +     0.04692577002415 * S_PC_18
413374    +          +     0.16955029139987 * S_PC_19  +     0.37415150489766 * S_PC_2
413375    +          +    -0.21450975788851 * S_PC_20  +     0.28599965341518 * S_PC_3
413376    +          +     0.21163742091763 * S_PC_4  +    -0.40005683564553 * S_PC_5
413377    +          +    -0.05087785160495 * S_PC_6  +    -0.01506065828513 * S_PC_7
413378    +          +    -0.21982278245544 * S_PC_8  +    -0.19279076886166 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H13 = -0.50165061292441 * S_PC_1 + -0.04906900800182 * S_PC_10 + 
0.2094735190825 * S_PC_11 + -1.09134317241624 * S_PC_12 + -0.45730759613847 * S_PC_13 + 
0.27941725761496 * S_PC_14 + 0.39576395537005 * S_PC_15 + -0.27911526586632 * S_PC_16 + 
-0.21488175741829 * S_PC_17 + 0.04692577002415 * S_PC_18 + 0.16955029139987 * S_PC_19 + 
0.37415150489766 * S_PC_2 + -0.21450975788851 * S_PC_20 + 0.28599965341518 * S_PC_3 + 
0.21163742091763 * S_PC_4 + -0.40005683564553 * S_PC_5 + -0.05087785160495 * S_PC_6 + 
-0.01506065828513 * S_PC_7 + -0.21982278245544 * S_PC_8 + -0.19279076886166 * S_PC_9 ;
413379    +   H14  =     0.07127535568688 * S_PC_1  +     0.04611331763825 * S_PC_10
413380    +          +     0.30931344665073 * S_PC_11  +     0.26225413082664 * S_PC_12
413381    +          +    -0.42058323229822 * S_PC_13  +     0.22290902292145 * S_PC_14
413382    +          +     0.25358975917078 * S_PC_15  +     0.16235345145156 * S_PC_16
413383    +          +    -0.28224656420819 * S_PC_17  +     0.01421979977613 * S_PC_18
413384    +          +     0.01504451054749 * S_PC_19  +     0.06056237599599 * S_PC_2
413385    +          +     0.68543710616544 * S_PC_20  +      0.5351426365446 * S_PC_3
413386    +          +    -0.00979328654574 * S_PC_4  +    -0.19733418333457 * S_PC_5
413387    +          +    -0.22080181434332 * S_PC_6  +    -0.39667071628489 * S_PC_7
413388    +          +     0.26455382261102 * S_PC_8  +    -0.26576561054478 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H14 = 0.07127535568688 * S_PC_1 + 0.04611331763825 * S_PC_10 + 
0.30931344665073 * S_PC_11 + 0.26225413082664 * S_PC_12 + -0.42058323229822 * S_PC_13 + 
0.22290902292145 * S_PC_14 + 0.25358975917078 * S_PC_15 + 0.16235345145156 * S_PC_16 + 
-0.28224656420819 * S_PC_17 + 0.01421979977613 * S_PC_18 + 0.01504451054749 * S_PC_19 + 
0.06056237599599 * S_PC_2 + 0.68543710616544 * S_PC_20 + 0.5351426365446 * S_PC_3 + 
-0.00979328654574 * S_PC_4 + -0.19733418333457 * S_PC_5 + -0.22080181434332 * S_PC_6 + 
-0.39667071628489 * S_PC_7 + 0.26455382261102 * S_PC_8 + -0.26576561054478 * S_PC_9 ;
413389    +   H15  =    -0.24815516431503 * S_PC_1  +    -0.10488618962533 * S_PC_10
413390    +          +    -0.29131882794665 * S_PC_11  +     0.55447570979721 * S_PC_12
413391    +          +    -0.04345251268852 * S_PC_13  +    -0.12556631023208 * S_PC_14
413392    +          +     0.16535314218308 * S_PC_15  +    -0.17910412775688 * S_PC_16
413393    +          +     0.23546805975312 * S_PC_17  +     0.36973241986018 * S_PC_18
413394    +          +     0.28497024353409 * S_PC_19  +     -0.2501385107508 * S_PC_2
413395    +          +     0.41677435218436 * S_PC_20  +    -0.89705657018228 * S_PC_3
413396    +          +     0.30997351641103 * S_PC_4  +    -0.04224204786498 * S_PC_5
413397    +          +     0.54565474283324 * S_PC_6  +    -0.07367244349298 * S_PC_7
413398    +          +     0.32727083699484 * S_PC_8  +    -0.40586165138302 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H15 = -0.24815516431503 * S_PC_1 + -0.10488618962533 * S_PC_10 + 
-0.29131882794665 * S_PC_11 + 0.55447570979721 * S_PC_12 + -0.04345251268852 * S_PC_13 + 
-0.12556631023208 * S_PC_14 + 0.16535314218308 * S_PC_15 + -0.17910412775688 * S_PC_16 + 
0.23546805975312 * S_PC_17 + 0.36973241986018 * S_PC_18 + 0.28497024353409 * S_PC_19 + 
-0.2501385107508 * S_PC_2 + 0.41677435218436 * S_PC_20 + -0.89705657018228 * S_PC_3 + 
0.30997351641103 * S_PC_4 + -0.04224204786498 * S_PC_5 + 0.54565474283324 * S_PC_6 + 
-0.07367244349298 * S_PC_7 + 0.32727083699484 * S_PC_8 + -0.40586165138302 * S_PC_9 ;
413399    +   H16  =    -0.65598956024437 * S_PC_1  +    -0.29182482640965 * S_PC_10
413400    +          +     0.19411602647874 * S_PC_11  +     0.22341860288984 * S_PC_12
413401    +          +    -0.33859608620455 * S_PC_13  +     0.01609680413712 * S_PC_14
413402    +          +       0.170007335229 * S_PC_15  +    -0.34059153042813 * S_PC_16
413403    +          +    -0.10031509001666 * S_PC_17  +    -0.33458438180878 * S_PC_18
413404    +          +    -0.03535656535892 * S_PC_19  +     0.20787229159824 * S_PC_2
413405    +          +      0.2089782140284 * S_PC_20  +    -0.21127272477202 * S_PC_3
413406    +          +     0.03521507209015 * S_PC_4  +    -0.01489261680876 * S_PC_5
413407    +          +     0.09893921399038 * S_PC_6  +     0.06253881181252 * S_PC_7
413408    +          +      0.2145737460009 * S_PC_8  +    -0.33000997858307 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H16 = -0.65598956024437 * S_PC_1 + -0.29182482640965 * S_PC_10 + 
0.19411602647874 * S_PC_11 + 0.22341860288984 * S_PC_12 + -0.33859608620455 * S_PC_13 + 
0.01609680413712 * S_PC_14 + 0.170007335229 * S_PC_15 + -0.34059153042813 * S_PC_16 + 
-0.10031509001666 * S_PC_17 + -0.33458438180878 * S_PC_18 + -0.03535656535892 * S_PC_19 + 
0.20787229159824 * S_PC_2 + 0.2089782140284 * S_PC_20 + -0.21127272477202 * S_PC_3 + 
0.03521507209015 * S_PC_4 + -0.01489261680876 * S_PC_5 + 0.09893921399038 * S_PC_6 + 
0.06253881181252 * S_PC_7 + 0.2145737460009 * S_PC_8 + -0.33000997858307 * S_PC_9 ;
413409    +   H11  =    -1.88928698286099 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.88928698286099 + H11 ;
413410    +   H12  =     0.99057628162191 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.99057628162191 + H12 ;
413411    +   H13  =     0.52726938869037 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.52726938869037 + H13 ;
413412    +   H14  =    -1.75324864668186 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.75324864668186 + H14 ;
413413    +   H15  =    -1.19252503712806 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.19252503712806 + H15 ;
413414    +   H16  =     1.49362478421754 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.49362478421754 + H16 ;
413415    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
413416    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
413417    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
413418    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
413419    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
413420    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
413421    +END;
MPRINT(EM_DIAGRAM):   END;
413422    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
413423    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
413424    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
413425    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
413426    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
413427    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
413428    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
413429    +END;
MPRINT(EM_DIAGRAM):   END;
413430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413431    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
413432    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413433    +
413434    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
413435    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
413436    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
413437    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
413438    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
413439    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413440    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
413441    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
413442    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
413443    +end;
MPRINT(EM_DIAGRAM):   end;
413444    +else do;
MPRINT(EM_DIAGRAM):   else do;
413445    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
413446    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
413447    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
413448    +   end;
MPRINT(EM_DIAGRAM):   end;
413449    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
413450    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
413451    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
413452    +   end;
MPRINT(EM_DIAGRAM):   end;
413453    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413454    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
413455    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
413456    +   end;
MPRINT(EM_DIAGRAM):   end;
413457    +end;
MPRINT(EM_DIAGRAM):   end;
413458    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
413459    +   P_DepVar1  =     1.45836605819469 * H11  +     0.65365187848768 * H12
413460    +          +    -2.26897139479857 * H13  +    -0.68822008048768 * H14
413461    +          +     1.01238980542398 * H15  +    -0.64752035127218 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.45836605819469 * H11 + 0.65365187848768 * H12 + 
-2.26897139479857 * H13 + -0.68822008048768 * H14 + 1.01238980542398 * H15 + -0.64752035127218 
* H16 ;
413462    +   P_DepVar1  =     -1.3294475026486 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.3294475026486 + P_DepVar1 ;
413463    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
413464    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
413465    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
413466    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
413467    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
413468    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
413469    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
413470    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
413471    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
413472    +END;
MPRINT(EM_DIAGRAM):   END;
413473    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
413474    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
413475    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
413476    +END;
MPRINT(EM_DIAGRAM):   END;
413477    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
413478    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
413479    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
413480    +END;
MPRINT(EM_DIAGRAM):   END;
413481    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
413482    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
413483    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
413484    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
413485    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
413486    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
413487    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
413488    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413489    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
413490    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413491    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
413492    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
413493    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
413494    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
413495    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
413496    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
413497    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
413498    +END;
MPRINT(EM_DIAGRAM):   END;
413499    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
413500    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
413501    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
413502    +drop
413503    +H11
413504    +H12
413505    +H13
413506    +H14
413507    +H15
413508    +H16
413509    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
413510    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
413511     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL17_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
413512     quit;
413513     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
413514     filename emflow
413514   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural17: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
413515     *------------------------------------------------------------*;
413516     * Neural17: Scoring VALIDATE data;
413517     *------------------------------------------------------------*;
413518     data EMWS8.Neural17_VALIDATE
413519     / view=EMWS8.Neural17_VALIDATE
413520     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_VALIDATE / view=EMWS8.Neural17_VALIDATE ;
413521     set EMWS8.PRINCOMP_VALIDATE
413522     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
413523     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas.
413524    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
413525    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
413526    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
413527    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
413528    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
413529    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
413530    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
413531    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
413532    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
413533    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
413534    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
413535    +LENGTH _WARN_ $4
413536    +      F_DepVar  $ 12
413537    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
413538    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
413539    +
413540    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
413541    +
413542    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
413543    +
413544    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
413545    +
413546    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
413547    +
413548    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
413549    +
413550    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
413551    +
413552    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
413553    +
413554    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
413555    +
413556    +      label S_PC_18 = 'Standard: PC_18' ;
MPRINT(EM_DIAGRAM):   label S_PC_18 = 'Standard: PC_18' ;
413557    +
413558    +      label S_PC_19 = 'Standard: PC_19' ;
MPRINT(EM_DIAGRAM):   label S_PC_19 = 'Standard: PC_19' ;
413559    +
413560    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
413561    +
413562    +      label S_PC_20 = 'Standard: PC_20' ;
MPRINT(EM_DIAGRAM):   label S_PC_20 = 'Standard: PC_20' ;
413563    +
413564    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
413565    +
413566    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
413567    +
413568    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
413569    +
413570    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
413571    +
413572    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
413573    +
413574    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
413575    +
413576    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
413577    +
413578    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
413579    +
413580    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
413581    +
413582    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
413583    +
413584    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
413585    +
413586    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
413587    +
413588    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
413589    +
413590    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
413591    +
413592    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
413593    +
413594    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
413595    +
413596    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
413597    +
413598    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
413599    +
413600    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
413601    +
413602    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
413603    +
413604    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
413605    +
413606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413607    +*** Checking missing input Interval
413608    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
413609    +
413610    +IF NMISS(
413611    +   PC_1 ,
413612    +   PC_10 ,
413613    +   PC_11 ,
413614    +   PC_12 ,
413615    +   PC_13 ,
413616    +   PC_14 ,
413617    +   PC_15 ,
413618    +   PC_16 ,
413619    +   PC_17 ,
413620    +   PC_18 ,
413621    +   PC_19 ,
413622    +   PC_2 ,
413623    +   PC_20 ,
413624    +   PC_3 ,
413625    +   PC_4 ,
413626    +   PC_5 ,
413627    +   PC_6 ,
413628    +   PC_7 ,
413629    +   PC_8 ,
413630    +   PC_9   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_18 , PC_19 , PC_2 , PC_20 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 ) THEN 
DO;
413631    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
413632    +
413633    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413634    +END;
MPRINT(EM_DIAGRAM):   END;
413635    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413636    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
413637    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413638    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
413639    +   S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
413640    +   S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
413641    +   S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
413642    +   S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
413643    +   S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
413644    +   S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
413645    +   S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
413646    +   S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
413647    +   S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
413648    +   S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
413649    +   S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
413650    +   S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
413651    +   S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
413652    +   S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
413653    +   S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
413654    +   S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
413655    +   S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
413656    +   S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
413657    +   S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
413658    +   S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
413659    +END;
MPRINT(EM_DIAGRAM):   END;
413660    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
413661    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
413662    +   ELSE S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
413663    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
413664    +   ELSE S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
413665    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
413666    +   ELSE S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
413667    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
413668    +   ELSE S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
413669    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
413670    +   ELSE S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
413671    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
413672    +   ELSE S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
413673    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
413674    +   ELSE S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
413675    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
413676    +   ELSE S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
413677    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
413678    +   ELSE S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
413679    +   IF MISSING( PC_18 ) THEN S_PC_18  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_18 ) THEN S_PC_18 = . ;
413680    +   ELSE S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
413681    +   IF MISSING( PC_19 ) THEN S_PC_19  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_19 ) THEN S_PC_19 = . ;
413682    +   ELSE S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
413683    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
413684    +   ELSE S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
413685    +   IF MISSING( PC_20 ) THEN S_PC_20  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_20 ) THEN S_PC_20 = . ;
413686    +   ELSE S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
413687    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
413688    +   ELSE S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
413689    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
413690    +   ELSE S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
413691    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
413692    +   ELSE S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
413693    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
413694    +   ELSE S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
413695    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
413696    +   ELSE S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
413697    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
413698    +   ELSE S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
413699    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
413700    +   ELSE S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
413701    +END;
MPRINT(EM_DIAGRAM):   END;
413702    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413703    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
413704    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413705    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
413706    +   H11  =     0.80198391473189 * S_PC_1  +     0.07708508420536 * S_PC_10
413707    +          +     -0.5948998693841 * S_PC_11  +    -0.30258026092996 * S_PC_12
413708    +          +     0.62978702534845 * S_PC_13  +    -0.18440367078326 * S_PC_14
413709    +          +     0.03609752993847 * S_PC_15  +     -0.0158699190811 * S_PC_16
413710    +          +     0.08479109608464 * S_PC_17  +     0.22074179293199 * S_PC_18
413711    +          +     0.05587168708953 * S_PC_19  +    -0.52582185578693 * S_PC_2
413712    +          +     -0.1704911233661 * S_PC_20  +     0.18407674284966 * S_PC_3
413713    +          +    -0.16074562523243 * S_PC_4  +     0.25965461789084 * S_PC_5
413714    +          +     0.02193795171249 * S_PC_6  +    -0.43234039683813 * S_PC_7
413715    +          +     0.11315161819822 * S_PC_8  +     0.33948270631366 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H11 = 0.80198391473189 * S_PC_1 + 0.07708508420536 * S_PC_10 + 
-0.5948998693841 * S_PC_11 + -0.30258026092996 * S_PC_12 + 0.62978702534845 * S_PC_13 + 
-0.18440367078326 * S_PC_14 + 0.03609752993847 * S_PC_15 + -0.0158699190811 * S_PC_16 + 
0.08479109608464 * S_PC_17 + 0.22074179293199 * S_PC_18 + 0.05587168708953 * S_PC_19 + 
-0.52582185578693 * S_PC_2 + -0.1704911233661 * S_PC_20 + 0.18407674284966 * S_PC_3 + 
-0.16074562523243 * S_PC_4 + 0.25965461789084 * S_PC_5 + 0.02193795171249 * S_PC_6 + 
-0.43234039683813 * S_PC_7 + 0.11315161819822 * S_PC_8 + 0.33948270631366 * S_PC_9 ;
413716    +   H12  =     0.32630640539486 * S_PC_1  +    -0.18827402438513 * S_PC_10
413717    +          +    -0.23087928007265 * S_PC_11  +     0.03493530555871 * S_PC_12
413718    +          +     0.12051812703396 * S_PC_13  +      0.0513581513656 * S_PC_14
413719    +          +    -0.49135083322755 * S_PC_15  +    -0.23424715443797 * S_PC_16
413720    +          +     0.03914512655981 * S_PC_17  +    -0.53824791847252 * S_PC_18
413721    +          +     0.30776644946853 * S_PC_19  +     0.13349406224181 * S_PC_2
413722    +          +    -0.11394672965484 * S_PC_20  +      -0.173025831095 * S_PC_3
413723    +          +      0.0596702766945 * S_PC_4  +      0.0198642679923 * S_PC_5
413724    +          +     0.33517478651526 * S_PC_6  +     0.34391129030453 * S_PC_7
413725    +          +       0.244214398189 * S_PC_8  +     0.20060837127761 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H12 = 0.32630640539486 * S_PC_1 + -0.18827402438513 * S_PC_10 + 
-0.23087928007265 * S_PC_11 + 0.03493530555871 * S_PC_12 + 0.12051812703396 * S_PC_13 + 
0.0513581513656 * S_PC_14 + -0.49135083322755 * S_PC_15 + -0.23424715443797 * S_PC_16 + 
0.03914512655981 * S_PC_17 + -0.53824791847252 * S_PC_18 + 0.30776644946853 * S_PC_19 + 
0.13349406224181 * S_PC_2 + -0.11394672965484 * S_PC_20 + -0.173025831095 * S_PC_3 + 
0.0596702766945 * S_PC_4 + 0.0198642679923 * S_PC_5 + 0.33517478651526 * S_PC_6 + 
0.34391129030453 * S_PC_7 + 0.244214398189 * S_PC_8 + 0.20060837127761 * S_PC_9 ;
413726    +   H13  =    -0.50165061292441 * S_PC_1  +    -0.04906900800182 * S_PC_10
413727    +          +      0.2094735190825 * S_PC_11  +    -1.09134317241624 * S_PC_12
413728    +          +    -0.45730759613847 * S_PC_13  +     0.27941725761496 * S_PC_14
413729    +          +     0.39576395537005 * S_PC_15  +    -0.27911526586632 * S_PC_16
413730    +          +    -0.21488175741829 * S_PC_17  +     0.04692577002415 * S_PC_18
413731    +          +     0.16955029139987 * S_PC_19  +     0.37415150489766 * S_PC_2
413732    +          +    -0.21450975788851 * S_PC_20  +     0.28599965341518 * S_PC_3
413733    +          +     0.21163742091763 * S_PC_4  +    -0.40005683564553 * S_PC_5
413734    +          +    -0.05087785160495 * S_PC_6  +    -0.01506065828513 * S_PC_7
413735    +          +    -0.21982278245544 * S_PC_8  +    -0.19279076886166 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H13 = -0.50165061292441 * S_PC_1 + -0.04906900800182 * S_PC_10 + 
0.2094735190825 * S_PC_11 + -1.09134317241624 * S_PC_12 + -0.45730759613847 * S_PC_13 + 
0.27941725761496 * S_PC_14 + 0.39576395537005 * S_PC_15 + -0.27911526586632 * S_PC_16 + 
-0.21488175741829 * S_PC_17 + 0.04692577002415 * S_PC_18 + 0.16955029139987 * S_PC_19 + 
0.37415150489766 * S_PC_2 + -0.21450975788851 * S_PC_20 + 0.28599965341518 * S_PC_3 + 
0.21163742091763 * S_PC_4 + -0.40005683564553 * S_PC_5 + -0.05087785160495 * S_PC_6 + 
-0.01506065828513 * S_PC_7 + -0.21982278245544 * S_PC_8 + -0.19279076886166 * S_PC_9 ;
413736    +   H14  =     0.07127535568688 * S_PC_1  +     0.04611331763825 * S_PC_10
413737    +          +     0.30931344665073 * S_PC_11  +     0.26225413082664 * S_PC_12
413738    +          +    -0.42058323229822 * S_PC_13  +     0.22290902292145 * S_PC_14
413739    +          +     0.25358975917078 * S_PC_15  +     0.16235345145156 * S_PC_16
413740    +          +    -0.28224656420819 * S_PC_17  +     0.01421979977613 * S_PC_18
413741    +          +     0.01504451054749 * S_PC_19  +     0.06056237599599 * S_PC_2
413742    +          +     0.68543710616544 * S_PC_20  +      0.5351426365446 * S_PC_3
413743    +          +    -0.00979328654574 * S_PC_4  +    -0.19733418333457 * S_PC_5
413744    +          +    -0.22080181434332 * S_PC_6  +    -0.39667071628489 * S_PC_7
413745    +          +     0.26455382261102 * S_PC_8  +    -0.26576561054478 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H14 = 0.07127535568688 * S_PC_1 + 0.04611331763825 * S_PC_10 + 
0.30931344665073 * S_PC_11 + 0.26225413082664 * S_PC_12 + -0.42058323229822 * S_PC_13 + 
0.22290902292145 * S_PC_14 + 0.25358975917078 * S_PC_15 + 0.16235345145156 * S_PC_16 + 
-0.28224656420819 * S_PC_17 + 0.01421979977613 * S_PC_18 + 0.01504451054749 * S_PC_19 + 
0.06056237599599 * S_PC_2 + 0.68543710616544 * S_PC_20 + 0.5351426365446 * S_PC_3 + 
-0.00979328654574 * S_PC_4 + -0.19733418333457 * S_PC_5 + -0.22080181434332 * S_PC_6 + 
-0.39667071628489 * S_PC_7 + 0.26455382261102 * S_PC_8 + -0.26576561054478 * S_PC_9 ;
413746    +   H15  =    -0.24815516431503 * S_PC_1  +    -0.10488618962533 * S_PC_10
413747    +          +    -0.29131882794665 * S_PC_11  +     0.55447570979721 * S_PC_12
413748    +          +    -0.04345251268852 * S_PC_13  +    -0.12556631023208 * S_PC_14
413749    +          +     0.16535314218308 * S_PC_15  +    -0.17910412775688 * S_PC_16
413750    +          +     0.23546805975312 * S_PC_17  +     0.36973241986018 * S_PC_18
413751    +          +     0.28497024353409 * S_PC_19  +     -0.2501385107508 * S_PC_2
413752    +          +     0.41677435218436 * S_PC_20  +    -0.89705657018228 * S_PC_3
413753    +          +     0.30997351641103 * S_PC_4  +    -0.04224204786498 * S_PC_5
413754    +          +     0.54565474283324 * S_PC_6  +    -0.07367244349298 * S_PC_7
413755    +          +     0.32727083699484 * S_PC_8  +    -0.40586165138302 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H15 = -0.24815516431503 * S_PC_1 + -0.10488618962533 * S_PC_10 + 
-0.29131882794665 * S_PC_11 + 0.55447570979721 * S_PC_12 + -0.04345251268852 * S_PC_13 + 
-0.12556631023208 * S_PC_14 + 0.16535314218308 * S_PC_15 + -0.17910412775688 * S_PC_16 + 
0.23546805975312 * S_PC_17 + 0.36973241986018 * S_PC_18 + 0.28497024353409 * S_PC_19 + 
-0.2501385107508 * S_PC_2 + 0.41677435218436 * S_PC_20 + -0.89705657018228 * S_PC_3 + 
0.30997351641103 * S_PC_4 + -0.04224204786498 * S_PC_5 + 0.54565474283324 * S_PC_6 + 
-0.07367244349298 * S_PC_7 + 0.32727083699484 * S_PC_8 + -0.40586165138302 * S_PC_9 ;
413756    +   H16  =    -0.65598956024437 * S_PC_1  +    -0.29182482640965 * S_PC_10
413757    +          +     0.19411602647874 * S_PC_11  +     0.22341860288984 * S_PC_12
413758    +          +    -0.33859608620455 * S_PC_13  +     0.01609680413712 * S_PC_14
413759    +          +       0.170007335229 * S_PC_15  +    -0.34059153042813 * S_PC_16
413760    +          +    -0.10031509001666 * S_PC_17  +    -0.33458438180878 * S_PC_18
413761    +          +    -0.03535656535892 * S_PC_19  +     0.20787229159824 * S_PC_2
413762    +          +      0.2089782140284 * S_PC_20  +    -0.21127272477202 * S_PC_3
413763    +          +     0.03521507209015 * S_PC_4  +    -0.01489261680876 * S_PC_5
413764    +          +     0.09893921399038 * S_PC_6  +     0.06253881181252 * S_PC_7
413765    +          +      0.2145737460009 * S_PC_8  +    -0.33000997858307 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H16 = -0.65598956024437 * S_PC_1 + -0.29182482640965 * S_PC_10 + 
0.19411602647874 * S_PC_11 + 0.22341860288984 * S_PC_12 + -0.33859608620455 * S_PC_13 + 
0.01609680413712 * S_PC_14 + 0.170007335229 * S_PC_15 + -0.34059153042813 * S_PC_16 + 
-0.10031509001666 * S_PC_17 + -0.33458438180878 * S_PC_18 + -0.03535656535892 * S_PC_19 + 
0.20787229159824 * S_PC_2 + 0.2089782140284 * S_PC_20 + -0.21127272477202 * S_PC_3 + 
0.03521507209015 * S_PC_4 + -0.01489261680876 * S_PC_5 + 0.09893921399038 * S_PC_6 + 
0.06253881181252 * S_PC_7 + 0.2145737460009 * S_PC_8 + -0.33000997858307 * S_PC_9 ;
413766    +   H11  =    -1.88928698286099 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.88928698286099 + H11 ;
413767    +   H12  =     0.99057628162191 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.99057628162191 + H12 ;
413768    +   H13  =     0.52726938869037 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.52726938869037 + H13 ;
413769    +   H14  =    -1.75324864668186 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.75324864668186 + H14 ;
413770    +   H15  =    -1.19252503712806 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.19252503712806 + H15 ;
413771    +   H16  =     1.49362478421754 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.49362478421754 + H16 ;
413772    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
413773    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
413774    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
413775    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
413776    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
413777    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
413778    +END;
MPRINT(EM_DIAGRAM):   END;
413779    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
413780    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
413781    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
413782    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
413783    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
413784    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
413785    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
413786    +END;
MPRINT(EM_DIAGRAM):   END;
413787    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413788    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
413789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413790    +
413791    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
413792    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
413793    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
413794    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
413795    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
413796    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413797    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
413798    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
413799    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
413800    +end;
MPRINT(EM_DIAGRAM):   end;
413801    +else do;
MPRINT(EM_DIAGRAM):   else do;
413802    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
413803    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
413804    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
413805    +   end;
MPRINT(EM_DIAGRAM):   end;
413806    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
413807    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
413808    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
413809    +   end;
MPRINT(EM_DIAGRAM):   end;
413810    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413811    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
413812    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
413813    +   end;
MPRINT(EM_DIAGRAM):   end;
413814    +end;
MPRINT(EM_DIAGRAM):   end;
413815    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
413816    +   P_DepVar1  =     1.45836605819469 * H11  +     0.65365187848768 * H12
413817    +          +    -2.26897139479857 * H13  +    -0.68822008048768 * H14
413818    +          +     1.01238980542398 * H15  +    -0.64752035127218 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.45836605819469 * H11 + 0.65365187848768 * H12 + 
-2.26897139479857 * H13 + -0.68822008048768 * H14 + 1.01238980542398 * H15 + -0.64752035127218 
* H16 ;
413819    +   P_DepVar1  =     -1.3294475026486 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.3294475026486 + P_DepVar1 ;
413820    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
413821    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
413822    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
413823    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
413824    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
413825    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
413826    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
413827    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
413828    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
413829    +END;
MPRINT(EM_DIAGRAM):   END;
413830    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
413831    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
413832    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
413833    +END;
MPRINT(EM_DIAGRAM):   END;
413834    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
413835    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
413836    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
413837    +END;
MPRINT(EM_DIAGRAM):   END;
413838    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
413839    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
413840    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
413841    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
413842    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
413843    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
413844    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
413845    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413846    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
413847    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413848    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
413849    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
413850    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
413851    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
413852    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
413853    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
413854    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
413855    +END;
MPRINT(EM_DIAGRAM):   END;
413856    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
413857    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
413858    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
413859    +drop
413860    +H11
413861    +H12
413862    +H13
413863    +H14
413864    +H15
413865    +H16
413866    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
413867    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
413868     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL17_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
413869     quit;
413870     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
413871     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
413872     * Neural17: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural17: Computing metadata for TRAIN data;
413873     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL17_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural17\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural17_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural17_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural17_TRAIN out=WORK.M3U2ZFY1 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3U2ZFY1;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3U2ZFY1(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3U2ZFY1;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3U2ZFY1;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3RN8_BD NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RN8_BD;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RN8_BD;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0BVWD7Y(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RN8_BD;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RN8_BD;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RN8_BD;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RN8_BD;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RN8_BD;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural17";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural17";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural17: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
414185     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
414186     set EMWS8.Neural17_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural17_EMINFO;
414187     where DATA='Neural17' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural17' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
414188     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL17_EMINFO.
      WHERE (DATA='Neural17') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

414189     data EMWS8.Neural17_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural17_EMINFO;
414190     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
414191     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
414192     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL17_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
414196     run;
414197     data EMWS8.Neural17_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_EMINFO;
414198     set EMWS8.Neural17_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural17_EMINFO WORK.MODELTEMP_INFO;
414199     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL17_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL17_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

414200     proc sort data = EMWS8.Neural17_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural17_EMINFO NOTHREADS;
414201     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
414202     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL17_EMINFO.
NOTE: The data set EMWS8.NEURAL17_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

414203     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
414204     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
414205     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

414206     proc sort data = EMWS8.Neural17_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural17_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
414207     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
414208     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL17_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

414209     data EMWS8.Neural17_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_EMINFO;
414210     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
414211     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
414212     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL17_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

414213     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
414214     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
414215     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
414216     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL17_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL17_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
