MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.26 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.26 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2OV33YZ 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2OV33YZ new;
MPRINT(EM_DIAGRAM):   run;
722150     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
722151     set EMWS8.Neural17_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural17_OUTKEY;
722152     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
722153     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.NEURAL17_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

722154     filename emflow
722154   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural17: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
722155     *------------------------------------------------------------*;
722156     * Neural17: Scoring DATA data;
722157     *------------------------------------------------------------*;
722158     data EMWS8.Neural17_TRAIN
722159     / view=EMWS8.Neural17_TRAIN
722160     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_TRAIN / view=EMWS8.Neural17_TRAIN ;
722161     set EMWS8.PRINCOMP_TRAIN
722162     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
722163     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas.
722164    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
722165    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
722166    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
722167    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
722168    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
722169    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
722170    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
722171    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
722172    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
722173    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
722174    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
722175    +LENGTH _WARN_ $4
722176    +      F_DepVar  $ 12
722177    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
722178    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
722179    +
722180    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
722181    +
722182    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
722183    +
722184    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
722185    +
722186    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
722187    +
722188    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
722189    +
722190    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
722191    +
722192    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
722193    +
722194    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
722195    +
722196    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
722197    +
722198    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
722199    +
722200    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
722201    +
722202    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
722203    +
722204    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
722205    +
722206    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
722207    +
722208    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
722209    +
722210    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
722211    +
722212    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
722213    +
722214    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
722215    +
722216    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
722217    +
722218    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
722219    +
722220    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
722221    +
722222    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
722223    +
722224    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
722225    +
722226    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
722227    +
722228    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
722229    +
722230    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
722231    +
722232    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
722233    +
722234    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
722235    +
722236    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
722237    +
722238    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
722239    +
722240    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
722241    +
722242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722243    +*** Checking missing input Interval
722244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
722245    +
722246    +IF NMISS(
722247    +   PC_1 ,
722248    +   PC_10 ,
722249    +   PC_11 ,
722250    +   PC_12 ,
722251    +   PC_13 ,
722252    +   PC_14 ,
722253    +   PC_15 ,
722254    +   PC_16 ,
722255    +   PC_17 ,
722256    +   PC_2 ,
722257    +   PC_3 ,
722258    +   PC_4 ,
722259    +   PC_5 ,
722260    +   PC_6 ,
722261    +   PC_7 ,
722262    +   PC_8 ,
722263    +   PC_9 ,
722264    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
722265    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
722266    +
722267    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722268    +END;
MPRINT(EM_DIAGRAM):   END;
722269    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722270    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
722271    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722272    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
722273    +   S_PC_1  = -3.6488918403387E-15 +     0.29892759566822 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.6488918403387E-15 + 0.29892759566822 * PC_1 ;
722274    +   S_PC_10  = -6.1105909646702E-15 +     0.82174055927533 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.1105909646702E-15 + 0.82174055927533 * PC_10 ;
722275    +   S_PC_11  =  5.5953279603159E-15 +       0.856249156402 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 5.5953279603159E-15 + 0.856249156402 * PC_11 ;
722276    +   S_PC_12  = -4.1145821078075E-15 +     0.88806609097186 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -4.1145821078075E-15 + 0.88806609097186 * PC_12 ;
722277    +   S_PC_13  =  1.4849812030115E-15 +     0.89678852922943 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4849812030115E-15 + 0.89678852922943 * PC_13 ;
722278    +   S_PC_14  = -6.2973928075572E-15 +     0.90339751679168 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.2973928075572E-15 + 0.90339751679168 * PC_14 ;
722279    +   S_PC_15  = -5.8948982757007E-16 +     0.92999222699092 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -5.8948982757007E-16 + 0.92999222699092 * PC_15 ;
722280    +   S_PC_16  = -2.5957971712491E-15 +      0.9511809992322 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.5957971712491E-15 + 0.9511809992322 * PC_16 ;
722281    +   S_PC_17  =  3.6303451348395E-15 +     0.99884839954107 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 3.6303451348395E-15 + 0.99884839954107 * PC_17 ;
722282    +   S_PC_2  =  6.4135165190946E-15 +     0.54372947518581 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4135165190946E-15 + 0.54372947518581 * PC_2 ;
722283    +   S_PC_3  =  2.2514555608207E-15 +     0.55367420195889 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2514555608207E-15 + 0.55367420195889 * PC_3 ;
722284    +   S_PC_4  = -3.8797382198993E-15 +     0.63693509045378 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.8797382198993E-15 + 0.63693509045378 * PC_4 ;
722285    +   S_PC_5  = -4.8238591945923E-15 +      0.6666904967587 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.8238591945923E-15 + 0.6666904967587 * PC_5 ;
722286    +   S_PC_6  =  1.5849559140428E-15 +     0.70534780307004 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5849559140428E-15 + 0.70534780307004 * PC_6 ;
722287    +   S_PC_7  =  3.1562291763867E-16 +     0.74930538239816 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 3.1562291763867E-16 + 0.74930538239816 * PC_7 ;
722288    +   S_PC_8  = -2.4599196832342E-15 +     0.77164443961071 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.4599196832342E-15 + 0.77164443961071 * PC_8 ;
722289    +   S_PC_9  = -4.1449869562181E-15 +      0.8081978480865 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -4.1449869562181E-15 + 0.8081978480865 * PC_9 ;
722290    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
722291    +END;
MPRINT(EM_DIAGRAM):   END;
722292    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
722293    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
722294    +   ELSE S_PC_1  = -3.6488918403387E-15 +     0.29892759566822 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.6488918403387E-15 + 0.29892759566822 * PC_1 ;
722295    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
722296    +   ELSE S_PC_10  = -6.1105909646702E-15 +     0.82174055927533 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.1105909646702E-15 + 0.82174055927533 * PC_10 ;
722297    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
722298    +   ELSE S_PC_11  =  5.5953279603159E-15 +       0.856249156402 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 5.5953279603159E-15 + 0.856249156402 * PC_11 ;
722299    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
722300    +   ELSE S_PC_12  = -4.1145821078075E-15 +     0.88806609097186 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -4.1145821078075E-15 + 0.88806609097186 * PC_12 ;
722301    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
722302    +   ELSE S_PC_13  =  1.4849812030115E-15 +     0.89678852922943 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4849812030115E-15 + 0.89678852922943 * PC_13 ;
722303    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
722304    +   ELSE S_PC_14  = -6.2973928075572E-15 +     0.90339751679168 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.2973928075572E-15 + 0.90339751679168 * PC_14 ;
722305    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
722306    +   ELSE S_PC_15  = -5.8948982757007E-16 +     0.92999222699092 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -5.8948982757007E-16 + 0.92999222699092 * PC_15 ;
722307    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
722308    +   ELSE S_PC_16  = -2.5957971712491E-15 +      0.9511809992322 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.5957971712491E-15 + 0.9511809992322 * PC_16 ;
722309    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
722310    +   ELSE S_PC_17  =  3.6303451348395E-15 +     0.99884839954107 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 3.6303451348395E-15 + 0.99884839954107 * PC_17 ;
722311    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
722312    +   ELSE S_PC_2  =  6.4135165190946E-15 +     0.54372947518581 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4135165190946E-15 + 0.54372947518581 * PC_2 ;
722313    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
722314    +   ELSE S_PC_3  =  2.2514555608207E-15 +     0.55367420195889 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2514555608207E-15 + 0.55367420195889 * PC_3 ;
722315    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
722316    +   ELSE S_PC_4  = -3.8797382198993E-15 +     0.63693509045378 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.8797382198993E-15 + 0.63693509045378 * PC_4 ;
722317    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
722318    +   ELSE S_PC_5  = -4.8238591945923E-15 +      0.6666904967587 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.8238591945923E-15 + 0.6666904967587 * PC_5 ;
722319    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
722320    +   ELSE S_PC_6  =  1.5849559140428E-15 +     0.70534780307004 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5849559140428E-15 + 0.70534780307004 * PC_6 ;
722321    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
722322    +   ELSE S_PC_7  =  3.1562291763867E-16 +     0.74930538239816 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 3.1562291763867E-16 + 0.74930538239816 * PC_7 ;
722323    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
722324    +   ELSE S_PC_8  = -2.4599196832342E-15 +     0.77164443961071 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.4599196832342E-15 + 0.77164443961071 * PC_8 ;
722325    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
722326    +   ELSE S_PC_9  = -4.1449869562181E-15 +      0.8081978480865 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -4.1449869562181E-15 + 0.8081978480865 * PC_9 ;
722327    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
722328    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
722329    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
722330    +END;
MPRINT(EM_DIAGRAM):   END;
722331    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722332    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
722333    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722334    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
722335    +   H11  =      0.4572037399939 * S_PC_1  +    -0.33924067655378 * S_PC_10
722336    +          +     0.57141385115112 * S_PC_11  +     0.48487316549189 * S_PC_12
722337    +          +    -1.05031657956537 * S_PC_13  +         0.5266100628 * S_PC_14
722338    +          +    -0.40664215599546 * S_PC_15  +     0.12584985353518 * S_PC_16
722339    +          +    -0.18726079041205 * S_PC_17  +    -0.21051549627173 * S_PC_2
722340    +          +    -0.50083883209613 * S_PC_3  +     0.15037036519111 * S_PC_4
722341    +          +    -0.06091340223564 * S_PC_5  +     0.12052144993899 * S_PC_6
722342    +          +       0.332356321128 * S_PC_7  +     0.31706599410802 * S_PC_8
722343    +          +     0.27650701530647 * S_PC_9  +     0.36756441254936 *
722344    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.4572037399939 * S_PC_1 + -0.33924067655378 * S_PC_10 + 
0.57141385115112 * S_PC_11 + 0.48487316549189 * S_PC_12 + -1.05031657956537 * S_PC_13 + 
0.5266100628 * S_PC_14 + -0.40664215599546 * S_PC_15 + 0.12584985353518 * S_PC_16 + 
-0.18726079041205 * S_PC_17 + -0.21051549627173 * S_PC_2 + -0.50083883209613 * S_PC_3 + 
0.15037036519111 * S_PC_4 + -0.06091340223564 * S_PC_5 + 0.12052144993899 * S_PC_6 + 
0.332356321128 * S_PC_7 + 0.31706599410802 * S_PC_8 + 0.27650701530647 * S_PC_9 + 
0.36756441254936 * S_Year_Birth ;
722345    +   H12  =     0.39344846914742 * S_PC_1  +     0.23972559280802 * S_PC_10
722346    +          +     0.01471125669581 * S_PC_11  +     0.20856923684903 * S_PC_12
722347    +          +    -0.29177209177854 * S_PC_13  +     0.03707095215892 * S_PC_14
722348    +          +     0.38334701775474 * S_PC_15  +      0.5863505707375 * S_PC_16
722349    +          +    -0.62562899968641 * S_PC_17  +    -0.44298666943655 * S_PC_2
722350    +          +        0.04346878824 * S_PC_3  +     -0.2694267850657 * S_PC_4
722351    +          +    -0.12543247097847 * S_PC_5  +     -0.1896504822101 * S_PC_6
722352    +          +     0.18228845542316 * S_PC_7  +     0.09948287582483 * S_PC_8
722353    +          +     0.08527418828587 * S_PC_9  +    -0.07133810194976 *
722354    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.39344846914742 * S_PC_1 + 0.23972559280802 * S_PC_10 + 
0.01471125669581 * S_PC_11 + 0.20856923684903 * S_PC_12 + -0.29177209177854 * S_PC_13 + 
0.03707095215892 * S_PC_14 + 0.38334701775474 * S_PC_15 + 0.5863505707375 * S_PC_16 + 
-0.62562899968641 * S_PC_17 + -0.44298666943655 * S_PC_2 + 0.04346878824 * S_PC_3 + 
-0.2694267850657 * S_PC_4 + -0.12543247097847 * S_PC_5 + -0.1896504822101 * S_PC_6 + 
0.18228845542316 * S_PC_7 + 0.09948287582483 * S_PC_8 + 0.08527418828587 * S_PC_9 + 
-0.07133810194976 * S_Year_Birth ;
722355    +   H13  =    -0.73548355547467 * S_PC_1  +    -0.10402810694097 * S_PC_10
722356    +          +    -0.23530243081797 * S_PC_11  +     0.05157777911367 * S_PC_12
722357    +          +    -0.37308967195093 * S_PC_13  +     0.84460260270185 * S_PC_14
722358    +          +    -0.06322469233111 * S_PC_15  +     0.19066414060707 * S_PC_16
722359    +          +     0.06331857444725 * S_PC_17  +    -1.07880141314119 * S_PC_2
722360    +          +    -0.40445464921802 * S_PC_3  +     0.42151508961402 * S_PC_4
722361    +          +    -0.15204543817335 * S_PC_5  +     0.18602427623316 * S_PC_6
722362    +          +    -0.04709706814842 * S_PC_7  +     0.36586874220739 * S_PC_8
722363    +          +    -0.06991289454926 * S_PC_9  +    -0.36834643959125 *
722364    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.73548355547467 * S_PC_1 + -0.10402810694097 * S_PC_10 + 
-0.23530243081797 * S_PC_11 + 0.05157777911367 * S_PC_12 + -0.37308967195093 * S_PC_13 + 
0.84460260270185 * S_PC_14 + -0.06322469233111 * S_PC_15 + 0.19066414060707 * S_PC_16 + 
0.06331857444725 * S_PC_17 + -1.07880141314119 * S_PC_2 + -0.40445464921802 * S_PC_3 + 
0.42151508961402 * S_PC_4 + -0.15204543817335 * S_PC_5 + 0.18602427623316 * S_PC_6 + 
-0.04709706814842 * S_PC_7 + 0.36586874220739 * S_PC_8 + -0.06991289454926 * S_PC_9 + 
-0.36834643959125 * S_Year_Birth ;
722365    +   H14  =     0.03645017761422 * S_PC_1  +     0.35836366205085 * S_PC_10
722366    +          +    -0.67037688965042 * S_PC_11  +    -0.69506985454419 * S_PC_12
722367    +          +     0.75476319829716 * S_PC_13  +     0.17842794890744 * S_PC_14
722368    +          +    -0.02555345712531 * S_PC_15  +    -0.09809436799607 * S_PC_16
722369    +          +     0.53989601368165 * S_PC_17  +     0.34066718426356 * S_PC_2
722370    +          +    -0.13975214313923 * S_PC_3  +     0.39764818364136 * S_PC_4
722371    +          +     0.48005328630412 * S_PC_5  +    -0.24963672499963 * S_PC_6
722372    +          +     0.33581189577795 * S_PC_7  +    -0.20453271114584 * S_PC_8
722373    +          +    -0.18026723512126 * S_PC_9  +    -0.01794612569398 *
722374    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.03645017761422 * S_PC_1 + 0.35836366205085 * S_PC_10 + 
-0.67037688965042 * S_PC_11 + -0.69506985454419 * S_PC_12 + 0.75476319829716 * S_PC_13 + 
0.17842794890744 * S_PC_14 + -0.02555345712531 * S_PC_15 + -0.09809436799607 * S_PC_16 + 
0.53989601368165 * S_PC_17 + 0.34066718426356 * S_PC_2 + -0.13975214313923 * S_PC_3 + 
0.39764818364136 * S_PC_4 + 0.48005328630412 * S_PC_5 + -0.24963672499963 * S_PC_6 + 
0.33581189577795 * S_PC_7 + -0.20453271114584 * S_PC_8 + -0.18026723512126 * S_PC_9 + 
-0.01794612569398 * S_Year_Birth ;
722375    +   H15  =     0.87819286617219 * S_PC_1  +    -0.45680333333833 * S_PC_10
722376    +          +    -0.19222569004196 * S_PC_11  +    -0.69150047873875 * S_PC_12
722377    +          +    -0.15732640647119 * S_PC_13  +     -0.1113321891333 * S_PC_14
722378    +          +     0.02739308651489 * S_PC_15  +     0.03470872151577 * S_PC_16
722379    +          +     0.52347238904566 * S_PC_17  +    -0.48104910756428 * S_PC_2
722380    +          +     0.39717000994127 * S_PC_3  +     0.40508698052766 * S_PC_4
722381    +          +    -0.70416241168868 * S_PC_5  +    -0.15695961262575 * S_PC_6
722382    +          +    -0.50463412391796 * S_PC_7  +    -0.42242933925107 * S_PC_8
722383    +          +     0.48601170602465 * S_PC_9  +     0.05218649760104 *
722384    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.87819286617219 * S_PC_1 + -0.45680333333833 * S_PC_10 + 
-0.19222569004196 * S_PC_11 + -0.69150047873875 * S_PC_12 + -0.15732640647119 * S_PC_13 + 
-0.1113321891333 * S_PC_14 + 0.02739308651489 * S_PC_15 + 0.03470872151577 * S_PC_16 + 
0.52347238904566 * S_PC_17 + -0.48104910756428 * S_PC_2 + 0.39717000994127 * S_PC_3 + 
0.40508698052766 * S_PC_4 + -0.70416241168868 * S_PC_5 + -0.15695961262575 * S_PC_6 + 
-0.50463412391796 * S_PC_7 + -0.42242933925107 * S_PC_8 + 0.48601170602465 * S_PC_9 + 
0.05218649760104 * S_Year_Birth ;
722385    +   H16  =     0.71314442719152 * S_PC_1  +    -0.48254803601996 * S_PC_10
722386    +          +     -0.7055040284859 * S_PC_11  +    -0.28771421134443 * S_PC_12
722387    +          +     0.03904298770718 * S_PC_13  +    -0.19570881459626 * S_PC_14
722388    +          +     0.06318106643827 * S_PC_15  +     0.02221515221124 * S_PC_16
722389    +          +     0.08250149766469 * S_PC_17  +     0.24785323093961 * S_PC_2
722390    +          +     0.67272562474514 * S_PC_3  +    -0.40883740914753 * S_PC_4
722391    +          +     0.01526133771642 * S_PC_5  +     0.13815654365502 * S_PC_6
722392    +          +    -0.13763305233903 * S_PC_7  +     0.65046077839767 * S_PC_8
722393    +          +     0.59590047615822 * S_PC_9  +    -0.23180740400042 *
722394    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.71314442719152 * S_PC_1 + -0.48254803601996 * S_PC_10 + 
-0.7055040284859 * S_PC_11 + -0.28771421134443 * S_PC_12 + 0.03904298770718 * S_PC_13 + 
-0.19570881459626 * S_PC_14 + 0.06318106643827 * S_PC_15 + 0.02221515221124 * S_PC_16 + 
0.08250149766469 * S_PC_17 + 0.24785323093961 * S_PC_2 + 0.67272562474514 * S_PC_3 + 
-0.40883740914753 * S_PC_4 + 0.01526133771642 * S_PC_5 + 0.13815654365502 * S_PC_6 + 
-0.13763305233903 * S_PC_7 + 0.65046077839767 * S_PC_8 + 0.59590047615822 * S_PC_9 + 
-0.23180740400042 * S_Year_Birth ;
722395    +   H11  =    -0.96567698220965 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.96567698220965 + H11 ;
722396    +   H12  =     0.98497546600771 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.98497546600771 + H12 ;
722397    +   H13  =    -1.66780990072659 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.66780990072659 + H13 ;
722398    +   H14  =    -1.58958109115035 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.58958109115035 + H14 ;
722399    +   H15  =     -1.4698438300852 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.4698438300852 + H15 ;
722400    +   H16  =    -1.96875059181844 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.96875059181844 + H16 ;
722401    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
722402    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
722403    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
722404    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
722405    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
722406    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
722407    +END;
MPRINT(EM_DIAGRAM):   END;
722408    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
722409    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
722410    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
722411    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
722412    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
722413    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
722414    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
722415    +END;
MPRINT(EM_DIAGRAM):   END;
722416    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722417    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
722418    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722419    +
722420    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
722421    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
722422    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
722423    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
722424    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
722425    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
722426    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
722427    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
722428    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
722429    +end;
MPRINT(EM_DIAGRAM):   end;
722430    +else do;
MPRINT(EM_DIAGRAM):   else do;
722431    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
722432    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
722433    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
722434    +   end;
MPRINT(EM_DIAGRAM):   end;
722435    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
722436    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
722437    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
722438    +   end;
MPRINT(EM_DIAGRAM):   end;
722439    +   else do;
MPRINT(EM_DIAGRAM):   else do;
722440    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
722441    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
722442    +   end;
MPRINT(EM_DIAGRAM):   end;
722443    +end;
MPRINT(EM_DIAGRAM):   end;
722444    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
722445    +   P_DepVar1  =     2.39531584340828 * H11  +      0.5615033898018 * H12
722446    +          +     1.33226164827793 * H13  +    -1.50665895392278 * H14
722447    +          +     1.50663887827851 * H15  +      1.7690093184365 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.39531584340828 * H11 + 0.5615033898018 * H12 + 
1.33226164827793 * H13 + -1.50665895392278 * H14 + 1.50663887827851 * H15 + 1.7690093184365 * 
H16 ;
722448    +   P_DepVar1  =    -0.73096588852494 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.73096588852494 + P_DepVar1 ;
722449    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
722450    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
722451    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
722452    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
722453    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
722454    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
722455    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
722456    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
722457    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
722458    +END;
MPRINT(EM_DIAGRAM):   END;
722459    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
722460    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
722461    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
722462    +END;
MPRINT(EM_DIAGRAM):   END;
722463    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
722464    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
722465    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
722466    +END;
MPRINT(EM_DIAGRAM):   END;
722467    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
722468    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
722469    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
722470    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
722471    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
722472    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
722473    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
722474    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722475    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
722476    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722477    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
722478    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
722479    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
722480    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
722481    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
722482    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
722483    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
722484    +END;
MPRINT(EM_DIAGRAM):   END;
722485    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
722486    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
722487    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
722488    +drop
722489    +H11
722490    +H12
722491    +H13
722492    +H14
722493    +H15
722494    +H16
722495    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
722496    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
722497     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL17_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
722498     quit;
722499     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
722500     filename emflow
722500   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural17: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
722501     *------------------------------------------------------------*;
722502     * Neural17: Scoring VALIDATE data;
722503     *------------------------------------------------------------*;
722504     data EMWS8.Neural17_VALIDATE
722505     / view=EMWS8.Neural17_VALIDATE
722506     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_VALIDATE / view=EMWS8.Neural17_VALIDATE ;
722507     set EMWS8.PRINCOMP_VALIDATE
722508     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
722509     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural17\EMFLOWSCORE.sas.
722510    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
722511    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
722512    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
722513    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
722514    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
722515    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
722516    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
722517    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
722518    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
722519    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
722520    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
722521    +LENGTH _WARN_ $4
722522    +      F_DepVar  $ 12
722523    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
722524    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
722525    +
722526    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
722527    +
722528    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
722529    +
722530    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
722531    +
722532    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
722533    +
722534    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
722535    +
722536    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
722537    +
722538    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
722539    +
722540    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
722541    +
722542    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
722543    +
722544    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
722545    +
722546    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
722547    +
722548    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
722549    +
722550    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
722551    +
722552    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
722553    +
722554    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
722555    +
722556    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
722557    +
722558    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
722559    +
722560    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
722561    +
722562    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
722563    +
722564    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
722565    +
722566    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
722567    +
722568    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
722569    +
722570    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
722571    +
722572    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
722573    +
722574    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
722575    +
722576    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
722577    +
722578    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
722579    +
722580    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
722581    +
722582    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
722583    +
722584    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
722585    +
722586    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
722587    +
722588    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722589    +*** Checking missing input Interval
722590    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
722591    +
722592    +IF NMISS(
722593    +   PC_1 ,
722594    +   PC_10 ,
722595    +   PC_11 ,
722596    +   PC_12 ,
722597    +   PC_13 ,
722598    +   PC_14 ,
722599    +   PC_15 ,
722600    +   PC_16 ,
722601    +   PC_17 ,
722602    +   PC_2 ,
722603    +   PC_3 ,
722604    +   PC_4 ,
722605    +   PC_5 ,
722606    +   PC_6 ,
722607    +   PC_7 ,
722608    +   PC_8 ,
722609    +   PC_9 ,
722610    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
722611    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
722612    +
722613    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722614    +END;
MPRINT(EM_DIAGRAM):   END;
722615    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722616    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
722617    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722618    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
722619    +   S_PC_1  = -3.6488918403387E-15 +     0.29892759566822 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.6488918403387E-15 + 0.29892759566822 * PC_1 ;
722620    +   S_PC_10  = -6.1105909646702E-15 +     0.82174055927533 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.1105909646702E-15 + 0.82174055927533 * PC_10 ;
722621    +   S_PC_11  =  5.5953279603159E-15 +       0.856249156402 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 5.5953279603159E-15 + 0.856249156402 * PC_11 ;
722622    +   S_PC_12  = -4.1145821078075E-15 +     0.88806609097186 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -4.1145821078075E-15 + 0.88806609097186 * PC_12 ;
722623    +   S_PC_13  =  1.4849812030115E-15 +     0.89678852922943 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4849812030115E-15 + 0.89678852922943 * PC_13 ;
722624    +   S_PC_14  = -6.2973928075572E-15 +     0.90339751679168 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.2973928075572E-15 + 0.90339751679168 * PC_14 ;
722625    +   S_PC_15  = -5.8948982757007E-16 +     0.92999222699092 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -5.8948982757007E-16 + 0.92999222699092 * PC_15 ;
722626    +   S_PC_16  = -2.5957971712491E-15 +      0.9511809992322 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.5957971712491E-15 + 0.9511809992322 * PC_16 ;
722627    +   S_PC_17  =  3.6303451348395E-15 +     0.99884839954107 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 3.6303451348395E-15 + 0.99884839954107 * PC_17 ;
722628    +   S_PC_2  =  6.4135165190946E-15 +     0.54372947518581 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4135165190946E-15 + 0.54372947518581 * PC_2 ;
722629    +   S_PC_3  =  2.2514555608207E-15 +     0.55367420195889 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2514555608207E-15 + 0.55367420195889 * PC_3 ;
722630    +   S_PC_4  = -3.8797382198993E-15 +     0.63693509045378 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.8797382198993E-15 + 0.63693509045378 * PC_4 ;
722631    +   S_PC_5  = -4.8238591945923E-15 +      0.6666904967587 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.8238591945923E-15 + 0.6666904967587 * PC_5 ;
722632    +   S_PC_6  =  1.5849559140428E-15 +     0.70534780307004 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5849559140428E-15 + 0.70534780307004 * PC_6 ;
722633    +   S_PC_7  =  3.1562291763867E-16 +     0.74930538239816 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 3.1562291763867E-16 + 0.74930538239816 * PC_7 ;
722634    +   S_PC_8  = -2.4599196832342E-15 +     0.77164443961071 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.4599196832342E-15 + 0.77164443961071 * PC_8 ;
722635    +   S_PC_9  = -4.1449869562181E-15 +      0.8081978480865 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -4.1449869562181E-15 + 0.8081978480865 * PC_9 ;
722636    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
722637    +END;
MPRINT(EM_DIAGRAM):   END;
722638    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
722639    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
722640    +   ELSE S_PC_1  = -3.6488918403387E-15 +     0.29892759566822 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.6488918403387E-15 + 0.29892759566822 * PC_1 ;
722641    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
722642    +   ELSE S_PC_10  = -6.1105909646702E-15 +     0.82174055927533 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.1105909646702E-15 + 0.82174055927533 * PC_10 ;
722643    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
722644    +   ELSE S_PC_11  =  5.5953279603159E-15 +       0.856249156402 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 5.5953279603159E-15 + 0.856249156402 * PC_11 ;
722645    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
722646    +   ELSE S_PC_12  = -4.1145821078075E-15 +     0.88806609097186 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -4.1145821078075E-15 + 0.88806609097186 * PC_12 ;
722647    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
722648    +   ELSE S_PC_13  =  1.4849812030115E-15 +     0.89678852922943 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4849812030115E-15 + 0.89678852922943 * PC_13 ;
722649    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
722650    +   ELSE S_PC_14  = -6.2973928075572E-15 +     0.90339751679168 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.2973928075572E-15 + 0.90339751679168 * PC_14 ;
722651    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
722652    +   ELSE S_PC_15  = -5.8948982757007E-16 +     0.92999222699092 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -5.8948982757007E-16 + 0.92999222699092 * PC_15 ;
722653    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
722654    +   ELSE S_PC_16  = -2.5957971712491E-15 +      0.9511809992322 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.5957971712491E-15 + 0.9511809992322 * PC_16 ;
722655    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
722656    +   ELSE S_PC_17  =  3.6303451348395E-15 +     0.99884839954107 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 3.6303451348395E-15 + 0.99884839954107 * PC_17 ;
722657    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
722658    +   ELSE S_PC_2  =  6.4135165190946E-15 +     0.54372947518581 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4135165190946E-15 + 0.54372947518581 * PC_2 ;
722659    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
722660    +   ELSE S_PC_3  =  2.2514555608207E-15 +     0.55367420195889 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2514555608207E-15 + 0.55367420195889 * PC_3 ;
722661    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
722662    +   ELSE S_PC_4  = -3.8797382198993E-15 +     0.63693509045378 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.8797382198993E-15 + 0.63693509045378 * PC_4 ;
722663    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
722664    +   ELSE S_PC_5  = -4.8238591945923E-15 +      0.6666904967587 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.8238591945923E-15 + 0.6666904967587 * PC_5 ;
722665    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
722666    +   ELSE S_PC_6  =  1.5849559140428E-15 +     0.70534780307004 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5849559140428E-15 + 0.70534780307004 * PC_6 ;
722667    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
722668    +   ELSE S_PC_7  =  3.1562291763867E-16 +     0.74930538239816 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 3.1562291763867E-16 + 0.74930538239816 * PC_7 ;
722669    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
722670    +   ELSE S_PC_8  = -2.4599196832342E-15 +     0.77164443961071 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.4599196832342E-15 + 0.77164443961071 * PC_8 ;
722671    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
722672    +   ELSE S_PC_9  = -4.1449869562181E-15 +      0.8081978480865 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -4.1449869562181E-15 + 0.8081978480865 * PC_9 ;
722673    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
722674    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
722675    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
722676    +END;
MPRINT(EM_DIAGRAM):   END;
722677    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722678    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
722679    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722680    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
722681    +   H11  =      0.4572037399939 * S_PC_1  +    -0.33924067655378 * S_PC_10
722682    +          +     0.57141385115112 * S_PC_11  +     0.48487316549189 * S_PC_12
722683    +          +    -1.05031657956537 * S_PC_13  +         0.5266100628 * S_PC_14
722684    +          +    -0.40664215599546 * S_PC_15  +     0.12584985353518 * S_PC_16
722685    +          +    -0.18726079041205 * S_PC_17  +    -0.21051549627173 * S_PC_2
722686    +          +    -0.50083883209613 * S_PC_3  +     0.15037036519111 * S_PC_4
722687    +          +    -0.06091340223564 * S_PC_5  +     0.12052144993899 * S_PC_6
722688    +          +       0.332356321128 * S_PC_7  +     0.31706599410802 * S_PC_8
722689    +          +     0.27650701530647 * S_PC_9  +     0.36756441254936 *
722690    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.4572037399939 * S_PC_1 + -0.33924067655378 * S_PC_10 + 
0.57141385115112 * S_PC_11 + 0.48487316549189 * S_PC_12 + -1.05031657956537 * S_PC_13 + 
0.5266100628 * S_PC_14 + -0.40664215599546 * S_PC_15 + 0.12584985353518 * S_PC_16 + 
-0.18726079041205 * S_PC_17 + -0.21051549627173 * S_PC_2 + -0.50083883209613 * S_PC_3 + 
0.15037036519111 * S_PC_4 + -0.06091340223564 * S_PC_5 + 0.12052144993899 * S_PC_6 + 
0.332356321128 * S_PC_7 + 0.31706599410802 * S_PC_8 + 0.27650701530647 * S_PC_9 + 
0.36756441254936 * S_Year_Birth ;
722691    +   H12  =     0.39344846914742 * S_PC_1  +     0.23972559280802 * S_PC_10
722692    +          +     0.01471125669581 * S_PC_11  +     0.20856923684903 * S_PC_12
722693    +          +    -0.29177209177854 * S_PC_13  +     0.03707095215892 * S_PC_14
722694    +          +     0.38334701775474 * S_PC_15  +      0.5863505707375 * S_PC_16
722695    +          +    -0.62562899968641 * S_PC_17  +    -0.44298666943655 * S_PC_2
722696    +          +        0.04346878824 * S_PC_3  +     -0.2694267850657 * S_PC_4
722697    +          +    -0.12543247097847 * S_PC_5  +     -0.1896504822101 * S_PC_6
722698    +          +     0.18228845542316 * S_PC_7  +     0.09948287582483 * S_PC_8
722699    +          +     0.08527418828587 * S_PC_9  +    -0.07133810194976 *
722700    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.39344846914742 * S_PC_1 + 0.23972559280802 * S_PC_10 + 
0.01471125669581 * S_PC_11 + 0.20856923684903 * S_PC_12 + -0.29177209177854 * S_PC_13 + 
0.03707095215892 * S_PC_14 + 0.38334701775474 * S_PC_15 + 0.5863505707375 * S_PC_16 + 
-0.62562899968641 * S_PC_17 + -0.44298666943655 * S_PC_2 + 0.04346878824 * S_PC_3 + 
-0.2694267850657 * S_PC_4 + -0.12543247097847 * S_PC_5 + -0.1896504822101 * S_PC_6 + 
0.18228845542316 * S_PC_7 + 0.09948287582483 * S_PC_8 + 0.08527418828587 * S_PC_9 + 
-0.07133810194976 * S_Year_Birth ;
722701    +   H13  =    -0.73548355547467 * S_PC_1  +    -0.10402810694097 * S_PC_10
722702    +          +    -0.23530243081797 * S_PC_11  +     0.05157777911367 * S_PC_12
722703    +          +    -0.37308967195093 * S_PC_13  +     0.84460260270185 * S_PC_14
722704    +          +    -0.06322469233111 * S_PC_15  +     0.19066414060707 * S_PC_16
722705    +          +     0.06331857444725 * S_PC_17  +    -1.07880141314119 * S_PC_2
722706    +          +    -0.40445464921802 * S_PC_3  +     0.42151508961402 * S_PC_4
722707    +          +    -0.15204543817335 * S_PC_5  +     0.18602427623316 * S_PC_6
722708    +          +    -0.04709706814842 * S_PC_7  +     0.36586874220739 * S_PC_8
722709    +          +    -0.06991289454926 * S_PC_9  +    -0.36834643959125 *
722710    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.73548355547467 * S_PC_1 + -0.10402810694097 * S_PC_10 + 
-0.23530243081797 * S_PC_11 + 0.05157777911367 * S_PC_12 + -0.37308967195093 * S_PC_13 + 
0.84460260270185 * S_PC_14 + -0.06322469233111 * S_PC_15 + 0.19066414060707 * S_PC_16 + 
0.06331857444725 * S_PC_17 + -1.07880141314119 * S_PC_2 + -0.40445464921802 * S_PC_3 + 
0.42151508961402 * S_PC_4 + -0.15204543817335 * S_PC_5 + 0.18602427623316 * S_PC_6 + 
-0.04709706814842 * S_PC_7 + 0.36586874220739 * S_PC_8 + -0.06991289454926 * S_PC_9 + 
-0.36834643959125 * S_Year_Birth ;
722711    +   H14  =     0.03645017761422 * S_PC_1  +     0.35836366205085 * S_PC_10
722712    +          +    -0.67037688965042 * S_PC_11  +    -0.69506985454419 * S_PC_12
722713    +          +     0.75476319829716 * S_PC_13  +     0.17842794890744 * S_PC_14
722714    +          +    -0.02555345712531 * S_PC_15  +    -0.09809436799607 * S_PC_16
722715    +          +     0.53989601368165 * S_PC_17  +     0.34066718426356 * S_PC_2
722716    +          +    -0.13975214313923 * S_PC_3  +     0.39764818364136 * S_PC_4
722717    +          +     0.48005328630412 * S_PC_5  +    -0.24963672499963 * S_PC_6
722718    +          +     0.33581189577795 * S_PC_7  +    -0.20453271114584 * S_PC_8
722719    +          +    -0.18026723512126 * S_PC_9  +    -0.01794612569398 *
722720    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.03645017761422 * S_PC_1 + 0.35836366205085 * S_PC_10 + 
-0.67037688965042 * S_PC_11 + -0.69506985454419 * S_PC_12 + 0.75476319829716 * S_PC_13 + 
0.17842794890744 * S_PC_14 + -0.02555345712531 * S_PC_15 + -0.09809436799607 * S_PC_16 + 
0.53989601368165 * S_PC_17 + 0.34066718426356 * S_PC_2 + -0.13975214313923 * S_PC_3 + 
0.39764818364136 * S_PC_4 + 0.48005328630412 * S_PC_5 + -0.24963672499963 * S_PC_6 + 
0.33581189577795 * S_PC_7 + -0.20453271114584 * S_PC_8 + -0.18026723512126 * S_PC_9 + 
-0.01794612569398 * S_Year_Birth ;
722721    +   H15  =     0.87819286617219 * S_PC_1  +    -0.45680333333833 * S_PC_10
722722    +          +    -0.19222569004196 * S_PC_11  +    -0.69150047873875 * S_PC_12
722723    +          +    -0.15732640647119 * S_PC_13  +     -0.1113321891333 * S_PC_14
722724    +          +     0.02739308651489 * S_PC_15  +     0.03470872151577 * S_PC_16
722725    +          +     0.52347238904566 * S_PC_17  +    -0.48104910756428 * S_PC_2
722726    +          +     0.39717000994127 * S_PC_3  +     0.40508698052766 * S_PC_4
722727    +          +    -0.70416241168868 * S_PC_5  +    -0.15695961262575 * S_PC_6
722728    +          +    -0.50463412391796 * S_PC_7  +    -0.42242933925107 * S_PC_8
722729    +          +     0.48601170602465 * S_PC_9  +     0.05218649760104 *
722730    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.87819286617219 * S_PC_1 + -0.45680333333833 * S_PC_10 + 
-0.19222569004196 * S_PC_11 + -0.69150047873875 * S_PC_12 + -0.15732640647119 * S_PC_13 + 
-0.1113321891333 * S_PC_14 + 0.02739308651489 * S_PC_15 + 0.03470872151577 * S_PC_16 + 
0.52347238904566 * S_PC_17 + -0.48104910756428 * S_PC_2 + 0.39717000994127 * S_PC_3 + 
0.40508698052766 * S_PC_4 + -0.70416241168868 * S_PC_5 + -0.15695961262575 * S_PC_6 + 
-0.50463412391796 * S_PC_7 + -0.42242933925107 * S_PC_8 + 0.48601170602465 * S_PC_9 + 
0.05218649760104 * S_Year_Birth ;
722731    +   H16  =     0.71314442719152 * S_PC_1  +    -0.48254803601996 * S_PC_10
722732    +          +     -0.7055040284859 * S_PC_11  +    -0.28771421134443 * S_PC_12
722733    +          +     0.03904298770718 * S_PC_13  +    -0.19570881459626 * S_PC_14
722734    +          +     0.06318106643827 * S_PC_15  +     0.02221515221124 * S_PC_16
722735    +          +     0.08250149766469 * S_PC_17  +     0.24785323093961 * S_PC_2
722736    +          +     0.67272562474514 * S_PC_3  +    -0.40883740914753 * S_PC_4
722737    +          +     0.01526133771642 * S_PC_5  +     0.13815654365502 * S_PC_6
722738    +          +    -0.13763305233903 * S_PC_7  +     0.65046077839767 * S_PC_8
722739    +          +     0.59590047615822 * S_PC_9  +    -0.23180740400042 *
722740    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.71314442719152 * S_PC_1 + -0.48254803601996 * S_PC_10 + 
-0.7055040284859 * S_PC_11 + -0.28771421134443 * S_PC_12 + 0.03904298770718 * S_PC_13 + 
-0.19570881459626 * S_PC_14 + 0.06318106643827 * S_PC_15 + 0.02221515221124 * S_PC_16 + 
0.08250149766469 * S_PC_17 + 0.24785323093961 * S_PC_2 + 0.67272562474514 * S_PC_3 + 
-0.40883740914753 * S_PC_4 + 0.01526133771642 * S_PC_5 + 0.13815654365502 * S_PC_6 + 
-0.13763305233903 * S_PC_7 + 0.65046077839767 * S_PC_8 + 0.59590047615822 * S_PC_9 + 
-0.23180740400042 * S_Year_Birth ;
722741    +   H11  =    -0.96567698220965 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.96567698220965 + H11 ;
722742    +   H12  =     0.98497546600771 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.98497546600771 + H12 ;
722743    +   H13  =    -1.66780990072659 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.66780990072659 + H13 ;
722744    +   H14  =    -1.58958109115035 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.58958109115035 + H14 ;
722745    +   H15  =     -1.4698438300852 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.4698438300852 + H15 ;
722746    +   H16  =    -1.96875059181844 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.96875059181844 + H16 ;
722747    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
722748    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
722749    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
722750    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
722751    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
722752    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
722753    +END;
MPRINT(EM_DIAGRAM):   END;
722754    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
722755    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
722756    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
722757    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
722758    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
722759    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
722760    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
722761    +END;
MPRINT(EM_DIAGRAM):   END;
722762    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722763    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
722764    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722765    +
722766    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
722767    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
722768    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
722769    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
722770    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
722771    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
722772    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
722773    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
722774    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
722775    +end;
MPRINT(EM_DIAGRAM):   end;
722776    +else do;
MPRINT(EM_DIAGRAM):   else do;
722777    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
722778    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
722779    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
722780    +   end;
MPRINT(EM_DIAGRAM):   end;
722781    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
722782    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
722783    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
722784    +   end;
MPRINT(EM_DIAGRAM):   end;
722785    +   else do;
MPRINT(EM_DIAGRAM):   else do;
722786    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
722787    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
722788    +   end;
MPRINT(EM_DIAGRAM):   end;
722789    +end;
MPRINT(EM_DIAGRAM):   end;
722790    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
722791    +   P_DepVar1  =     2.39531584340828 * H11  +      0.5615033898018 * H12
722792    +          +     1.33226164827793 * H13  +    -1.50665895392278 * H14
722793    +          +     1.50663887827851 * H15  +      1.7690093184365 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.39531584340828 * H11 + 0.5615033898018 * H12 + 
1.33226164827793 * H13 + -1.50665895392278 * H14 + 1.50663887827851 * H15 + 1.7690093184365 * 
H16 ;
722794    +   P_DepVar1  =    -0.73096588852494 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.73096588852494 + P_DepVar1 ;
722795    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
722796    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
722797    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
722798    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
722799    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
722800    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
722801    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
722802    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
722803    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
722804    +END;
MPRINT(EM_DIAGRAM):   END;
722805    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
722806    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
722807    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
722808    +END;
MPRINT(EM_DIAGRAM):   END;
722809    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
722810    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
722811    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
722812    +END;
MPRINT(EM_DIAGRAM):   END;
722813    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
722814    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
722815    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
722816    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
722817    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
722818    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
722819    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
722820    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722821    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
722822    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
722823    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
722824    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
722825    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
722826    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
722827    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
722828    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
722829    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
722830    +END;
MPRINT(EM_DIAGRAM):   END;
722831    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
722832    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
722833    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
722834    +drop
722835    +H11
722836    +H12
722837    +H13
722838    +H14
722839    +H15
722840    +H16
722841    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
722842    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
722843     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL17_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
722844     quit;
722845     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
722846     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
722847     * Neural17: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural17: Computing metadata for TRAIN data;
722848     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL17_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural17\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural17_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural17_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural17_TRAIN out=WORK.M1KEKP31 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1KEKP31;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1KEKP31(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1KEKP31;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1KEKP31;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0RT7MT4 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RT7MT4;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RT7MT4;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3B__EPI(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RT7MT4;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RT7MT4;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RT7MT4;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RT7MT4;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RT7MT4;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural17";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural17";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural17";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural17: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
723160     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
723161     set EMWS8.Neural17_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural17_EMINFO;
723162     where DATA='Neural17' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural17' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
723163     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL17_EMINFO.
      WHERE (DATA='Neural17') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

723164     data EMWS8.Neural17_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural17_EMINFO;
723165     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
723166     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
723167     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL17_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
723171     run;
723172     data EMWS8.Neural17_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_EMINFO;
723173     set EMWS8.Neural17_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural17_EMINFO WORK.MODELTEMP_INFO;
723174     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL17_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL17_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

723175     proc sort data = EMWS8.Neural17_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural17_EMINFO NOTHREADS;
723176     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
723177     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL17_EMINFO.
NOTE: The data set EMWS8.NEURAL17_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

723178     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
723179     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
723180     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

723181     proc sort data = EMWS8.Neural17_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural17_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
723182     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
723183     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL17_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

723184     data EMWS8.Neural17_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural17_EMINFO;
723185     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
723186     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
723187     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL17_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

723188     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
723189     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
723190     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
723191     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.NEURAL17_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL17_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
