MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.24 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.24 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O37DFYS2 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O37DFYS2 new;
MPRINT(EM_DIAGRAM):   run;
476783     proc transpose data=EMWS8.Reg3_EMESTIMATE out=WORK.TEMPREG;
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS8.Reg3_EMESTIMATE out=WORK.TEMPREG;
476784     where _CHOSEN_ ne '' and _TYPE_='PARMS';
MPRINT(EM_DIAGRAM):   where _CHOSEN_ ne '' and _TYPE_='PARMS';
476785     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.REG3_EMESTIMATE.
      WHERE (_CHOSEN_ not = ' ') and (_TYPE_='PARMS');
NOTE: The data set WORK.TEMPREG has 74 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

476786     proc transpose data=EMWS8.Reg3_MAPDS out=WORK.TEMPREG2;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS8.Reg3_MAPDS out=WORK.TEMPREG2;
476787     var "GRP_AcceptedCmp52"n--"Year_Birth"n;
MPRINT(EM_DIAGRAM):   var "GRP_AcceptedCmp52"n--"Year_Birth"n;
476788     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS8.REG3_MAPDS.
NOTE: The data set WORK.TEMPREG2 has 40 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

476789     proc sort data=WORK.TEMPREG NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG NOTHREADS;
476790     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
476791     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK.TEMPREG.
NOTE: The data set WORK.TEMPREG has 74 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

476792     proc sort data=WORK.TEMPREG2 NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG2 NOTHREADS;
476793     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
476794     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG2 has 40 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

476795     data WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3;
476796     merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
MPRINT(EM_DIAGRAM):   merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
476797     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
476798     if (ina and inb) and DepVar ne . then output;
MPRINT(EM_DIAGRAM):   if (ina and inb) and DepVar ne . then output;
476799     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK.TEMPREG.
NOTE: There were 40 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG3 has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

476800     data WORK.TEMPREG3(KEEP=TERM);
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3(KEEP=TERM);
476801     length term $32;
MPRINT(EM_DIAGRAM):   length term $32;
476802     set WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   set WORK.TEMPREG3;
476803     i=1;
MPRINT(EM_DIAGRAM):   i=1;
476804     do while( scan(input , i, '*') ne '' );
MPRINT(EM_DIAGRAM):   do while( scan(input , i, '*') ne '' );
476805     term= scan(input , i, '*');
MPRINT(EM_DIAGRAM):   term= scan(input , i, '*');
476806     i=i+1;
MPRINT(EM_DIAGRAM):   i=i+1;
476807     output;
MPRINT(EM_DIAGRAM):   output;
476808     end;
MPRINT(EM_DIAGRAM):   end;
476809     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 28 observations read from the data set WORK.TEMPREG3.
NOTE: The data set WORK.TEMPREG3 has 28 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

476810     proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
476811     by TERM;
MPRINT(EM_DIAGRAM):   by TERM;
476812     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 28 observations read from the data set WORK.TEMPREG3.
NOTE: 17 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPREG3 has 11 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

476813     filename emflow
476813   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg3: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
476814     *------------------------------------------------------------*;
476815     * Reg3: Scoring DATA data;
476816     *------------------------------------------------------------*;
476817     data EMWS8.Reg3_TRAIN
476818     / view=EMWS8.Reg3_TRAIN
476819     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg3_TRAIN / view=EMWS8.Reg3_TRAIN ;
476820     set EMWS8.BINNING_TRAIN
476821     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
476822     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMFLOWSCORE.sas.
476823    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
476824    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
476825    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
476826    +
476827    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
476828    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
476829    +
476830    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
476831    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
476832    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
476833    +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
476834    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
476835    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
476836    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
476837    +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
476838    +
476839    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
476840    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
476841    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
476842    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
476843    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
476844    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476845    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
476846    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
476847    +end;
MPRINT(EM_DIAGRAM):   end;
476848    +else do;
MPRINT(EM_DIAGRAM):   else do;
476849    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
476850    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
476851    +   end;
MPRINT(EM_DIAGRAM):   end;
476852    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
476853    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
476854    +   end;
MPRINT(EM_DIAGRAM):   end;
476855    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476856    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
476857    +   end;
MPRINT(EM_DIAGRAM):   end;
476858    +end;
MPRINT(EM_DIAGRAM):   end;
476859    +
476860    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
476861    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
476862    +
476863    +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
476864    +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
476865    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476866    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476867    +end;
MPRINT(EM_DIAGRAM):   end;
476868    +
476869    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
476870    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
476871    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
476872    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
476873    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476874    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476875    +end;
MPRINT(EM_DIAGRAM):   end;
476876    +else do;
MPRINT(EM_DIAGRAM):   else do;
476877    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
476878    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
476879    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476880    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
476881    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
476882    +   end;
MPRINT(EM_DIAGRAM):   end;
476883    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
476884    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
476885    +   end;
MPRINT(EM_DIAGRAM):   end;
476886    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476887    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
476888    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
476889    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476890    +   end;
MPRINT(EM_DIAGRAM):   end;
476891    +end;
MPRINT(EM_DIAGRAM):   end;
476892    +
476893    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
476894    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
476895    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
476896    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
476897    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
476898    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
476899    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476900    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476901    +end;
MPRINT(EM_DIAGRAM):   end;
476902    +else do;
MPRINT(EM_DIAGRAM):   else do;
476903    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
476904    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
476905    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476906    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
476907    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
476908    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
476909    +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
476910    +   end;
MPRINT(EM_DIAGRAM):   end;
476911    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
476912    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
476913    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
476914    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
476915    +   end;
MPRINT(EM_DIAGRAM):   end;
476916    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
476917    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
476918    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
476919    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
476920    +   end;
MPRINT(EM_DIAGRAM):   end;
476921    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
476922    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
476923    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
476924    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
476925    +   end;
MPRINT(EM_DIAGRAM):   end;
476926    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476927    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
476928    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
476929    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
476930    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
476931    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476932    +   end;
MPRINT(EM_DIAGRAM):   end;
476933    +end;
MPRINT(EM_DIAGRAM):   end;
476934    +
476935    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
476936    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
476937    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
476938    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
476939    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
476940    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
476941    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476942    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476943    +end;
MPRINT(EM_DIAGRAM):   end;
476944    +else do;
MPRINT(EM_DIAGRAM):   else do;
476945    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
476946    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
476947    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476948    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
476949    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
476950    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
476951    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
476952    +   end;
MPRINT(EM_DIAGRAM):   end;
476953    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
476954    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
476955    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
476956    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
476957    +   end;
MPRINT(EM_DIAGRAM):   end;
476958    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
476959    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
476960    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
476961    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
476962    +   end;
MPRINT(EM_DIAGRAM):   end;
476963    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
476964    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
476965    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
476966    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
476967    +   end;
MPRINT(EM_DIAGRAM):   end;
476968    +   else do;
MPRINT(EM_DIAGRAM):   else do;
476969    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
476970    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
476971    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
476972    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
476973    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476974    +   end;
MPRINT(EM_DIAGRAM):   end;
476975    +end;
MPRINT(EM_DIAGRAM):   end;
476976    +
476977    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
476978    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
476979    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
476980    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
476981    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
476982    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
476983    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
476984    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
476985    +end;
MPRINT(EM_DIAGRAM):   end;
476986    +else do;
MPRINT(EM_DIAGRAM):   else do;
476987    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
476988    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
476989    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
476990    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
476991    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
476992    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
476993    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
476994    +   end;
MPRINT(EM_DIAGRAM):   end;
476995    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
476996    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
476997    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
476998    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
476999    +   end;
MPRINT(EM_DIAGRAM):   end;
477000    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477001    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
477002    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
477003    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
477004    +   end;
MPRINT(EM_DIAGRAM):   end;
477005    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
477006    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
477007    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
477008    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
477009    +   end;
MPRINT(EM_DIAGRAM):   end;
477010    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477011    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
477012    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
477013    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
477014    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477015    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477016    +   end;
MPRINT(EM_DIAGRAM):   end;
477017    +end;
MPRINT(EM_DIAGRAM):   end;
477018    +
477019    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
477020    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
477021    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
477022    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
477023    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
477024    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
477025    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477026    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477027    +end;
MPRINT(EM_DIAGRAM):   end;
477028    +else do;
MPRINT(EM_DIAGRAM):   else do;
477029    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477030    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
477031    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477032    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
477033    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
477034    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
477035    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
477036    +   end;
MPRINT(EM_DIAGRAM):   end;
477037    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477038    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
477039    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
477040    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
477041    +   end;
MPRINT(EM_DIAGRAM):   end;
477042    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
477043    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
477044    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
477045    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
477046    +   end;
MPRINT(EM_DIAGRAM):   end;
477047    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
477048    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
477049    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
477050    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
477051    +   end;
MPRINT(EM_DIAGRAM):   end;
477052    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477053    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
477054    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
477055    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
477056    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477057    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477058    +   end;
MPRINT(EM_DIAGRAM):   end;
477059    +end;
MPRINT(EM_DIAGRAM):   end;
477060    +
477061    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
477062    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
477063    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
477064    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
477065    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
477066    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
477067    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477068    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477069    +end;
MPRINT(EM_DIAGRAM):   end;
477070    +else do;
MPRINT(EM_DIAGRAM):   else do;
477071    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477072    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
477073    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477074    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
477075    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
477076    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
477077    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
477078    +   end;
MPRINT(EM_DIAGRAM):   end;
477079    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
477080    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
477081    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
477082    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
477083    +   end;
MPRINT(EM_DIAGRAM):   end;
477084    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477085    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
477086    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
477087    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
477088    +   end;
MPRINT(EM_DIAGRAM):   end;
477089    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
477090    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
477091    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
477092    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
477093    +   end;
MPRINT(EM_DIAGRAM):   end;
477094    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477095    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
477096    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
477097    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
477098    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477099    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477100    +   end;
MPRINT(EM_DIAGRAM):   end;
477101    +end;
MPRINT(EM_DIAGRAM):   end;
477102    +
477103    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
477104    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
477105    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
477106    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
477107    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
477108    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477109    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477110    +end;
MPRINT(EM_DIAGRAM):   end;
477111    +else do;
MPRINT(EM_DIAGRAM):   else do;
477112    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477113    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
477114    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477115    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
477116    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
477117    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
477118    +   end;
MPRINT(EM_DIAGRAM):   end;
477119    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
477120    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
477121    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
477122    +   end;
MPRINT(EM_DIAGRAM):   end;
477123    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477124    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
477125    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
477126    +   end;
MPRINT(EM_DIAGRAM):   end;
477127    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477128    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
477129    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
477130    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477131    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477132    +   end;
MPRINT(EM_DIAGRAM):   end;
477133    +end;
MPRINT(EM_DIAGRAM):   end;
477134    +
477135    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
477136    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
477137    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
477138    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
477139    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
477140    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
477141    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477142    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477143    +end;
MPRINT(EM_DIAGRAM):   end;
477144    +else do;
MPRINT(EM_DIAGRAM):   else do;
477145    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477146    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
477147    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477148    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
477149    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
477150    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
477151    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
477152    +   end;
MPRINT(EM_DIAGRAM):   end;
477153    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477154    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
477155    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
477156    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
477157    +   end;
MPRINT(EM_DIAGRAM):   end;
477158    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
477159    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
477160    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
477161    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
477162    +   end;
MPRINT(EM_DIAGRAM):   end;
477163    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
477164    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
477165    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
477166    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
477167    +   end;
MPRINT(EM_DIAGRAM):   end;
477168    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477169    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
477170    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
477171    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
477172    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477173    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477174    +   end;
MPRINT(EM_DIAGRAM):   end;
477175    +end;
MPRINT(EM_DIAGRAM):   end;
477176    +
477177    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
477178    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
477179    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
477180    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
477181    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
477182    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
477183    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477184    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477185    +end;
MPRINT(EM_DIAGRAM):   end;
477186    +else do;
MPRINT(EM_DIAGRAM):   else do;
477187    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477188    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
477189    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477190    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
477191    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
477192    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
477193    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
477194    +   end;
MPRINT(EM_DIAGRAM):   end;
477195    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
477196    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
477197    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
477198    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
477199    +   end;
MPRINT(EM_DIAGRAM):   end;
477200    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477201    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
477202    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
477203    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
477204    +   end;
MPRINT(EM_DIAGRAM):   end;
477205    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
477206    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
477207    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
477208    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
477209    +   end;
MPRINT(EM_DIAGRAM):   end;
477210    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477211    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
477212    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
477213    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
477214    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477215    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477216    +   end;
MPRINT(EM_DIAGRAM):   end;
477217    +end;
MPRINT(EM_DIAGRAM):   end;
477218    +
477219    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
477220    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
477221    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
477222    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
477223    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
477224    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
477225    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477226    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477227    +end;
MPRINT(EM_DIAGRAM):   end;
477228    +else do;
MPRINT(EM_DIAGRAM):   else do;
477229    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477230    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
477231    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477232    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
477233    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
477234    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
477235    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
477236    +   end;
MPRINT(EM_DIAGRAM):   end;
477237    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477238    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
477239    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
477240    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
477241    +   end;
MPRINT(EM_DIAGRAM):   end;
477242    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
477243    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
477244    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
477245    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
477246    +   end;
MPRINT(EM_DIAGRAM):   end;
477247    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
477248    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
477249    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
477250    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
477251    +   end;
MPRINT(EM_DIAGRAM):   end;
477252    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477253    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
477254    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
477255    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
477256    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477257    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477258    +   end;
MPRINT(EM_DIAGRAM):   end;
477259    +end;
MPRINT(EM_DIAGRAM):   end;
477260    +
477261    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
477262    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
477263    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
477264    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
477265    +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
477266    +end;
MPRINT(EM_DIAGRAM):   end;
477267    +
477268    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
477269    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
477270    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
477271    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
477272    +
477273    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
477274    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477275    +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
477276    +
477277    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
477278    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477279    +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
477280    +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
477281    +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
477282    +
477283    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
477284    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477285    +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
477286    +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
477287    +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
477288    +
477289    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
477290    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477291    +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
477292    +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
477293    +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
477294    +
477295    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
477296    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477297    +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
477298    +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
477299    +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
477300    +
477301    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
477302    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477303    +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
477304    +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
477305    +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
477306    +
477307    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
477308    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477309    +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
477310    +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
477311    +
477312    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
477313    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477314    +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
477315    +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
477316    +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
477317    +
477318    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
477319    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477320    +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
477321    +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
477322    +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
477323    +
477324    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
477325    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477326    +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
477327    +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
477328    +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
477329    +
477330    +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
477331    +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
477332    +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
477333    +
477334    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
477335    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
477336    +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
477337    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
477338    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
477339    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
477340    +end;
MPRINT(EM_DIAGRAM):   end;
477341    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
477342    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
477343    +
477344    +REG3DR1:
477345    +
477346    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Residuals;
477347    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
477348    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
477349    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
477350    +end;
MPRINT(EM_DIAGRAM):   end;
477351    +else do;
MPRINT(EM_DIAGRAM):   else do;
477352    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
477353    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
477354    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
477355    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
477356    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
477357    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
477358    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
477359    +   end;
MPRINT(EM_DIAGRAM):   end;
477360    +end;
MPRINT(EM_DIAGRAM):   end;
477361    +
477362    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
477363    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
477364    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
477365    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
477366    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
477367    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
477368    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
477369    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
477370    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
477371    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
477372    +end;
MPRINT(EM_DIAGRAM):   end;
477373    +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
477374    +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
477375    +
477376    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
477377    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
477378    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
477379     run;

NOTE: DATA STEP view saved on file EMWS8.REG3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
477380     quit;
477381     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
477382     filename emflow
477382   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg3: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
477383     *------------------------------------------------------------*;
477384     * Reg3: Scoring VALIDATE data;
477385     *------------------------------------------------------------*;
477386     data EMWS8.Reg3_VALIDATE
477387     / view=EMWS8.Reg3_VALIDATE
477388     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg3_VALIDATE / view=EMWS8.Reg3_VALIDATE ;
477389     set EMWS8.BINNING_VALIDATE
477390     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
477391     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMFLOWSCORE.sas.
477392    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
477393    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
477394    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
477395    +
477396    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
477397    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
477398    +
477399    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
477400    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
477401    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
477402    +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
477403    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
477404    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
477405    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
477406    +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
477407    +
477408    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
477409    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
477410    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
477411    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
477412    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
477413    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477414    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
477415    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
477416    +end;
MPRINT(EM_DIAGRAM):   end;
477417    +else do;
MPRINT(EM_DIAGRAM):   else do;
477418    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
477419    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
477420    +   end;
MPRINT(EM_DIAGRAM):   end;
477421    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
477422    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
477423    +   end;
MPRINT(EM_DIAGRAM):   end;
477424    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477425    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
477426    +   end;
MPRINT(EM_DIAGRAM):   end;
477427    +end;
MPRINT(EM_DIAGRAM):   end;
477428    +
477429    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
477430    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
477431    +
477432    +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
477433    +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
477434    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477435    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477436    +end;
MPRINT(EM_DIAGRAM):   end;
477437    +
477438    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
477439    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
477440    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
477441    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
477442    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477443    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477444    +end;
MPRINT(EM_DIAGRAM):   end;
477445    +else do;
MPRINT(EM_DIAGRAM):   else do;
477446    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477447    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
477448    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477449    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
477450    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
477451    +   end;
MPRINT(EM_DIAGRAM):   end;
477452    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
477453    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
477454    +   end;
MPRINT(EM_DIAGRAM):   end;
477455    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477456    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
477457    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477458    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477459    +   end;
MPRINT(EM_DIAGRAM):   end;
477460    +end;
MPRINT(EM_DIAGRAM):   end;
477461    +
477462    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
477463    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
477464    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
477465    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
477466    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
477467    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
477468    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477469    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477470    +end;
MPRINT(EM_DIAGRAM):   end;
477471    +else do;
MPRINT(EM_DIAGRAM):   else do;
477472    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477473    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
477474    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477475    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
477476    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
477477    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
477478    +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
477479    +   end;
MPRINT(EM_DIAGRAM):   end;
477480    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
477481    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
477482    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
477483    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
477484    +   end;
MPRINT(EM_DIAGRAM):   end;
477485    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477486    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
477487    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
477488    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
477489    +   end;
MPRINT(EM_DIAGRAM):   end;
477490    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
477491    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
477492    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
477493    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
477494    +   end;
MPRINT(EM_DIAGRAM):   end;
477495    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477496    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
477497    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
477498    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
477499    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477500    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477501    +   end;
MPRINT(EM_DIAGRAM):   end;
477502    +end;
MPRINT(EM_DIAGRAM):   end;
477503    +
477504    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
477505    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
477506    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
477507    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
477508    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
477509    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
477510    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477511    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477512    +end;
MPRINT(EM_DIAGRAM):   end;
477513    +else do;
MPRINT(EM_DIAGRAM):   else do;
477514    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477515    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
477516    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477517    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
477518    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
477519    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
477520    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
477521    +   end;
MPRINT(EM_DIAGRAM):   end;
477522    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477523    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
477524    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
477525    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
477526    +   end;
MPRINT(EM_DIAGRAM):   end;
477527    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
477528    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
477529    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
477530    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
477531    +   end;
MPRINT(EM_DIAGRAM):   end;
477532    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
477533    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
477534    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
477535    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
477536    +   end;
MPRINT(EM_DIAGRAM):   end;
477537    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477538    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
477539    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
477540    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
477541    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477542    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477543    +   end;
MPRINT(EM_DIAGRAM):   end;
477544    +end;
MPRINT(EM_DIAGRAM):   end;
477545    +
477546    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
477547    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
477548    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
477549    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
477550    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
477551    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
477552    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477553    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477554    +end;
MPRINT(EM_DIAGRAM):   end;
477555    +else do;
MPRINT(EM_DIAGRAM):   else do;
477556    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477557    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
477558    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477559    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
477560    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
477561    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
477562    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
477563    +   end;
MPRINT(EM_DIAGRAM):   end;
477564    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
477565    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
477566    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
477567    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
477568    +   end;
MPRINT(EM_DIAGRAM):   end;
477569    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477570    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
477571    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
477572    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
477573    +   end;
MPRINT(EM_DIAGRAM):   end;
477574    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
477575    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
477576    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
477577    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
477578    +   end;
MPRINT(EM_DIAGRAM):   end;
477579    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477580    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
477581    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
477582    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
477583    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477584    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477585    +   end;
MPRINT(EM_DIAGRAM):   end;
477586    +end;
MPRINT(EM_DIAGRAM):   end;
477587    +
477588    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
477589    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
477590    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
477591    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
477592    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
477593    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
477594    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477595    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477596    +end;
MPRINT(EM_DIAGRAM):   end;
477597    +else do;
MPRINT(EM_DIAGRAM):   else do;
477598    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477599    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
477600    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477601    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
477602    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
477603    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
477604    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
477605    +   end;
MPRINT(EM_DIAGRAM):   end;
477606    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477607    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
477608    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
477609    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
477610    +   end;
MPRINT(EM_DIAGRAM):   end;
477611    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
477612    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
477613    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
477614    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
477615    +   end;
MPRINT(EM_DIAGRAM):   end;
477616    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
477617    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
477618    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
477619    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
477620    +   end;
MPRINT(EM_DIAGRAM):   end;
477621    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477622    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
477623    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
477624    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
477625    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477626    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477627    +   end;
MPRINT(EM_DIAGRAM):   end;
477628    +end;
MPRINT(EM_DIAGRAM):   end;
477629    +
477630    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
477631    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
477632    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
477633    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
477634    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
477635    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
477636    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477637    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477638    +end;
MPRINT(EM_DIAGRAM):   end;
477639    +else do;
MPRINT(EM_DIAGRAM):   else do;
477640    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477641    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
477642    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477643    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
477644    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
477645    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
477646    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
477647    +   end;
MPRINT(EM_DIAGRAM):   end;
477648    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
477649    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
477650    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
477651    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
477652    +   end;
MPRINT(EM_DIAGRAM):   end;
477653    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477654    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
477655    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
477656    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
477657    +   end;
MPRINT(EM_DIAGRAM):   end;
477658    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
477659    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
477660    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
477661    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
477662    +   end;
MPRINT(EM_DIAGRAM):   end;
477663    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477664    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
477665    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
477666    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
477667    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477668    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477669    +   end;
MPRINT(EM_DIAGRAM):   end;
477670    +end;
MPRINT(EM_DIAGRAM):   end;
477671    +
477672    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
477673    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
477674    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
477675    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
477676    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
477677    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477678    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477679    +end;
MPRINT(EM_DIAGRAM):   end;
477680    +else do;
MPRINT(EM_DIAGRAM):   else do;
477681    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477682    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
477683    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477684    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
477685    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
477686    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
477687    +   end;
MPRINT(EM_DIAGRAM):   end;
477688    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
477689    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
477690    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
477691    +   end;
MPRINT(EM_DIAGRAM):   end;
477692    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477693    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
477694    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
477695    +   end;
MPRINT(EM_DIAGRAM):   end;
477696    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477697    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
477698    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
477699    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477700    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477701    +   end;
MPRINT(EM_DIAGRAM):   end;
477702    +end;
MPRINT(EM_DIAGRAM):   end;
477703    +
477704    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
477705    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
477706    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
477707    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
477708    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
477709    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
477710    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477711    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477712    +end;
MPRINT(EM_DIAGRAM):   end;
477713    +else do;
MPRINT(EM_DIAGRAM):   else do;
477714    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477715    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
477716    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477717    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
477718    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
477719    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
477720    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
477721    +   end;
MPRINT(EM_DIAGRAM):   end;
477722    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477723    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
477724    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
477725    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
477726    +   end;
MPRINT(EM_DIAGRAM):   end;
477727    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
477728    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
477729    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
477730    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
477731    +   end;
MPRINT(EM_DIAGRAM):   end;
477732    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
477733    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
477734    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
477735    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
477736    +   end;
MPRINT(EM_DIAGRAM):   end;
477737    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477738    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
477739    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
477740    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
477741    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477742    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477743    +   end;
MPRINT(EM_DIAGRAM):   end;
477744    +end;
MPRINT(EM_DIAGRAM):   end;
477745    +
477746    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
477747    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
477748    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
477749    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
477750    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
477751    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
477752    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477753    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477754    +end;
MPRINT(EM_DIAGRAM):   end;
477755    +else do;
MPRINT(EM_DIAGRAM):   else do;
477756    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477757    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
477758    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477759    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
477760    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
477761    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
477762    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
477763    +   end;
MPRINT(EM_DIAGRAM):   end;
477764    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
477765    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
477766    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
477767    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
477768    +   end;
MPRINT(EM_DIAGRAM):   end;
477769    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477770    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
477771    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
477772    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
477773    +   end;
MPRINT(EM_DIAGRAM):   end;
477774    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
477775    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
477776    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
477777    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
477778    +   end;
MPRINT(EM_DIAGRAM):   end;
477779    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477780    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
477781    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
477782    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
477783    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477784    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477785    +   end;
MPRINT(EM_DIAGRAM):   end;
477786    +end;
MPRINT(EM_DIAGRAM):   end;
477787    +
477788    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
477789    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
477790    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
477791    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
477792    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
477793    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
477794    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
477795    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477796    +end;
MPRINT(EM_DIAGRAM):   end;
477797    +else do;
MPRINT(EM_DIAGRAM):   else do;
477798    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
477799    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
477800    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
477801    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
477802    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
477803    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
477804    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
477805    +   end;
MPRINT(EM_DIAGRAM):   end;
477806    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
477807    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
477808    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
477809    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
477810    +   end;
MPRINT(EM_DIAGRAM):   end;
477811    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
477812    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
477813    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
477814    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
477815    +   end;
MPRINT(EM_DIAGRAM):   end;
477816    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
477817    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
477818    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
477819    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
477820    +   end;
MPRINT(EM_DIAGRAM):   end;
477821    +   else do;
MPRINT(EM_DIAGRAM):   else do;
477822    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
477823    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
477824    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
477825    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
477826    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
477827    +   end;
MPRINT(EM_DIAGRAM):   end;
477828    +end;
MPRINT(EM_DIAGRAM):   end;
477829    +
477830    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
477831    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
477832    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
477833    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
477834    +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
477835    +end;
MPRINT(EM_DIAGRAM):   end;
477836    +
477837    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
477838    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
477839    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
477840    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
477841    +
477842    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
477843    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477844    +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
477845    +
477846    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
477847    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477848    +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
477849    +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
477850    +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
477851    +
477852    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
477853    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477854    +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
477855    +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
477856    +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
477857    +
477858    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
477859    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477860    +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
477861    +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
477862    +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
477863    +
477864    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
477865    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477866    +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
477867    +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
477868    +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
477869    +
477870    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
477871    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477872    +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
477873    +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
477874    +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
477875    +
477876    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
477877    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477878    +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
477879    +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
477880    +
477881    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
477882    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477883    +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
477884    +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
477885    +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
477886    +
477887    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
477888    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477889    +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
477890    +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
477891    +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
477892    +
477893    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
477894    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
477895    +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
477896    +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
477897    +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
477898    +
477899    +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
477900    +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
477901    +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
477902    +
477903    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
477904    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
477905    +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
477906    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
477907    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
477908    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
477909    +end;
MPRINT(EM_DIAGRAM):   end;
477910    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
477911    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
477912    +
477913    +REG3DR1:
477914    +
477915    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Residuals;
477916    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
477917    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
477918    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
477919    +end;
MPRINT(EM_DIAGRAM):   end;
477920    +else do;
MPRINT(EM_DIAGRAM):   else do;
477921    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
477922    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
477923    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
477924    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
477925    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
477926    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
477927    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
477928    +   end;
MPRINT(EM_DIAGRAM):   end;
477929    +end;
MPRINT(EM_DIAGRAM):   end;
477930    +
477931    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
477932    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
477933    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
477934    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
477935    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
477936    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
477937    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
477938    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
477939    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
477940    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
477941    +end;
MPRINT(EM_DIAGRAM):   end;
477942    +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
477943    +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
477944    +
477945    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
477946    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
477947    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
477948     run;

NOTE: DATA STEP view saved on file EMWS8.REG3_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
477949     quit;
477950     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
477951     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
477952     * Reg3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Reg3: Computing metadata for TRAIN data;
477953     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.REG3_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Reg3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Reg3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Reg3_TRAIN out=WORK.M06SYVIZ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M06SYVIZ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M06SYVIZ(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M06SYVIZ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M06SYVIZ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M21WMGYH NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M21WMGYH;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M21WMGYH;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2QDG34R(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M21WMGYH;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M21WMGYH;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M21WMGYH;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M21WMGYH;
MPRINT(EMADVISECOLUMNS):   set WORK.M21WMGYH;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Reg3";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Reg3";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if ROLE in('INPUT', 'REJECTED') then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) in( 'GRP_ACCEPTEDCMP5' 'GRP_FRQ' 'GRP_INCOME' 
'GRP_MNTFISHPRODUCTS' 'GRP_MNTMEATPRODUCTS' 'GRP_MNTWINES' 'GRP_NUMCATALOGPURCHASES' 
'GRP_NUMDISTPURCHASES' 'GRP_RMNTFRQ' 'GRP_RECENCY' 'YEAR_BIRTH' ) then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   COMMENT = "Reg3: Rejected using stepwise selection";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
478284     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
478285     set EMWS8.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg3_EMINFO;
478286     where DATA='Reg3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Reg3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
478287     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.REG3_EMINFO.
      WHERE (DATA='Reg3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478288     data EMWS8.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg3_EMINFO;
478289     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
478290     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
478291     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.REG3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
478295     run;
478296     data EMWS8.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg3_EMINFO;
478297     set EMWS8.Reg3_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg3_EMINFO WORK.MODELTEMP_INFO;
478298     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.REG3_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.REG3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478299     proc sort data = EMWS8.Reg3_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg3_EMINFO NOTHREADS;
478300     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
478301     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.REG3_EMINFO.
NOTE: The data set EMWS8.REG3_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478302     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
478303     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
478304     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

478305     proc sort data = EMWS8.Reg3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Reg3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
478306     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
478307     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.REG3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478308     data EMWS8.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg3_EMINFO;
478309     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
478310     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
478311     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.REG3_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

478312     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
478313     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
478314     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
478315     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.REG3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.REG3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
