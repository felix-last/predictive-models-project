MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.07 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.07 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1T2RR4L 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1T2RR4L new;
MPRINT(EM_DIAGRAM):   run;
413322     proc transpose data=EMWS8.Reg3_EMESTIMATE out=WORK.TEMPREG;
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS8.Reg3_EMESTIMATE out=WORK.TEMPREG;
413323     where _CHOSEN_ ne '' and _TYPE_='PARMS';
MPRINT(EM_DIAGRAM):   where _CHOSEN_ ne '' and _TYPE_='PARMS';
413324     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.REG3_EMESTIMATE.
      WHERE (_CHOSEN_ not = ' ') and (_TYPE_='PARMS');
NOTE: The data set WORK.TEMPREG has 74 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

413325     proc transpose data=EMWS8.Reg3_MAPDS out=WORK.TEMPREG2;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS8.Reg3_MAPDS out=WORK.TEMPREG2;
413326     var "GRP_AcceptedCmp52"n--"Year_Birth"n;
MPRINT(EM_DIAGRAM):   var "GRP_AcceptedCmp52"n--"Year_Birth"n;
413327     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS8.REG3_MAPDS.
NOTE: The data set WORK.TEMPREG2 has 40 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

413328     proc sort data=WORK.TEMPREG NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG NOTHREADS;
413329     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
413330     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK.TEMPREG.
NOTE: The data set WORK.TEMPREG has 74 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

413331     proc sort data=WORK.TEMPREG2 NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG2 NOTHREADS;
413332     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
413333     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG2 has 40 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

413334     data WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3;
413335     merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
MPRINT(EM_DIAGRAM):   merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
413336     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
413337     if (ina and inb) and DepVar ne . then output;
MPRINT(EM_DIAGRAM):   if (ina and inb) and DepVar ne . then output;
413338     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK.TEMPREG.
NOTE: There were 40 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG3 has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

413339     data WORK.TEMPREG3(KEEP=TERM);
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3(KEEP=TERM);
413340     length term $32;
MPRINT(EM_DIAGRAM):   length term $32;
413341     set WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   set WORK.TEMPREG3;
413342     i=1;
MPRINT(EM_DIAGRAM):   i=1;
413343     do while( scan(input , i, '*') ne '' );
MPRINT(EM_DIAGRAM):   do while( scan(input , i, '*') ne '' );
413344     term= scan(input , i, '*');
MPRINT(EM_DIAGRAM):   term= scan(input , i, '*');
413345     i=i+1;
MPRINT(EM_DIAGRAM):   i=i+1;
413346     output;
MPRINT(EM_DIAGRAM):   output;
413347     end;
MPRINT(EM_DIAGRAM):   end;
413348     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 28 observations read from the data set WORK.TEMPREG3.
NOTE: The data set WORK.TEMPREG3 has 28 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

413349     proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
413350     by TERM;
MPRINT(EM_DIAGRAM):   by TERM;
413351     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 28 observations read from the data set WORK.TEMPREG3.
NOTE: 17 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPREG3 has 11 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

413352     filename emflow
413352   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg3: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
413353     *------------------------------------------------------------*;
413354     * Reg3: Scoring DATA data;
413355     *------------------------------------------------------------*;
413356     data EMWS8.Reg3_TRAIN
413357     / view=EMWS8.Reg3_TRAIN
413358     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg3_TRAIN / view=EMWS8.Reg3_TRAIN ;
413359     set EMWS8.BINNING_TRAIN
413360     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
413361     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMFLOWSCORE.sas.
413362    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
413363    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
413364    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
413365    +
413366    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
413367    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
413368    +
413369    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
413370    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
413371    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
413372    +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
413373    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
413374    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
413375    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
413376    +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
413377    +
413378    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
413379    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
413380    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
413381    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
413382    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
413383    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413384    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
413385    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
413386    +end;
MPRINT(EM_DIAGRAM):   end;
413387    +else do;
MPRINT(EM_DIAGRAM):   else do;
413388    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
413389    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
413390    +   end;
MPRINT(EM_DIAGRAM):   end;
413391    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
413392    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
413393    +   end;
MPRINT(EM_DIAGRAM):   end;
413394    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413395    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
413396    +   end;
MPRINT(EM_DIAGRAM):   end;
413397    +end;
MPRINT(EM_DIAGRAM):   end;
413398    +
413399    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
413400    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
413401    +
413402    +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
413403    +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
413404    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
413405    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413406    +end;
MPRINT(EM_DIAGRAM):   end;
413407    +
413408    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
413409    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
413410    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
413411    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
413412    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
413413    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413414    +end;
MPRINT(EM_DIAGRAM):   end;
413415    +else do;
MPRINT(EM_DIAGRAM):   else do;
413416    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
413417    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
413418    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413419    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
413420    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
413421    +   end;
MPRINT(EM_DIAGRAM):   end;
413422    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
413423    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
413424    +   end;
MPRINT(EM_DIAGRAM):   end;
413425    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413426    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
413427    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
413428    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413429    +   end;
MPRINT(EM_DIAGRAM):   end;
413430    +end;
MPRINT(EM_DIAGRAM):   end;
413431    +
413432    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
413433    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
413434    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
413435    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
413436    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
413437    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
413438    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
413439    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413440    +end;
MPRINT(EM_DIAGRAM):   end;
413441    +else do;
MPRINT(EM_DIAGRAM):   else do;
413442    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
413443    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
413444    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413445    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
413446    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
413447    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
413448    +      _2_2 = -1;
The SAS System

MPRINT(EM_DIAGRAM):   _2_2 = -1;
413449    +   end;
MPRINT(EM_DIAGRAM):   end;
413450    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
413451    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
413452    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
413453    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
413454    +   end;
MPRINT(EM_DIAGRAM):   end;
413455    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
413456    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
413457    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
413458    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
413459    +   end;
MPRINT(EM_DIAGRAM):   end;
413460    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
413461    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
413462    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
413463    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
413464    +   end;
MPRINT(EM_DIAGRAM):   end;
413465    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413466    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
413467    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
413468    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
413469    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
413470    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413471    +   end;
MPRINT(EM_DIAGRAM):   end;
413472    +end;
MPRINT(EM_DIAGRAM):   end;
413473    +
413474    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
413475    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
413476    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
413477    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
413478    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
413479    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
413480    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
413481    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413482    +end;
MPRINT(EM_DIAGRAM):   end;
413483    +else do;
MPRINT(EM_DIAGRAM):   else do;
413484    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
413485    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
413486    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413487    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
413488    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
413489    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
413490    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
413491    +   end;
MPRINT(EM_DIAGRAM):   end;
413492    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
413493    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
413494    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
413495    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
413496    +   end;
MPRINT(EM_DIAGRAM):   end;
413497    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
413498    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
413499    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
413500    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
413501    +   end;
MPRINT(EM_DIAGRAM):   end;
413502    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
413503    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
413504    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
413505    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
413506    +   end;
MPRINT(EM_DIAGRAM):   end;
413507    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413508    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
413509    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
413510    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
413511    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
413512    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413513    +   end;
MPRINT(EM_DIAGRAM):   end;
413514    +end;
MPRINT(EM_DIAGRAM):   end;
413515    +
413516    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
413517    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
413518    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
413519    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
413520    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
413521    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
413522    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
413523    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413524    +end;
MPRINT(EM_DIAGRAM):   end;
413525    +else do;
MPRINT(EM_DIAGRAM):   else do;
413526    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
413527    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
413528    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413529    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
413530    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
413531    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
413532    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
413533    +   end;
MPRINT(EM_DIAGRAM):   end;
413534    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
413535    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
413536    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
413537    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
413538    +   end;
MPRINT(EM_DIAGRAM):   end;
413539    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
413540    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
413541    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
413542    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
413543    +   end;
MPRINT(EM_DIAGRAM):   end;
413544    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
413545    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
413546    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
413547    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
413548    +   end;
MPRINT(EM_DIAGRAM):   end;
413549    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413550    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
413551    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
413552    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
413553    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
413554    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413555    +   end;
MPRINT(EM_DIAGRAM):   end;
413556    +end;
MPRINT(EM_DIAGRAM):   end;
413557    +
413558    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
413559    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
413560    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
413561    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
413562    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
413563    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
413564    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
413565    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413566    +end;
MPRINT(EM_DIAGRAM):   end;
413567    +else do;
MPRINT(EM_DIAGRAM):   else do;
413568    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
413569    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
413570    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413571    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
413572    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
413573    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
413574    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
413575    +   end;
MPRINT(EM_DIAGRAM):   end;
413576    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
413577    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
413578    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
413579    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
413580    +   end;
MPRINT(EM_DIAGRAM):   end;
413581    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
413582    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
413583    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
413584    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
413585    +   end;
MPRINT(EM_DIAGRAM):   end;
413586    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
413587    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
413588    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
413589    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
413590    +   end;
MPRINT(EM_DIAGRAM):   end;
413591    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413592    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
413593    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
413594    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
413595    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
413596    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413597    +   end;
MPRINT(EM_DIAGRAM):   end;
413598    +end;
MPRINT(EM_DIAGRAM):   end;
413599    +
413600    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
413601    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
413602    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
413603    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
413604    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
413605    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
413606    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
413607    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413608    +end;
MPRINT(EM_DIAGRAM):   end;
413609    +else do;
MPRINT(EM_DIAGRAM):   else do;
413610    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
413611    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
413612    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413613    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
413614    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
413615    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
413616    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
413617    +   end;
MPRINT(EM_DIAGRAM):   end;
413618    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
413619    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
413620    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
413621    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
413622    +   end;
MPRINT(EM_DIAGRAM):   end;
413623    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
413624    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
413625    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
413626    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
413627    +   end;
MPRINT(EM_DIAGRAM):   end;
413628    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
413629    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
413630    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
413631    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
413632    +   end;
MPRINT(EM_DIAGRAM):   end;
413633    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413634    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
413635    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
413636    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
413637    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
413638    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413639    +   end;
MPRINT(EM_DIAGRAM):   end;
413640    +end;
MPRINT(EM_DIAGRAM):   end;
413641    +
413642    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
413643    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
413644    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
413645    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
413646    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
413647    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
413648    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413649    +end;
MPRINT(EM_DIAGRAM):   end;
413650    +else do;
MPRINT(EM_DIAGRAM):   else do;
413651    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
413652    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
413653    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413654    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
413655    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
413656    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
413657    +   end;
MPRINT(EM_DIAGRAM):   end;
413658    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
413659    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
413660    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
413661    +   end;
MPRINT(EM_DIAGRAM):   end;
413662    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
413663    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
413664    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
413665    +   end;
MPRINT(EM_DIAGRAM):   end;
413666    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413667    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
413668    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
413669    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
413670    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413671    +   end;
MPRINT(EM_DIAGRAM):   end;
413672    +end;
MPRINT(EM_DIAGRAM):   end;
413673    +
413674    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
413675    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
413676    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
413677    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
413678    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
413679    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
413680    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
413681    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413682    +end;
MPRINT(EM_DIAGRAM):   end;
413683    +else do;
MPRINT(EM_DIAGRAM):   else do;
413684    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
413685    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
413686    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413687    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
413688    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
413689    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
413690    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
413691    +   end;
MPRINT(EM_DIAGRAM):   end;
413692    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
413693    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
413694    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
413695    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
413696    +   end;
MPRINT(EM_DIAGRAM):   end;
413697    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
413698    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
413699    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
413700    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
413701    +   end;
MPRINT(EM_DIAGRAM):   end;
413702    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
413703    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
413704    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
413705    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
413706    +   end;
MPRINT(EM_DIAGRAM):   end;
413707    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413708    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
413709    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
413710    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
413711    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
413712    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413713    +   end;
MPRINT(EM_DIAGRAM):   end;
413714    +end;
MPRINT(EM_DIAGRAM):   end;
413715    +
413716    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
413717    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
413718    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
413719    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
413720    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
413721    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
413722    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
413723    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413724    +end;
MPRINT(EM_DIAGRAM):   end;
413725    +else do;
MPRINT(EM_DIAGRAM):   else do;
413726    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
413727    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
413728    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413729    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
413730    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
413731    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
413732    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
413733    +   end;
MPRINT(EM_DIAGRAM):   end;
413734    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
413735    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
413736    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
413737    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
413738    +   end;
MPRINT(EM_DIAGRAM):   end;
413739    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
413740    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
413741    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
413742    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
413743    +   end;
MPRINT(EM_DIAGRAM):   end;
413744    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
413745    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
413746    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
413747    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
413748    +   end;
MPRINT(EM_DIAGRAM):   end;
413749    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413750    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
413751    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
413752    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
413753    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
413754    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413755    +   end;
MPRINT(EM_DIAGRAM):   end;
413756    +end;
MPRINT(EM_DIAGRAM):   end;
413757    +
413758    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
413759    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
413760    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
413761    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
413762    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
413763    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
413764    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
413765    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413766    +end;
MPRINT(EM_DIAGRAM):   end;
413767    +else do;
MPRINT(EM_DIAGRAM):   else do;
413768    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
413769    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
413770    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413771    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
413772    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
413773    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
413774    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
413775    +   end;
MPRINT(EM_DIAGRAM):   end;
413776    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
413777    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
413778    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
413779    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
413780    +   end;
MPRINT(EM_DIAGRAM):   end;
413781    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
413782    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
413783    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
413784    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
413785    +   end;
MPRINT(EM_DIAGRAM):   end;
413786    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
413787    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
413788    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
413789    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
413790    +   end;
MPRINT(EM_DIAGRAM):   end;
413791    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413792    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
413793    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
413794    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
413795    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
413796    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413797    +   end;
MPRINT(EM_DIAGRAM):   end;
413798    +end;
MPRINT(EM_DIAGRAM):   end;
413799    +
413800    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
413801    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
413802    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
413803    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
413804    +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
413805    +end;
MPRINT(EM_DIAGRAM):   end;
413806    +
413807    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
413808    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
413809    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
413810    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
413811    +
413812    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
413813    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
413814    +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
413815    +
413816    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
413817    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
413818    +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
413819    +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
413820    +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
413821    +
413822    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
413823    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
413824    +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
413825    +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
413826    +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
413827    +
413828    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
413829    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
413830    +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
413831    +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
413832    +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
413833    +
413834    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
413835    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
413836    +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
413837    +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
413838    +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
413839    +
413840    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
413841    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
413842    +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
413843    +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
413844    +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
413845    +
413846    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
413847    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
413848    +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
413849    +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
413850    +
413851    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
413852    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
413853    +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
413854    +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
413855    +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
413856    +
413857    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
413858    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
413859    +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
413860    +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
413861    +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
413862    +
413863    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
413864    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
413865    +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
413866    +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
413867    +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
413868    +
413869    +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
413870    +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
413871    +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
413872    +
413873    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
413874    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
413875    +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
413876    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
413877    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
413878    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
413879    +end;
MPRINT(EM_DIAGRAM):   end;
413880    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
413881    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
413882    +
413883    +REG3DR1:
413884    +
413885    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Residuals;
413886    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
413887    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
413888    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
413889    +end;
MPRINT(EM_DIAGRAM):   end;
413890    +else do;
MPRINT(EM_DIAGRAM):   else do;
413891    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
413892    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
413893    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
413894    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
413895    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
413896    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
413897    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
413898    +   end;
MPRINT(EM_DIAGRAM):   end;
413899    +end;
MPRINT(EM_DIAGRAM):   end;
413900    +
413901    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
413902    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
413903    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
413904    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
413905    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
413906    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
413907    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
413908    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
413909    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
413910    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
413911    +end;
MPRINT(EM_DIAGRAM):   end;
413912    +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
413913    +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
413914    +
413915    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
413916    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
413917    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
413918     run;

NOTE: DATA STEP view saved on file EMWS8.REG3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_DIAGRAM):   quit;
413919     quit;
413920     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
413921     filename emflow
413921   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg3: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
413922     *------------------------------------------------------------*;
413923     * Reg3: Scoring VALIDATE data;
413924     *------------------------------------------------------------*;
413925     data EMWS8.Reg3_VALIDATE
413926     / view=EMWS8.Reg3_VALIDATE
413927     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg3_VALIDATE / view=EMWS8.Reg3_VALIDATE ;
413928     set EMWS8.BINNING_VALIDATE
413929     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
413930     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMFLOWSCORE.sas.
413931    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
413932    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
413933    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
413934    +
413935    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
413936    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
413937    +
413938    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
413939    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
413940    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
413941    +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
413942    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
413943    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
413944    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
413945    +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
413946    +
413947    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
413948    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
413949    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
413950    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
413951    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
413952    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413953    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
413954    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
413955    +end;
MPRINT(EM_DIAGRAM):   end;
413956    +else do;
MPRINT(EM_DIAGRAM):   else do;
413957    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
413958    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
413959    +   end;
MPRINT(EM_DIAGRAM):   end;
413960    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
413961    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
413962    +   end;
MPRINT(EM_DIAGRAM):   end;
413963    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413964    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
413965    +   end;
MPRINT(EM_DIAGRAM):   end;
413966    +end;
MPRINT(EM_DIAGRAM):   end;
413967    +
413968    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
413969    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
413970    +
413971    +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
413972    +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
413973    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
413974    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413975    +end;
MPRINT(EM_DIAGRAM):   end;
413976    +
413977    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
413978    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
413979    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
413980    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
413981    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
413982    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413983    +end;
MPRINT(EM_DIAGRAM):   end;
413984    +else do;
MPRINT(EM_DIAGRAM):   else do;
413985    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
413986    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
413987    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413988    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
413989    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
413990    +   end;
MPRINT(EM_DIAGRAM):   end;
413991    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
413992    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
413993    +   end;
MPRINT(EM_DIAGRAM):   end;
413994    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413995    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
413996    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
413997    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413998    +   end;
MPRINT(EM_DIAGRAM):   end;
413999    +end;
MPRINT(EM_DIAGRAM):   end;
414000    +
414001    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
414002    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
414003    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
414004    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
414005    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
414006    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
414007    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
414008    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414009    +end;
MPRINT(EM_DIAGRAM):   end;
414010    +else do;
MPRINT(EM_DIAGRAM):   else do;
414011    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
414012    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
414013    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
414014    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
414015    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
414016    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
414017    +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
414018    +   end;
MPRINT(EM_DIAGRAM):   end;
414019    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
414020    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
414021    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
414022    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
414023    +   end;
MPRINT(EM_DIAGRAM):   end;
414024    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
414025    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
414026    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
414027    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
414028    +   end;
MPRINT(EM_DIAGRAM):   end;
414029    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
414030    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
414031    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
414032    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
414033    +   end;
MPRINT(EM_DIAGRAM):   end;
414034    +   else do;
MPRINT(EM_DIAGRAM):   else do;
414035    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
414036    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
414037    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
414038    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
414039    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414040    +   end;
MPRINT(EM_DIAGRAM):   end;
414041    +end;
MPRINT(EM_DIAGRAM):   end;
414042    +
414043    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
414044    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
414045    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
414046    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
414047    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
414048    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
414049    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
414050    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414051    +end;
MPRINT(EM_DIAGRAM):   end;
414052    +else do;
MPRINT(EM_DIAGRAM):   else do;
414053    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
414054    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
414055    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
414056    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
414057    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
414058    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
414059    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
414060    +   end;
MPRINT(EM_DIAGRAM):   end;
414061    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
414062    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
414063    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
414064    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
414065    +   end;
MPRINT(EM_DIAGRAM):   end;
414066    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
414067    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
414068    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
414069    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
414070    +   end;
MPRINT(EM_DIAGRAM):   end;
414071    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
414072    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
414073    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
414074    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
414075    +   end;
MPRINT(EM_DIAGRAM):   end;
414076    +   else do;
MPRINT(EM_DIAGRAM):   else do;
414077    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
414078    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
414079    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
414080    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
414081    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414082    +   end;
MPRINT(EM_DIAGRAM):   end;
414083    +end;
MPRINT(EM_DIAGRAM):   end;
414084    +
414085    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
414086    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
414087    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
414088    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
414089    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
414090    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
414091    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
414092    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414093    +end;
MPRINT(EM_DIAGRAM):   end;
414094    +else do;
MPRINT(EM_DIAGRAM):   else do;
414095    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
414096    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
414097    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
414098    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
414099    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
414100    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
414101    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
414102    +   end;
MPRINT(EM_DIAGRAM):   end;
414103    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
414104    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
414105    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
414106    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
414107    +   end;
MPRINT(EM_DIAGRAM):   end;
414108    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
414109    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
414110    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
414111    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
414112    +   end;
MPRINT(EM_DIAGRAM):   end;
414113    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
414114    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
414115    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
414116    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
414117    +   end;
MPRINT(EM_DIAGRAM):   end;
414118    +   else do;
MPRINT(EM_DIAGRAM):   else do;
414119    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
414120    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
414121    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
414122    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
414123    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414124    +   end;
MPRINT(EM_DIAGRAM):   end;
414125    +end;
MPRINT(EM_DIAGRAM):   end;
414126    +
414127    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
414128    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
414129    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
414130    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
414131    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
414132    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
414133    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
414134    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414135    +end;
MPRINT(EM_DIAGRAM):   end;
414136    +else do;
MPRINT(EM_DIAGRAM):   else do;
414137    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
414138    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
414139    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
414140    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
414141    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
414142    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
414143    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
414144    +   end;
MPRINT(EM_DIAGRAM):   end;
414145    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
414146    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
414147    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
414148    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
414149    +   end;
MPRINT(EM_DIAGRAM):   end;
414150    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
414151    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
414152    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
414153    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
414154    +   end;
MPRINT(EM_DIAGRAM):   end;
414155    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
414156    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
414157    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
414158    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
414159    +   end;
MPRINT(EM_DIAGRAM):   end;
414160    +   else do;
MPRINT(EM_DIAGRAM):   else do;
414161    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
414162    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
414163    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
414164    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
414165    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414166    +   end;
MPRINT(EM_DIAGRAM):   end;
414167    +end;
MPRINT(EM_DIAGRAM):   end;
414168    +
414169    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
414170    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
414171    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
414172    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
414173    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
414174    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
414175    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
414176    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414177    +end;
MPRINT(EM_DIAGRAM):   end;
414178    +else do;
MPRINT(EM_DIAGRAM):   else do;
414179    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
414180    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
414181    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
414182    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
414183    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
414184    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
414185    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
414186    +   end;
MPRINT(EM_DIAGRAM):   end;
414187    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
414188    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
414189    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
414190    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
414191    +   end;
MPRINT(EM_DIAGRAM):   end;
414192    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
414193    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
414194    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
414195    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
414196    +   end;
MPRINT(EM_DIAGRAM):   end;
414197    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
414198    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
414199    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
414200    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
414201    +   end;
MPRINT(EM_DIAGRAM):   end;
414202    +   else do;
MPRINT(EM_DIAGRAM):   else do;
414203    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
414204    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
414205    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
414206    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
414207    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414208    +   end;
MPRINT(EM_DIAGRAM):   end;
414209    +end;
MPRINT(EM_DIAGRAM):   end;
414210    +
414211    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
414212    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
414213    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
414214    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
414215    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
414216    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
414217    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414218    +end;
MPRINT(EM_DIAGRAM):   end;
414219    +else do;
MPRINT(EM_DIAGRAM):   else do;
414220    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
414221    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
414222    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
414223    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
414224    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
414225    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
414226    +   end;
MPRINT(EM_DIAGRAM):   end;
414227    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
414228    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
414229    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
414230    +   end;
MPRINT(EM_DIAGRAM):   end;
414231    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
414232    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
414233    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
414234    +   end;
MPRINT(EM_DIAGRAM):   end;
414235    +   else do;
MPRINT(EM_DIAGRAM):   else do;
414236    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
414237    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
414238    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
414239    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414240    +   end;
MPRINT(EM_DIAGRAM):   end;
414241    +end;
MPRINT(EM_DIAGRAM):   end;
414242    +
414243    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
414244    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
414245    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
414246    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
414247    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
414248    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
414249    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
414250    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414251    +end;
MPRINT(EM_DIAGRAM):   end;
414252    +else do;
MPRINT(EM_DIAGRAM):   else do;
414253    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
414254    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
414255    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
414256    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
414257    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
414258    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
414259    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
414260    +   end;
MPRINT(EM_DIAGRAM):   end;
414261    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
414262    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
414263    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
414264    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
414265    +   end;
MPRINT(EM_DIAGRAM):   end;
414266    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
414267    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
414268    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
414269    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
414270    +   end;
MPRINT(EM_DIAGRAM):   end;
414271    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
414272    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
414273    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
414274    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
414275    +   end;
MPRINT(EM_DIAGRAM):   end;
414276    +   else do;
MPRINT(EM_DIAGRAM):   else do;
414277    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
414278    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
414279    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
414280    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
414281    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414282    +   end;
MPRINT(EM_DIAGRAM):   end;
414283    +end;
MPRINT(EM_DIAGRAM):   end;
414284    +
414285    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
414286    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
414287    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
414288    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
414289    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
414290    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
414291    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
414292    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414293    +end;
MPRINT(EM_DIAGRAM):   end;
414294    +else do;
MPRINT(EM_DIAGRAM):   else do;
414295    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
414296    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
414297    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
414298    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
414299    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
414300    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
414301    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
414302    +   end;
MPRINT(EM_DIAGRAM):   end;
414303    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
414304    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
414305    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
414306    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
414307    +   end;
MPRINT(EM_DIAGRAM):   end;
414308    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
414309    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
414310    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
414311    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
414312    +   end;
MPRINT(EM_DIAGRAM):   end;
414313    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
414314    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
414315    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
414316    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
414317    +   end;
MPRINT(EM_DIAGRAM):   end;
414318    +   else do;
MPRINT(EM_DIAGRAM):   else do;
414319    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
414320    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
414321    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
414322    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
414323    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414324    +   end;
MPRINT(EM_DIAGRAM):   end;
414325    +end;
MPRINT(EM_DIAGRAM):   end;
414326    +
414327    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
414328    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
414329    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
414330    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
414331    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
414332    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
414333    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
414334    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414335    +end;
MPRINT(EM_DIAGRAM):   end;
414336    +else do;
MPRINT(EM_DIAGRAM):   else do;
414337    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
414338    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
414339    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
414340    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
414341    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
414342    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
414343    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
414344    +   end;
MPRINT(EM_DIAGRAM):   end;
414345    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
414346    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
414347    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
414348    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
414349    +   end;
MPRINT(EM_DIAGRAM):   end;
414350    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
414351    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
414352    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
414353    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
414354    +   end;
MPRINT(EM_DIAGRAM):   end;
414355    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
414356    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
414357    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
414358    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
414359    +   end;
MPRINT(EM_DIAGRAM):   end;
414360    +   else do;
MPRINT(EM_DIAGRAM):   else do;
414361    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
414362    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
414363    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
414364    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
414365    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
414366    +   end;
MPRINT(EM_DIAGRAM):   end;
414367    +end;
MPRINT(EM_DIAGRAM):   end;
414368    +
414369    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
414370    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
414371    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
414372    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
414373    +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
414374    +end;
MPRINT(EM_DIAGRAM):   end;
414375    +
414376    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
414377    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
414378    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
414379    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
414380    +
414381    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
414382    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
414383    +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
414384    +
414385    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
414386    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
414387    +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
414388    +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
414389    +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
414390    +
414391    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
414392    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
414393    +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
414394    +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
414395    +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
414396    +
414397    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
414398    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
414399    +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
414400    +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
414401    +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
414402    +
414403    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
414404    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
414405    +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
414406    +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
414407    +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
414408    +
414409    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
414410    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
414411    +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
414412    +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
414413    +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
414414    +
414415    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
414416    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
414417    +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
414418    +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
414419    +
414420    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
414421    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
414422    +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
414423    +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
414424    +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
414425    +
414426    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
414427    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
414428    +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
414429    +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
414430    +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
414431    +
414432    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
414433    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
414434    +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
414435    +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
414436    +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
414437    +
414438    +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
414439    +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
414440    +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
414441    +
414442    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
414443    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
414444    +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
414445    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
414446    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
414447    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
414448    +end;
MPRINT(EM_DIAGRAM):   end;
414449    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
414450    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
414451    +
414452    +REG3DR1:
414453    +
414454    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Residuals;
414455    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
414456    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
414457    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
414458    +end;
MPRINT(EM_DIAGRAM):   end;
414459    +else do;
MPRINT(EM_DIAGRAM):   else do;
414460    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
414461    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
414462    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
414463    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
414464    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
414465    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
414466    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
414467    +   end;
MPRINT(EM_DIAGRAM):   end;
414468    +end;
MPRINT(EM_DIAGRAM):   end;
414469    +
414470    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
414471    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
414472    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
414473    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
414474    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
414475    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
414476    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
414477    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
414478    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
414479    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
414480    +end;
MPRINT(EM_DIAGRAM):   end;
414481    +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
414482    +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
414483    +
414484    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
414485    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
414486    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
414487     run;

NOTE: DATA STEP view saved on file EMWS8.REG3_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_DIAGRAM):   quit;
414488     quit;
414489     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
414490     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
414491     * Reg3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Reg3: Computing metadata for TRAIN data;
414492     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.REG3_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Reg3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Reg3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Reg3_TRAIN out=WORK.M37B1OB3 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M37B1OB3;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M37B1OB3(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M37B1OB3;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M37B1OB3;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0CW4TXQ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CW4TXQ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CW4TXQ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M37K8KL2(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CW4TXQ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CW4TXQ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CW4TXQ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CW4TXQ;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CW4TXQ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Reg3";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Reg3";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Reg3";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if ROLE in('INPUT', 'REJECTED') then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) in( 'GRP_ACCEPTEDCMP5' 'GRP_FRQ' 'GRP_INCOME' 
'GRP_MNTFISHPRODUCTS' 'GRP_MNTMEATPRODUCTS' 'GRP_MNTWINES' 'GRP_NUMCATALOGPURCHASES' 
'GRP_NUMDISTPURCHASES' 'GRP_RMNTFRQ' 'GRP_RECENCY' 'YEAR_BIRTH' ) then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   COMMENT = "Reg3: Rejected using stepwise selection";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
414823     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
414824     set EMWS8.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg3_EMINFO;
414825     where DATA='Reg3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Reg3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
414826     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.REG3_EMINFO.
      WHERE (DATA='Reg3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

414827     data EMWS8.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg3_EMINFO;
414828     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
414829     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
414830     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.REG3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
414834     run;
414835     data EMWS8.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg3_EMINFO;
414836     set EMWS8.Reg3_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg3_EMINFO WORK.MODELTEMP_INFO;
414837     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.REG3_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.REG3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

414838     proc sort data = EMWS8.Reg3_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg3_EMINFO NOTHREADS;
414839     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
414840     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.REG3_EMINFO.
NOTE: The data set EMWS8.REG3_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

414841     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
414842     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
414843     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

414844     proc sort data = EMWS8.Reg3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Reg3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
414845     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
414846     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.REG3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

414847     data EMWS8.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg3_EMINFO;
414848     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
414849     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
414850     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.REG3_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

414851     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
414852     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
414853     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
414854     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.REG3_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
NOTE: View EMWS8.REG3_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
