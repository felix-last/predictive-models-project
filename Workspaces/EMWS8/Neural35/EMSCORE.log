MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.54 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.54 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1I931U1 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1I931U1 new;
MPRINT(EM_DIAGRAM):   run;
991772     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
991773     set EMWS8.Neural35_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural35_OUTKEY;
991774     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
991775     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set EMWS8.NEURAL35_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

991776     filename emflow
991776   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural35: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
991777     *------------------------------------------------------------*;
991778     * Neural35: Scoring DATA data;
991779     *------------------------------------------------------------*;
991780     data EMWS8.Neural35_TRAIN
991781     / view=EMWS8.Neural35_TRAIN
991782     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural35_TRAIN / view=EMWS8.Neural35_TRAIN ;
991783     set EMWS8.Meta2_TRAIN
991784     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
991785     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMFLOWSCORE.sas.
991786    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
991787    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
991788    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
991789    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
991790    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
991791    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
991792    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
991793    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
991794    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
991795    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
991796    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
991797    +LENGTH _WARN_ $4
991798    +      F_DepVar  $ 12
991799    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
991800    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
991801    +
991802    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
991803    +
991804    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
991805    +
991806    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
991807    +
991808    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
991809    +
991810    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
991811    +
991812    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
991813    +
991814    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
991815    +
991816    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
991817    +
991818    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
991819    +
991820    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
991821    +
991822    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
991823    +
991824    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
991825    +
991826    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
991827    +
991828    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
991829    +
991830    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
991831    +
991832    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
991833    +
991834    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
991835    +
991836    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
991837    +
991838    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
991839    +
991840    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
991841    +
991842    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
991843    +
991844    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
991845    +
991846    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
991847    +
991848    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
991849    +
991850    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
991851    +
991852    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
991853    +
991854    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
991855    +
991856    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
991857    +
991858    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
991859    +
991860    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
991861    +
991862    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
991863    +
991864    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
991865    +
991866    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
991867    +
991868    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
991869    +
991870    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
991871    +
991872    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
991873    +
991874    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
991875    +
991876    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
991877    +
991878    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
991879    +
991880    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
991881    +
991882    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
991883    +
991884    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
991885    +
991886    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
991887    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
991888    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
991889    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
991890    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
991891    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991892    +end;
MPRINT(EM_DIAGRAM):   end;
991893    +else do;
MPRINT(EM_DIAGRAM):   else do;
991894    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
991895    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
991896    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
991897    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
991898    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
991899    +   end;
MPRINT(EM_DIAGRAM):   end;
991900    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
991901    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
991902    +   end;
MPRINT(EM_DIAGRAM):   end;
991903    +   else do;
MPRINT(EM_DIAGRAM):   else do;
991904    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
991905    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
991906    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991907    +   end;
MPRINT(EM_DIAGRAM):   end;
991908    +end;
MPRINT(EM_DIAGRAM):   end;
991909    +
991910    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
991911    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
991912    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
991913    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
991914    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
991915    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991916    +end;
MPRINT(EM_DIAGRAM):   end;
991917    +else do;
MPRINT(EM_DIAGRAM):   else do;
991918    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
991919    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
991920    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
991921    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
991922    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
991923    +   end;
MPRINT(EM_DIAGRAM):   end;
991924    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
991925    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
991926    +   end;
MPRINT(EM_DIAGRAM):   end;
991927    +   else do;
MPRINT(EM_DIAGRAM):   else do;
991928    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
991929    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
991930    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991931    +   end;
MPRINT(EM_DIAGRAM):   end;
991932    +end;
MPRINT(EM_DIAGRAM):   end;
991933    +
991934    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
991935    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
991936    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
991937    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
991938    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
991939    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991940    +end;
MPRINT(EM_DIAGRAM):   end;
991941    +else do;
MPRINT(EM_DIAGRAM):   else do;
991942    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
991943    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
991944    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
991945    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
991946    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
991947    +   end;
MPRINT(EM_DIAGRAM):   end;
991948    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
991949    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
991950    +   end;
MPRINT(EM_DIAGRAM):   end;
991951    +   else do;
MPRINT(EM_DIAGRAM):   else do;
991952    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
991953    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
991954    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991955    +   end;
MPRINT(EM_DIAGRAM):   end;
991956    +end;
MPRINT(EM_DIAGRAM):   end;
991957    +
991958    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
991959    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
991960    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
991961    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
991962    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
991963    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991964    +end;
MPRINT(EM_DIAGRAM):   end;
991965    +else do;
MPRINT(EM_DIAGRAM):   else do;
991966    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
991967    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
991968    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
991969    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
991970    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
991971    +   end;
MPRINT(EM_DIAGRAM):   end;
991972    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
991973    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
991974    +   end;
MPRINT(EM_DIAGRAM):   end;
991975    +   else do;
MPRINT(EM_DIAGRAM):   else do;
991976    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
991977    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
991978    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991979    +   end;
MPRINT(EM_DIAGRAM):   end;
991980    +end;
MPRINT(EM_DIAGRAM):   end;
991981    +
991982    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
991983    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
991984    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
991985    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
991986    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
991987    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991988    +end;
MPRINT(EM_DIAGRAM):   end;
991989    +else do;
MPRINT(EM_DIAGRAM):   else do;
991990    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
991991    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
991992    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
991993    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
991994    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
991995    +   end;
MPRINT(EM_DIAGRAM):   end;
991996    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
991997    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
991998    +   end;
MPRINT(EM_DIAGRAM):   end;
991999    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992000    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
992001    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992002    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992003    +   end;
MPRINT(EM_DIAGRAM):   end;
992004    +end;
MPRINT(EM_DIAGRAM):   end;
992005    +
992006    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
992007    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
992008    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
992009    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
992010    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992011    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992012    +end;
MPRINT(EM_DIAGRAM):   end;
992013    +else do;
MPRINT(EM_DIAGRAM):   else do;
992014    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992015    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
992016    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992017    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
992018    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
992019    +   end;
MPRINT(EM_DIAGRAM):   end;
992020    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
992021    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
992022    +   end;
MPRINT(EM_DIAGRAM):   end;
992023    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992024    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
992025    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992026    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992027    +   end;
MPRINT(EM_DIAGRAM):   end;
992028    +end;
MPRINT(EM_DIAGRAM):   end;
992029    +
992030    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
992031    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
992032    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
992033    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
992034    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
992035    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
992036    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
992037    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
992038    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
992039    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
992040    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
992041    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
992042    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992043    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992044    +end;
MPRINT(EM_DIAGRAM):   end;
992045    +else do;
MPRINT(EM_DIAGRAM):   else do;
992046    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
992047    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
992048    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992049    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
992050    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
992051    +   end;
MPRINT(EM_DIAGRAM):   end;
992052    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
992053    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
992054    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
992055    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
992056    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
992057    +   end;
MPRINT(EM_DIAGRAM):   end;
992058    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
992059    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
992060    +   end;
MPRINT(EM_DIAGRAM):   end;
992061    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
992062    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
992063    +   end;
MPRINT(EM_DIAGRAM):   end;
992064    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
992065    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
992066    +   end;
MPRINT(EM_DIAGRAM):   end;
992067    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992068    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
992069    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
992070    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
992071    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
992072    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992073    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992074    +   end;
MPRINT(EM_DIAGRAM):   end;
992075    +end;
MPRINT(EM_DIAGRAM):   end;
992076    +
992077    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
992078    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
992079    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
992080    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
992081    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
992082    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
992083    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
992084    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
992085    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
992086    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
992087    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
992088    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
992089    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
992090    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992091    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992092    +end;
MPRINT(EM_DIAGRAM):   end;
992093    +else do;
MPRINT(EM_DIAGRAM):   else do;
992094    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
992095    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
992096    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992097    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
992098    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
992099    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
992100    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
992101    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
992102    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992103    +         end;
MPRINT(EM_DIAGRAM):   end;
992104    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992105    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
992106    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
992107    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992108    +            end;
MPRINT(EM_DIAGRAM):   end;
992109    +         end;
MPRINT(EM_DIAGRAM):   end;
992110    +      end;
MPRINT(EM_DIAGRAM):   end;
992111    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992112    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
992113    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
992114    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992115    +         end;
MPRINT(EM_DIAGRAM):   end;
992116    +      end;
MPRINT(EM_DIAGRAM):   end;
992117    +   end;
MPRINT(EM_DIAGRAM):   end;
992118    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992119    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
992120    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
992121    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992122    +      end;
MPRINT(EM_DIAGRAM):   end;
992123    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992124    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
992125    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
992126    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
992127    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
992128    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
992129    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992130    +         end;
MPRINT(EM_DIAGRAM):   end;
992131    +      end;
MPRINT(EM_DIAGRAM):   end;
992132    +   end;
MPRINT(EM_DIAGRAM):   end;
992133    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
992134    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
992135    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
992136    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
992137    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
992138    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992139    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992140    +   end;
MPRINT(EM_DIAGRAM):   end;
992141    +end;
MPRINT(EM_DIAGRAM):   end;
992142    +
992143    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992144    +*** Checking missing input Interval
992145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
992146    +
992147    +IF NMISS(
992148    +   Income ,
992149    +   Kidhome ,
992150    +   MntFishProducts ,
992151    +   MntFruits ,
992152    +   MntGoldProds ,
992153    +   MntMeatProducts ,
992154    +   MntSweetProducts ,
992155    +   MntWines ,
992156    +   NumCatalogPurchases ,
992157    +   NumDealsPurchases ,
992158    +   NumStorePurchases ,
992159    +   NumWebPurchases ,
992160    +   NumWebVisitsMonth ,
992161    +   Recency ,
992162    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
992163    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
992164    +
992165    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992166    +END;
MPRINT(EM_DIAGRAM):   END;
992167    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992168    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
992169    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992170    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
992171    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
992172    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
992173    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
992174    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
992175    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
992176    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
992177    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
992178    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
992179    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
992180    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
992181    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
992182    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
992183    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
992184    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
992185    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
992186    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
992187    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
992188    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
992189    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
992190    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
992191    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
992192    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
992193    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
992194    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
992195    +END;
MPRINT(EM_DIAGRAM):   END;
992196    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
992197    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
992198    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
992199    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
992200    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
992201    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
992202    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
992203    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
992204    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
992205    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
992206    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
992207    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
992208    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
992209    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
992210    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
992211    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
992212    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
992213    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
992214    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
992215    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
992216    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
992217    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
992218    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
992219    +   ELSE S_NumCatalogPurchases
992220    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
992221    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
992222    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
992223    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
992224    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
992225    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
992226    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
992227    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
992228    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
992229    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
992230    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
992231    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
992232    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
992233    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
992234    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
992235    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
992236    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
992237    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
992238    +END;
MPRINT(EM_DIAGRAM):   END;
992239    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992240    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
992241    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992243    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
992244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992245    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992246    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
992247    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992248    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
992249    +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
992250    +          +    -0.08967295716195 * S_MntFishProducts
992251    +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
992252    +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
992253    +          +    -0.02806094557115 * S_MntSweetProducts
992254    +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
992255    +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
992256    +          +     0.25137876058262 * S_NumStorePurchases
992257    +          +    -0.07865442401292 * S_NumWebPurchases
992258    +          +     1.03197398967259 * S_NumWebVisitsMonth
992259    +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
992260    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome + 
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 * 
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts 
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305 
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 * 
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency + 
-0.76016893316351 * S_Teenhome ;
992261    +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
992262    +          +     0.19312392388912 * S_MntFishProducts
992263    +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
992264    +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
992265    +          +       0.204174263605 * S_MntSweetProducts
992266    +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
992267    +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
992268    +          +     0.07747830335769 * S_NumStorePurchases
992269    +          +     0.07960837555191 * S_NumWebPurchases
992270    +          +     0.02351602389122 * S_NumWebVisitsMonth
992271    +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
992272    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome + 
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 * 
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts + 
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218 
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 * 
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency + 
-0.47421627761687 * S_Teenhome ;
992273    +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
992274    +          +     0.18733919794636 * S_MntFishProducts
992275    +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
992276    +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
992277    +          +     0.42514606159239 * S_MntSweetProducts
992278    +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
992279    +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
992280    +          +     0.36582106462789 * S_NumStorePurchases
992281    +          +     0.04244777020435 * S_NumWebPurchases
992282    +          +    -0.24296342902503 * S_NumWebVisitsMonth
992283    +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
992284    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome + 
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 * 
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts 
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases + 
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases + 
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth + 
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
992285    +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
992286    +          +     0.05986489897572 * S_MntFishProducts
992287    +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
992288    +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
992289    +          +    -0.05513370461072 * S_MntSweetProducts
992290    +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
992291    +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
992292    +          +     0.64364674828841 * S_NumStorePurchases
992293    +          +     0.15084748708424 * S_NumWebPurchases
992294    +          +    -0.94144998356377 * S_NumWebVisitsMonth
992295    +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
992296    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome + 
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 * 
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 * 
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases 
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases + 
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth + 
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
992297    +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
992298    +          +    -0.14543196273578 * S_MntFishProducts
992299    +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
992300    +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
992301    +          +     0.49374793444169 * S_MntSweetProducts
992302    +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
992303    +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
992304    +          +     1.23754786782746 * S_NumStorePurchases
992305    +          +     1.11316667348511 * S_NumWebPurchases
992306    +          +    -1.08592446439781 * S_NumWebVisitsMonth
992307    +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
992308    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome + 
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 * 
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts 
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases + 
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases + 
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth + 
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
992309    +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
992310    +          +     0.29549884005341 * S_MntFishProducts
992311    +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
992312    +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
992313    +          +    -0.11909215986981 * S_MntSweetProducts
992314    +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
992315    +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
992316    +          +     0.30109334594548 * S_NumStorePurchases
992317    +          +     0.01985762767489 * S_NumWebPurchases
992318    +          +     0.44965133281333 * S_NumWebVisitsMonth
992319    +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
992320    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome + 
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 * 
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 * 
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases 
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases + 
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth + 
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
992321    +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
992322    +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
992323    +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
992324    +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
992325    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 * 
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 + 
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
992326    +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
992327    +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
992328    +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
992329    +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
992330    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 * 
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 + 
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
992331    +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
992332    +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
992333    +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
992334    +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
992335    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 * 
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 + 
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
992336    +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
992337    +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
992338    +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
992339    +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
992340    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 * 
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 + 
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
992341    +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
992342    +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
992343    +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
992344    +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
992345    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 * 
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 + 
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
992346    +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
992347    +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
992348    +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
992349    +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
992350    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 * 
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 + 
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
992351    +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
992352    +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
992353    +        EducationGraduation  +    -0.10167082180552 * EducationMaster
992354    +          +     0.51015833145636 * Marital_StatusDivorced
992355    +          +     -1.1653662063616 * Marital_StatusMarried
992356    +          +     1.19396547750441 * Marital_StatusSingle
992357    +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 * 
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster 
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried + 
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
992358    +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
992359    +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
992360    +        EducationGraduation  +     0.16650577465959 * EducationMaster
992361    +          +     0.09154288513995 * Marital_StatusDivorced
992362    +          +     0.06725684628382 * Marital_StatusMarried
992363    +          +     0.11327659191494 * Marital_StatusSingle
992364    +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 * 
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster 
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried + 
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
992365    +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
992366    +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
992367    +        EducationGraduation  +    -0.05554656531793 * EducationMaster
992368    +          +     0.37591653615852 * Marital_StatusDivorced
992369    +          +    -0.05024236790132 * Marital_StatusMarried
992370    +          +    -0.28317154997144 * Marital_StatusSingle
992371    +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 * 
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster 
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried + 
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
992372    +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
992373    +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
992374    +        EducationGraduation  +       0.638986138084 * EducationMaster
992375    +          +    -0.44885292450558 * Marital_StatusDivorced
992376    +          +     0.78958791519299 * Marital_StatusMarried
992377    +          +    -0.09688714431356 * Marital_StatusSingle
992378    +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 * 
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster + 
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried + 
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
992379    +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
992380    +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
992381    +        EducationGraduation  +    -0.26400363440725 * EducationMaster
992382    +          +    -0.30801073895989 * Marital_StatusDivorced
992383    +          +     -0.1285150749223 * Marital_StatusMarried
992384    +          +     0.06775542164414 * Marital_StatusSingle
992385    +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 * 
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster 
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried + 
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
992386    +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
992387    +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
992388    +        EducationGraduation  +    -0.40706983167068 * EducationMaster
992389    +          +     0.22193599090368 * Marital_StatusDivorced
992390    +          +    -0.54544672042168 * Marital_StatusMarried
992391    +          +    -0.02237436019864 * Marital_StatusSingle
992392    +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 * 
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster + 
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried + 
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
992393    +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
992394    +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
992395    +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
992396    +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
992397    +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
992398    +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
992399    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
992400    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
992401    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
992402    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
992403    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
992404    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
992405    +END;
MPRINT(EM_DIAGRAM):   END;
992406    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
992407    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
992408    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
992409    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
992410    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
992411    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
992412    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
992413    +END;
MPRINT(EM_DIAGRAM):   END;
992414    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992415    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
992416    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992417    +
992418    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
992419    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
992420    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
992421    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
992422    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
992423    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992424    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
992425    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
992426    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
992427    +end;
MPRINT(EM_DIAGRAM):   end;
992428    +else do;
MPRINT(EM_DIAGRAM):   else do;
992429    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
992430    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
992431    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
992432    +   end;
MPRINT(EM_DIAGRAM):   end;
992433    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
992434    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
992435    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
992436    +   end;
MPRINT(EM_DIAGRAM):   end;
992437    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992438    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
992439    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
992440    +   end;
MPRINT(EM_DIAGRAM):   end;
992441    +end;
MPRINT(EM_DIAGRAM):   end;
992442    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
992443    +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
992444    +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
992445    +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 + 
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974 
* H16 ;
992446    +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
992447    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
992448    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
992449    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
992450    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
992451    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
992452    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
992453    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
992454    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
992455    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
992456    +END;
MPRINT(EM_DIAGRAM):   END;
992457    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
992458    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
992459    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
992460    +END;
MPRINT(EM_DIAGRAM):   END;
992461    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
992462    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
992463    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
992464    +END;
MPRINT(EM_DIAGRAM):   END;
992465    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
992466    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
992467    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
992468    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
992469    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
992470    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
992471    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
992472    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992473    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
992474    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992475    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
992476    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
992477    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
992478    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
992479    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
992480    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
992481    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
992482    +END;
MPRINT(EM_DIAGRAM):   END;
992483    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
992484    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
992485    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
992486    +drop
992487    +H11
992488    +H12
992489    +H13
992490    +H14
992491    +H15
992492    +H16
992493    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
992494    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
992495     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL35_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
992496     quit;
992497     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
992498     filename emflow
992498   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural35: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
992499     *------------------------------------------------------------*;
992500     * Neural35: Scoring VALIDATE data;
992501     *------------------------------------------------------------*;
992502     data EMWS8.Neural35_VALIDATE
992503     / view=EMWS8.Neural35_VALIDATE
992504     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural35_VALIDATE / view=EMWS8.Neural35_VALIDATE ;
992505     set EMWS8.Meta2_VALIDATE
992506     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
992507     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMFLOWSCORE.sas.
992508    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
992509    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
992510    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
992511    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
992512    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
992513    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
992514    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
992515    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
992516    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
992517    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
992518    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
992519    +LENGTH _WARN_ $4
992520    +      F_DepVar  $ 12
992521    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
992522    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
992523    +
992524    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
992525    +
992526    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
992527    +
992528    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
992529    +
992530    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
992531    +
992532    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
992533    +
992534    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
992535    +
992536    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
992537    +
992538    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
992539    +
992540    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
992541    +
992542    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
992543    +
992544    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
992545    +
992546    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
992547    +
992548    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
992549    +
992550    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
992551    +
992552    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
992553    +
992554    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
992555    +
992556    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
992557    +
992558    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
992559    +
992560    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
992561    +
992562    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
992563    +
992564    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
992565    +
992566    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
992567    +
992568    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
992569    +
992570    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
992571    +
992572    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
992573    +
992574    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
992575    +
992576    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
992577    +
992578    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
992579    +
992580    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
992581    +
992582    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
992583    +
992584    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
992585    +
992586    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
992587    +
992588    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
992589    +
992590    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
992591    +
992592    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
992593    +
992594    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
992595    +
992596    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
992597    +
992598    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
992599    +
992600    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
992601    +
992602    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
992603    +
992604    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
992605    +
992606    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
992607    +
992608    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
992609    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
992610    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
992611    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
992612    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992613    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992614    +end;
MPRINT(EM_DIAGRAM):   end;
992615    +else do;
MPRINT(EM_DIAGRAM):   else do;
992616    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992617    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
992618    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992619    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
992620    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
992621    +   end;
MPRINT(EM_DIAGRAM):   end;
992622    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
992623    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
992624    +   end;
MPRINT(EM_DIAGRAM):   end;
992625    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992626    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
992627    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992628    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992629    +   end;
MPRINT(EM_DIAGRAM):   end;
992630    +end;
MPRINT(EM_DIAGRAM):   end;
992631    +
992632    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
992633    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
992634    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
992635    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
992636    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992637    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992638    +end;
MPRINT(EM_DIAGRAM):   end;
992639    +else do;
MPRINT(EM_DIAGRAM):   else do;
992640    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992641    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
992642    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992643    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
992644    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
992645    +   end;
MPRINT(EM_DIAGRAM):   end;
992646    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
992647    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
992648    +   end;
MPRINT(EM_DIAGRAM):   end;
992649    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992650    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
992651    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992652    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992653    +   end;
MPRINT(EM_DIAGRAM):   end;
992654    +end;
MPRINT(EM_DIAGRAM):   end;
992655    +
992656    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
992657    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
992658    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
992659    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
992660    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992661    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992662    +end;
MPRINT(EM_DIAGRAM):   end;
992663    +else do;
MPRINT(EM_DIAGRAM):   else do;
992664    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992665    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
992666    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992667    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
992668    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
992669    +   end;
MPRINT(EM_DIAGRAM):   end;
992670    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
992671    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
992672    +   end;
MPRINT(EM_DIAGRAM):   end;
992673    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992674    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
992675    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992676    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992677    +   end;
MPRINT(EM_DIAGRAM):   end;
992678    +end;
MPRINT(EM_DIAGRAM):   end;
992679    +
992680    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
992681    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
992682    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
992683    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
992684    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992685    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992686    +end;
MPRINT(EM_DIAGRAM):   end;
992687    +else do;
MPRINT(EM_DIAGRAM):   else do;
992688    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992689    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
992690    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992691    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
992692    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
992693    +   end;
MPRINT(EM_DIAGRAM):   end;
992694    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
992695    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
992696    +   end;
MPRINT(EM_DIAGRAM):   end;
992697    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992698    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
992699    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992700    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992701    +   end;
MPRINT(EM_DIAGRAM):   end;
992702    +end;
MPRINT(EM_DIAGRAM):   end;
992703    +
992704    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
992705    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
992706    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
992707    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
992708    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992709    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992710    +end;
MPRINT(EM_DIAGRAM):   end;
992711    +else do;
MPRINT(EM_DIAGRAM):   else do;
992712    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992713    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
992714    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992715    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
992716    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
992717    +   end;
MPRINT(EM_DIAGRAM):   end;
992718    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
992719    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
992720    +   end;
MPRINT(EM_DIAGRAM):   end;
992721    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992722    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
992723    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992724    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992725    +   end;
MPRINT(EM_DIAGRAM):   end;
992726    +end;
MPRINT(EM_DIAGRAM):   end;
992727    +
992728    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
992729    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
992730    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
992731    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
992732    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992733    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992734    +end;
MPRINT(EM_DIAGRAM):   end;
992735    +else do;
MPRINT(EM_DIAGRAM):   else do;
992736    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992737    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
992738    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992739    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
992740    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
992741    +   end;
MPRINT(EM_DIAGRAM):   end;
992742    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
992743    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
992744    +   end;
MPRINT(EM_DIAGRAM):   end;
992745    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992746    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
992747    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992748    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992749    +   end;
MPRINT(EM_DIAGRAM):   end;
992750    +end;
MPRINT(EM_DIAGRAM):   end;
992751    +
992752    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
992753    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
992754    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
992755    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
992756    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
992757    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
992758    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
992759    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
992760    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
992761    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
992762    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
992763    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
992764    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992765    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992766    +end;
MPRINT(EM_DIAGRAM):   end;
992767    +else do;
MPRINT(EM_DIAGRAM):   else do;
992768    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
992769    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
992770    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992771    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
992772    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
992773    +   end;
MPRINT(EM_DIAGRAM):   end;
992774    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
992775    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
992776    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
992777    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
992778    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
992779    +   end;
MPRINT(EM_DIAGRAM):   end;
992780    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
992781    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
992782    +   end;
MPRINT(EM_DIAGRAM):   end;
992783    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
992784    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
992785    +   end;
MPRINT(EM_DIAGRAM):   end;
992786    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
992787    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
992788    +   end;
MPRINT(EM_DIAGRAM):   end;
992789    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992790    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
992791    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
992792    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
992793    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
992794    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992795    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992796    +   end;
MPRINT(EM_DIAGRAM):   end;
992797    +end;
MPRINT(EM_DIAGRAM):   end;
992798    +
992799    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
992800    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
992801    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
992802    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
992803    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
992804    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
992805    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
992806    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
992807    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
992808    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
992809    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
992810    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
992811    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
992812    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992813    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992814    +end;
MPRINT(EM_DIAGRAM):   end;
992815    +else do;
MPRINT(EM_DIAGRAM):   else do;
992816    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
992817    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
992818    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992819    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
992820    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
992821    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
992822    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
992823    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
992824    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992825    +         end;
MPRINT(EM_DIAGRAM):   end;
992826    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992827    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
992828    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
992829    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992830    +            end;
MPRINT(EM_DIAGRAM):   end;
992831    +         end;
MPRINT(EM_DIAGRAM):   end;
992832    +      end;
MPRINT(EM_DIAGRAM):   end;
992833    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992834    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
992835    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
992836    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992837    +         end;
MPRINT(EM_DIAGRAM):   end;
992838    +      end;
MPRINT(EM_DIAGRAM):   end;
992839    +   end;
MPRINT(EM_DIAGRAM):   end;
992840    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992841    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
992842    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
992843    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992844    +      end;
MPRINT(EM_DIAGRAM):   end;
992845    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992846    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
992847    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
992848    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
992849    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
992850    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
992851    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992852    +         end;
MPRINT(EM_DIAGRAM):   end;
992853    +      end;
MPRINT(EM_DIAGRAM):   end;
992854    +   end;
MPRINT(EM_DIAGRAM):   end;
992855    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
992856    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
992857    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
992858    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
992859    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
992860    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992861    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992862    +   end;
MPRINT(EM_DIAGRAM):   end;
992863    +end;
MPRINT(EM_DIAGRAM):   end;
992864    +
992865    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992866    +*** Checking missing input Interval
992867    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
992868    +
992869    +IF NMISS(
992870    +   Income ,
992871    +   Kidhome ,
992872    +   MntFishProducts ,
992873    +   MntFruits ,
992874    +   MntGoldProds ,
992875    +   MntMeatProducts ,
992876    +   MntSweetProducts ,
992877    +   MntWines ,
992878    +   NumCatalogPurchases ,
992879    +   NumDealsPurchases ,
992880    +   NumStorePurchases ,
992881    +   NumWebPurchases ,
992882    +   NumWebVisitsMonth ,
992883    +   Recency ,
992884    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
992885    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
992886    +
992887    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992888    +END;
MPRINT(EM_DIAGRAM):   END;
992889    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992890    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
992891    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992892    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
992893    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
992894    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
992895    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
992896    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
992897    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
992898    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
992899    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
992900    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
992901    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
992902    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
992903    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
992904    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
992905    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
992906    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
992907    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
992908    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
992909    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
992910    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
992911    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
992912    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
992913    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
992914    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
992915    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
992916    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
992917    +END;
MPRINT(EM_DIAGRAM):   END;
992918    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
992919    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
992920    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
992921    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
992922    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
992923    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
992924    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
992925    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
992926    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
992927    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
992928    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
992929    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
992930    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
992931    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
992932    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
992933    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
992934    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
992935    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
992936    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
992937    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
992938    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
992939    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
992940    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
992941    +   ELSE S_NumCatalogPurchases
992942    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
992943    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
992944    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
992945    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
992946    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
992947    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
992948    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
992949    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
992950    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
992951    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
992952    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
992953    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
992954    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
992955    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
992956    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
992957    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
992958    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
992959    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
992960    +END;
MPRINT(EM_DIAGRAM):   END;
992961    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992962    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
992963    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992964    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992965    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
992966    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992967    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992968    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
992969    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
992970    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
992971    +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
992972    +          +    -0.08967295716195 * S_MntFishProducts
992973    +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
992974    +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
992975    +          +    -0.02806094557115 * S_MntSweetProducts
992976    +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
992977    +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
992978    +          +     0.25137876058262 * S_NumStorePurchases
992979    +          +    -0.07865442401292 * S_NumWebPurchases
992980    +          +     1.03197398967259 * S_NumWebVisitsMonth
992981    +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
992982    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome + 
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 * 
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts 
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305 
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 * 
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency + 
-0.76016893316351 * S_Teenhome ;
992983    +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
992984    +          +     0.19312392388912 * S_MntFishProducts
992985    +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
992986    +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
992987    +          +       0.204174263605 * S_MntSweetProducts
992988    +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
992989    +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
992990    +          +     0.07747830335769 * S_NumStorePurchases
992991    +          +     0.07960837555191 * S_NumWebPurchases
992992    +          +     0.02351602389122 * S_NumWebVisitsMonth
992993    +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
992994    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome + 
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 * 
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts + 
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218 
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 * 
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency + 
-0.47421627761687 * S_Teenhome ;
992995    +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
992996    +          +     0.18733919794636 * S_MntFishProducts
992997    +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
992998    +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
992999    +          +     0.42514606159239 * S_MntSweetProducts
993000    +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
993001    +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
993002    +          +     0.36582106462789 * S_NumStorePurchases
993003    +          +     0.04244777020435 * S_NumWebPurchases
993004    +          +    -0.24296342902503 * S_NumWebVisitsMonth
993005    +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
993006    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome + 
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 * 
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts 
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases + 
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases + 
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth + 
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
993007    +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
993008    +          +     0.05986489897572 * S_MntFishProducts
993009    +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
993010    +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
993011    +          +    -0.05513370461072 * S_MntSweetProducts
993012    +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
993013    +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
993014    +          +     0.64364674828841 * S_NumStorePurchases
993015    +          +     0.15084748708424 * S_NumWebPurchases
993016    +          +    -0.94144998356377 * S_NumWebVisitsMonth
993017    +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
993018    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome + 
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 * 
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 * 
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases 
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases + 
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth + 
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
993019    +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
993020    +          +    -0.14543196273578 * S_MntFishProducts
993021    +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
993022    +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
993023    +          +     0.49374793444169 * S_MntSweetProducts
993024    +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
993025    +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
993026    +          +     1.23754786782746 * S_NumStorePurchases
993027    +          +     1.11316667348511 * S_NumWebPurchases
993028    +          +    -1.08592446439781 * S_NumWebVisitsMonth
993029    +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
993030    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome + 
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 * 
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts 
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases + 
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases + 
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth + 
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
993031    +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
993032    +          +     0.29549884005341 * S_MntFishProducts
993033    +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
993034    +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
993035    +          +    -0.11909215986981 * S_MntSweetProducts
993036    +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
993037    +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
993038    +          +     0.30109334594548 * S_NumStorePurchases
993039    +          +     0.01985762767489 * S_NumWebPurchases
993040    +          +     0.44965133281333 * S_NumWebVisitsMonth
993041    +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
993042    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome + 
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 * 
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 * 
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases 
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases + 
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth + 
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
993043    +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
993044    +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
993045    +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
993046    +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
993047    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 * 
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 + 
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
993048    +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
993049    +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
993050    +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
993051    +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
993052    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 * 
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 + 
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
993053    +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
993054    +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
993055    +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
993056    +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
993057    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 * 
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 + 
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
993058    +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
993059    +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
993060    +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
993061    +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
993062    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 * 
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 + 
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
993063    +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
993064    +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
993065    +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
993066    +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
993067    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 * 
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 + 
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
993068    +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
993069    +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
993070    +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
993071    +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
993072    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 * 
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 + 
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
993073    +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
993074    +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
993075    +        EducationGraduation  +    -0.10167082180552 * EducationMaster
993076    +          +     0.51015833145636 * Marital_StatusDivorced
993077    +          +     -1.1653662063616 * Marital_StatusMarried
993078    +          +     1.19396547750441 * Marital_StatusSingle
993079    +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 * 
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster 
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried + 
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
993080    +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
993081    +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
993082    +        EducationGraduation  +     0.16650577465959 * EducationMaster
993083    +          +     0.09154288513995 * Marital_StatusDivorced
993084    +          +     0.06725684628382 * Marital_StatusMarried
993085    +          +     0.11327659191494 * Marital_StatusSingle
993086    +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 * 
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster 
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried + 
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
993087    +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
993088    +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
993089    +        EducationGraduation  +    -0.05554656531793 * EducationMaster
993090    +          +     0.37591653615852 * Marital_StatusDivorced
993091    +          +    -0.05024236790132 * Marital_StatusMarried
993092    +          +    -0.28317154997144 * Marital_StatusSingle
993093    +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 * 
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster 
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried + 
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
993094    +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
993095    +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
993096    +        EducationGraduation  +       0.638986138084 * EducationMaster
993097    +          +    -0.44885292450558 * Marital_StatusDivorced
993098    +          +     0.78958791519299 * Marital_StatusMarried
993099    +          +    -0.09688714431356 * Marital_StatusSingle
993100    +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 * 
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster + 
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried + 
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
993101    +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
993102    +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
993103    +        EducationGraduation  +    -0.26400363440725 * EducationMaster
993104    +          +    -0.30801073895989 * Marital_StatusDivorced
993105    +          +     -0.1285150749223 * Marital_StatusMarried
993106    +          +     0.06775542164414 * Marital_StatusSingle
993107    +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 * 
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster 
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried + 
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
993108    +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
993109    +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
993110    +        EducationGraduation  +    -0.40706983167068 * EducationMaster
993111    +          +     0.22193599090368 * Marital_StatusDivorced
993112    +          +    -0.54544672042168 * Marital_StatusMarried
993113    +          +    -0.02237436019864 * Marital_StatusSingle
993114    +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 * 
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster + 
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried + 
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
993115    +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
993116    +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
993117    +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
993118    +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
993119    +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
993120    +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
993121    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
993122    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
993123    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
993124    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
993125    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
993126    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
993127    +END;
MPRINT(EM_DIAGRAM):   END;
993128    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
993129    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
993130    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
993131    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
993132    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
993133    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
993134    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
993135    +END;
MPRINT(EM_DIAGRAM):   END;
993136    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
993137    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
993138    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
993139    +
993140    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
993141    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
993142    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
993143    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
993144    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
993145    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
993146    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
993147    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
993148    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
993149    +end;
MPRINT(EM_DIAGRAM):   end;
993150    +else do;
MPRINT(EM_DIAGRAM):   else do;
993151    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
993152    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
993153    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
993154    +   end;
MPRINT(EM_DIAGRAM):   end;
993155    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
993156    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
993157    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
993158    +   end;
MPRINT(EM_DIAGRAM):   end;
993159    +   else do;
MPRINT(EM_DIAGRAM):   else do;
993160    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
993161    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
993162    +   end;
MPRINT(EM_DIAGRAM):   end;
993163    +end;
MPRINT(EM_DIAGRAM):   end;
993164    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
993165    +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
993166    +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
993167    +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 + 
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974 
* H16 ;
993168    +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
993169    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
993170    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
993171    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
993172    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
993173    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
993174    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
993175    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
993176    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
993177    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
993178    +END;
MPRINT(EM_DIAGRAM):   END;
993179    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
993180    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
993181    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
993182    +END;
MPRINT(EM_DIAGRAM):   END;
993183    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
993184    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
993185    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
993186    +END;
MPRINT(EM_DIAGRAM):   END;
993187    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
993188    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
993189    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
993190    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
993191    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
993192    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
993193    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
993194    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
993195    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
993196    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
993197    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
993198    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
993199    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
993200    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
993201    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
993202    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
993203    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
993204    +END;
MPRINT(EM_DIAGRAM):   END;
993205    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
993206    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
993207    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
993208    +drop
993209    +H11
993210    +H12
993211    +H13
993212    +H14
993213    +H15
993214    +H16
993215    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
993216    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
993217     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL35_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
993218     quit;
993219     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
993220     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
993221     * Neural35: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural35: Computing metadata for TRAIN data;
993222     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL35_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural35_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural35_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural35_TRAIN out=WORK.M0D_WNN2 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0D_WNN2;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0D_WNN2(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0D_WNN2;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0D_WNN2;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2D8DPB1 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2D8DPB1;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D8DPB1;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3C6LMEN(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D8DPB1;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2D8DPB1;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D8DPB1;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2D8DPB1;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D8DPB1;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural35_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural35";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural35";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural35: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
993534     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
993535     set EMWS8.Neural35_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural35_EMINFO;
993536     where DATA='Neural35' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural35' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
993537     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL35_EMINFO.
      WHERE (DATA='Neural35') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

993538     data EMWS8.Neural35_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural35_EMINFO;
993539     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
993540     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
993541     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL35_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
993545     run;
993546     data EMWS8.Neural35_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural35_EMINFO;
993547     set EMWS8.Neural35_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural35_EMINFO WORK.MODELTEMP_INFO;
993548     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL35_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL35_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

993549     proc sort data = EMWS8.Neural35_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural35_EMINFO NOTHREADS;
993550     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
993551     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL35_EMINFO.
NOTE: The data set EMWS8.NEURAL35_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

993552     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
993553     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
993554     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

993555     proc sort data = EMWS8.Neural35_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural35_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
993556     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
993557     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL35_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

993558     data EMWS8.Neural35_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural35_EMINFO;
993559     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
993560     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
993561     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL35_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

993562     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
993563     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
993564     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
993565     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL35_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL35_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
