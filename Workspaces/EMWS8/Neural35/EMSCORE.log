MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.31 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                19.31 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O07IMQ9V 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O07IMQ9V new;
MPRINT(EM_DIAGRAM):   run;
330906     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
330907     set EMWS8.Neural35_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural35_OUTKEY;
330908     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
330909     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 35 observations read from the data set EMWS8.NEURAL35_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

330910     filename emflow
330910   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural35: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
330911     *------------------------------------------------------------*;
330912     * Neural35: Scoring DATA data;
330913     *------------------------------------------------------------*;
330914     data EMWS8.Neural35_TRAIN
330915     / view=EMWS8.Neural35_TRAIN
330916     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural35_TRAIN / view=EMWS8.Neural35_TRAIN ;
330917     set EMWS8.Meta2_TRAIN
330918     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
330919     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMFLOWSCORE.sas.
330920    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
330921    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
330922    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
330923    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
330924    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
330925    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
330926    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
330927    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
330928    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
330929    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
330930    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
330931    +LENGTH _WARN_ $4
330932    +      F_DepVar  $ 12
330933    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
330934    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
330935    +
330936    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
330937    +
330938    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
330939    +
330940    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
330941    +
330942    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
330943    +
330944    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
330945    +
330946    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
330947    +
330948    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
330949    +
330950    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
330951    +
330952    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
330953    +
330954    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
330955    +
330956    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
330957    +
330958    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
330959    +
330960    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
330961    +
330962    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
330963    +
330964    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
330965    +
330966    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
330967    +
330968    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
330969    +
330970    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
330971    +
330972    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
330973    +
330974    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
330975    +
330976    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
330977    +
330978    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
330979    +
330980    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
330981    +
330982    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
330983    +
330984    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
330985    +
330986    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
330987    +
330988    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
330989    +
330990    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
330991    +
330992    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
330993    +
330994    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
330995    +
330996    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
330997    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
330998    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
330999    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
331000    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
331001    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
331002    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
331003    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
331004    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
331005    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
331006    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
331007    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
331008    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
331009    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
331010    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
331011    +end;
MPRINT(EM_DIAGRAM):   end;
331012    +else do;
MPRINT(EM_DIAGRAM):   else do;
331013    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
331014    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
331015    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
331016    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
331017    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
331018    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
331019    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
331020    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
331021    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
331022    +         end;
MPRINT(EM_DIAGRAM):   end;
331023    +         else do;
MPRINT(EM_DIAGRAM):   else do;
331024    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
331025    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
331026    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
331027    +            end;
MPRINT(EM_DIAGRAM):   end;
331028    +         end;
MPRINT(EM_DIAGRAM):   end;
331029    +      end;
MPRINT(EM_DIAGRAM):   end;
331030    +      else do;
MPRINT(EM_DIAGRAM):   else do;
331031    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
331032    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
331033    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
331034    +         end;
MPRINT(EM_DIAGRAM):   end;
331035    +      end;
MPRINT(EM_DIAGRAM):   end;
331036    +   end;
MPRINT(EM_DIAGRAM):   end;
331037    +   else do;
MPRINT(EM_DIAGRAM):   else do;
331038    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
331039    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
331040    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
331041    +      end;
MPRINT(EM_DIAGRAM):   end;
331042    +      else do;
MPRINT(EM_DIAGRAM):   else do;
331043    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
331044    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
331045    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
331046    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
331047    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
331048    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
331049    +         end;
MPRINT(EM_DIAGRAM):   end;
331050    +      end;
MPRINT(EM_DIAGRAM):   end;
331051    +   end;
MPRINT(EM_DIAGRAM):   end;
331052    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
331053    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
331054    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
331055    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
331056    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
331057    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
331058    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
331059    +   end;
MPRINT(EM_DIAGRAM):   end;
331060    +end;
MPRINT(EM_DIAGRAM):   end;
331061    +
331062    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331063    +*** Checking missing input Interval
331064    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
331065    +
331066    +IF NMISS(
331067    +   AcceptedCmpTotal ,
331068    +   Frq ,
331069    +   Income ,
331070    +   Mnt ,
331071    +   MntGoldProds ,
331072    +   MntMeatProducts ,
331073    +   NumCatalogPurchases ,
331074    +   NumDealsPurchases ,
331075    +   NumWebVisitsMonth ,
331076    +   RFMstat ,
331077    +   Recency ,
331078    +   Teenhome ,
331079    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
331080    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
331081    +
331082    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
331083    +END;
MPRINT(EM_DIAGRAM):   END;
331084    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331085    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
331086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331087    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
331088    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
331089    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
331090    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
331091    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
331092    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
331093    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
331094    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
331095    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
331096    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
331097    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
331098    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
331099    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
331100    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
331101    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
331102    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
331103    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
331104    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
331105    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
331106    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
331107    +END;
MPRINT(EM_DIAGRAM):   END;
331108    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
331109    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
331110    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
331111    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
331112    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
331113    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
331114    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
331115    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
331116    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
331117    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
331118    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
331119    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
331120    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
331121    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
331122    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
331123    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
331124    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
331125    +   ELSE S_NumCatalogPurchases
331126    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
331127    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
331128    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
331129    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
331130    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
331131    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
331132    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
331133    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
331134    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
331135    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
331136    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
331137    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
331138    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
331139    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
331140    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
331141    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
331142    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
331143    +END;
MPRINT(EM_DIAGRAM):   END;
331144    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331145    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
331146    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331148    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
331149    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331150    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
331151    +   H11  =    -0.67146426793697 * S_AcceptedCmpTotal  +     1.29995065458071 *
331152    +        S_Frq  +     0.03391277791136 * S_Income  +     0.06144148645782 *
331153    +        S_Mnt  +      0.1927634649657 * S_MntGoldProds
331154    +          +    -0.96539971510064 * S_MntMeatProducts
331155    +          +    -0.97523935474564 * S_NumCatalogPurchases
331156    +          +    -0.35630345207431 * S_NumDealsPurchases
331157    +          +    -0.65250840334148 * S_NumWebVisitsMonth
331158    +          +     -0.5583483273313 * S_RFMstat  +     0.92611241960409 *
331159    +        S_Recency  +    -0.28046900231772 * S_Teenhome
331160    +          +    -0.36679552487377 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.67146426793697 * S_AcceptedCmpTotal + 1.29995065458071 * S_Frq 
+ 0.03391277791136 * S_Income + 0.06144148645782 * S_Mnt + 0.1927634649657 * S_MntGoldProds + 
-0.96539971510064 * S_MntMeatProducts + -0.97523935474564 * S_NumCatalogPurchases + 
-0.35630345207431 * S_NumDealsPurchases + -0.65250840334148 * S_NumWebVisitsMonth + 
-0.5583483273313 * S_RFMstat + 0.92611241960409 * S_Recency + -0.28046900231772 * S_Teenhome + 
-0.36679552487377 * S_Year_Birth ;
331161    +   H12  =     0.01313882014444 * S_AcceptedCmpTotal  +    -0.09323632112464 *
331162    +        S_Frq  +    -0.50844943609701 * S_Income  +     0.12669204045997 *
331163    +        S_Mnt  +     0.07219925031793 * S_MntGoldProds
331164    +          +     0.00674486363195 * S_MntMeatProducts
331165    +          +    -0.71888988378033 * S_NumCatalogPurchases
331166    +          +    -0.05178493195796 * S_NumDealsPurchases
331167    +          +    -0.13170943250514 * S_NumWebVisitsMonth
331168    +          +     0.29728347817458 * S_RFMstat  +     0.55622398306893 *
331169    +        S_Recency  +     0.65796567499462 * S_Teenhome
331170    +          +     0.00193686664896 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.01313882014444 * S_AcceptedCmpTotal + -0.09323632112464 * S_Frq 
+ -0.50844943609701 * S_Income + 0.12669204045997 * S_Mnt + 0.07219925031793 * S_MntGoldProds 
+ 0.00674486363195 * S_MntMeatProducts + -0.71888988378033 * S_NumCatalogPurchases + 
-0.05178493195796 * S_NumDealsPurchases + -0.13170943250514 * S_NumWebVisitsMonth + 
0.29728347817458 * S_RFMstat + 0.55622398306893 * S_Recency + 0.65796567499462 * S_Teenhome + 
0.00193686664896 * S_Year_Birth ;
331171    +   H13  =     0.20103801508012 * S_AcceptedCmpTotal  +     0.95927797553655 *
331172    +        S_Frq  +    -0.15567014433853 * S_Income  +     1.36081245941611 *
331173    +        S_Mnt  +     0.05809389425429 * S_MntGoldProds
331174    +          +    -0.69411784005832 * S_MntMeatProducts
331175    +          +    -1.56722173769724 * S_NumCatalogPurchases
331176    +          +    -0.89016432055901 * S_NumDealsPurchases
331177    +          +    -0.25186123136312 * S_NumWebVisitsMonth
331178    +          +    -0.18552596430516 * S_RFMstat  +    -0.00994342829979 *
331179    +        S_Recency  +     0.31484296272338 * S_Teenhome
331180    +          +     0.32960826974016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.20103801508012 * S_AcceptedCmpTotal + 0.95927797553655 * S_Frq + 
-0.15567014433853 * S_Income + 1.36081245941611 * S_Mnt + 0.05809389425429 * S_MntGoldProds + 
-0.69411784005832 * S_MntMeatProducts + -1.56722173769724 * S_NumCatalogPurchases + 
-0.89016432055901 * S_NumDealsPurchases + -0.25186123136312 * S_NumWebVisitsMonth + 
-0.18552596430516 * S_RFMstat + -0.00994342829979 * S_Recency + 0.31484296272338 * S_Teenhome 
+ 0.32960826974016 * S_Year_Birth ;
331181    +   H14  =    -0.02188823670778 * S_AcceptedCmpTotal  +     0.27719691992625 *
331182    +        S_Frq  +     0.38214818032822 * S_Income  +     0.23149239732903 *
331183    +        S_Mnt  +    -0.05080446917223 * S_MntGoldProds
331184    +          +     0.12845067622428 * S_MntMeatProducts
331185    +          +    -0.16827412575583 * S_NumCatalogPurchases
331186    +          +    -0.03839124625146 * S_NumDealsPurchases
331187    +          +     -0.2367352243813 * S_NumWebVisitsMonth
331188    +          +     0.17896271610121 * S_RFMstat  +     0.00633782629695 *
331189    +        S_Recency  +    -0.00928124461725 * S_Teenhome
331190    +          +     0.36590114390336 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.02188823670778 * S_AcceptedCmpTotal + 0.27719691992625 * S_Frq 
+ 0.38214818032822 * S_Income + 0.23149239732903 * S_Mnt + -0.05080446917223 * S_MntGoldProds 
+ 0.12845067622428 * S_MntMeatProducts + -0.16827412575583 * S_NumCatalogPurchases + 
-0.03839124625146 * S_NumDealsPurchases + -0.2367352243813 * S_NumWebVisitsMonth + 
0.17896271610121 * S_RFMstat + 0.00633782629695 * S_Recency + -0.00928124461725 * S_Teenhome + 
0.36590114390336 * S_Year_Birth ;
331191    +   H15  =     0.73569024045144 * S_AcceptedCmpTotal  +    -0.87610449778995 *
331192    +        S_Frq  +     0.43542512371065 * S_Income  +    -1.14529245346123 *
331193    +        S_Mnt  +     0.05618295533205 * S_MntGoldProds
331194    +          +     0.63301604773165 * S_MntMeatProducts
331195    +          +     0.42982341417504 * S_NumCatalogPurchases
331196    +          +     0.23896170370451 * S_NumDealsPurchases
331197    +          +     0.98929405444097 * S_NumWebVisitsMonth
331198    +          +     0.05471667340406 * S_RFMstat  +    -1.07690972830307 *
331199    +        S_Recency  +    -0.05123342633437 * S_Teenhome
331200    +          +    -0.11570945297607 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.73569024045144 * S_AcceptedCmpTotal + -0.87610449778995 * S_Frq 
+ 0.43542512371065 * S_Income + -1.14529245346123 * S_Mnt + 0.05618295533205 * S_MntGoldProds 
+ 0.63301604773165 * S_MntMeatProducts + 0.42982341417504 * S_NumCatalogPurchases + 
0.23896170370451 * S_NumDealsPurchases + 0.98929405444097 * S_NumWebVisitsMonth + 
0.05471667340406 * S_RFMstat + -1.07690972830307 * S_Recency + -0.05123342633437 * S_Teenhome 
+ -0.11570945297607 * S_Year_Birth ;
331201    +   H16  =    -0.75571155913011 * S_AcceptedCmpTotal  +     0.09840879372663 *
331202    +        S_Frq  +    -0.53461000732313 * S_Income  +      0.0787877759044 *
331203    +        S_Mnt  +    -0.53449001676017 * S_MntGoldProds
331204    +          +    -0.69187171438234 * S_MntMeatProducts
331205    +          +    -0.11822288494525 * S_NumCatalogPurchases
331206    +          +       0.519466734012 * S_NumDealsPurchases
331207    +          +    -0.51791781576859 * S_NumWebVisitsMonth
331208    +          +     0.22469288951761 * S_RFMstat  +     0.38650165150045 *
331209    +        S_Recency  +     0.58503658919931 * S_Teenhome
331210    +          +     0.03967747415483 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.75571155913011 * S_AcceptedCmpTotal + 0.09840879372663 * S_Frq 
+ -0.53461000732313 * S_Income + 0.0787877759044 * S_Mnt + -0.53449001676017 * S_MntGoldProds 
+ -0.69187171438234 * S_MntMeatProducts + -0.11822288494525 * S_NumCatalogPurchases + 
0.519466734012 * S_NumDealsPurchases + -0.51791781576859 * S_NumWebVisitsMonth + 
0.22469288951761 * S_RFMstat + 0.38650165150045 * S_Recency + 0.58503658919931 * S_Teenhome + 
0.03967747415483 * S_Year_Birth ;
331211    +   H11  = H11  +     0.04410898156447 * Marital_StatusDivorced
331212    +          +      0.1598517048471 * Marital_StatusMarried
331213    +          +     0.01142377364732 * Marital_StatusSingle
331214    +          +     0.06539003775575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04410898156447 * Marital_StatusDivorced + 0.1598517048471 
* Marital_StatusMarried + 0.01142377364732 * Marital_StatusSingle + 0.06539003775575 * 
Marital_StatusTogether ;
331215    +   H12  = H12  +     0.00306434299969 * Marital_StatusDivorced
331216    +          +    -0.26397365975909 * Marital_StatusMarried
331217    +          +    -0.18834295704477 * Marital_StatusSingle
331218    +          +     0.44699691253862 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00306434299969 * Marital_StatusDivorced + 
-0.26397365975909 * Marital_StatusMarried + -0.18834295704477 * Marital_StatusSingle + 
0.44699691253862 * Marital_StatusTogether ;
331219    +   H13  = H13  +    -0.28709990984097 * Marital_StatusDivorced
331220    +          +     -0.3545019739037 * Marital_StatusMarried
331221    +          +     0.07927126592528 * Marital_StatusSingle
331222    +          +    -0.21786411284156 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.28709990984097 * Marital_StatusDivorced + 
-0.3545019739037 * Marital_StatusMarried + 0.07927126592528 * Marital_StatusSingle + 
-0.21786411284156 * Marital_StatusTogether ;
331223    +   H14  = H14  +     0.02206189536446 * Marital_StatusDivorced
331224    +          +    -0.55625916317319 * Marital_StatusMarried
331225    +          +     0.05831638520166 * Marital_StatusSingle
331226    +          +    -0.48779635493104 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.02206189536446 * Marital_StatusDivorced + 
-0.55625916317319 * Marital_StatusMarried + 0.05831638520166 * Marital_StatusSingle + 
-0.48779635493104 * Marital_StatusTogether ;
331227    +   H15  = H15  +     0.46162998965598 * Marital_StatusDivorced
331228    +          +    -1.42284160271852 * Marital_StatusMarried
331229    +          +     0.99787512457662 * Marital_StatusSingle
331230    +          +    -1.28275199288232 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.46162998965598 * Marital_StatusDivorced + 
-1.42284160271852 * Marital_StatusMarried + 0.99787512457662 * Marital_StatusSingle + 
-1.28275199288232 * Marital_StatusTogether ;
331231    +   H16  = H16  +     0.21134806671623 * Marital_StatusDivorced
331232    +          +     0.34831713709698 * Marital_StatusMarried
331233    +          +    -0.45422691054026 * Marital_StatusSingle
331234    +          +     0.12023788093816 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.21134806671623 * Marital_StatusDivorced + 0.34831713709698 
* Marital_StatusMarried + -0.45422691054026 * Marital_StatusSingle + 0.12023788093816 * 
Marital_StatusTogether ;
331235    +   H11  =      1.5022178269739 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.5022178269739 + H11 ;
331236    +   H12  =     0.73484629523687 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.73484629523687 + H12 ;
331237    +   H13  =     0.69194935422921 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.69194935422921 + H13 ;
331238    +   H14  =     0.85630780742617 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85630780742617 + H14 ;
331239    +   H15  =     0.98348561215424 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.98348561215424 + H15 ;
331240    +   H16  =     1.51368234130787 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.51368234130787 + H16 ;
331241    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
331242    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
331243    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
331244    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
331245    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
331246    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
331247    +END;
MPRINT(EM_DIAGRAM):   END;
331248    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
331249    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
331250    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
331251    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
331252    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
331253    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
331254    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
331255    +END;
MPRINT(EM_DIAGRAM):   END;
331256    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331257    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
331258    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331259    +
331260    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
331261    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
331262    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
331263    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
331264    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
331265    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
331266    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
331267    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
331268    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
331269    +end;
MPRINT(EM_DIAGRAM):   end;
331270    +else do;
MPRINT(EM_DIAGRAM):   else do;
331271    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
331272    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
331273    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
331274    +   end;
MPRINT(EM_DIAGRAM):   end;
331275    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
331276    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
331277    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
331278    +   end;
MPRINT(EM_DIAGRAM):   end;
331279    +   else do;
MPRINT(EM_DIAGRAM):   else do;
331280    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
331281    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
331282    +   end;
MPRINT(EM_DIAGRAM):   end;
331283    +end;
MPRINT(EM_DIAGRAM):   end;
331284    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
331285    +   P_DepVar1  =    -3.07342131758869 * H11  +    -0.81132049141319 * H12
331286    +          +    -2.19940529234218 * H13  +    -0.48199183515645 * H14
331287    +          +     4.03916391547898 * H15  +     -2.8998255953728 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.07342131758869 * H11 + -0.81132049141319 * H12 + 
-2.19940529234218 * H13 + -0.48199183515645 * H14 + 4.03916391547898 * H15 + -2.8998255953728 
* H16 ;
331288    +   P_DepVar1  =    -1.74498921303611 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.74498921303611 + P_DepVar1 ;
331289    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
331290    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
331291    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
331292    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
331293    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
331294    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
331295    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
331296    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
331297    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
331298    +END;
MPRINT(EM_DIAGRAM):   END;
331299    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
331300    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
331301    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
331302    +END;
MPRINT(EM_DIAGRAM):   END;
331303    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
331304    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
331305    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
331306    +END;
MPRINT(EM_DIAGRAM):   END;
331307    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
331308    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
331309    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
331310    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
331311    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
331312    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
331313    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
331314    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331315    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
331316    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331317    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
331318    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
331319    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
331320    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
331321    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
331322    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
331323    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
331324    +END;
MPRINT(EM_DIAGRAM):   END;
331325    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
331326    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
331327    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
331328    +drop
331329    +H11
331330    +H12
331331    +H13
331332    +H14
331333    +H15
331334    +H16
331335    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
331336    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
331337     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL35_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
331338     quit;
331339     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
331340     filename emflow
331340   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural35: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
331341     *------------------------------------------------------------*;
331342     * Neural35: Scoring VALIDATE data;
331343     *------------------------------------------------------------*;
331344     data EMWS8.Neural35_VALIDATE
331345     / view=EMWS8.Neural35_VALIDATE
331346     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural35_VALIDATE / view=EMWS8.Neural35_VALIDATE ;
331347     set EMWS8.Meta2_VALIDATE
331348     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
331349     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMFLOWSCORE.sas.
331350    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
331351    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
331352    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
331353    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
331354    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
331355    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
331356    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
331357    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
331358    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
331359    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
331360    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
331361    +LENGTH _WARN_ $4
331362    +      F_DepVar  $ 12
331363    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
331364    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
331365    +
331366    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
331367    +
331368    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
331369    +
331370    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
331371    +
331372    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
331373    +
331374    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
331375    +
331376    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
331377    +
331378    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
331379    +
331380    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
331381    +
331382    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
331383    +
331384    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
331385    +
331386    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
331387    +
331388    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
331389    +
331390    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
331391    +
331392    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
331393    +
331394    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
331395    +
331396    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
331397    +
331398    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
331399    +
331400    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
331401    +
331402    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
331403    +
331404    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
331405    +
331406    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
331407    +
331408    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
331409    +
331410    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
331411    +
331412    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
331413    +
331414    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
331415    +
331416    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
331417    +
331418    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
331419    +
331420    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
331421    +
331422    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
331423    +
331424    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
331425    +
331426    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
331427    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
331428    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
331429    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
331430    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
331431    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
331432    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
331433    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
331434    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
331435    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
331436    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
331437    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
331438    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
331439    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
331440    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
331441    +end;
MPRINT(EM_DIAGRAM):   end;
331442    +else do;
MPRINT(EM_DIAGRAM):   else do;
331443    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
331444    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
331445    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
331446    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
331447    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
331448    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
331449    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
331450    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
331451    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
331452    +         end;
MPRINT(EM_DIAGRAM):   end;
331453    +         else do;
MPRINT(EM_DIAGRAM):   else do;
331454    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
331455    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
331456    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
331457    +            end;
MPRINT(EM_DIAGRAM):   end;
331458    +         end;
MPRINT(EM_DIAGRAM):   end;
331459    +      end;
MPRINT(EM_DIAGRAM):   end;
331460    +      else do;
MPRINT(EM_DIAGRAM):   else do;
331461    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
331462    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
331463    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
331464    +         end;
MPRINT(EM_DIAGRAM):   end;
331465    +      end;
MPRINT(EM_DIAGRAM):   end;
331466    +   end;
MPRINT(EM_DIAGRAM):   end;
331467    +   else do;
MPRINT(EM_DIAGRAM):   else do;
331468    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
331469    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
331470    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
331471    +      end;
MPRINT(EM_DIAGRAM):   end;
331472    +      else do;
MPRINT(EM_DIAGRAM):   else do;
331473    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
331474    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
331475    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
331476    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
331477    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
331478    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
331479    +         end;
MPRINT(EM_DIAGRAM):   end;
331480    +      end;
MPRINT(EM_DIAGRAM):   end;
331481    +   end;
MPRINT(EM_DIAGRAM):   end;
331482    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
331483    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
331484    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
331485    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
331486    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
331487    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
331488    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
331489    +   end;
MPRINT(EM_DIAGRAM):   end;
331490    +end;
MPRINT(EM_DIAGRAM):   end;
331491    +
331492    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331493    +*** Checking missing input Interval
331494    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
331495    +
331496    +IF NMISS(
331497    +   AcceptedCmpTotal ,
331498    +   Frq ,
331499    +   Income ,
331500    +   Mnt ,
331501    +   MntGoldProds ,
331502    +   MntMeatProducts ,
331503    +   NumCatalogPurchases ,
331504    +   NumDealsPurchases ,
331505    +   NumWebVisitsMonth ,
331506    +   RFMstat ,
331507    +   Recency ,
331508    +   Teenhome ,
331509    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
331510    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
331511    +
331512    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
331513    +END;
MPRINT(EM_DIAGRAM):   END;
331514    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331515    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
331516    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331517    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
331518    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
331519    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
331520    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
331521    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
331522    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
331523    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
331524    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
331525    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
331526    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
331527    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
331528    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
331529    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
331530    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
331531    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
331532    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
331533    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
331534    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
331535    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
331536    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
331537    +END;
MPRINT(EM_DIAGRAM):   END;
331538    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
331539    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
331540    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
331541    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
331542    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
331543    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
331544    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
331545    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
331546    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
331547    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
331548    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
331549    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
331550    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
331551    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
331552    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
331553    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
331554    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
331555    +   ELSE S_NumCatalogPurchases
331556    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
331557    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
331558    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
331559    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
331560    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
331561    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
331562    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
331563    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
331564    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
331565    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
331566    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
331567    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
331568    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
331569    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
331570    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
331571    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
331572    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
331573    +END;
MPRINT(EM_DIAGRAM):   END;
331574    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331575    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
331576    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331577    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331578    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
331579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331580    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
331581    +   H11  =    -0.67146426793697 * S_AcceptedCmpTotal  +     1.29995065458071 *
331582    +        S_Frq  +     0.03391277791136 * S_Income  +     0.06144148645782 *
331583    +        S_Mnt  +      0.1927634649657 * S_MntGoldProds
331584    +          +    -0.96539971510064 * S_MntMeatProducts
331585    +          +    -0.97523935474564 * S_NumCatalogPurchases
331586    +          +    -0.35630345207431 * S_NumDealsPurchases
331587    +          +    -0.65250840334148 * S_NumWebVisitsMonth
331588    +          +     -0.5583483273313 * S_RFMstat  +     0.92611241960409 *
331589    +        S_Recency  +    -0.28046900231772 * S_Teenhome
331590    +          +    -0.36679552487377 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.67146426793697 * S_AcceptedCmpTotal + 1.29995065458071 * S_Frq 
+ 0.03391277791136 * S_Income + 0.06144148645782 * S_Mnt + 0.1927634649657 * S_MntGoldProds + 
-0.96539971510064 * S_MntMeatProducts + -0.97523935474564 * S_NumCatalogPurchases + 
-0.35630345207431 * S_NumDealsPurchases + -0.65250840334148 * S_NumWebVisitsMonth + 
-0.5583483273313 * S_RFMstat + 0.92611241960409 * S_Recency + -0.28046900231772 * S_Teenhome + 
-0.36679552487377 * S_Year_Birth ;
331591    +   H12  =     0.01313882014444 * S_AcceptedCmpTotal  +    -0.09323632112464 *
331592    +        S_Frq  +    -0.50844943609701 * S_Income  +     0.12669204045997 *
331593    +        S_Mnt  +     0.07219925031793 * S_MntGoldProds
331594    +          +     0.00674486363195 * S_MntMeatProducts
331595    +          +    -0.71888988378033 * S_NumCatalogPurchases
331596    +          +    -0.05178493195796 * S_NumDealsPurchases
331597    +          +    -0.13170943250514 * S_NumWebVisitsMonth
331598    +          +     0.29728347817458 * S_RFMstat  +     0.55622398306893 *
331599    +        S_Recency  +     0.65796567499462 * S_Teenhome
331600    +          +     0.00193686664896 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.01313882014444 * S_AcceptedCmpTotal + -0.09323632112464 * S_Frq 
+ -0.50844943609701 * S_Income + 0.12669204045997 * S_Mnt + 0.07219925031793 * S_MntGoldProds 
+ 0.00674486363195 * S_MntMeatProducts + -0.71888988378033 * S_NumCatalogPurchases + 
-0.05178493195796 * S_NumDealsPurchases + -0.13170943250514 * S_NumWebVisitsMonth + 
0.29728347817458 * S_RFMstat + 0.55622398306893 * S_Recency + 0.65796567499462 * S_Teenhome + 
0.00193686664896 * S_Year_Birth ;
331601    +   H13  =     0.20103801508012 * S_AcceptedCmpTotal  +     0.95927797553655 *
331602    +        S_Frq  +    -0.15567014433853 * S_Income  +     1.36081245941611 *
331603    +        S_Mnt  +     0.05809389425429 * S_MntGoldProds
331604    +          +    -0.69411784005832 * S_MntMeatProducts
331605    +          +    -1.56722173769724 * S_NumCatalogPurchases
331606    +          +    -0.89016432055901 * S_NumDealsPurchases
331607    +          +    -0.25186123136312 * S_NumWebVisitsMonth
331608    +          +    -0.18552596430516 * S_RFMstat  +    -0.00994342829979 *
331609    +        S_Recency  +     0.31484296272338 * S_Teenhome
331610    +          +     0.32960826974016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.20103801508012 * S_AcceptedCmpTotal + 0.95927797553655 * S_Frq + 
-0.15567014433853 * S_Income + 1.36081245941611 * S_Mnt + 0.05809389425429 * S_MntGoldProds + 
-0.69411784005832 * S_MntMeatProducts + -1.56722173769724 * S_NumCatalogPurchases + 
-0.89016432055901 * S_NumDealsPurchases + -0.25186123136312 * S_NumWebVisitsMonth + 
-0.18552596430516 * S_RFMstat + -0.00994342829979 * S_Recency + 0.31484296272338 * S_Teenhome 
+ 0.32960826974016 * S_Year_Birth ;
331611    +   H14  =    -0.02188823670778 * S_AcceptedCmpTotal  +     0.27719691992625 *
331612    +        S_Frq  +     0.38214818032822 * S_Income  +     0.23149239732903 *
331613    +        S_Mnt  +    -0.05080446917223 * S_MntGoldProds
331614    +          +     0.12845067622428 * S_MntMeatProducts
331615    +          +    -0.16827412575583 * S_NumCatalogPurchases
331616    +          +    -0.03839124625146 * S_NumDealsPurchases
331617    +          +     -0.2367352243813 * S_NumWebVisitsMonth
331618    +          +     0.17896271610121 * S_RFMstat  +     0.00633782629695 *
331619    +        S_Recency  +    -0.00928124461725 * S_Teenhome
331620    +          +     0.36590114390336 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.02188823670778 * S_AcceptedCmpTotal + 0.27719691992625 * S_Frq 
+ 0.38214818032822 * S_Income + 0.23149239732903 * S_Mnt + -0.05080446917223 * S_MntGoldProds 
+ 0.12845067622428 * S_MntMeatProducts + -0.16827412575583 * S_NumCatalogPurchases + 
-0.03839124625146 * S_NumDealsPurchases + -0.2367352243813 * S_NumWebVisitsMonth + 
0.17896271610121 * S_RFMstat + 0.00633782629695 * S_Recency + -0.00928124461725 * S_Teenhome + 
0.36590114390336 * S_Year_Birth ;
331621    +   H15  =     0.73569024045144 * S_AcceptedCmpTotal  +    -0.87610449778995 *
331622    +        S_Frq  +     0.43542512371065 * S_Income  +    -1.14529245346123 *
331623    +        S_Mnt  +     0.05618295533205 * S_MntGoldProds
331624    +          +     0.63301604773165 * S_MntMeatProducts
331625    +          +     0.42982341417504 * S_NumCatalogPurchases
331626    +          +     0.23896170370451 * S_NumDealsPurchases
331627    +          +     0.98929405444097 * S_NumWebVisitsMonth
331628    +          +     0.05471667340406 * S_RFMstat  +    -1.07690972830307 *
331629    +        S_Recency  +    -0.05123342633437 * S_Teenhome
331630    +          +    -0.11570945297607 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.73569024045144 * S_AcceptedCmpTotal + -0.87610449778995 * S_Frq 
+ 0.43542512371065 * S_Income + -1.14529245346123 * S_Mnt + 0.05618295533205 * S_MntGoldProds 
+ 0.63301604773165 * S_MntMeatProducts + 0.42982341417504 * S_NumCatalogPurchases + 
0.23896170370451 * S_NumDealsPurchases + 0.98929405444097 * S_NumWebVisitsMonth + 
0.05471667340406 * S_RFMstat + -1.07690972830307 * S_Recency + -0.05123342633437 * S_Teenhome 
+ -0.11570945297607 * S_Year_Birth ;
331631    +   H16  =    -0.75571155913011 * S_AcceptedCmpTotal  +     0.09840879372663 *
331632    +        S_Frq  +    -0.53461000732313 * S_Income  +      0.0787877759044 *
331633    +        S_Mnt  +    -0.53449001676017 * S_MntGoldProds
331634    +          +    -0.69187171438234 * S_MntMeatProducts
331635    +          +    -0.11822288494525 * S_NumCatalogPurchases
331636    +          +       0.519466734012 * S_NumDealsPurchases
331637    +          +    -0.51791781576859 * S_NumWebVisitsMonth
331638    +          +     0.22469288951761 * S_RFMstat  +     0.38650165150045 *
331639    +        S_Recency  +     0.58503658919931 * S_Teenhome
331640    +          +     0.03967747415483 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.75571155913011 * S_AcceptedCmpTotal + 0.09840879372663 * S_Frq 
+ -0.53461000732313 * S_Income + 0.0787877759044 * S_Mnt + -0.53449001676017 * S_MntGoldProds 
+ -0.69187171438234 * S_MntMeatProducts + -0.11822288494525 * S_NumCatalogPurchases + 
0.519466734012 * S_NumDealsPurchases + -0.51791781576859 * S_NumWebVisitsMonth + 
0.22469288951761 * S_RFMstat + 0.38650165150045 * S_Recency + 0.58503658919931 * S_Teenhome + 
0.03967747415483 * S_Year_Birth ;
331641    +   H11  = H11  +     0.04410898156447 * Marital_StatusDivorced
331642    +          +      0.1598517048471 * Marital_StatusMarried
331643    +          +     0.01142377364732 * Marital_StatusSingle
331644    +          +     0.06539003775575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04410898156447 * Marital_StatusDivorced + 0.1598517048471 
* Marital_StatusMarried + 0.01142377364732 * Marital_StatusSingle + 0.06539003775575 * 
Marital_StatusTogether ;
331645    +   H12  = H12  +     0.00306434299969 * Marital_StatusDivorced
331646    +          +    -0.26397365975909 * Marital_StatusMarried
331647    +          +    -0.18834295704477 * Marital_StatusSingle
331648    +          +     0.44699691253862 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00306434299969 * Marital_StatusDivorced + 
-0.26397365975909 * Marital_StatusMarried + -0.18834295704477 * Marital_StatusSingle + 
0.44699691253862 * Marital_StatusTogether ;
331649    +   H13  = H13  +    -0.28709990984097 * Marital_StatusDivorced
331650    +          +     -0.3545019739037 * Marital_StatusMarried
331651    +          +     0.07927126592528 * Marital_StatusSingle
331652    +          +    -0.21786411284156 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.28709990984097 * Marital_StatusDivorced + 
-0.3545019739037 * Marital_StatusMarried + 0.07927126592528 * Marital_StatusSingle + 
-0.21786411284156 * Marital_StatusTogether ;
331653    +   H14  = H14  +     0.02206189536446 * Marital_StatusDivorced
331654    +          +    -0.55625916317319 * Marital_StatusMarried
331655    +          +     0.05831638520166 * Marital_StatusSingle
331656    +          +    -0.48779635493104 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.02206189536446 * Marital_StatusDivorced + 
-0.55625916317319 * Marital_StatusMarried + 0.05831638520166 * Marital_StatusSingle + 
-0.48779635493104 * Marital_StatusTogether ;
331657    +   H15  = H15  +     0.46162998965598 * Marital_StatusDivorced
331658    +          +    -1.42284160271852 * Marital_StatusMarried
331659    +          +     0.99787512457662 * Marital_StatusSingle
331660    +          +    -1.28275199288232 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.46162998965598 * Marital_StatusDivorced + 
-1.42284160271852 * Marital_StatusMarried + 0.99787512457662 * Marital_StatusSingle + 
-1.28275199288232 * Marital_StatusTogether ;
331661    +   H16  = H16  +     0.21134806671623 * Marital_StatusDivorced
331662    +          +     0.34831713709698 * Marital_StatusMarried
331663    +          +    -0.45422691054026 * Marital_StatusSingle
331664    +          +     0.12023788093816 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.21134806671623 * Marital_StatusDivorced + 0.34831713709698 
* Marital_StatusMarried + -0.45422691054026 * Marital_StatusSingle + 0.12023788093816 * 
Marital_StatusTogether ;
331665    +   H11  =      1.5022178269739 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.5022178269739 + H11 ;
331666    +   H12  =     0.73484629523687 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.73484629523687 + H12 ;
331667    +   H13  =     0.69194935422921 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.69194935422921 + H13 ;
331668    +   H14  =     0.85630780742617 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85630780742617 + H14 ;
331669    +   H15  =     0.98348561215424 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.98348561215424 + H15 ;
331670    +   H16  =     1.51368234130787 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.51368234130787 + H16 ;
331671    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
331672    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
331673    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
331674    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
331675    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
331676    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
331677    +END;
MPRINT(EM_DIAGRAM):   END;
331678    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
331679    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
331680    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
331681    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
331682    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
331683    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
331684    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
331685    +END;
MPRINT(EM_DIAGRAM):   END;
331686    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331687    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
331688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331689    +
331690    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
331691    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
331692    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
331693    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
331694    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
331695    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
331696    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
331697    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
331698    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
331699    +end;
MPRINT(EM_DIAGRAM):   end;
331700    +else do;
MPRINT(EM_DIAGRAM):   else do;
331701    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
331702    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
331703    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
331704    +   end;
MPRINT(EM_DIAGRAM):   end;
331705    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
331706    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
331707    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
331708    +   end;
MPRINT(EM_DIAGRAM):   end;
331709    +   else do;
MPRINT(EM_DIAGRAM):   else do;
331710    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
331711    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
331712    +   end;
MPRINT(EM_DIAGRAM):   end;
331713    +end;
MPRINT(EM_DIAGRAM):   end;
331714    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
331715    +   P_DepVar1  =    -3.07342131758869 * H11  +    -0.81132049141319 * H12
331716    +          +    -2.19940529234218 * H13  +    -0.48199183515645 * H14
331717    +          +     4.03916391547898 * H15  +     -2.8998255953728 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.07342131758869 * H11 + -0.81132049141319 * H12 + 
-2.19940529234218 * H13 + -0.48199183515645 * H14 + 4.03916391547898 * H15 + -2.8998255953728 
* H16 ;
331718    +   P_DepVar1  =    -1.74498921303611 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.74498921303611 + P_DepVar1 ;
331719    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
331720    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
331721    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
331722    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
331723    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
331724    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
331725    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
331726    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
331727    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
331728    +END;
MPRINT(EM_DIAGRAM):   END;
331729    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
331730    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
331731    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
331732    +END;
MPRINT(EM_DIAGRAM):   END;
331733    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
331734    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
331735    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
331736    +END;
MPRINT(EM_DIAGRAM):   END;
331737    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
331738    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
331739    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
331740    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
331741    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
331742    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
331743    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
331744    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331745    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
331746    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
331747    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
331748    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
331749    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
331750    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
331751    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
331752    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
331753    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
331754    +END;
MPRINT(EM_DIAGRAM):   END;
331755    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
331756    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
331757    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
331758    +drop
331759    +H11
331760    +H12
331761    +H13
331762    +H14
331763    +H15
331764    +H16
331765    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
331766    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
331767     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL35_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
331768     quit;
331769     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
331770     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
331771     * Neural35: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural35: Computing metadata for TRAIN data;
331772     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL35_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural35_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural35_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural35_TRAIN out=WORK.M2OKE1CT noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2OKE1CT;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2OKE1CT(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2OKE1CT;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2OKE1CT;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3AP4NNE NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3AP4NNE;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3AP4NNE;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3DVX9IQ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3AP4NNE;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3AP4NNE;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3AP4NNE;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3AP4NNE;
MPRINT(EMADVISECOLUMNS):   set WORK.M3AP4NNE;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural35_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural35";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural35";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural35";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural35: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
332084     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
332085     set EMWS8.Neural35_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural35_EMINFO;
332086     where DATA='Neural35' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural35' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
332087     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL35_EMINFO.
      WHERE (DATA='Neural35') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

332088     data EMWS8.Neural35_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural35_EMINFO;
332089     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
332090     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
332091     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL35_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
332095     run;
332096     data EMWS8.Neural35_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural35_EMINFO;
332097     set EMWS8.Neural35_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural35_EMINFO WORK.MODELTEMP_INFO;
332098     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL35_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL35_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

332099     proc sort data = EMWS8.Neural35_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural35_EMINFO NOTHREADS;
332100     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
332101     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL35_EMINFO.
NOTE: The data set EMWS8.NEURAL35_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

332102     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
332103     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
332104     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

332105     proc sort data = EMWS8.Neural35_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural35_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
332106     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
332107     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL35_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

332108     data EMWS8.Neural35_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural35_EMINFO;
332109     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
332110     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
332111     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL35_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

332112     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
332113     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
332114     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
332115     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL35_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL35_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
