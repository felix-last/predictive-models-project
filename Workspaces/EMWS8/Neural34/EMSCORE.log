MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.05 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.05 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O34Y801O 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O34Y801O new;
MPRINT(EM_DIAGRAM):   run;
315642     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
315643     set EMWS8.Neural34_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_OUTKEY;
315644     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
315645     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 46 observations read from the data set EMWS8.NEURAL34_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

315646     filename emflow
315646   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural34: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315647     *------------------------------------------------------------*;
315648     * Neural34: Scoring DATA data;
315649     *------------------------------------------------------------*;
315650     data EMWS8.Neural34_TRAIN
315651     / view=EMWS8.Neural34_TRAIN
315652     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural34_TRAIN / view=EMWS8.Neural34_TRAIN ;
315653     set EMWS8.Meta2_TRAIN
315654     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
315655     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas.
315656    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
315657    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
315658    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
315659    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
315660    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
315661    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
315662    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
315663    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
315664    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
315665    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
315666    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
315667    +LENGTH _WARN_ $4
315668    +      F_DepVar  $ 12
315669    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
315670    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
315671    +
315672    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
315673    +
315674    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
315675    +
315676    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
315677    +
315678    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
315679    +
315680    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
315681    +
315682    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
315683    +
315684    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
315685    +
315686    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
315687    +
315688    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
315689    +
315690    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
315691    +
315692    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
315693    +
315694    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
315695    +
315696    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
315697    +
315698    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
315699    +
315700    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
315701    +
315702    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
315703    +
315704    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
315705    +
315706    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
315707    +
315708    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
315709    +
315710    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
315711    +
315712    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
315713    +
315714    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
315715    +
315716    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
315717    +
315718    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
315719    +
315720    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
315721    +
315722    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
315723    +
315724    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
315725    +
315726    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
315727    +
315728    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
315729    +
315730    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
315731    +
315732    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
315733    +
315734    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
315735    +
315736    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
315737    +
315738    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
315739    +
315740    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
315741    +
315742    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
315743    +
315744    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
315745    +
315746    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
315747    +
315748    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
315749    +
315750    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
315751    +
315752    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
315753    +
315754    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
315755    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
315756    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
315757    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
315758    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315759    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315760    +end;
MPRINT(EM_DIAGRAM):   end;
315761    +else do;
MPRINT(EM_DIAGRAM):   else do;
315762    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
315763    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
315764    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315765    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
315766    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
315767    +   end;
MPRINT(EM_DIAGRAM):   end;
315768    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
315769    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
315770    +   end;
MPRINT(EM_DIAGRAM):   end;
315771    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315772    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
315773    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315774    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315775    +   end;
MPRINT(EM_DIAGRAM):   end;
315776    +end;
MPRINT(EM_DIAGRAM):   end;
315777    +
315778    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
315779    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
315780    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
315781    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
315782    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315783    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315784    +end;
MPRINT(EM_DIAGRAM):   end;
315785    +else do;
MPRINT(EM_DIAGRAM):   else do;
315786    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
315787    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
315788    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315789    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
315790    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
315791    +   end;
MPRINT(EM_DIAGRAM):   end;
315792    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
315793    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
315794    +   end;
MPRINT(EM_DIAGRAM):   end;
315795    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315796    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
315797    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315798    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315799    +   end;
MPRINT(EM_DIAGRAM):   end;
315800    +end;
MPRINT(EM_DIAGRAM):   end;
315801    +
315802    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
315803    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
315804    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
315805    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
315806    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315807    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315808    +end;
MPRINT(EM_DIAGRAM):   end;
315809    +else do;
MPRINT(EM_DIAGRAM):   else do;
315810    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
315811    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
315812    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315813    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
315814    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
315815    +   end;
MPRINT(EM_DIAGRAM):   end;
315816    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
315817    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
315818    +   end;
MPRINT(EM_DIAGRAM):   end;
315819    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315820    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
315821    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315822    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315823    +   end;
MPRINT(EM_DIAGRAM):   end;
315824    +end;
MPRINT(EM_DIAGRAM):   end;
315825    +
315826    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
315827    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
315828    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
315829    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
315830    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315831    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315832    +end;
MPRINT(EM_DIAGRAM):   end;
315833    +else do;
MPRINT(EM_DIAGRAM):   else do;
315834    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
315835    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
315836    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315837    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
315838    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
315839    +   end;
MPRINT(EM_DIAGRAM):   end;
315840    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
315841    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
315842    +   end;
MPRINT(EM_DIAGRAM):   end;
315843    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315844    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
315845    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315846    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315847    +   end;
MPRINT(EM_DIAGRAM):   end;
315848    +end;
MPRINT(EM_DIAGRAM):   end;
315849    +
315850    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
315851    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
315852    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
315853    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
315854    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315855    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315856    +end;
MPRINT(EM_DIAGRAM):   end;
315857    +else do;
MPRINT(EM_DIAGRAM):   else do;
315858    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
315859    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
315860    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315861    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
315862    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
315863    +   end;
MPRINT(EM_DIAGRAM):   end;
315864    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
315865    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
315866    +   end;
MPRINT(EM_DIAGRAM):   end;
315867    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315868    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
315869    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315870    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315871    +   end;
MPRINT(EM_DIAGRAM):   end;
315872    +end;
MPRINT(EM_DIAGRAM):   end;
315873    +
315874    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
315875    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
315876    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
315877    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
315878    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315879    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315880    +end;
MPRINT(EM_DIAGRAM):   end;
315881    +else do;
MPRINT(EM_DIAGRAM):   else do;
315882    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
315883    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
315884    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315885    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
315886    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
315887    +   end;
MPRINT(EM_DIAGRAM):   end;
315888    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
315889    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
315890    +   end;
MPRINT(EM_DIAGRAM):   end;
315891    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315892    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
315893    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315894    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315895    +   end;
MPRINT(EM_DIAGRAM):   end;
315896    +end;
MPRINT(EM_DIAGRAM):   end;
315897    +
315898    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
315899    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
315900    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
315901    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
315902    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
315903    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
315904    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
315905    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
315906    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
315907    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
315908    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
315909    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
315910    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315911    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315912    +end;
MPRINT(EM_DIAGRAM):   end;
315913    +else do;
MPRINT(EM_DIAGRAM):   else do;
315914    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
315915    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
315916    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315917    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
315918    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
315919    +   end;
MPRINT(EM_DIAGRAM):   end;
315920    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
315921    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
315922    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
315923    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
315924    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
315925    +   end;
MPRINT(EM_DIAGRAM):   end;
315926    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
315927    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
315928    +   end;
MPRINT(EM_DIAGRAM):   end;
315929    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
315930    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
315931    +   end;
MPRINT(EM_DIAGRAM):   end;
315932    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
315933    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
315934    +   end;
MPRINT(EM_DIAGRAM):   end;
315935    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315936    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
315937    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
315938    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
315939    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
315940    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315941    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315942    +   end;
MPRINT(EM_DIAGRAM):   end;
315943    +end;
MPRINT(EM_DIAGRAM):   end;
315944    +
315945    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
315946    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
315947    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
315948    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
315949    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
315950    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
315951    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
315952    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
315953    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
315954    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
315955    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
315956    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
315957    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
315958    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315959    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315960    +end;
MPRINT(EM_DIAGRAM):   end;
315961    +else do;
MPRINT(EM_DIAGRAM):   else do;
315962    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
315963    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
315964    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315965    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
315966    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
315967    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
315968    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
315969    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
315970    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315971    +         end;
MPRINT(EM_DIAGRAM):   end;
315972    +         else do;
MPRINT(EM_DIAGRAM):   else do;
315973    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
315974    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
315975    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315976    +            end;
MPRINT(EM_DIAGRAM):   end;
315977    +         end;
MPRINT(EM_DIAGRAM):   end;
315978    +      end;
MPRINT(EM_DIAGRAM):   end;
315979    +      else do;
MPRINT(EM_DIAGRAM):   else do;
315980    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
315981    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
315982    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315983    +         end;
MPRINT(EM_DIAGRAM):   end;
315984    +      end;
MPRINT(EM_DIAGRAM):   end;
315985    +   end;
MPRINT(EM_DIAGRAM):   end;
315986    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315987    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
315988    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
315989    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315990    +      end;
MPRINT(EM_DIAGRAM):   end;
315991    +      else do;
MPRINT(EM_DIAGRAM):   else do;
315992    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
315993    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
315994    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
315995    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
315996    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
315997    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315998    +         end;
MPRINT(EM_DIAGRAM):   end;
315999    +      end;
MPRINT(EM_DIAGRAM):   end;
316000    +   end;
MPRINT(EM_DIAGRAM):   end;
316001    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
316002    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
316003    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
316004    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
316005    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
316006    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316007    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316008    +   end;
MPRINT(EM_DIAGRAM):   end;
316009    +end;
MPRINT(EM_DIAGRAM):   end;
316010    +
316011    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316012    +*** Checking missing input Interval
316013    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
316014    +
316015    +IF NMISS(
316016    +   Income ,
316017    +   Kidhome ,
316018    +   MntFishProducts ,
316019    +   MntFruits ,
316020    +   MntGoldProds ,
316021    +   MntMeatProducts ,
316022    +   MntSweetProducts ,
316023    +   MntWines ,
316024    +   NumCatalogPurchases ,
316025    +   NumDealsPurchases ,
316026    +   NumStorePurchases ,
316027    +   NumWebPurchases ,
316028    +   NumWebVisitsMonth ,
316029    +   Recency ,
316030    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
316031    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
316032    +
316033    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316034    +END;
MPRINT(EM_DIAGRAM):   END;
316035    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316036    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
316037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316038    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316039    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
316040    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
316041    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
316042    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
316043    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
316044    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
316045    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
316046    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
316047    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
316048    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
316049    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
316050    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
316051    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
316052    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
316053    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
316054    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
316055    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
316056    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
316057    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
316058    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
316059    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
316060    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
316061    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
316062    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
316063    +END;
MPRINT(EM_DIAGRAM):   END;
316064    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316065    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
316066    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
316067    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
316068    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
316069    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
316070    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
316071    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
316072    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
316073    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
316074    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
316075    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
316076    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
316077    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
316078    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
316079    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
316080    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
316081    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
316082    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
316083    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
316084    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
316085    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
316086    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
316087    +   ELSE S_NumCatalogPurchases
316088    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
316089    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
316090    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
316091    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
316092    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
316093    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
316094    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
316095    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
316096    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
316097    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
316098    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
316099    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
316100    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
316101    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
316102    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
316103    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
316104    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
316105    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
316106    +END;
MPRINT(EM_DIAGRAM):   END;
316107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316108    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
316109    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316110    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316111    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
316112    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316113    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316114    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
316115    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316116    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316117    +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
316118    +          +     0.24367603598167 * S_MntFishProducts
316119    +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
316120    +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
316121    +          +     0.34054806441484 * S_MntSweetProducts
316122    +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
316123    +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
316124    +          +     0.98942946974575 * S_NumStorePurchases
316125    +          +     0.89701206630103 * S_NumWebPurchases
316126    +          +    -1.22878611472154 * S_NumWebVisitsMonth
316127    +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
316128    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome + 
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 * 
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts 
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases + 
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases + 
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth + 
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
316129    +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
316130    +          +     0.16683404689723 * S_MntFishProducts
316131    +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
316132    +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
316133    +          +     0.20389084548968 * S_MntSweetProducts
316134    +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
316135    +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
316136    +          +     1.27164659640366 * S_NumStorePurchases
316137    +          +     1.02122194207802 * S_NumWebPurchases
316138    +          +     -1.5111033436803 * S_NumWebVisitsMonth
316139    +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
316140    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome + 
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 * 
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts 
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases + 
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases + 
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth + 
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
316141    +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
316142    +          +    -0.03345077166544 * S_MntFishProducts
316143    +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
316144    +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
316145    +          +    -0.11948662500951 * S_MntSweetProducts
316146    +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
316147    +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
316148    +          +     0.22401914357376 * S_NumStorePurchases
316149    +          +     0.04219877865976 * S_NumWebPurchases
316150    +          +     1.21753334166036 * S_NumWebVisitsMonth
316151    +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
316152    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome + 
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 * 
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts 
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839 
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 * 
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency + 
-0.47582856683655 * S_Teenhome ;
316153    +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
316154    +          +     0.31175257038578 * S_MntFishProducts
316155    +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
316156    +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
316157    +          +      0.0927253053382 * S_MntSweetProducts
316158    +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
316159    +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
316160    +          +    -0.12667606349662 * S_NumStorePurchases
316161    +          +     0.30148374518724 * S_NumWebPurchases
316162    +          +     0.48934229701658 * S_NumWebVisitsMonth
316163    +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
316164    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome + 
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 * 
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts + 
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085 
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 * 
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency + 
-0.4576645462819 * S_Teenhome ;
316165    +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
316166    +          +     0.42646725119177 * S_MntFishProducts
316167    +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
316168    +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
316169    +          +    -0.01493605582616 * S_MntSweetProducts
316170    +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
316171    +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
316172    +          +     0.54256744091258 * S_NumStorePurchases
316173    +          +     0.43065931458468 * S_NumWebPurchases
316174    +          +      0.5935561420466 * S_NumWebVisitsMonth
316175    +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
316176    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome + 
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 * 
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 * 
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases 
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases + 
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth + 
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
316177    +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
316178    +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
316179    +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
316180    +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
316181    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 * 
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 + 
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
316182    +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
316183    +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
316184    +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
316185    +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
316186    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 * 
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 + 
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
316187    +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
316188    +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
316189    +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
316190    +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
316191    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 * 
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 + 
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
316192    +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
316193    +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
316194    +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
316195    +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
316196    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 * 
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 + 
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
316197    +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
316198    +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
316199    +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
316200    +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
316201    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 * 
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 + 
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
316202    +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
316203    +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
316204    +        EducationGraduation  +     0.43998321745211 * EducationMaster
316205    +          +    -0.85912688909911 * Marital_StatusDivorced
316206    +          +     0.81561401465875 * Marital_StatusMarried
316207    +          +    -0.58324403081542 * Marital_StatusSingle
316208    +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 * 
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster 
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried + 
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
316209    +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
316210    +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
316211    +        EducationGraduation  +    -0.16143431016405 * EducationMaster
316212    +          +    -0.34784695867287 * Marital_StatusDivorced
316213    +          +    -0.18194022182247 * Marital_StatusMarried
316214    +          +    -0.10633185904164 * Marital_StatusSingle
316215    +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 * 
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster 
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried + 
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
316216    +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
316217    +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
316218    +        EducationGraduation  +     -0.3646621736273 * EducationMaster
316219    +          +     0.61058752124466 * Marital_StatusDivorced
316220    +          +    -1.38793808025141 * Marital_StatusMarried
316221    +          +     1.10060737810944 * Marital_StatusSingle
316222    +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 * 
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster 
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried + 
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
316223    +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
316224    +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
316225    +        EducationGraduation  +    -0.18154054746298 * EducationMaster
316226    +          +     0.11973800573581 * Marital_StatusDivorced
316227    +          +      -0.294635257911 * Marital_StatusMarried
316228    +          +    -0.05399659601172 * Marital_StatusSingle
316229    +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 * 
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster 
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried + 
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
316230    +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
316231    +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
316232    +        EducationGraduation  +     -0.6431539624694 * EducationMaster
316233    +          +     0.42838191659864 * Marital_StatusDivorced
316234    +          +    -0.09150349181363 * Marital_StatusMarried
316235    +          +    -0.33520164145276 * Marital_StatusSingle
316236    +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 * 
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster 
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried + 
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
316237    +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
316238    +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
316239    +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
316240    +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
316241    +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
316242    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
316243    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
316244    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
316245    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
316246    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
316247    +END;
MPRINT(EM_DIAGRAM):   END;
316248    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316249    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
316250    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
316251    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
316252    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
316253    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
316254    +END;
MPRINT(EM_DIAGRAM):   END;
316255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316256    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
316257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316258    +
316259    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
316260    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
316261    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
316262    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
316263    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
316264    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316265    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
316266    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
316267    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
316268    +end;
MPRINT(EM_DIAGRAM):   end;
316269    +else do;
MPRINT(EM_DIAGRAM):   else do;
316270    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
316271    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
316272    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
316273    +   end;
MPRINT(EM_DIAGRAM):   end;
316274    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
316275    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
316276    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
316277    +   end;
MPRINT(EM_DIAGRAM):   end;
316278    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316279    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
316280    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
316281    +   end;
MPRINT(EM_DIAGRAM):   end;
316282    +end;
MPRINT(EM_DIAGRAM):   end;
316283    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316284    +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
316285    +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
316286    +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 + 
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
316287    +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
316288    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
316289    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
316290    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
316291    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
316292    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
316293    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
316294    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
316295    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
316296    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
316297    +END;
MPRINT(EM_DIAGRAM):   END;
316298    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316299    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
316300    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
316301    +END;
MPRINT(EM_DIAGRAM):   END;
316302    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
316303    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
316304    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
316305    +END;
MPRINT(EM_DIAGRAM):   END;
316306    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
316307    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
316308    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
316309    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
316310    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
316311    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
316312    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
316313    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316314    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
316315    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316316    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
316317    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
316318    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
316319    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
316320    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
316321    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
316322    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
316323    +END;
MPRINT(EM_DIAGRAM):   END;
316324    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
316325    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
316326    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
316327    +drop
316328    +H11
316329    +H12
316330    +H13
316331    +H14
316332    +H15
316333    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
316334    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
316335     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL34_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
      

MPRINT(EM_DIAGRAM):   quit;
316336     quit;
316337     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
316338     filename emflow
316338   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural34: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
316339     *------------------------------------------------------------*;
316340     * Neural34: Scoring VALIDATE data;
316341     *------------------------------------------------------------*;
316342     data EMWS8.Neural34_VALIDATE
316343     / view=EMWS8.Neural34_VALIDATE
316344     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural34_VALIDATE / view=EMWS8.Neural34_VALIDATE ;
316345     set EMWS8.Meta2_VALIDATE
316346     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
316347     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas.
316348    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
316349    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
316350    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
316351    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
316352    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
316353    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
316354    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
316355    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
316356    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
316357    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
316358    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
316359    +LENGTH _WARN_ $4
316360    +      F_DepVar  $ 12
316361    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
316362    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
316363    +
316364    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
316365    +
316366    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
316367    +
316368    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
316369    +
316370    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
316371    +
316372    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
316373    +
316374    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
316375    +
316376    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
316377    +
316378    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
316379    +
316380    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
316381    +
316382    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
316383    +
316384    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
316385    +
316386    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
316387    +
316388    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
316389    +
316390    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
316391    +
316392    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
316393    +
316394    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
316395    +
316396    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
316397    +
316398    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
316399    +
316400    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
316401    +
316402    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
316403    +
316404    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
316405    +
316406    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
316407    +
316408    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
316409    +
316410    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
316411    +
316412    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
316413    +
316414    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
316415    +
316416    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
316417    +
316418    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
316419    +
316420    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
316421    +
316422    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
316423    +
316424    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
316425    +
316426    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
316427    +
316428    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
316429    +
316430    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
316431    +
316432    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
316433    +
316434    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
316435    +
316436    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
316437    +
316438    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
316439    +
316440    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
316441    +
316442    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
316443    +
316444    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
316445    +
316446    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
316447    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
316448    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
316449    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
316450    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316451    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316452    +end;
MPRINT(EM_DIAGRAM):   end;
316453    +else do;
MPRINT(EM_DIAGRAM):   else do;
316454    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
316455    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
316456    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316457    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
316458    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
316459    +   end;
MPRINT(EM_DIAGRAM):   end;
316460    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
316461    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
316462    +   end;
MPRINT(EM_DIAGRAM):   end;
316463    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316464    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
316465    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316466    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316467    +   end;
MPRINT(EM_DIAGRAM):   end;
316468    +end;
MPRINT(EM_DIAGRAM):   end;
316469    +
316470    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
316471    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
316472    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
316473    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
316474    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316475    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316476    +end;
MPRINT(EM_DIAGRAM):   end;
316477    +else do;
MPRINT(EM_DIAGRAM):   else do;
316478    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
316479    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
316480    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316481    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
316482    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
316483    +   end;
MPRINT(EM_DIAGRAM):   end;
316484    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
316485    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
316486    +   end;
MPRINT(EM_DIAGRAM):   end;
316487    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316488    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
316489    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316490    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316491    +   end;
MPRINT(EM_DIAGRAM):   end;
316492    +end;
MPRINT(EM_DIAGRAM):   end;
316493    +
316494    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
316495    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
316496    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
316497    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
316498    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316499    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316500    +end;
MPRINT(EM_DIAGRAM):   end;
316501    +else do;
MPRINT(EM_DIAGRAM):   else do;
316502    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
316503    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
316504    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316505    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
316506    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
316507    +   end;
MPRINT(EM_DIAGRAM):   end;
316508    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
316509    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
316510    +   end;
MPRINT(EM_DIAGRAM):   end;
316511    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316512    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
316513    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316514    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316515    +   end;
MPRINT(EM_DIAGRAM):   end;
316516    +end;
MPRINT(EM_DIAGRAM):   end;
316517    +
316518    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
316519    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
316520    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
316521    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
316522    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316523    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316524    +end;
MPRINT(EM_DIAGRAM):   end;
316525    +else do;
MPRINT(EM_DIAGRAM):   else do;
316526    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
316527    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
316528    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316529    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
316530    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
316531    +   end;
MPRINT(EM_DIAGRAM):   end;
316532    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
316533    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
316534    +   end;
MPRINT(EM_DIAGRAM):   end;
316535    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316536    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
316537    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316538    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316539    +   end;
MPRINT(EM_DIAGRAM):   end;
316540    +end;
MPRINT(EM_DIAGRAM):   end;
316541    +
316542    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
316543    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
316544    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
316545    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
316546    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316547    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316548    +end;
MPRINT(EM_DIAGRAM):   end;
316549    +else do;
MPRINT(EM_DIAGRAM):   else do;
316550    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
316551    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
316552    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316553    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
316554    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
316555    +   end;
MPRINT(EM_DIAGRAM):   end;
316556    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
316557    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
316558    +   end;
MPRINT(EM_DIAGRAM):   end;
316559    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316560    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
316561    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316562    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316563    +   end;
MPRINT(EM_DIAGRAM):   end;
316564    +end;
MPRINT(EM_DIAGRAM):   end;
316565    +
316566    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
316567    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
316568    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
316569    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
316570    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316571    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316572    +end;
MPRINT(EM_DIAGRAM):   end;
316573    +else do;
MPRINT(EM_DIAGRAM):   else do;
316574    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
316575    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
316576    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316577    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
316578    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
316579    +   end;
MPRINT(EM_DIAGRAM):   end;
316580    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
316581    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
316582    +   end;
MPRINT(EM_DIAGRAM):   end;
316583    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316584    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
316585    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316586    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316587    +   end;
MPRINT(EM_DIAGRAM):   end;
316588    +end;
MPRINT(EM_DIAGRAM):   end;
316589    +
316590    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
316591    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
316592    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
316593    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
316594    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
316595    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
316596    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
316597    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
316598    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
316599    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
316600    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
316601    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
316602    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316603    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316604    +end;
MPRINT(EM_DIAGRAM):   end;
316605    +else do;
MPRINT(EM_DIAGRAM):   else do;
316606    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
316607    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
316608    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316609    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
316610    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
316611    +   end;
MPRINT(EM_DIAGRAM):   end;
316612    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
316613    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
316614    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
316615    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
316616    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
316617    +   end;
MPRINT(EM_DIAGRAM):   end;
316618    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
316619    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
316620    +   end;
MPRINT(EM_DIAGRAM):   end;
316621    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
316622    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
316623    +   end;
MPRINT(EM_DIAGRAM):   end;
316624    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
316625    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
316626    +   end;
MPRINT(EM_DIAGRAM):   end;
316627    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316628    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
316629    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
316630    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
316631    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
316632    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316633    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316634    +   end;
MPRINT(EM_DIAGRAM):   end;
316635    +end;
MPRINT(EM_DIAGRAM):   end;
316636    +
316637    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
316638    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
316639    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
316640    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
316641    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
316642    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
316643    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
316644    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
316645    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
316646    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
316647    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
316648    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
316649    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
316650    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
316651    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316652    +end;
MPRINT(EM_DIAGRAM):   end;
316653    +else do;
MPRINT(EM_DIAGRAM):   else do;
316654    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
316655    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
316656    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316657    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
316658    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
316659    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
316660    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
316661    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
316662    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316663    +         end;
MPRINT(EM_DIAGRAM):   end;
316664    +         else do;
MPRINT(EM_DIAGRAM):   else do;
316665    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
316666    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
316667    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316668    +            end;
MPRINT(EM_DIAGRAM):   end;
316669    +         end;
MPRINT(EM_DIAGRAM):   end;
316670    +      end;
MPRINT(EM_DIAGRAM):   end;
316671    +      else do;
MPRINT(EM_DIAGRAM):   else do;
316672    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
316673    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
316674    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316675    +         end;
MPRINT(EM_DIAGRAM):   end;
316676    +      end;
MPRINT(EM_DIAGRAM):   end;
316677    +   end;
MPRINT(EM_DIAGRAM):   end;
316678    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316679    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
316680    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
316681    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316682    +      end;
MPRINT(EM_DIAGRAM):   end;
316683    +      else do;
MPRINT(EM_DIAGRAM):   else do;
316684    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
316685    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
316686    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
316687    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
316688    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
316689    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
316690    +         end;
MPRINT(EM_DIAGRAM):   end;
316691    +      end;
MPRINT(EM_DIAGRAM):   end;
316692    +   end;
MPRINT(EM_DIAGRAM):   end;
316693    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
316694    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
316695    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
316696    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
316697    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
316698    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
316699    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316700    +   end;
MPRINT(EM_DIAGRAM):   end;
316701    +end;
MPRINT(EM_DIAGRAM):   end;
316702    +
316703    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316704    +*** Checking missing input Interval
316705    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
316706    +
316707    +IF NMISS(
316708    +   Income ,
316709    +   Kidhome ,
316710    +   MntFishProducts ,
316711    +   MntFruits ,
316712    +   MntGoldProds ,
316713    +   MntMeatProducts ,
316714    +   MntSweetProducts ,
316715    +   MntWines ,
316716    +   NumCatalogPurchases ,
316717    +   NumDealsPurchases ,
316718    +   NumStorePurchases ,
316719    +   NumWebPurchases ,
316720    +   NumWebVisitsMonth ,
316721    +   Recency ,
316722    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
316723    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
316724    +
316725    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
316726    +END;
MPRINT(EM_DIAGRAM):   END;
316727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316728    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
316729    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316730    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316731    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
316732    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
316733    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
316734    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
316735    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
316736    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
316737    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
316738    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
316739    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
316740    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
316741    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
316742    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
316743    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
316744    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
316745    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
316746    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
316747    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
316748    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
316749    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
316750    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
316751    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
316752    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
316753    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
316754    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
316755    +END;
MPRINT(EM_DIAGRAM):   END;
316756    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316757    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
316758    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
316759    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
316760    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
316761    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
316762    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
316763    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
316764    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
316765    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
316766    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
316767    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
316768    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
316769    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
316770    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
316771    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
316772    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
316773    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
316774    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
316775    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
316776    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
316777    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
316778    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
316779    +   ELSE S_NumCatalogPurchases
316780    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
316781    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
316782    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
316783    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
316784    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
316785    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
316786    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
316787    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
316788    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
316789    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
316790    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
316791    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
316792    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
316793    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
316794    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
316795    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
316796    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
316797    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
316798    +END;
MPRINT(EM_DIAGRAM):   END;
316799    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316800    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
316801    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316803    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
316804    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316805    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316806    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
316807    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316808    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316809    +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
316810    +          +     0.24367603598167 * S_MntFishProducts
316811    +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
316812    +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
316813    +          +     0.34054806441484 * S_MntSweetProducts
316814    +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
316815    +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
316816    +          +     0.98942946974575 * S_NumStorePurchases
316817    +          +     0.89701206630103 * S_NumWebPurchases
316818    +          +    -1.22878611472154 * S_NumWebVisitsMonth
316819    +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
316820    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome + 
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 * 
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts 
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases + 
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases + 
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth + 
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
316821    +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
316822    +          +     0.16683404689723 * S_MntFishProducts
316823    +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
316824    +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
316825    +          +     0.20389084548968 * S_MntSweetProducts
316826    +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
316827    +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
316828    +          +     1.27164659640366 * S_NumStorePurchases
316829    +          +     1.02122194207802 * S_NumWebPurchases
316830    +          +     -1.5111033436803 * S_NumWebVisitsMonth
316831    +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
316832    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome + 
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 * 
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts 
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases + 
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases + 
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth + 
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
316833    +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
316834    +          +    -0.03345077166544 * S_MntFishProducts
316835    +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
316836    +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
316837    +          +    -0.11948662500951 * S_MntSweetProducts
316838    +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
316839    +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
316840    +          +     0.22401914357376 * S_NumStorePurchases
316841    +          +     0.04219877865976 * S_NumWebPurchases
316842    +          +     1.21753334166036 * S_NumWebVisitsMonth
316843    +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
316844    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome + 
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 * 
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts 
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839 
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 * 
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency + 
-0.47582856683655 * S_Teenhome ;
316845    +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
316846    +          +     0.31175257038578 * S_MntFishProducts
316847    +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
316848    +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
316849    +          +      0.0927253053382 * S_MntSweetProducts
316850    +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
316851    +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
316852    +          +    -0.12667606349662 * S_NumStorePurchases
316853    +          +     0.30148374518724 * S_NumWebPurchases
316854    +          +     0.48934229701658 * S_NumWebVisitsMonth
316855    +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
316856    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome + 
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 * 
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts + 
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085 
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 * 
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency + 
-0.4576645462819 * S_Teenhome ;
316857    +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
316858    +          +     0.42646725119177 * S_MntFishProducts
316859    +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
316860    +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
316861    +          +    -0.01493605582616 * S_MntSweetProducts
316862    +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
316863    +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
316864    +          +     0.54256744091258 * S_NumStorePurchases
316865    +          +     0.43065931458468 * S_NumWebPurchases
316866    +          +      0.5935561420466 * S_NumWebVisitsMonth
316867    +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
316868    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome + 
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 * 
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 * 
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases 
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases + 
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth + 
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
316869    +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
316870    +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
316871    +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
316872    +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
316873    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 * 
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 + 
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
316874    +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
316875    +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
316876    +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
316877    +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
316878    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 * 
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 + 
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
316879    +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
316880    +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
316881    +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
316882    +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
316883    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 * 
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 + 
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
316884    +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
316885    +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
316886    +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
316887    +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
316888    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 * 
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 + 
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
316889    +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
316890    +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
316891    +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
316892    +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
316893    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 * 
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 + 
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
316894    +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
316895    +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
316896    +        EducationGraduation  +     0.43998321745211 * EducationMaster
316897    +          +    -0.85912688909911 * Marital_StatusDivorced
316898    +          +     0.81561401465875 * Marital_StatusMarried
316899    +          +    -0.58324403081542 * Marital_StatusSingle
316900    +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 * 
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster 
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried + 
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
316901    +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
316902    +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
316903    +        EducationGraduation  +    -0.16143431016405 * EducationMaster
316904    +          +    -0.34784695867287 * Marital_StatusDivorced
316905    +          +    -0.18194022182247 * Marital_StatusMarried
316906    +          +    -0.10633185904164 * Marital_StatusSingle
316907    +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 * 
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster 
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried + 
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
316908    +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
316909    +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
316910    +        EducationGraduation  +     -0.3646621736273 * EducationMaster
316911    +          +     0.61058752124466 * Marital_StatusDivorced
316912    +          +    -1.38793808025141 * Marital_StatusMarried
316913    +          +     1.10060737810944 * Marital_StatusSingle
316914    +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 * 
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster 
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried + 
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
316915    +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
316916    +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
316917    +        EducationGraduation  +    -0.18154054746298 * EducationMaster
316918    +          +     0.11973800573581 * Marital_StatusDivorced
316919    +          +      -0.294635257911 * Marital_StatusMarried
316920    +          +    -0.05399659601172 * Marital_StatusSingle
316921    +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 * 
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster 
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried + 
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
316922    +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
316923    +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
316924    +        EducationGraduation  +     -0.6431539624694 * EducationMaster
316925    +          +     0.42838191659864 * Marital_StatusDivorced
316926    +          +    -0.09150349181363 * Marital_StatusMarried
316927    +          +    -0.33520164145276 * Marital_StatusSingle
316928    +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 * 
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster 
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried + 
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
316929    +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
316930    +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
316931    +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
316932    +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
316933    +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
316934    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
316935    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
316936    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
316937    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
316938    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
316939    +END;
MPRINT(EM_DIAGRAM):   END;
316940    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316941    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
316942    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
316943    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
316944    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
316945    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
316946    +END;
MPRINT(EM_DIAGRAM):   END;
316947    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316948    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
316949    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
316950    +
316951    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
316952    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
316953    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
316954    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
316955    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
316956    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
316957    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
316958    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
316959    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
316960    +end;
MPRINT(EM_DIAGRAM):   end;
316961    +else do;
MPRINT(EM_DIAGRAM):   else do;
316962    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
316963    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
316964    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
316965    +   end;
MPRINT(EM_DIAGRAM):   end;
316966    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
316967    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
316968    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
316969    +   end;
MPRINT(EM_DIAGRAM):   end;
316970    +   else do;
MPRINT(EM_DIAGRAM):   else do;
316971    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
316972    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
316973    +   end;
MPRINT(EM_DIAGRAM):   end;
316974    +end;
MPRINT(EM_DIAGRAM):   end;
316975    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
316976    +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
316977    +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
316978    +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 + 
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
316979    +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
316980    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
316981    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
316982    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
316983    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
316984    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
316985    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
316986    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
316987    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
316988    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
316989    +END;
MPRINT(EM_DIAGRAM):   END;
316990    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
316991    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
316992    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
316993    +END;
MPRINT(EM_DIAGRAM):   END;
316994    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
316995    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
316996    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
316997    +END;
MPRINT(EM_DIAGRAM):   END;
316998    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
316999    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
317000    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
317001    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
317002    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
317003    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
317004    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
317005    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317006    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
317007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
317008    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
317009    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
317010    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
317011    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
317012    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
317013    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
317014    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
317015    +END;
MPRINT(EM_DIAGRAM):   END;
317016    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
317017    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
317018    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
317019    +drop
317020    +H11
317021    +H12
317022    +H13
317023    +H14
317024    +H15
317025    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
317026    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
317027     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL34_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_DIAGRAM):   quit;
317028     quit;
317029     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
317030     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
317031     * Neural34: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural34: Computing metadata for TRAIN data;
317032     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL34_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural34_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural34_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural34_TRAIN out=WORK.M23NJXJU noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M23NJXJU;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M23NJXJU(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M23NJXJU;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M23NJXJU;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0Q12MZ1 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0Q12MZ1;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0Q12MZ1;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M30P2E8S(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0Q12MZ1;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0Q12MZ1;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0Q12MZ1;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0Q12MZ1;
MPRINT(EMADVISECOLUMNS):   set WORK.M0Q12MZ1;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural34_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural34";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural34";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural34: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
317336     data EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural34_EMINFO;
317337     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
317338     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
317339     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL34_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
317343     run;
317344     proc sort data = EMWS8.Neural34_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural34_EMINFO NOTHREADS;
317345     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
317346     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL34_EMINFO.
NOTE: The data set EMWS8.NEURAL34_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

317347     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
317348     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
317349     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

317350     proc sort data = EMWS8.Neural34_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural34_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
317351     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
317352     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL34_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

317353     data EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural34_EMINFO;
317354     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
317355     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
317356     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL34_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

317357     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
317358     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
317359     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
317360     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL34_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.NEURAL34_VALIDATE.VIEW used (Total process time):
      real time           0.38 seconds
      cpu time            0.09 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
