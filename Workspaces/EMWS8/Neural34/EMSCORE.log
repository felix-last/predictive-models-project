MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.54 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.54 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O077Q7YB 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O077Q7YB new;
MPRINT(EM_DIAGRAM):   run;
1008262    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
1008263    set EMWS8.Neural34_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_OUTKEY;
1008264    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
1008265    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 46 observations read from the data set EMWS8.NEURAL34_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1008266    filename emflow
1008266  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural34: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1008267    *------------------------------------------------------------*;
1008268    * Neural34: Scoring DATA data;
1008269    *------------------------------------------------------------*;
1008270    data EMWS8.Neural34_TRAIN
1008271    / view=EMWS8.Neural34_TRAIN
1008272    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural34_TRAIN / view=EMWS8.Neural34_TRAIN ;
1008273    set EMWS8.Meta2_TRAIN
1008274    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
1008275    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas.
1008276   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1008277   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1008278   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1008279   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1008280   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1008281   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1008282   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1008283   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1008284   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1008285   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1008286   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1008287   +LENGTH _WARN_ $4
1008288   +      F_DepVar  $ 12
1008289   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1008290   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1008291   +
1008292   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1008293   +
1008294   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1008295   +
1008296   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1008297   +
1008298   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1008299   +
1008300   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1008301   +
1008302   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1008303   +
1008304   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1008305   +
1008306   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1008307   +
1008308   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1008309   +
1008310   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1008311   +
1008312   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1008313   +
1008314   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1008315   +
1008316   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1008317   +
1008318   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1008319   +
1008320   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1008321   +
1008322   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1008323   +
1008324   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1008325   +
1008326   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1008327   +
1008328   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1008329   +
1008330   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1008331   +
1008332   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1008333   +
1008334   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1008335   +
1008336   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1008337   +
1008338   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1008339   +
1008340   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1008341   +
1008342   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1008343   +
1008344   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1008345   +
1008346   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1008347   +
1008348   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1008349   +
1008350   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1008351   +
1008352   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1008353   +
1008354   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1008355   +
1008356   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1008357   +
1008358   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1008359   +
1008360   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1008361   +
1008362   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1008363   +
1008364   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1008365   +
1008366   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1008367   +
1008368   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1008369   +
1008370   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1008371   +
1008372   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1008373   +
1008374   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1008375   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1008376   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1008377   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1008378   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1008379   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008380   +end;
MPRINT(EM_DIAGRAM):   end;
1008381   +else do;
MPRINT(EM_DIAGRAM):   else do;
1008382   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1008383   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1008384   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1008385   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1008386   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1008387   +   end;
MPRINT(EM_DIAGRAM):   end;
1008388   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1008389   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1008390   +   end;
MPRINT(EM_DIAGRAM):   end;
1008391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1008392   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1008393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1008394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008395   +   end;
MPRINT(EM_DIAGRAM):   end;
1008396   +end;
MPRINT(EM_DIAGRAM):   end;
1008397   +
1008398   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1008399   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1008400   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1008401   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1008402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1008403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008404   +end;
MPRINT(EM_DIAGRAM):   end;
1008405   +else do;
MPRINT(EM_DIAGRAM):   else do;
1008406   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1008407   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1008408   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1008409   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1008410   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1008411   +   end;
MPRINT(EM_DIAGRAM):   end;
1008412   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1008413   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1008414   +   end;
MPRINT(EM_DIAGRAM):   end;
1008415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1008416   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1008417   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1008418   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008419   +   end;
MPRINT(EM_DIAGRAM):   end;
1008420   +end;
MPRINT(EM_DIAGRAM):   end;
1008421   +
1008422   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1008423   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1008424   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1008425   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1008426   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1008427   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008428   +end;
MPRINT(EM_DIAGRAM):   end;
1008429   +else do;
MPRINT(EM_DIAGRAM):   else do;
1008430   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1008431   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1008432   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1008433   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1008434   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1008435   +   end;
MPRINT(EM_DIAGRAM):   end;
1008436   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1008437   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1008438   +   end;
MPRINT(EM_DIAGRAM):   end;
1008439   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1008440   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1008441   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1008442   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008443   +   end;
MPRINT(EM_DIAGRAM):   end;
1008444   +end;
MPRINT(EM_DIAGRAM):   end;
1008445   +
1008446   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1008447   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1008448   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1008449   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1008450   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1008451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008452   +end;
MPRINT(EM_DIAGRAM):   end;
1008453   +else do;
MPRINT(EM_DIAGRAM):   else do;
1008454   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1008455   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1008456   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1008457   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1008458   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1008459   +   end;
MPRINT(EM_DIAGRAM):   end;
1008460   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1008461   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1008462   +   end;
MPRINT(EM_DIAGRAM):   end;
1008463   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1008464   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1008465   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1008466   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008467   +   end;
MPRINT(EM_DIAGRAM):   end;
1008468   +end;
MPRINT(EM_DIAGRAM):   end;
1008469   +
1008470   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1008471   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1008472   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1008473   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1008474   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1008475   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008476   +end;
MPRINT(EM_DIAGRAM):   end;
1008477   +else do;
MPRINT(EM_DIAGRAM):   else do;
1008478   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1008479   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1008480   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1008481   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1008482   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1008483   +   end;
MPRINT(EM_DIAGRAM):   end;
1008484   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1008485   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1008486   +   end;
MPRINT(EM_DIAGRAM):   end;
1008487   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1008488   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1008489   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1008490   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008491   +   end;
MPRINT(EM_DIAGRAM):   end;
1008492   +end;
MPRINT(EM_DIAGRAM):   end;
1008493   +
1008494   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1008495   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1008496   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1008497   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1008498   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1008499   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008500   +end;
MPRINT(EM_DIAGRAM):   end;
1008501   +else do;
MPRINT(EM_DIAGRAM):   else do;
1008502   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1008503   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1008504   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1008505   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1008506   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1008507   +   end;
MPRINT(EM_DIAGRAM):   end;
1008508   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1008509   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1008510   +   end;
MPRINT(EM_DIAGRAM):   end;
1008511   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1008512   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1008513   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1008514   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008515   +   end;
MPRINT(EM_DIAGRAM):   end;
1008516   +end;
MPRINT(EM_DIAGRAM):   end;
1008517   +
1008518   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1008519   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1008520   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1008521   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1008522   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1008523   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1008524   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1008525   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1008526   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1008527   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1008528   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1008529   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1008530   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1008531   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008532   +end;
MPRINT(EM_DIAGRAM):   end;
1008533   +else do;
MPRINT(EM_DIAGRAM):   else do;
1008534   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1008535   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1008536   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1008537   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1008538   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1008539   +   end;
MPRINT(EM_DIAGRAM):   end;
1008540   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1008541   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1008542   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1008543   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1008544   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1008545   +   end;
MPRINT(EM_DIAGRAM):   end;
1008546   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1008547   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1008548   +   end;
MPRINT(EM_DIAGRAM):   end;
1008549   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1008550   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1008551   +   end;
MPRINT(EM_DIAGRAM):   end;
1008552   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1008553   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1008554   +   end;
MPRINT(EM_DIAGRAM):   end;
1008555   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1008556   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1008557   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1008558   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1008559   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1008560   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1008561   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008562   +   end;
MPRINT(EM_DIAGRAM):   end;
1008563   +end;
MPRINT(EM_DIAGRAM):   end;
1008564   +
1008565   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1008566   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1008567   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1008568   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1008569   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1008570   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1008571   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1008572   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1008573   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1008574   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1008575   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1008576   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1008577   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1008578   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1008579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008580   +end;
MPRINT(EM_DIAGRAM):   end;
1008581   +else do;
MPRINT(EM_DIAGRAM):   else do;
1008582   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1008583   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1008584   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1008585   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1008586   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1008587   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1008588   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1008589   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1008590   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1008591   +         end;
MPRINT(EM_DIAGRAM):   end;
1008592   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1008593   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1008594   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1008595   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1008596   +            end;
MPRINT(EM_DIAGRAM):   end;
1008597   +         end;
MPRINT(EM_DIAGRAM):   end;
1008598   +      end;
MPRINT(EM_DIAGRAM):   end;
1008599   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1008600   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1008601   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1008602   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1008603   +         end;
MPRINT(EM_DIAGRAM):   end;
1008604   +      end;
MPRINT(EM_DIAGRAM):   end;
1008605   +   end;
MPRINT(EM_DIAGRAM):   end;
1008606   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1008607   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1008608   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1008609   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1008610   +      end;
MPRINT(EM_DIAGRAM):   end;
1008611   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1008612   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1008613   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1008614   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1008615   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1008616   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1008617   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1008618   +         end;
MPRINT(EM_DIAGRAM):   end;
1008619   +      end;
MPRINT(EM_DIAGRAM):   end;
1008620   +   end;
MPRINT(EM_DIAGRAM):   end;
1008621   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1008622   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1008623   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1008624   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1008625   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1008626   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1008627   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008628   +   end;
MPRINT(EM_DIAGRAM):   end;
1008629   +end;
MPRINT(EM_DIAGRAM):   end;
1008630   +
1008631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1008632   +*** Checking missing input Interval
1008633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1008634   +
1008635   +IF NMISS(
1008636   +   Income ,
1008637   +   Kidhome ,
1008638   +   MntFishProducts ,
1008639   +   MntFruits ,
1008640   +   MntGoldProds ,
1008641   +   MntMeatProducts ,
1008642   +   MntSweetProducts ,
1008643   +   MntWines ,
1008644   +   NumCatalogPurchases ,
1008645   +   NumDealsPurchases ,
1008646   +   NumStorePurchases ,
1008647   +   NumWebPurchases ,
1008648   +   NumWebVisitsMonth ,
1008649   +   Recency ,
1008650   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1008651   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1008652   +
1008653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1008654   +END;
MPRINT(EM_DIAGRAM):   END;
1008655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1008656   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1008657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1008658   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1008659   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1008660   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1008661   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1008662   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1008663   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1008664   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1008665   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1008666   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1008667   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1008668   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1008669   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1008670   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1008671   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1008672   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1008673   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1008674   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1008675   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1008676   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1008677   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1008678   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1008679   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1008680   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1008681   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1008682   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1008683   +END;
MPRINT(EM_DIAGRAM):   END;
1008684   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1008685   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1008686   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1008687   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1008688   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1008689   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1008690   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1008691   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1008692   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1008693   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1008694   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1008695   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1008696   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1008697   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1008698   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1008699   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1008700   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1008701   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1008702   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1008703   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1008704   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1008705   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1008706   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1008707   +   ELSE S_NumCatalogPurchases
1008708   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1008709   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1008710   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1008711   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1008712   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1008713   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1008714   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1008715   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1008716   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1008717   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1008718   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1008719   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1008720   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1008721   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1008722   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1008723   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1008724   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1008725   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1008726   +END;
MPRINT(EM_DIAGRAM):   END;
1008727   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1008728   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1008729   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1008730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1008731   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1008732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1008733   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1008734   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1008735   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1008736   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1008737   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
1008738   +          +     0.24367603598167 * S_MntFishProducts
1008739   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
1008740   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
1008741   +          +     0.34054806441484 * S_MntSweetProducts
1008742   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
1008743   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
1008744   +          +     0.98942946974575 * S_NumStorePurchases
1008745   +          +     0.89701206630103 * S_NumWebPurchases
1008746   +          +    -1.22878611472154 * S_NumWebVisitsMonth
1008747   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
1008748   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome + 
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 * 
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts 
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases + 
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases + 
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth + 
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
1008749   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
1008750   +          +     0.16683404689723 * S_MntFishProducts
1008751   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
1008752   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
1008753   +          +     0.20389084548968 * S_MntSweetProducts
1008754   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
1008755   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
1008756   +          +     1.27164659640366 * S_NumStorePurchases
1008757   +          +     1.02122194207802 * S_NumWebPurchases
1008758   +          +     -1.5111033436803 * S_NumWebVisitsMonth
1008759   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
1008760   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome + 
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 * 
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts 
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases + 
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases + 
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth + 
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
1008761   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
1008762   +          +    -0.03345077166544 * S_MntFishProducts
1008763   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
1008764   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
1008765   +          +    -0.11948662500951 * S_MntSweetProducts
1008766   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
1008767   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
1008768   +          +     0.22401914357376 * S_NumStorePurchases
1008769   +          +     0.04219877865976 * S_NumWebPurchases
1008770   +          +     1.21753334166036 * S_NumWebVisitsMonth
1008771   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
1008772   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome + 
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 * 
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts 
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839 
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 * 
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency + 
-0.47582856683655 * S_Teenhome ;
1008773   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
1008774   +          +     0.31175257038578 * S_MntFishProducts
1008775   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
1008776   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
1008777   +          +      0.0927253053382 * S_MntSweetProducts
1008778   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
1008779   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
1008780   +          +    -0.12667606349662 * S_NumStorePurchases
1008781   +          +     0.30148374518724 * S_NumWebPurchases
1008782   +          +     0.48934229701658 * S_NumWebVisitsMonth
1008783   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
1008784   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome + 
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 * 
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts + 
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085 
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 * 
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency + 
-0.4576645462819 * S_Teenhome ;
1008785   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
1008786   +          +     0.42646725119177 * S_MntFishProducts
1008787   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
1008788   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
1008789   +          +    -0.01493605582616 * S_MntSweetProducts
1008790   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
1008791   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
1008792   +          +     0.54256744091258 * S_NumStorePurchases
1008793   +          +     0.43065931458468 * S_NumWebPurchases
1008794   +          +      0.5935561420466 * S_NumWebVisitsMonth
1008795   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
1008796   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome + 
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 * 
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 * 
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases 
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases + 
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth + 
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
1008797   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
1008798   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
1008799   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
1008800   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
1008801   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 * 
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 + 
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
1008802   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
1008803   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
1008804   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
1008805   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
1008806   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 * 
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 + 
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
1008807   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
1008808   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
1008809   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
1008810   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
1008811   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 * 
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 + 
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
1008812   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
1008813   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
1008814   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
1008815   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
1008816   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 * 
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 + 
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
1008817   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
1008818   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
1008819   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
1008820   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
1008821   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 * 
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 + 
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
1008822   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
1008823   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
1008824   +        EducationGraduation  +     0.43998321745211 * EducationMaster
1008825   +          +    -0.85912688909911 * Marital_StatusDivorced
1008826   +          +     0.81561401465875 * Marital_StatusMarried
1008827   +          +    -0.58324403081542 * Marital_StatusSingle
1008828   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 * 
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster 
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried + 
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
1008829   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
1008830   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
1008831   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
1008832   +          +    -0.34784695867287 * Marital_StatusDivorced
1008833   +          +    -0.18194022182247 * Marital_StatusMarried
1008834   +          +    -0.10633185904164 * Marital_StatusSingle
1008835   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 * 
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster 
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried + 
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
1008836   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
1008837   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
1008838   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
1008839   +          +     0.61058752124466 * Marital_StatusDivorced
1008840   +          +    -1.38793808025141 * Marital_StatusMarried
1008841   +          +     1.10060737810944 * Marital_StatusSingle
1008842   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 * 
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster 
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried + 
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
1008843   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
1008844   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
1008845   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
1008846   +          +     0.11973800573581 * Marital_StatusDivorced
1008847   +          +      -0.294635257911 * Marital_StatusMarried
1008848   +          +    -0.05399659601172 * Marital_StatusSingle
1008849   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 * 
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster 
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried + 
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
1008850   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
1008851   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
1008852   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
1008853   +          +     0.42838191659864 * Marital_StatusDivorced
1008854   +          +    -0.09150349181363 * Marital_StatusMarried
1008855   +          +    -0.33520164145276 * Marital_StatusSingle
1008856   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 * 
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster 
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried + 
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
1008857   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
1008858   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
1008859   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
1008860   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
1008861   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
1008862   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1008863   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1008864   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1008865   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1008866   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1008867   +END;
MPRINT(EM_DIAGRAM):   END;
1008868   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1008869   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1008870   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1008871   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1008872   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1008873   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1008874   +END;
MPRINT(EM_DIAGRAM):   END;
1008875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1008876   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1008877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1008878   +
1008879   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1008880   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1008881   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1008882   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1008883   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1008884   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1008885   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1008886   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1008887   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1008888   +end;
MPRINT(EM_DIAGRAM):   end;
1008889   +else do;
MPRINT(EM_DIAGRAM):   else do;
1008890   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1008891   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1008892   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1008893   +   end;
MPRINT(EM_DIAGRAM):   end;
1008894   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1008895   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1008896   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1008897   +   end;
MPRINT(EM_DIAGRAM):   end;
1008898   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1008899   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1008900   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1008901   +   end;
MPRINT(EM_DIAGRAM):   end;
1008902   +end;
MPRINT(EM_DIAGRAM):   end;
1008903   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1008904   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
1008905   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
1008906   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 + 
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
1008907   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
1008908   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1008909   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1008910   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1008911   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1008912   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1008913   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1008914   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1008915   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1008916   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1008917   +END;
MPRINT(EM_DIAGRAM):   END;
1008918   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1008919   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1008920   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1008921   +END;
MPRINT(EM_DIAGRAM):   END;
1008922   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1008923   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1008924   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1008925   +END;
MPRINT(EM_DIAGRAM):   END;
1008926   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1008927   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1008928   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1008929   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1008930   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1008931   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1008932   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1008933   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1008934   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1008935   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1008936   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1008937   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1008938   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1008939   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1008940   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1008941   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1008942   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1008943   +END;
MPRINT(EM_DIAGRAM):   END;
1008944   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1008945   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1008946   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1008947   +drop
1008948   +H11
1008949   +H12
1008950   +H13
1008951   +H14
1008952   +H15
1008953   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1008954   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1008955    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL34_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1008956    quit;
1008957    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1008958    filename emflow
1008958  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural34: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1008959    *------------------------------------------------------------*;
1008960    * Neural34: Scoring VALIDATE data;
1008961    *------------------------------------------------------------*;
1008962    data EMWS8.Neural34_VALIDATE
1008963    / view=EMWS8.Neural34_VALIDATE
1008964    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural34_VALIDATE / view=EMWS8.Neural34_VALIDATE ;
1008965    set EMWS8.Meta2_VALIDATE
1008966    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
1008967    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas.
1008968   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1008969   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1008970   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1008971   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1008972   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1008973   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1008974   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1008975   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1008976   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1008977   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1008978   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1008979   +LENGTH _WARN_ $4
1008980   +      F_DepVar  $ 12
1008981   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1008982   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1008983   +
1008984   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1008985   +
1008986   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1008987   +
1008988   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1008989   +
1008990   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1008991   +
1008992   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1008993   +
1008994   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1008995   +
1008996   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1008997   +
1008998   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1008999   +
1009000   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1009001   +
1009002   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1009003   +
1009004   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1009005   +
1009006   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1009007   +
1009008   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1009009   +
1009010   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1009011   +
1009012   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1009013   +
1009014   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1009015   +
1009016   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1009017   +
1009018   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1009019   +
1009020   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1009021   +
1009022   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1009023   +
1009024   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1009025   +
1009026   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1009027   +
1009028   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1009029   +
1009030   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1009031   +
1009032   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1009033   +
1009034   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1009035   +
1009036   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1009037   +
1009038   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1009039   +
1009040   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1009041   +
1009042   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1009043   +
1009044   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1009045   +
1009046   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1009047   +
1009048   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1009049   +
1009050   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1009051   +
1009052   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1009053   +
1009054   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1009055   +
1009056   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1009057   +
1009058   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1009059   +
1009060   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1009061   +
1009062   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1009063   +
1009064   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1009065   +
1009066   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1009067   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1009068   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1009069   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1009070   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1009071   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009072   +end;
MPRINT(EM_DIAGRAM):   end;
1009073   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009074   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1009075   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1009076   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009077   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1009078   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1009079   +   end;
MPRINT(EM_DIAGRAM):   end;
1009080   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1009081   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1009082   +   end;
MPRINT(EM_DIAGRAM):   end;
1009083   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009084   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1009085   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1009086   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009087   +   end;
MPRINT(EM_DIAGRAM):   end;
1009088   +end;
MPRINT(EM_DIAGRAM):   end;
1009089   +
1009090   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1009091   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1009092   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1009093   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1009094   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1009095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009096   +end;
MPRINT(EM_DIAGRAM):   end;
1009097   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009098   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1009099   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1009100   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009101   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1009102   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1009103   +   end;
MPRINT(EM_DIAGRAM):   end;
1009104   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1009105   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1009106   +   end;
MPRINT(EM_DIAGRAM):   end;
1009107   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009108   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1009109   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1009110   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009111   +   end;
MPRINT(EM_DIAGRAM):   end;
1009112   +end;
MPRINT(EM_DIAGRAM):   end;
1009113   +
1009114   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1009115   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1009116   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1009117   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1009118   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1009119   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009120   +end;
MPRINT(EM_DIAGRAM):   end;
1009121   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009122   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1009123   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1009124   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009125   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1009126   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1009127   +   end;
MPRINT(EM_DIAGRAM):   end;
1009128   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1009129   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1009130   +   end;
MPRINT(EM_DIAGRAM):   end;
1009131   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009132   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1009133   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1009134   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009135   +   end;
MPRINT(EM_DIAGRAM):   end;
1009136   +end;
MPRINT(EM_DIAGRAM):   end;
1009137   +
1009138   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1009139   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1009140   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1009141   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1009142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1009143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009144   +end;
MPRINT(EM_DIAGRAM):   end;
1009145   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009146   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1009147   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1009148   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009149   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1009150   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1009151   +   end;
MPRINT(EM_DIAGRAM):   end;
1009152   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1009153   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1009154   +   end;
MPRINT(EM_DIAGRAM):   end;
1009155   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009156   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1009157   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1009158   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009159   +   end;
MPRINT(EM_DIAGRAM):   end;
1009160   +end;
MPRINT(EM_DIAGRAM):   end;
1009161   +
1009162   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1009163   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1009164   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1009165   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1009166   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1009167   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009168   +end;
MPRINT(EM_DIAGRAM):   end;
1009169   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009170   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1009171   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1009172   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009173   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1009174   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1009175   +   end;
MPRINT(EM_DIAGRAM):   end;
1009176   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1009177   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1009178   +   end;
MPRINT(EM_DIAGRAM):   end;
1009179   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009180   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1009181   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1009182   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009183   +   end;
MPRINT(EM_DIAGRAM):   end;
1009184   +end;
MPRINT(EM_DIAGRAM):   end;
1009185   +
1009186   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1009187   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1009188   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1009189   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1009190   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1009191   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009192   +end;
MPRINT(EM_DIAGRAM):   end;
1009193   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009194   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1009195   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1009196   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009197   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1009198   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1009199   +   end;
MPRINT(EM_DIAGRAM):   end;
1009200   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1009201   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1009202   +   end;
MPRINT(EM_DIAGRAM):   end;
1009203   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009204   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1009205   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1009206   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009207   +   end;
MPRINT(EM_DIAGRAM):   end;
1009208   +end;
MPRINT(EM_DIAGRAM):   end;
1009209   +
1009210   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1009211   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1009212   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1009213   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1009214   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1009215   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1009216   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1009217   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1009218   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1009219   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1009220   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1009221   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1009222   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1009223   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009224   +end;
MPRINT(EM_DIAGRAM):   end;
1009225   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009226   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1009227   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1009228   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009229   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1009230   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1009231   +   end;
MPRINT(EM_DIAGRAM):   end;
1009232   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1009233   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1009234   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1009235   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1009236   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1009237   +   end;
MPRINT(EM_DIAGRAM):   end;
1009238   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1009239   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1009240   +   end;
MPRINT(EM_DIAGRAM):   end;
1009241   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1009242   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1009243   +   end;
MPRINT(EM_DIAGRAM):   end;
1009244   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1009245   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1009246   +   end;
MPRINT(EM_DIAGRAM):   end;
1009247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009248   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1009249   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1009250   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1009251   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1009252   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1009253   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009254   +   end;
MPRINT(EM_DIAGRAM):   end;
1009255   +end;
MPRINT(EM_DIAGRAM):   end;
1009256   +
1009257   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1009258   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1009259   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1009260   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1009261   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1009262   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1009263   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1009264   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1009265   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1009266   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1009267   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1009268   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1009269   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1009270   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1009271   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009272   +end;
MPRINT(EM_DIAGRAM):   end;
1009273   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009274   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1009275   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1009276   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009277   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1009278   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1009279   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1009280   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1009281   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1009282   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009283   +         end;
MPRINT(EM_DIAGRAM):   end;
1009284   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009285   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1009286   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1009287   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009288   +            end;
MPRINT(EM_DIAGRAM):   end;
1009289   +         end;
MPRINT(EM_DIAGRAM):   end;
1009290   +      end;
MPRINT(EM_DIAGRAM):   end;
1009291   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1009292   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1009293   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1009294   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009295   +         end;
MPRINT(EM_DIAGRAM):   end;
1009296   +      end;
MPRINT(EM_DIAGRAM):   end;
1009297   +   end;
MPRINT(EM_DIAGRAM):   end;
1009298   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009299   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1009300   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1009301   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009302   +      end;
MPRINT(EM_DIAGRAM):   end;
1009303   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1009304   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1009305   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1009306   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1009307   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1009308   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1009309   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009310   +         end;
MPRINT(EM_DIAGRAM):   end;
1009311   +      end;
MPRINT(EM_DIAGRAM):   end;
1009312   +   end;
MPRINT(EM_DIAGRAM):   end;
1009313   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1009314   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1009315   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1009316   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1009317   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1009318   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1009319   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009320   +   end;
MPRINT(EM_DIAGRAM):   end;
1009321   +end;
MPRINT(EM_DIAGRAM):   end;
1009322   +
1009323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1009324   +*** Checking missing input Interval
1009325   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1009326   +
1009327   +IF NMISS(
1009328   +   Income ,
1009329   +   Kidhome ,
1009330   +   MntFishProducts ,
1009331   +   MntFruits ,
1009332   +   MntGoldProds ,
1009333   +   MntMeatProducts ,
1009334   +   MntSweetProducts ,
1009335   +   MntWines ,
1009336   +   NumCatalogPurchases ,
1009337   +   NumDealsPurchases ,
1009338   +   NumStorePurchases ,
1009339   +   NumWebPurchases ,
1009340   +   NumWebVisitsMonth ,
1009341   +   Recency ,
1009342   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1009343   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1009344   +
1009345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009346   +END;
MPRINT(EM_DIAGRAM):   END;
1009347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1009348   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1009349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1009350   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1009351   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1009352   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1009353   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1009354   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1009355   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1009356   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1009357   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1009358   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1009359   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1009360   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1009361   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1009362   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1009363   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1009364   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1009365   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1009366   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1009367   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1009368   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1009369   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1009370   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1009371   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1009372   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1009373   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1009374   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1009375   +END;
MPRINT(EM_DIAGRAM):   END;
1009376   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1009377   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1009378   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1009379   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1009380   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1009381   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1009382   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1009383   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1009384   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1009385   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1009386   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1009387   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1009388   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1009389   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1009390   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1009391   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1009392   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1009393   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1009394   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1009395   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1009396   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1009397   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1009398   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1009399   +   ELSE S_NumCatalogPurchases
1009400   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1009401   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1009402   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1009403   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1009404   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1009405   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1009406   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1009407   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1009408   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1009409   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1009410   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1009411   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1009412   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1009413   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1009414   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1009415   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1009416   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1009417   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1009418   +END;
MPRINT(EM_DIAGRAM):   END;
1009419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1009420   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1009421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1009422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1009423   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1009424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1009425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1009426   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1009427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1009428   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1009429   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
1009430   +          +     0.24367603598167 * S_MntFishProducts
1009431   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
1009432   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
1009433   +          +     0.34054806441484 * S_MntSweetProducts
1009434   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
1009435   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
1009436   +          +     0.98942946974575 * S_NumStorePurchases
1009437   +          +     0.89701206630103 * S_NumWebPurchases
1009438   +          +    -1.22878611472154 * S_NumWebVisitsMonth
1009439   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
1009440   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome + 
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 * 
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts 
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases + 
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases + 
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth + 
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
1009441   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
1009442   +          +     0.16683404689723 * S_MntFishProducts
1009443   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
1009444   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
1009445   +          +     0.20389084548968 * S_MntSweetProducts
1009446   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
1009447   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
1009448   +          +     1.27164659640366 * S_NumStorePurchases
1009449   +          +     1.02122194207802 * S_NumWebPurchases
1009450   +          +     -1.5111033436803 * S_NumWebVisitsMonth
1009451   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
1009452   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome + 
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 * 
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts 
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases + 
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases + 
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth + 
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
1009453   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
1009454   +          +    -0.03345077166544 * S_MntFishProducts
1009455   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
1009456   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
1009457   +          +    -0.11948662500951 * S_MntSweetProducts
1009458   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
1009459   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
1009460   +          +     0.22401914357376 * S_NumStorePurchases
1009461   +          +     0.04219877865976 * S_NumWebPurchases
1009462   +          +     1.21753334166036 * S_NumWebVisitsMonth
1009463   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
1009464   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome + 
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 * 
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts 
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839 
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 * 
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency + 
-0.47582856683655 * S_Teenhome ;
1009465   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
1009466   +          +     0.31175257038578 * S_MntFishProducts
1009467   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
1009468   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
1009469   +          +      0.0927253053382 * S_MntSweetProducts
1009470   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
1009471   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
1009472   +          +    -0.12667606349662 * S_NumStorePurchases
1009473   +          +     0.30148374518724 * S_NumWebPurchases
1009474   +          +     0.48934229701658 * S_NumWebVisitsMonth
1009475   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
1009476   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome + 
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 * 
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts + 
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085 
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 * 
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency + 
-0.4576645462819 * S_Teenhome ;
1009477   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
1009478   +          +     0.42646725119177 * S_MntFishProducts
1009479   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
1009480   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
1009481   +          +    -0.01493605582616 * S_MntSweetProducts
1009482   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
1009483   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
1009484   +          +     0.54256744091258 * S_NumStorePurchases
1009485   +          +     0.43065931458468 * S_NumWebPurchases
1009486   +          +      0.5935561420466 * S_NumWebVisitsMonth
1009487   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
1009488   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome + 
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 * 
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 * 
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases 
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases + 
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth + 
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
1009489   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
1009490   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
1009491   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
1009492   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
1009493   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 * 
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 + 
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
1009494   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
1009495   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
1009496   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
1009497   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
1009498   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 * 
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 + 
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
1009499   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
1009500   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
1009501   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
1009502   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
1009503   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 * 
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 + 
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
1009504   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
1009505   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
1009506   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
1009507   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
1009508   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 * 
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 + 
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
1009509   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
1009510   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
1009511   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
1009512   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
1009513   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 * 
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 + 
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
1009514   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
1009515   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
1009516   +        EducationGraduation  +     0.43998321745211 * EducationMaster
1009517   +          +    -0.85912688909911 * Marital_StatusDivorced
1009518   +          +     0.81561401465875 * Marital_StatusMarried
1009519   +          +    -0.58324403081542 * Marital_StatusSingle
1009520   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 * 
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster 
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried + 
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
1009521   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
1009522   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
1009523   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
1009524   +          +    -0.34784695867287 * Marital_StatusDivorced
1009525   +          +    -0.18194022182247 * Marital_StatusMarried
1009526   +          +    -0.10633185904164 * Marital_StatusSingle
1009527   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 * 
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster 
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried + 
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
1009528   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
1009529   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
1009530   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
1009531   +          +     0.61058752124466 * Marital_StatusDivorced
1009532   +          +    -1.38793808025141 * Marital_StatusMarried
1009533   +          +     1.10060737810944 * Marital_StatusSingle
1009534   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 * 
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster 
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried + 
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
1009535   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
1009536   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
1009537   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
1009538   +          +     0.11973800573581 * Marital_StatusDivorced
1009539   +          +      -0.294635257911 * Marital_StatusMarried
1009540   +          +    -0.05399659601172 * Marital_StatusSingle
1009541   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 * 
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster 
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried + 
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
1009542   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
1009543   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
1009544   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
1009545   +          +     0.42838191659864 * Marital_StatusDivorced
1009546   +          +    -0.09150349181363 * Marital_StatusMarried
1009547   +          +    -0.33520164145276 * Marital_StatusSingle
1009548   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 * 
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster 
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried + 
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
1009549   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
1009550   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
1009551   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
1009552   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
1009553   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
1009554   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1009555   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1009556   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1009557   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1009558   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1009559   +END;
MPRINT(EM_DIAGRAM):   END;
1009560   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1009561   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1009562   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1009563   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1009564   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1009565   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1009566   +END;
MPRINT(EM_DIAGRAM):   END;
1009567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1009568   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1009569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1009570   +
1009571   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1009572   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1009573   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1009574   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1009575   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1009576   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009577   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1009578   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1009579   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1009580   +end;
MPRINT(EM_DIAGRAM):   end;
1009581   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009582   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1009583   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1009584   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1009585   +   end;
MPRINT(EM_DIAGRAM):   end;
1009586   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1009587   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1009588   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1009589   +   end;
MPRINT(EM_DIAGRAM):   end;
1009590   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009591   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1009592   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1009593   +   end;
MPRINT(EM_DIAGRAM):   end;
1009594   +end;
MPRINT(EM_DIAGRAM):   end;
1009595   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1009596   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
1009597   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
1009598   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 + 
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
1009599   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
1009600   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1009601   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1009602   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1009603   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1009604   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1009605   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1009606   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1009607   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1009608   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1009609   +END;
MPRINT(EM_DIAGRAM):   END;
1009610   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1009611   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1009612   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1009613   +END;
MPRINT(EM_DIAGRAM):   END;
1009614   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1009615   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1009616   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1009617   +END;
MPRINT(EM_DIAGRAM):   END;
1009618   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1009619   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1009620   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1009621   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1009622   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1009623   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1009624   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1009625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1009626   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1009627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1009628   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1009629   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1009630   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1009631   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1009632   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1009633   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1009634   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1009635   +END;
MPRINT(EM_DIAGRAM):   END;
1009636   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1009637   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1009638   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1009639   +drop
1009640   +H11
1009641   +H12
1009642   +H13
1009643   +H14
1009644   +H15
1009645   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1009646   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1009647    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL34_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1009648    quit;
1009649    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1009650    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1009651    * Neural34: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural34: Computing metadata for TRAIN data;
1009652    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL34_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural34_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural34_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural34_TRAIN out=WORK.M1COA2NL noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1COA2NL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1COA2NL(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1COA2NL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1COA2NL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1IBTNUQ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1IBTNUQ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1IBTNUQ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M15X2O46(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1IBTNUQ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1IBTNUQ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1IBTNUQ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1IBTNUQ;
MPRINT(EMADVISECOLUMNS):   set WORK.M1IBTNUQ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural34_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural34";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural34";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural34: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1009964    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1009965    set EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_EMINFO;
1009966    where DATA='Neural34' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural34' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1009967    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL34_EMINFO.
      WHERE (DATA='Neural34') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1009968    data EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural34_EMINFO;
1009969    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1009970    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1009971    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL34_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1009975    run;
1009976    data EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural34_EMINFO;
1009977    set EMWS8.Neural34_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_EMINFO WORK.MODELTEMP_INFO;
1009978    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL34_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL34_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1009979    proc sort data = EMWS8.Neural34_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural34_EMINFO NOTHREADS;
1009980    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1009981    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL34_EMINFO.
NOTE: The data set EMWS8.NEURAL34_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1009982    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1009983    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1009984    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1009985    proc sort data = EMWS8.Neural34_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural34_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1009986    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1009987    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL34_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1009988    data EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural34_EMINFO;
1009989    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1009990    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1009991    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL34_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1009992    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1009993    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1009994    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1009995    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL34_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.NEURAL34_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
