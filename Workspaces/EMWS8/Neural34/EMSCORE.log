MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.31 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                19.31 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2CW4Z6X 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2CW4Z6X new;
MPRINT(EM_DIAGRAM):   run;
346807     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
346808     set EMWS8.Neural34_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_OUTKEY;
346809     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
346810     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL34_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

346811     filename emflow
346811   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural34: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
346812     *------------------------------------------------------------*;
346813     * Neural34: Scoring DATA data;
346814     *------------------------------------------------------------*;
346815     data EMWS8.Neural34_TRAIN
346816     / view=EMWS8.Neural34_TRAIN
346817     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural34_TRAIN / view=EMWS8.Neural34_TRAIN ;
346818     set EMWS8.Meta2_TRAIN
346819     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
346820     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas.
346821    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
346822    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
346823    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
346824    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
346825    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
346826    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
346827    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
346828    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
346829    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
346830    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
346831    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
346832    +LENGTH _WARN_ $4
346833    +      F_DepVar  $ 12
346834    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
346835    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
346836    +
346837    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
346838    +
346839    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
346840    +
346841    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
346842    +
346843    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
346844    +
346845    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
346846    +
346847    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
346848    +
346849    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
346850    +
346851    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
346852    +
346853    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
346854    +
346855    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
346856    +
346857    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
346858    +
346859    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
346860    +
346861    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
346862    +
346863    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
346864    +
346865    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
346866    +
346867    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
346868    +
346869    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
346870    +
346871    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
346872    +
346873    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
346874    +
346875    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
346876    +
346877    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
346878    +
346879    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
346880    +
346881    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
346882    +
346883    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
346884    +
346885    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
346886    +
346887    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
346888    +
346889    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
346890    +
346891    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
346892    +
346893    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
346894    +
346895    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
346896    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
346897    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
346898    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
346899    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
346900    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
346901    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
346902    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
346903    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
346904    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
346905    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
346906    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
346907    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
346908    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
346909    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
346910    +end;
MPRINT(EM_DIAGRAM):   end;
346911    +else do;
MPRINT(EM_DIAGRAM):   else do;
346912    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
346913    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
346914    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
346915    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
346916    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
346917    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
346918    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
346919    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
346920    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
346921    +         end;
MPRINT(EM_DIAGRAM):   end;
346922    +         else do;
MPRINT(EM_DIAGRAM):   else do;
346923    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
346924    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
346925    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
346926    +            end;
MPRINT(EM_DIAGRAM):   end;
346927    +         end;
MPRINT(EM_DIAGRAM):   end;
346928    +      end;
MPRINT(EM_DIAGRAM):   end;
346929    +      else do;
MPRINT(EM_DIAGRAM):   else do;
346930    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
346931    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
346932    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
346933    +         end;
MPRINT(EM_DIAGRAM):   end;
346934    +      end;
MPRINT(EM_DIAGRAM):   end;
346935    +   end;
MPRINT(EM_DIAGRAM):   end;
346936    +   else do;
MPRINT(EM_DIAGRAM):   else do;
346937    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
346938    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
346939    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
346940    +      end;
MPRINT(EM_DIAGRAM):   end;
346941    +      else do;
MPRINT(EM_DIAGRAM):   else do;
346942    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
346943    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
346944    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
346945    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
346946    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
346947    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
346948    +         end;
MPRINT(EM_DIAGRAM):   end;
346949    +      end;
MPRINT(EM_DIAGRAM):   end;
346950    +   end;
MPRINT(EM_DIAGRAM):   end;
346951    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
346952    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
346953    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
346954    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
346955    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
346956    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
346957    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
346958    +   end;
MPRINT(EM_DIAGRAM):   end;
346959    +end;
MPRINT(EM_DIAGRAM):   end;
346960    +
346961    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
346962    +*** Checking missing input Interval
346963    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
346964    +
346965    +IF NMISS(
346966    +   AcceptedCmpTotal ,
346967    +   Frq ,
346968    +   Income ,
346969    +   Mnt ,
346970    +   MntGoldProds ,
346971    +   MntMeatProducts ,
346972    +   NumCatalogPurchases ,
346973    +   NumDealsPurchases ,
346974    +   NumWebVisitsMonth ,
346975    +   RFMstat ,
346976    +   Recency ,
346977    +   Teenhome ,
346978    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
346979    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
346980    +
346981    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
346982    +END;
MPRINT(EM_DIAGRAM):   END;
346983    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
346984    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
346985    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
346986    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
346987    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
346988    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
346989    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
346990    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
346991    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
346992    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
346993    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
346994    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
346995    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
346996    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
346997    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
346998    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
346999    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
347000    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
347001    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
347002    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
347003    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
347004    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
347005    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
347006    +END;
MPRINT(EM_DIAGRAM):   END;
347007    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
347008    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
347009    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
347010    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
347011    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
347012    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
347013    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
347014    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
347015    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
347016    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
347017    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
347018    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
347019    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
347020    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
347021    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
347022    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
347023    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
347024    +   ELSE S_NumCatalogPurchases
347025    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
347026    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
347027    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
347028    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
347029    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
347030    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
347031    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
347032    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
347033    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
347034    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
347035    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
347036    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
347037    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
347038    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
347039    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
347040    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
347041    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
347042    +END;
MPRINT(EM_DIAGRAM):   END;
347043    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347044    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
347045    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347046    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347047    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
347048    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347049    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
347050    +   H11  =     0.39113138187571 * S_AcceptedCmpTotal  +    -0.61540725344485 *
347051    +        S_Frq  +    -0.39640720965637 * S_Income  +    -0.29779259024925 *
347052    +        S_Mnt  +     0.09159537668687 * S_MntGoldProds
347053    +          +     0.66968861823847 * S_MntMeatProducts
347054    +          +     0.43410284729103 * S_NumCatalogPurchases
347055    +          +     0.38169769247512 * S_NumDealsPurchases
347056    +          +     0.42568124883788 * S_NumWebVisitsMonth
347057    +          +       0.117680996215 * S_RFMstat  +    -0.81755740196945 *
347058    +        S_Recency  +     0.34714100236873 * S_Teenhome
347059    +          +     0.39595885220917 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.39113138187571 * S_AcceptedCmpTotal + -0.61540725344485 * S_Frq 
+ -0.39640720965637 * S_Income + -0.29779259024925 * S_Mnt + 0.09159537668687 * S_MntGoldProds 
+ 0.66968861823847 * S_MntMeatProducts + 0.43410284729103 * S_NumCatalogPurchases + 
0.38169769247512 * S_NumDealsPurchases + 0.42568124883788 * S_NumWebVisitsMonth + 
0.117680996215 * S_RFMstat + -0.81755740196945 * S_Recency + 0.34714100236873 * S_Teenhome + 
0.39595885220917 * S_Year_Birth ;
347060    +   H12  =    -0.17603311184545 * S_AcceptedCmpTotal  +    -1.87448667460975 *
347061    +        S_Frq  +    -0.13770783826558 * S_Income  +    -0.07794509574546 *
347062    +        S_Mnt  +     -0.0367231623133 * S_MntGoldProds
347063    +          +     0.43468157063779 * S_MntMeatProducts
347064    +          +     1.22287851495207 * S_NumCatalogPurchases
347065    +          +     1.34810668047823 * S_NumDealsPurchases
347066    +          +     0.29744386797792 * S_NumWebVisitsMonth
347067    +          +     0.24598010228595 * S_RFMstat  +     0.45054459604149 *
347068    +        S_Recency  +    -0.31884355104334 * S_Teenhome
347069    +          +    -0.49374494273323 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.17603311184545 * S_AcceptedCmpTotal + -1.87448667460975 * S_Frq 
+ -0.13770783826558 * S_Income + -0.07794509574546 * S_Mnt + -0.0367231623133 * S_MntGoldProds 
+ 0.43468157063779 * S_MntMeatProducts + 1.22287851495207 * S_NumCatalogPurchases + 
1.34810668047823 * S_NumDealsPurchases + 0.29744386797792 * S_NumWebVisitsMonth + 
0.24598010228595 * S_RFMstat + 0.45054459604149 * S_Recency + -0.31884355104334 * S_Teenhome + 
-0.49374494273323 * S_Year_Birth ;
347070    +   H13  =    -0.35894234681627 * S_AcceptedCmpTotal  +     2.22535530920485 *
347071    +        S_Frq  +    -0.60759993740885 * S_Income  +    -0.19127405324439 *
347072    +        S_Mnt  +     0.13903548885363 * S_MntGoldProds
347073    +          +    -3.08800901663199 * S_MntMeatProducts
347074    +          +    -1.19043292478827 * S_NumCatalogPurchases
347075    +          +    -0.37179794210537 * S_NumDealsPurchases
347076    +          +     0.03624847445355 * S_NumWebVisitsMonth
347077    +          +    -0.62521514183331 * S_RFMstat  +     0.01074839631068 *
347078    +        S_Recency  +     0.08240530440608 * S_Teenhome
347079    +          +    -0.04154769345168 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.35894234681627 * S_AcceptedCmpTotal + 2.22535530920485 * S_Frq 
+ -0.60759993740885 * S_Income + -0.19127405324439 * S_Mnt + 0.13903548885363 * S_MntGoldProds 
+ -3.08800901663199 * S_MntMeatProducts + -1.19043292478827 * S_NumCatalogPurchases + 
-0.37179794210537 * S_NumDealsPurchases + 0.03624847445355 * S_NumWebVisitsMonth + 
-0.62521514183331 * S_RFMstat + 0.01074839631068 * S_Recency + 0.08240530440608 * S_Teenhome + 
-0.04154769345168 * S_Year_Birth ;
347080    +   H14  =     0.72612390853906 * S_AcceptedCmpTotal  +    -1.03331426863575 *
347081    +        S_Frq  +     0.44630396705527 * S_Income  +    -1.29648064151656 *
347082    +        S_Mnt  +     0.20190465471738 * S_MntGoldProds
347083    +          +     0.78481425439956 * S_MntMeatProducts
347084    +          +      0.6107688367092 * S_NumCatalogPurchases
347085    +          +    -0.39308332306764 * S_NumDealsPurchases
347086    +          +     1.13986700740733 * S_NumWebVisitsMonth
347087    +          +    -0.10095149614189 * S_RFMstat  +    -1.23708147180809 *
347088    +        S_Recency  +    -0.40344648497219 * S_Teenhome
347089    +          +    -0.21455944295735 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.72612390853906 * S_AcceptedCmpTotal + -1.03331426863575 * S_Frq 
+ 0.44630396705527 * S_Income + -1.29648064151656 * S_Mnt + 0.20190465471738 * S_MntGoldProds 
+ 0.78481425439956 * S_MntMeatProducts + 0.6107688367092 * S_NumCatalogPurchases + 
-0.39308332306764 * S_NumDealsPurchases + 1.13986700740733 * S_NumWebVisitsMonth + 
-0.10095149614189 * S_RFMstat + -1.23708147180809 * S_Recency + -0.40344648497219 * S_Teenhome 
+ -0.21455944295735 * S_Year_Birth ;
347090    +   H15  =    -0.52000103453301 * S_AcceptedCmpTotal  +    -0.14144790393123 *
347091    +        S_Frq  +    -0.47209445285116 * S_Income  +     0.51267592710475 *
347092    +        S_Mnt  +     0.07876708495313 * S_MntGoldProds
347093    +          +    -0.61914125284805 * S_MntMeatProducts
347094    +          +    -0.54746366292992 * S_NumCatalogPurchases
347095    +          +     0.25925395549236 * S_NumDealsPurchases
347096    +          +    -0.60979686139101 * S_NumWebVisitsMonth
347097    +          +     0.08166171339337 * S_RFMstat  +     0.96981534293427 *
347098    +        S_Recency  +     0.36245179070453 * S_Teenhome
347099    +          +    -0.09267442906112 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.52000103453301 * S_AcceptedCmpTotal + -0.14144790393123 * S_Frq 
+ -0.47209445285116 * S_Income + 0.51267592710475 * S_Mnt + 0.07876708495313 * S_MntGoldProds 
+ -0.61914125284805 * S_MntMeatProducts + -0.54746366292992 * S_NumCatalogPurchases + 
0.25925395549236 * S_NumDealsPurchases + -0.60979686139101 * S_NumWebVisitsMonth + 
0.08166171339337 * S_RFMstat + 0.96981534293427 * S_Recency + 0.36245179070453 * S_Teenhome + 
-0.09267442906112 * S_Year_Birth ;
347100    +   H11  = H11  +     0.01565392034595 * Marital_StatusDivorced
347101    +          +     0.22493072364483 * Marital_StatusMarried
347102    +          +    -0.34177799020181 * Marital_StatusSingle
347103    +          +    -0.04779249269081 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01565392034595 * Marital_StatusDivorced + 0.22493072364483 
* Marital_StatusMarried + -0.34177799020181 * Marital_StatusSingle + -0.04779249269081 * 
Marital_StatusTogether ;
347104    +   H12  = H12  +     0.58482172427767 * Marital_StatusDivorced
347105    +          +     0.05031503177659 * Marital_StatusMarried
347106    +          +     0.28039335778718 * Marital_StatusSingle
347107    +          +     0.00709736205513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.58482172427767 * Marital_StatusDivorced + 0.05031503177659 
* Marital_StatusMarried + 0.28039335778718 * Marital_StatusSingle + 0.00709736205513 * 
Marital_StatusTogether ;
347108    +   H13  = H13  +     0.35081594367456 * Marital_StatusDivorced
347109    +          +    -0.24395984745809 * Marital_StatusMarried
347110    +          +     0.22708224780413 * Marital_StatusSingle
347111    +          +    -0.34334833500124 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.35081594367456 * Marital_StatusDivorced + 
-0.24395984745809 * Marital_StatusMarried + 0.22708224780413 * Marital_StatusSingle + 
-0.34334833500124 * Marital_StatusTogether ;
347112    +   H14  = H14  +     0.85482961039457 * Marital_StatusDivorced
347113    +          +    -1.06411172500365 * Marital_StatusMarried
347114    +          +     0.57554615813234 * Marital_StatusSingle
347115    +          +    -0.91141797290702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.85482961039457 * Marital_StatusDivorced + 
-1.06411172500365 * Marital_StatusMarried + 0.57554615813234 * Marital_StatusSingle + 
-0.91141797290702 * Marital_StatusTogether ;
347116    +   H15  = H15  +      0.2197825206844 * Marital_StatusDivorced
347117    +          +     0.66663600919341 * Marital_StatusMarried
347118    +          +    -0.69696969089357 * Marital_StatusSingle
347119    +          +     0.48232861459141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2197825206844 * Marital_StatusDivorced + 0.66663600919341 
* Marital_StatusMarried + -0.69696969089357 * Marital_StatusSingle + 0.48232861459141 * 
Marital_StatusTogether ;
347120    +   H11  =    -1.58463812409211 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.58463812409211 + H11 ;
347121    +   H12  =    -0.59413927784841 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.59413927784841 + H12 ;
347122    +   H13  =    -1.40790569062078 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.40790569062078 + H13 ;
347123    +   H14  =     -0.2073181654495 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.2073181654495 + H14 ;
347124    +   H15  =     1.99108524971007 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.99108524971007 + H15 ;
347125    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
347126    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
347127    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
347128    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
347129    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
347130    +END;
MPRINT(EM_DIAGRAM):   END;
347131    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
347132    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
347133    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
347134    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
347135    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
347136    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
347137    +END;
MPRINT(EM_DIAGRAM):   END;
347138    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347139    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
347140    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347141    +
347142    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
347143    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
347144    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
347145    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
347146    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
347147    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
347148    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
347149    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
347150    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
347151    +end;
MPRINT(EM_DIAGRAM):   end;
347152    +else do;
MPRINT(EM_DIAGRAM):   else do;
347153    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
347154    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
347155    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
347156    +   end;
MPRINT(EM_DIAGRAM):   end;
347157    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
347158    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
347159    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
347160    +   end;
MPRINT(EM_DIAGRAM):   end;
347161    +   else do;
MPRINT(EM_DIAGRAM):   else do;
347162    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
347163    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
347164    +   end;
MPRINT(EM_DIAGRAM):   end;
347165    +end;
MPRINT(EM_DIAGRAM):   end;
347166    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
347167    +   P_DepVar1  =     3.73071630847853 * H11  +     2.94025483165613 * H12
347168    +          +    -3.96191932636925 * H13  +     3.36339025105162 * H14
347169    +          +    -4.82596427081675 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.73071630847853 * H11 + 2.94025483165613 * H12 + 
-3.96191932636925 * H13 + 3.36339025105162 * H14 + -4.82596427081675 * H15 ;
347170    +   P_DepVar1  =     0.43428060622858 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.43428060622858 + P_DepVar1 ;
347171    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
347172    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
347173    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
347174    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
347175    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
347176    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
347177    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
347178    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
347179    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
347180    +END;
MPRINT(EM_DIAGRAM):   END;
347181    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
347182    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
347183    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
347184    +END;
MPRINT(EM_DIAGRAM):   END;
347185    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
347186    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
347187    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
347188    +END;
MPRINT(EM_DIAGRAM):   END;
347189    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
347190    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
347191    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
347192    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
347193    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
347194    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
347195    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
347196    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347197    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
347198    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347199    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
347200    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
347201    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
347202    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
347203    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
347204    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
347205    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
347206    +END;
MPRINT(EM_DIAGRAM):   END;
347207    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
347208    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
347209    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
347210    +drop
347211    +H11
347212    +H12
347213    +H13
347214    +H14
347215    +H15
347216    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
347217    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
347218     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL34_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
347219     quit;
347220     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
347221     filename emflow
347221   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural34: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
347222     *------------------------------------------------------------*;
347223     * Neural34: Scoring VALIDATE data;
347224     *------------------------------------------------------------*;
347225     data EMWS8.Neural34_VALIDATE
347226     / view=EMWS8.Neural34_VALIDATE
347227     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural34_VALIDATE / view=EMWS8.Neural34_VALIDATE ;
347228     set EMWS8.Meta2_VALIDATE
347229     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
347230     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMFLOWSCORE.sas.
347231    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
347232    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
347233    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
347234    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
347235    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
347236    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
347237    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
347238    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
347239    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
347240    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
347241    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
347242    +LENGTH _WARN_ $4
347243    +      F_DepVar  $ 12
347244    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
347245    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
347246    +
347247    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
347248    +
347249    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
347250    +
347251    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
347252    +
347253    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
347254    +
347255    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
347256    +
347257    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
347258    +
347259    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
347260    +
347261    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
347262    +
347263    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
347264    +
347265    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
347266    +
347267    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
347268    +
347269    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
347270    +
347271    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
347272    +
347273    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
347274    +
347275    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
347276    +
347277    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
347278    +
347279    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
347280    +
347281    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
347282    +
347283    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
347284    +
347285    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
347286    +
347287    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
347288    +
347289    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
347290    +
347291    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
347292    +
347293    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
347294    +
347295    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
347296    +
347297    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
347298    +
347299    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
347300    +
347301    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
347302    +
347303    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
347304    +
347305    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
347306    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
347307    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
347308    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
347309    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
347310    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
347311    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
347312    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
347313    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
347314    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
347315    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
347316    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
347317    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
347318    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
347319    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
347320    +end;
MPRINT(EM_DIAGRAM):   end;
347321    +else do;
MPRINT(EM_DIAGRAM):   else do;
347322    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
347323    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
347324    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
347325    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
347326    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
347327    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
347328    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
347329    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
347330    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
347331    +         end;
MPRINT(EM_DIAGRAM):   end;
347332    +         else do;
MPRINT(EM_DIAGRAM):   else do;
347333    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
347334    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
347335    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
347336    +            end;
MPRINT(EM_DIAGRAM):   end;
347337    +         end;
MPRINT(EM_DIAGRAM):   end;
347338    +      end;
MPRINT(EM_DIAGRAM):   end;
347339    +      else do;
MPRINT(EM_DIAGRAM):   else do;
347340    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
347341    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
347342    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
347343    +         end;
MPRINT(EM_DIAGRAM):   end;
347344    +      end;
MPRINT(EM_DIAGRAM):   end;
347345    +   end;
MPRINT(EM_DIAGRAM):   end;
347346    +   else do;
MPRINT(EM_DIAGRAM):   else do;
347347    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
347348    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
347349    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
347350    +      end;
MPRINT(EM_DIAGRAM):   end;
347351    +      else do;
MPRINT(EM_DIAGRAM):   else do;
347352    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
347353    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
347354    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
347355    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
347356    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
347357    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
347358    +         end;
MPRINT(EM_DIAGRAM):   end;
347359    +      end;
MPRINT(EM_DIAGRAM):   end;
347360    +   end;
MPRINT(EM_DIAGRAM):   end;
347361    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
347362    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
347363    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
347364    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
347365    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
347366    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
347367    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
347368    +   end;
MPRINT(EM_DIAGRAM):   end;
347369    +end;
MPRINT(EM_DIAGRAM):   end;
347370    +
347371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347372    +*** Checking missing input Interval
347373    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
347374    +
347375    +IF NMISS(
347376    +   AcceptedCmpTotal ,
347377    +   Frq ,
347378    +   Income ,
347379    +   Mnt ,
347380    +   MntGoldProds ,
347381    +   MntMeatProducts ,
347382    +   NumCatalogPurchases ,
347383    +   NumDealsPurchases ,
347384    +   NumWebVisitsMonth ,
347385    +   RFMstat ,
347386    +   Recency ,
347387    +   Teenhome ,
347388    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
347389    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
347390    +
347391    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
347392    +END;
MPRINT(EM_DIAGRAM):   END;
347393    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347394    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
347395    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347396    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
347397    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
347398    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
347399    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
347400    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
347401    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
347402    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
347403    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
347404    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
347405    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
347406    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
347407    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
347408    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
347409    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
347410    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
347411    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
347412    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
347413    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
347414    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
347415    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
347416    +END;
MPRINT(EM_DIAGRAM):   END;
347417    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
347418    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
347419    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
347420    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
347421    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
347422    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
347423    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
347424    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
347425    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
347426    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
347427    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
347428    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
347429    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
347430    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
347431    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
347432    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
347433    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
347434    +   ELSE S_NumCatalogPurchases
347435    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
347436    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
347437    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
347438    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
347439    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
347440    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
347441    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
347442    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
347443    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
347444    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
347445    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
347446    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
347447    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
347448    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
347449    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
347450    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
347451    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
347452    +END;
MPRINT(EM_DIAGRAM):   END;
347453    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347454    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
347455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347457    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
347458    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347459    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
347460    +   H11  =     0.39113138187571 * S_AcceptedCmpTotal  +    -0.61540725344485 *
347461    +        S_Frq  +    -0.39640720965637 * S_Income  +    -0.29779259024925 *
347462    +        S_Mnt  +     0.09159537668687 * S_MntGoldProds
347463    +          +     0.66968861823847 * S_MntMeatProducts
347464    +          +     0.43410284729103 * S_NumCatalogPurchases
347465    +          +     0.38169769247512 * S_NumDealsPurchases
347466    +          +     0.42568124883788 * S_NumWebVisitsMonth
347467    +          +       0.117680996215 * S_RFMstat  +    -0.81755740196945 *
347468    +        S_Recency  +     0.34714100236873 * S_Teenhome
347469    +          +     0.39595885220917 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.39113138187571 * S_AcceptedCmpTotal + -0.61540725344485 * S_Frq 
+ -0.39640720965637 * S_Income + -0.29779259024925 * S_Mnt + 0.09159537668687 * S_MntGoldProds 
+ 0.66968861823847 * S_MntMeatProducts + 0.43410284729103 * S_NumCatalogPurchases + 
0.38169769247512 * S_NumDealsPurchases + 0.42568124883788 * S_NumWebVisitsMonth + 
0.117680996215 * S_RFMstat + -0.81755740196945 * S_Recency + 0.34714100236873 * S_Teenhome + 
0.39595885220917 * S_Year_Birth ;
347470    +   H12  =    -0.17603311184545 * S_AcceptedCmpTotal  +    -1.87448667460975 *
347471    +        S_Frq  +    -0.13770783826558 * S_Income  +    -0.07794509574546 *
347472    +        S_Mnt  +     -0.0367231623133 * S_MntGoldProds
347473    +          +     0.43468157063779 * S_MntMeatProducts
347474    +          +     1.22287851495207 * S_NumCatalogPurchases
347475    +          +     1.34810668047823 * S_NumDealsPurchases
347476    +          +     0.29744386797792 * S_NumWebVisitsMonth
347477    +          +     0.24598010228595 * S_RFMstat  +     0.45054459604149 *
347478    +        S_Recency  +    -0.31884355104334 * S_Teenhome
347479    +          +    -0.49374494273323 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.17603311184545 * S_AcceptedCmpTotal + -1.87448667460975 * S_Frq 
+ -0.13770783826558 * S_Income + -0.07794509574546 * S_Mnt + -0.0367231623133 * S_MntGoldProds 
+ 0.43468157063779 * S_MntMeatProducts + 1.22287851495207 * S_NumCatalogPurchases + 
1.34810668047823 * S_NumDealsPurchases + 0.29744386797792 * S_NumWebVisitsMonth + 
0.24598010228595 * S_RFMstat + 0.45054459604149 * S_Recency + -0.31884355104334 * S_Teenhome + 
-0.49374494273323 * S_Year_Birth ;
347480    +   H13  =    -0.35894234681627 * S_AcceptedCmpTotal  +     2.22535530920485 *
347481    +        S_Frq  +    -0.60759993740885 * S_Income  +    -0.19127405324439 *
347482    +        S_Mnt  +     0.13903548885363 * S_MntGoldProds
347483    +          +    -3.08800901663199 * S_MntMeatProducts
347484    +          +    -1.19043292478827 * S_NumCatalogPurchases
347485    +          +    -0.37179794210537 * S_NumDealsPurchases
347486    +          +     0.03624847445355 * S_NumWebVisitsMonth
347487    +          +    -0.62521514183331 * S_RFMstat  +     0.01074839631068 *
347488    +        S_Recency  +     0.08240530440608 * S_Teenhome
347489    +          +    -0.04154769345168 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.35894234681627 * S_AcceptedCmpTotal + 2.22535530920485 * S_Frq 
+ -0.60759993740885 * S_Income + -0.19127405324439 * S_Mnt + 0.13903548885363 * S_MntGoldProds 
+ -3.08800901663199 * S_MntMeatProducts + -1.19043292478827 * S_NumCatalogPurchases + 
-0.37179794210537 * S_NumDealsPurchases + 0.03624847445355 * S_NumWebVisitsMonth + 
-0.62521514183331 * S_RFMstat + 0.01074839631068 * S_Recency + 0.08240530440608 * S_Teenhome + 
-0.04154769345168 * S_Year_Birth ;
347490    +   H14  =     0.72612390853906 * S_AcceptedCmpTotal  +    -1.03331426863575 *
347491    +        S_Frq  +     0.44630396705527 * S_Income  +    -1.29648064151656 *
347492    +        S_Mnt  +     0.20190465471738 * S_MntGoldProds
347493    +          +     0.78481425439956 * S_MntMeatProducts
347494    +          +      0.6107688367092 * S_NumCatalogPurchases
347495    +          +    -0.39308332306764 * S_NumDealsPurchases
347496    +          +     1.13986700740733 * S_NumWebVisitsMonth
347497    +          +    -0.10095149614189 * S_RFMstat  +    -1.23708147180809 *
347498    +        S_Recency  +    -0.40344648497219 * S_Teenhome
347499    +          +    -0.21455944295735 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.72612390853906 * S_AcceptedCmpTotal + -1.03331426863575 * S_Frq 
+ 0.44630396705527 * S_Income + -1.29648064151656 * S_Mnt + 0.20190465471738 * S_MntGoldProds 
+ 0.78481425439956 * S_MntMeatProducts + 0.6107688367092 * S_NumCatalogPurchases + 
-0.39308332306764 * S_NumDealsPurchases + 1.13986700740733 * S_NumWebVisitsMonth + 
-0.10095149614189 * S_RFMstat + -1.23708147180809 * S_Recency + -0.40344648497219 * S_Teenhome 
+ -0.21455944295735 * S_Year_Birth ;
347500    +   H15  =    -0.52000103453301 * S_AcceptedCmpTotal  +    -0.14144790393123 *
347501    +        S_Frq  +    -0.47209445285116 * S_Income  +     0.51267592710475 *
347502    +        S_Mnt  +     0.07876708495313 * S_MntGoldProds
347503    +          +    -0.61914125284805 * S_MntMeatProducts
347504    +          +    -0.54746366292992 * S_NumCatalogPurchases
347505    +          +     0.25925395549236 * S_NumDealsPurchases
347506    +          +    -0.60979686139101 * S_NumWebVisitsMonth
347507    +          +     0.08166171339337 * S_RFMstat  +     0.96981534293427 *
347508    +        S_Recency  +     0.36245179070453 * S_Teenhome
347509    +          +    -0.09267442906112 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.52000103453301 * S_AcceptedCmpTotal + -0.14144790393123 * S_Frq 
+ -0.47209445285116 * S_Income + 0.51267592710475 * S_Mnt + 0.07876708495313 * S_MntGoldProds 
+ -0.61914125284805 * S_MntMeatProducts + -0.54746366292992 * S_NumCatalogPurchases + 
0.25925395549236 * S_NumDealsPurchases + -0.60979686139101 * S_NumWebVisitsMonth + 
0.08166171339337 * S_RFMstat + 0.96981534293427 * S_Recency + 0.36245179070453 * S_Teenhome + 
-0.09267442906112 * S_Year_Birth ;
347510    +   H11  = H11  +     0.01565392034595 * Marital_StatusDivorced
347511    +          +     0.22493072364483 * Marital_StatusMarried
347512    +          +    -0.34177799020181 * Marital_StatusSingle
347513    +          +    -0.04779249269081 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01565392034595 * Marital_StatusDivorced + 0.22493072364483 
* Marital_StatusMarried + -0.34177799020181 * Marital_StatusSingle + -0.04779249269081 * 
Marital_StatusTogether ;
347514    +   H12  = H12  +     0.58482172427767 * Marital_StatusDivorced
347515    +          +     0.05031503177659 * Marital_StatusMarried
347516    +          +     0.28039335778718 * Marital_StatusSingle
347517    +          +     0.00709736205513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.58482172427767 * Marital_StatusDivorced + 0.05031503177659 
* Marital_StatusMarried + 0.28039335778718 * Marital_StatusSingle + 0.00709736205513 * 
Marital_StatusTogether ;
347518    +   H13  = H13  +     0.35081594367456 * Marital_StatusDivorced
347519    +          +    -0.24395984745809 * Marital_StatusMarried
347520    +          +     0.22708224780413 * Marital_StatusSingle
347521    +          +    -0.34334833500124 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.35081594367456 * Marital_StatusDivorced + 
-0.24395984745809 * Marital_StatusMarried + 0.22708224780413 * Marital_StatusSingle + 
-0.34334833500124 * Marital_StatusTogether ;
347522    +   H14  = H14  +     0.85482961039457 * Marital_StatusDivorced
347523    +          +    -1.06411172500365 * Marital_StatusMarried
347524    +          +     0.57554615813234 * Marital_StatusSingle
347525    +          +    -0.91141797290702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.85482961039457 * Marital_StatusDivorced + 
-1.06411172500365 * Marital_StatusMarried + 0.57554615813234 * Marital_StatusSingle + 
-0.91141797290702 * Marital_StatusTogether ;
347526    +   H15  = H15  +      0.2197825206844 * Marital_StatusDivorced
347527    +          +     0.66663600919341 * Marital_StatusMarried
347528    +          +    -0.69696969089357 * Marital_StatusSingle
347529    +          +     0.48232861459141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2197825206844 * Marital_StatusDivorced + 0.66663600919341 
* Marital_StatusMarried + -0.69696969089357 * Marital_StatusSingle + 0.48232861459141 * 
Marital_StatusTogether ;
347530    +   H11  =    -1.58463812409211 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.58463812409211 + H11 ;
347531    +   H12  =    -0.59413927784841 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.59413927784841 + H12 ;
347532    +   H13  =    -1.40790569062078 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.40790569062078 + H13 ;
347533    +   H14  =     -0.2073181654495 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.2073181654495 + H14 ;
347534    +   H15  =     1.99108524971007 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.99108524971007 + H15 ;
347535    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
347536    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
347537    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
347538    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
347539    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
347540    +END;
MPRINT(EM_DIAGRAM):   END;
347541    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
347542    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
347543    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
347544    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
347545    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
347546    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
347547    +END;
MPRINT(EM_DIAGRAM):   END;
347548    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347549    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
347550    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347551    +
347552    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
347553    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
347554    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
347555    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
347556    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
347557    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
347558    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
347559    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
347560    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
347561    +end;
MPRINT(EM_DIAGRAM):   end;
347562    +else do;
MPRINT(EM_DIAGRAM):   else do;
347563    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
347564    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
347565    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
347566    +   end;
MPRINT(EM_DIAGRAM):   end;
347567    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
347568    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
347569    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
347570    +   end;
MPRINT(EM_DIAGRAM):   end;
347571    +   else do;
MPRINT(EM_DIAGRAM):   else do;
347572    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
347573    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
347574    +   end;
MPRINT(EM_DIAGRAM):   end;
347575    +end;
MPRINT(EM_DIAGRAM):   end;
347576    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
347577    +   P_DepVar1  =     3.73071630847853 * H11  +     2.94025483165613 * H12
347578    +          +    -3.96191932636925 * H13  +     3.36339025105162 * H14
347579    +          +    -4.82596427081675 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.73071630847853 * H11 + 2.94025483165613 * H12 + 
-3.96191932636925 * H13 + 3.36339025105162 * H14 + -4.82596427081675 * H15 ;
347580    +   P_DepVar1  =     0.43428060622858 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.43428060622858 + P_DepVar1 ;
347581    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
347582    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
347583    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
347584    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
347585    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
347586    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
347587    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
347588    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
347589    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
347590    +END;
MPRINT(EM_DIAGRAM):   END;
347591    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
347592    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
347593    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
347594    +END;
MPRINT(EM_DIAGRAM):   END;
347595    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
347596    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
347597    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
347598    +END;
MPRINT(EM_DIAGRAM):   END;
347599    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
347600    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
347601    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
347602    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
347603    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
347604    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
347605    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
347606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347607    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
347608    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
347609    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
347610    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
347611    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
347612    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
347613    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
347614    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
347615    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
347616    +END;
MPRINT(EM_DIAGRAM):   END;
347617    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
347618    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
347619    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
347620    +drop
347621    +H11
347622    +H12
347623    +H13
347624    +H14
347625    +H15
347626    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
347627    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
347628     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL34_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
347629     quit;
347630     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
347631     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
347632     * Neural34: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural34: Computing metadata for TRAIN data;
347633     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL34_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural34_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural34_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural34_TRAIN out=WORK.M0YSQ7GT noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0YSQ7GT;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0YSQ7GT(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0YSQ7GT;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0YSQ7GT;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1KSQ29Y NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1KSQ29Y;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1KSQ29Y;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3I0KQDP(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1KSQ29Y;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1KSQ29Y;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1KSQ29Y;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1KSQ29Y;
MPRINT(EMADVISECOLUMNS):   set WORK.M1KSQ29Y;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural34_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural34";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural34";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural34";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural34: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
347945     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
347946     set EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_EMINFO;
347947     where DATA='Neural34' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural34' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
347948     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL34_EMINFO.
      WHERE (DATA='Neural34') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

347949     data EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural34_EMINFO;
347950     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
347951     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
347952     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL34_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
347956     run;
347957     data EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural34_EMINFO;
347958     set EMWS8.Neural34_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_EMINFO WORK.MODELTEMP_INFO;
347959     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL34_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL34_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

347960     proc sort data = EMWS8.Neural34_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural34_EMINFO NOTHREADS;
347961     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
347962     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL34_EMINFO.
NOTE: The data set EMWS8.NEURAL34_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

347963     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
347964     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
347965     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

347966     proc sort data = EMWS8.Neural34_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural34_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
347967     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
347968     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL34_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

347969     data EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural34_EMINFO;
347970     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
347971     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
347972     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL34_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

347973     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
347974     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
347975     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
347976     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL34_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL34_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
