MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.36 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                13.36 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2KQI1B9 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl32\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2KQI1B9 new;
MPRINT(EM_DIAGRAM):   run;
594378     filename emflow
594378   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl32\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl32\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring AUTONEURAL7_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594379     *------------------------------------------------------------*;
594380     * Ensmbl32: Scoring AUTONEURAL7_TRAIN data;
594381     *------------------------------------------------------------*;
594382     data EMWS8.Ensmbl32_TRAIN
594383     / view=EMWS8.Ensmbl32_TRAIN
594384     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl32_TRAIN / view=EMWS8.Ensmbl32_TRAIN ;
594385     set EMWS8.AutoNeural7_TRAIN
594386     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_TRAIN ;
594387     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl32\EMFLOWSCORE.sas.
594388    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594389    +* Ensmbl32: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Combine model for DepVar;
594390    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594391    +* Ensmbl32: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 1 of 5;
594392    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594393    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594394    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
594395    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
594396    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
594397    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594398    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594399    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
594400    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
594401    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
594402    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594403    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594404    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
594405    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
594406    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
594407    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594408    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594409    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
594410    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
594411    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
594412    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594413    +
594414    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
594415    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
594415   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
594416    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
594417    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
594418    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
594419    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
594420    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
594421    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594422    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
594423    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
594424    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
594425    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594426    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594427    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
594428    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594429    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
594430    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
594431    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
594432    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594433    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
594434    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
594435    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
594436    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594437    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594438    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
594439    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
594440    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
594441    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594442    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594443    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
594444    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
594445    +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
594446    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
594447    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
594448    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
594449    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
594450    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
594451    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
594452    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
594453    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
594454    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
594455    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
594456    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
594457    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
594458    +LENGTH _WARN_ $4
594459    +      F_DepVar  $ 12
594460    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
594461    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
594462    +
594463    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
594464    +
594465    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
594466    +
594467    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
594468    +
594469    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
594470    +
594471    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
594472    +
594473    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
594474    +
594475    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
594476    +
594477    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
594478    +
594479    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
594480    +
594481    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
594482    +
594483    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
594484    +
594485    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
594486    +
594487    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
594488    +
594489    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
594490    +
594491    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
594492    +
594493    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
594494    +
594495    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
594496    +
594497    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
594498    +
594499    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
594500    +
594501    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
594502    +
594503    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
594504    +
594505    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
594506    +
594507    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
594508    +
594509    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
594510    +
594511    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
594512    +
594513    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
594514    +
594515    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
594516    +
594517    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
594518    +
594519    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
594520    +
594521    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
594522    +
594523    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
594524    +
594525    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
594526    +
594527    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
594528    +
594529    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
594530    +
594531    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
594532    +
594533    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
594534    +
594535    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
594536    +
594537    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
594538    +
594539    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
594540    +
594541    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
594542    +
594543    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
594544    +
594545    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
594546    +
594547    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
594548    +
594549    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
594550    +
594551    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
594552    +
594553    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
594554    +
594555    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
594556    +
594557    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
594558    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
594559    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
594560    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
594561    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
594562    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594563    +end;
MPRINT(EM_DIAGRAM):   end;
594564    +else do;
MPRINT(EM_DIAGRAM):   else do;
594565    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
594566    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
594567    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
594568    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
594569    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
594570    +   end;
MPRINT(EM_DIAGRAM):   end;
594571    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
594572    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
594573    +   end;
MPRINT(EM_DIAGRAM):   end;
594574    +   else do;
MPRINT(EM_DIAGRAM):   else do;
594575    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
594576    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
594577    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594578    +   end;
MPRINT(EM_DIAGRAM):   end;
594579    +end;
MPRINT(EM_DIAGRAM):   end;
594580    +
594581    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
594582    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
594583    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
594584    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
594585    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
594586    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594587    +end;
MPRINT(EM_DIAGRAM):   end;
594588    +else do;
MPRINT(EM_DIAGRAM):   else do;
594589    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
594590    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
594591    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
594592    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
594593    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
594594    +   end;
MPRINT(EM_DIAGRAM):   end;
594595    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
594596    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
594597    +   end;
MPRINT(EM_DIAGRAM):   end;
594598    +   else do;
MPRINT(EM_DIAGRAM):   else do;
594599    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
594600    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
594601    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594602    +   end;
MPRINT(EM_DIAGRAM):   end;
594603    +end;
MPRINT(EM_DIAGRAM):   end;
594604    +
594605    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
594606    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
594607    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
594608    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
594609    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
594610    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594611    +end;
MPRINT(EM_DIAGRAM):   end;
594612    +else do;
MPRINT(EM_DIAGRAM):   else do;
594613    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
594614    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
594615    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
594616    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
594617    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
594618    +   end;
MPRINT(EM_DIAGRAM):   end;
594619    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
594620    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
594621    +   end;
MPRINT(EM_DIAGRAM):   end;
594622    +   else do;
MPRINT(EM_DIAGRAM):   else do;
594623    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
594624    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
594625    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594626    +   end;
MPRINT(EM_DIAGRAM):   end;
594627    +end;
MPRINT(EM_DIAGRAM):   end;
594628    +
594629    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
594630    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
594631    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
594632    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
594633    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
594634    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594635    +end;
MPRINT(EM_DIAGRAM):   end;
594636    +else do;
MPRINT(EM_DIAGRAM):   else do;
594637    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
594638    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
594639    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
594640    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
594641    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
594642    +   end;
MPRINT(EM_DIAGRAM):   end;
594643    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
594644    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
594645    +   end;
MPRINT(EM_DIAGRAM):   end;
594646    +   else do;
MPRINT(EM_DIAGRAM):   else do;
594647    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
594648    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
594649    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594650    +   end;
MPRINT(EM_DIAGRAM):   end;
594651    +end;
MPRINT(EM_DIAGRAM):   end;
594652    +
594653    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
594654    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
594655    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
594656    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
594657    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
594658    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594659    +end;
MPRINT(EM_DIAGRAM):   end;
594660    +else do;
MPRINT(EM_DIAGRAM):   else do;
594661    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
594662    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
594663    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
594664    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
594665    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
594666    +   end;
MPRINT(EM_DIAGRAM):   end;
594667    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
594668    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
594669    +   end;
MPRINT(EM_DIAGRAM):   end;
594670    +   else do;
MPRINT(EM_DIAGRAM):   else do;
594671    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
594672    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
594673    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594674    +   end;
MPRINT(EM_DIAGRAM):   end;
594675    +end;
MPRINT(EM_DIAGRAM):   end;
594676    +
594677    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
594678    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
594679    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
594680    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
594681    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
594682    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594683    +end;
MPRINT(EM_DIAGRAM):   end;
594684    +else do;
MPRINT(EM_DIAGRAM):   else do;
594685    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
594686    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
594687    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
594688    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
594689    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
594690    +   end;
MPRINT(EM_DIAGRAM):   end;
594691    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
594692    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
594693    +   end;
MPRINT(EM_DIAGRAM):   end;
594694    +   else do;
MPRINT(EM_DIAGRAM):   else do;
594695    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
594696    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
594697    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594698    +   end;
MPRINT(EM_DIAGRAM):   end;
594699    +end;
MPRINT(EM_DIAGRAM):   end;
594700    +
594701    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
594702    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
594703    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
594704    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
594705    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
594706    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594707    +end;
MPRINT(EM_DIAGRAM):   end;
594708    +else do;
MPRINT(EM_DIAGRAM):   else do;
594709    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
594710    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
594711    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
594712    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
594713    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
594714    +   end;
MPRINT(EM_DIAGRAM):   end;
594715    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
594716    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
594717    +   end;
MPRINT(EM_DIAGRAM):   end;
594718    +   else do;
MPRINT(EM_DIAGRAM):   else do;
594719    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
594720    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
594721    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594722    +   end;
MPRINT(EM_DIAGRAM):   end;
594723    +end;
MPRINT(EM_DIAGRAM):   end;
594724    +
594725    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
594726    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
594727    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
594728    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
594729    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
594730    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
594731    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
594732    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
594733    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
594734    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
594735    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
594736    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
594737    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
594738    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594739    +end;
MPRINT(EM_DIAGRAM):   end;
594740    +else do;
MPRINT(EM_DIAGRAM):   else do;
594741    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
594742    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
594743    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
594744    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
594745    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
594746    +   end;
MPRINT(EM_DIAGRAM):   end;
594747    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
594748    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
594749    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
594750    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
594751    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
594752    +   end;
MPRINT(EM_DIAGRAM):   end;
594753    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
594754    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
594755    +   end;
MPRINT(EM_DIAGRAM):   end;
594756    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
594757    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
594758    +   end;
MPRINT(EM_DIAGRAM):   end;
594759    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
594760    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
594761    +   end;
MPRINT(EM_DIAGRAM):   end;
594762    +   else do;
MPRINT(EM_DIAGRAM):   else do;
594763    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
594764    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
594765    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
594766    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
594767    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
594768    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594769    +   end;
MPRINT(EM_DIAGRAM):   end;
594770    +end;
MPRINT(EM_DIAGRAM):   end;
594771    +
594772    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
594773    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
594774    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
594775    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
594776    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
594777    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
594778    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
594779    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
594780    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
594781    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
594782    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
594783    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
594784    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
594785    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
594786    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594787    +end;
MPRINT(EM_DIAGRAM):   end;
594788    +else do;
MPRINT(EM_DIAGRAM):   else do;
594789    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
594790    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
594791    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
594792    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
594793    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
594794    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
594795    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
594796    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
594797    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
594798    +         end;
MPRINT(EM_DIAGRAM):   end;
594799    +         else do;
MPRINT(EM_DIAGRAM):   else do;
594800    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
594801    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
594802    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
594803    +            end;
MPRINT(EM_DIAGRAM):   end;
594804    +         end;
MPRINT(EM_DIAGRAM):   end;
594805    +      end;
MPRINT(EM_DIAGRAM):   end;
594806    +      else do;
MPRINT(EM_DIAGRAM):   else do;
594807    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
594808    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
594809    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
594810    +         end;
MPRINT(EM_DIAGRAM):   end;
594811    +      end;
MPRINT(EM_DIAGRAM):   end;
594812    +   end;
MPRINT(EM_DIAGRAM):   end;
594813    +   else do;
MPRINT(EM_DIAGRAM):   else do;
594814    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
594815    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
594816    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
594817    +      end;
MPRINT(EM_DIAGRAM):   end;
594818    +      else do;
MPRINT(EM_DIAGRAM):   else do;
594819    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
594820    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
594821    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
594822    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
594823    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
594824    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
594825    +         end;
MPRINT(EM_DIAGRAM):   end;
594826    +      end;
MPRINT(EM_DIAGRAM):   end;
594827    +   end;
MPRINT(EM_DIAGRAM):   end;
594828    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
594829    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
594830    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
594831    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
594832    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
594833    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
594834    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594835    +   end;
MPRINT(EM_DIAGRAM):   end;
594836    +end;
MPRINT(EM_DIAGRAM):   end;
594837    +
594838    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
594839    +*** Checking missing input Interval
594840    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
594841    +
594842    +IF NMISS(
594843    +   AcceptedCmpTotal ,
594844    +   Age ,
594845    +   Frq ,
594846    +   Income ,
594847    +   Kidhome ,
594848    +   Mnt ,
594849    +   MntFishProducts ,
594850    +   MntFruits ,
594851    +   MntGoldProds ,
594852    +   MntMeatProducts ,
594853    +   MntSweetProducts ,
594854    +   MntWines ,
594855    +   MonthsAsCustomer ,
594856    +   NumCatalogPurchases ,
594857    +   NumDealsPurchases ,
594858    +   NumDistPurchases ,
594859    +   NumStorePurchases ,
594860    +   NumWebPurchases ,
594861    +   NumWebVisitsMonth ,
594862    +   RFMstat ,
594863    +   RMntFrq ,
594864    +   Recency ,
594865    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
594866    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
594867    +
594868    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
594869    +END;
MPRINT(EM_DIAGRAM):   END;
594870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
594871    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
594872    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
594873    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
594874    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
594875    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
594876    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
594877    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
594878    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
594879    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
594880    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
594881    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
594882    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
594883    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
594884    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
594885    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
594886    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
594887    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
594888    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
594889    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
594890    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
594891    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
594892    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
594893    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
594894    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
594895    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
594896    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
594897    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
594898    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
594899    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
594900    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
594901    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
594902    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
594903    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
594904    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
594905    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
594906    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
594907    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
594908    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
594909    +END;
MPRINT(EM_DIAGRAM):   END;
594910    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
594911    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
594912    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
594913    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
594914    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
594915    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
594916    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
594917    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
594918    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
594919    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
594920    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
594921    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
594922    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
594923    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
594924    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
594925    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
594926    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
594927    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
594928    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
594929    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
594930    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
594931    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
594932    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
594933    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
594934    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
594935    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
594936    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
594937    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
594938    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
594939    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
594940    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
594941    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
594942    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
594943    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
594944    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
594945    +   ELSE S_NumCatalogPurchases
594946    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
594947    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
594948    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
594949    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
594950    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
594951    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
594952    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
594953    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
594954    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
594955    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
594956    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
594957    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
594958    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
594959    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
594960    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
594961    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
594962    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
594963    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
594964    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
594965    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
594966    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
594967    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
594968    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
594969    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
594970    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
594971    +END;
MPRINT(EM_DIAGRAM):   END;
594972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
594973    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
594974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
594975    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
594976    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
594977    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
594978    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
594979    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
594980    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
594981    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
594982    +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
594983    +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
594984    +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
594985    +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
594986    +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
594987    +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
594988    +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
594989    +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
594990    +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
594991    +          +     0.09708841024031 * S_NumDealsPurchases
594992    +          +    -0.29075561032014 * S_NumDistPurchases
594993    +          +    -0.14495394259873 * S_NumStorePurchases
594994    +          +     0.11890705145732 * S_NumWebPurchases
594995    +          +    -0.16954189911344 * S_NumWebVisitsMonth
594996    +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
594997    +        S_RMntFrq  +     0.17150719398884 * S_Recency
594998    +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
594999    +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
595000    +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
595001    +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
595002    +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
595003    +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
595004    +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
595005    +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
595006    +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
595007    +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
595008    +          +     0.16274478997892 * S_NumDealsPurchases
595009    +          +     0.03966958784582 * S_NumDistPurchases
595010    +          +    -0.04714110726598 * S_NumStorePurchases
595011    +          +    -0.02124229528082 * S_NumWebPurchases
595012    +          +     0.29753299776832 * S_NumWebVisitsMonth
595013    +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
595014    +        S_RMntFrq  +     -0.3340129986623 * S_Recency
595015    +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
595016    +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
595017    +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
595018    +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
595019    +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
595020    +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
595021    +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
595022    +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
595023    +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
595024    +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
595025    +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
595026    +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
595027    +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
595028    +        EducationGraduation  +     0.00619669837452 * EducationMaster
595029    +          +    -0.05037639679806 * Marital_StatusDivorced
595030    +          +     0.28781968727878 * Marital_StatusMarried
595031    +          +    -0.20382417074384 * Marital_StatusSingle
595032    +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
595033    +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
595034    +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
595035    +        EducationGraduation  +    -0.06952670554019 * EducationMaster
595036    +          +     0.06970969219123 * Marital_StatusDivorced
595037    +          +    -0.15787475744986 * Marital_StatusMarried
595038    +          +     0.14345344072192 * Marital_StatusSingle
595039    +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
595040    +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
595041    +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
595042    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
595043    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
595044    +END;
MPRINT(EM_DIAGRAM):   END;
595045    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
595046    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
595047    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
595048    +END;
MPRINT(EM_DIAGRAM):   END;
595049    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595050    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
595051    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595052    +
595053    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
595054    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
595055    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
595056    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
595057    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
595058    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
595059    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
595060    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
595061    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
595062    +end;
MPRINT(EM_DIAGRAM):   end;
595063    +else do;
MPRINT(EM_DIAGRAM):   else do;
595064    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
595065    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
595066    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
595067    +   end;
MPRINT(EM_DIAGRAM):   end;
595068    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
595069    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
595070    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
595071    +   end;
MPRINT(EM_DIAGRAM):   end;
595072    +   else do;
MPRINT(EM_DIAGRAM):   else do;
595073    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
595074    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
595075    +   end;
MPRINT(EM_DIAGRAM):   end;
595076    +end;
MPRINT(EM_DIAGRAM):   end;
595077    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
595078    +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
595079    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
595080    +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
595081    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
595082    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
595083    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
595084    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
595085    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
595086    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
595087    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
595088    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
595089    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
595090    +END;
MPRINT(EM_DIAGRAM):   END;
595091    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
595092    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
595093    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
595094    +END;
MPRINT(EM_DIAGRAM):   END;
595095    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
595096    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
595097    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
595098    +END;
MPRINT(EM_DIAGRAM):   END;
595099    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
595100    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
595101    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
595102    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
595103    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
595104    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
595105    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
595106    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595107    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
595108    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595109    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
595110    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
595111    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
595112    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
595113    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
595114    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
595115    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
595116    +END;
MPRINT(EM_DIAGRAM):   END;
595117    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
595118    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
595119    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
595120    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
595121    +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
595122    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595123    +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
595124    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595125    +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
595126    +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
595127    +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
595128    +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
595129    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595130    +* Renaming Into variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural7;
595131    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595132    +length AutoNeural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural7_I_DepVar $32;
595133    +drop AutoNeural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_I_DepVar;
595134    +AutoNeural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural7_I_DepVar = I_DepVar;
595135    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595136    +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
595137    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595138    +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
595139    +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
595140    +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
595141    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595142    +* Ensmbl32: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 2 of 5;
595143    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595144    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595145    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
595146    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
595147    +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
595148    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595149    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
595150    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
595151    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
595152    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
595153    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
595154    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
595155    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
595156    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
595157    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
595158    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
595159    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
595160    +LENGTH _WARN_ $4
595161    +      F_DepVar  $ 12
595162    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
595163    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
595164    +
595165    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
595166    +
595167    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
595168    +
595169    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
595170    +
595171    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
595172    +
595173    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
595174    +
595175    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
595176    +
595177    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
595178    +
595179    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
595180    +
595181    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
595182    +
595183    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
595184    +
595185    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
595186    +
595187    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
595188    +
595189    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
595190    +
595191    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
595192    +
595193    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
595194    +
595195    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
595196    +
595197    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
595198    +
595199    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
595200    +
595201    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
595202    +
595203    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
595204    +
595205    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
595206    +
595207    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
595208    +
595209    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
595210    +
595211    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
595212    +
595213    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
595214    +
595215    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
595216    +
595217    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
595218    +
595219    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
595220    +
595221    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
595222    +
595223    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
595224    +
595225    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
595226    +
595227    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
595228    +
595229    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
595230    +
595231    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
595232    +
595233    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
595234    +
595235    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
595236    +
595237    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
595238    +
595239    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
595240    +
595241    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
595242    +
595243    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
595244    +
595245    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
595246    +
595247    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
595248    +
595249    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
595250    +
595251    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
595252    +
595253    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
595254    +
595255    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
595256    +
595257    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
595258    +
595259    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
595260    +
595261    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
595262    +
595263    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
595264    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
595265    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
595266    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
595267    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
595268    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595269    +end;
MPRINT(EM_DIAGRAM):   end;
595270    +else do;
MPRINT(EM_DIAGRAM):   else do;
595271    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
595272    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
595273    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
595274    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
595275    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
595276    +   end;
MPRINT(EM_DIAGRAM):   end;
595277    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
595278    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
595279    +   end;
MPRINT(EM_DIAGRAM):   end;
595280    +   else do;
MPRINT(EM_DIAGRAM):   else do;
595281    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
595282    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
595283    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595284    +   end;
MPRINT(EM_DIAGRAM):   end;
595285    +end;
MPRINT(EM_DIAGRAM):   end;
595286    +
595287    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
595288    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
595289    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
595290    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
595291    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
595292    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595293    +end;
MPRINT(EM_DIAGRAM):   end;
595294    +else do;
MPRINT(EM_DIAGRAM):   else do;
595295    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
595296    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
595297    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
595298    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
595299    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
595300    +   end;
MPRINT(EM_DIAGRAM):   end;
595301    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
595302    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
595303    +   end;
MPRINT(EM_DIAGRAM):   end;
595304    +   else do;
MPRINT(EM_DIAGRAM):   else do;
595305    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
595306    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
595307    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595308    +   end;
MPRINT(EM_DIAGRAM):   end;
595309    +end;
MPRINT(EM_DIAGRAM):   end;
595310    +
595311    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
595312    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
595313    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
595314    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
595315    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
595316    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595317    +end;
MPRINT(EM_DIAGRAM):   end;
595318    +else do;
MPRINT(EM_DIAGRAM):   else do;
595319    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
595320    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
595321    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
595322    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
595323    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
595324    +   end;
MPRINT(EM_DIAGRAM):   end;
595325    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
595326    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
595327    +   end;
MPRINT(EM_DIAGRAM):   end;
595328    +   else do;
MPRINT(EM_DIAGRAM):   else do;
595329    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
595330    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
595331    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595332    +   end;
MPRINT(EM_DIAGRAM):   end;
595333    +end;
MPRINT(EM_DIAGRAM):   end;
595334    +
595335    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
595336    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
595337    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
595338    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
595339    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
595340    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595341    +end;
MPRINT(EM_DIAGRAM):   end;
595342    +else do;
MPRINT(EM_DIAGRAM):   else do;
595343    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
595344    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
595345    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
595346    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
595347    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
595348    +   end;
MPRINT(EM_DIAGRAM):   end;
595349    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
595350    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
595351    +   end;
MPRINT(EM_DIAGRAM):   end;
595352    +   else do;
MPRINT(EM_DIAGRAM):   else do;
595353    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
595354    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
595355    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595356    +   end;
MPRINT(EM_DIAGRAM):   end;
595357    +end;
MPRINT(EM_DIAGRAM):   end;
595358    +
595359    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
595360    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
595361    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
595362    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
595363    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
595364    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595365    +end;
MPRINT(EM_DIAGRAM):   end;
595366    +else do;
MPRINT(EM_DIAGRAM):   else do;
595367    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
595368    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
595369    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
595370    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
595371    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
595372    +   end;
MPRINT(EM_DIAGRAM):   end;
595373    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
595374    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
595375    +   end;
MPRINT(EM_DIAGRAM):   end;
595376    +   else do;
MPRINT(EM_DIAGRAM):   else do;
595377    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
595378    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
595379    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595380    +   end;
MPRINT(EM_DIAGRAM):   end;
595381    +end;
MPRINT(EM_DIAGRAM):   end;
595382    +
595383    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
595384    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
595385    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
595386    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
595387    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
595388    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595389    +end;
MPRINT(EM_DIAGRAM):   end;
595390    +else do;
MPRINT(EM_DIAGRAM):   else do;
595391    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
595392    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
595393    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
595394    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
595395    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
595396    +   end;
MPRINT(EM_DIAGRAM):   end;
595397    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
595398    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
595399    +   end;
MPRINT(EM_DIAGRAM):   end;
595400    +   else do;
MPRINT(EM_DIAGRAM):   else do;
595401    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
595402    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
595403    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595404    +   end;
MPRINT(EM_DIAGRAM):   end;
595405    +end;
MPRINT(EM_DIAGRAM):   end;
595406    +
595407    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
595408    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
595409    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
595410    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
595411    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
595412    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595413    +end;
MPRINT(EM_DIAGRAM):   end;
595414    +else do;
MPRINT(EM_DIAGRAM):   else do;
595415    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
595416    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
595417    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
595418    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
595419    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
595420    +   end;
MPRINT(EM_DIAGRAM):   end;
595421    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
595422    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
595423    +   end;
MPRINT(EM_DIAGRAM):   end;
595424    +   else do;
MPRINT(EM_DIAGRAM):   else do;
595425    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
595426    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
595427    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595428    +   end;
MPRINT(EM_DIAGRAM):   end;
595429    +end;
MPRINT(EM_DIAGRAM):   end;
595430    +
595431    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
595432    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
595433    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
595434    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
595435    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
595436    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
595437    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
595438    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
595439    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
595440    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
595441    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
595442    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
595443    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
595444    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595445    +end;
MPRINT(EM_DIAGRAM):   end;
595446    +else do;
MPRINT(EM_DIAGRAM):   else do;
595447    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
595448    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
595449    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
595450    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
595451    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
595452    +   end;
MPRINT(EM_DIAGRAM):   end;
595453    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
595454    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
595455    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
595456    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
595457    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
595458    +   end;
MPRINT(EM_DIAGRAM):   end;
595459    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
595460    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
595461    +   end;
MPRINT(EM_DIAGRAM):   end;
595462    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
595463    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
595464    +   end;
MPRINT(EM_DIAGRAM):   end;
595465    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
595466    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
595467    +   end;
MPRINT(EM_DIAGRAM):   end;
595468    +   else do;
MPRINT(EM_DIAGRAM):   else do;
595469    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
595470    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
595471    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
595472    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
595473    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
595474    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595475    +   end;
MPRINT(EM_DIAGRAM):   end;
595476    +end;
MPRINT(EM_DIAGRAM):   end;
595477    +
595478    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
595479    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
595480    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
595481    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
595482    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
595483    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
595484    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
595485    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
595486    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
595487    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
595488    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
595489    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
595490    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
595491    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
595492    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595493    +end;
MPRINT(EM_DIAGRAM):   end;
595494    +else do;
MPRINT(EM_DIAGRAM):   else do;
595495    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
595496    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
595497    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
595498    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
595499    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
595500    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
595501    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
595502    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
595503    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
595504    +         end;
MPRINT(EM_DIAGRAM):   end;
595505    +         else do;
MPRINT(EM_DIAGRAM):   else do;
595506    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
595507    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
595508    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
595509    +            end;
MPRINT(EM_DIAGRAM):   end;
595510    +         end;
MPRINT(EM_DIAGRAM):   end;
595511    +      end;
MPRINT(EM_DIAGRAM):   end;
595512    +      else do;
MPRINT(EM_DIAGRAM):   else do;
595513    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
595514    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
595515    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
595516    +         end;
MPRINT(EM_DIAGRAM):   end;
595517    +      end;
MPRINT(EM_DIAGRAM):   end;
595518    +   end;
MPRINT(EM_DIAGRAM):   end;
595519    +   else do;
MPRINT(EM_DIAGRAM):   else do;
595520    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
595521    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
595522    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
595523    +      end;
MPRINT(EM_DIAGRAM):   end;
595524    +      else do;
MPRINT(EM_DIAGRAM):   else do;
595525    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
595526    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
595527    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
595528    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
595529    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
595530    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
595531    +         end;
MPRINT(EM_DIAGRAM):   end;
595532    +      end;
MPRINT(EM_DIAGRAM):   end;
595533    +   end;
MPRINT(EM_DIAGRAM):   end;
595534    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
595535    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
595536    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
595537    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
595538    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
595539    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
595540    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595541    +   end;
MPRINT(EM_DIAGRAM):   end;
595542    +end;
MPRINT(EM_DIAGRAM):   end;
595543    +
595544    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595545    +*** Checking missing input Interval
595546    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
595547    +
595548    +IF NMISS(
595549    +   AcceptedCmpTotal ,
595550    +   Age ,
595551    +   Frq ,
595552    +   Income ,
595553    +   Kidhome ,
595554    +   Mnt ,
595555    +   MntFishProducts ,
595556    +   MntFruits ,
595557    +   MntGoldProds ,
595558    +   MntMeatProducts ,
595559    +   MntSweetProducts ,
595560    +   MntWines ,
595561    +   MonthsAsCustomer ,
595562    +   NumCatalogPurchases ,
595563    +   NumDealsPurchases ,
595564    +   NumDistPurchases ,
595565    +   NumStorePurchases ,
595566    +   NumWebPurchases ,
595567    +   NumWebVisitsMonth ,
595568    +   RFMstat ,
595569    +   RMntFrq ,
595570    +   Recency ,
595571    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
595572    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
595573    +
595574    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
595575    +END;
MPRINT(EM_DIAGRAM):   END;
595576    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595577    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
595578    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595579    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
595580    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
595581    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
595582    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
595583    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
595584    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
595585    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
595586    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
595587    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
595588    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
595589    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
595590    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
595591    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
595592    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
595593    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
595594    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
595595    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
595596    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
595597    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
595598    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
595599    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
595600    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
595601    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
595602    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
595603    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
595604    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
595605    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
595606    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
595607    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
595608    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
595609    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
595610    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
595611    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
595612    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
595613    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
595614    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
595615    +END;
MPRINT(EM_DIAGRAM):   END;
595616    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
595617    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
595618    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
595619    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
595620    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
595621    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
595622    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
595623    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
595624    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
595625    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
595626    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
595627    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
595628    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
595629    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
595630    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
595631    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
595632    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
595633    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
595634    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
595635    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
595636    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
595637    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
595638    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
595639    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
595640    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
595641    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
595642    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
595643    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
595644    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
595645    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
595646    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
595647    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
595648    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
595649    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
595650    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
595651    +   ELSE S_NumCatalogPurchases
595652    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
595653    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
595654    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
595655    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
595656    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
595657    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
595658    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
595659    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
595660    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
595661    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
595662    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
595663    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
595664    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
595665    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
595666    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
595667    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
595668    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
595669    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
595670    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
595671    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
595672    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
595673    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
595674    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
595675    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
595676    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
595677    +END;
MPRINT(EM_DIAGRAM):   END;
595678    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595679    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
595680    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595681    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595682    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
595683    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595684    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595685    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
595686    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595687    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
595688    +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
595689    +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
595690    +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
595691    +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
595692    +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
595693    +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
595694    +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
595695    +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
595696    +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
595697    +          +    -1.14704878034134 * S_NumDealsPurchases
595698    +          +    -0.17763404274659 * S_NumDistPurchases
595699    +          +     0.08894400267969 * S_NumStorePurchases
595700    +          +     0.59283747891957 * S_NumWebPurchases
595701    +          +     0.85268274682505 * S_NumWebVisitsMonth
595702    +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
595703    +        S_RMntFrq  +    -1.22871580072103 * S_Recency
595704    +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
595705    +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
595706    +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
595707    +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
595708    +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
595709    +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
595710    +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
595711    +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
595712    +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
595713    +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
595714    +          +    -0.80841566068716 * S_NumDealsPurchases
595715    +          +    -0.17995640033768 * S_NumDistPurchases
595716    +          +     0.00713417460936 * S_NumStorePurchases
595717    +          +     0.57881024323076 * S_NumWebPurchases
595718    +          +    -1.35134224257365 * S_NumWebVisitsMonth
595719    +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
595720    +        S_RMntFrq  +     1.16978656262499 * S_Recency
595721    +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
595722    +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
595723    +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
595724    +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
595725    +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
595726    +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
595727    +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
595728    +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
595729    +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
595730    +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
595731    +          +     0.57891364118717 * S_NumDealsPurchases
595732    +          +    -0.31024556838688 * S_NumDistPurchases
595733    +          +    -1.48708542986704 * S_NumStorePurchases
595734    +          +    -0.93009875249206 * S_NumWebPurchases
595735    +          +     2.01900039122935 * S_NumWebVisitsMonth
595736    +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
595737    +        S_RMntFrq  +    -2.30414631760388 * S_Recency
595738    +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
595739    +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
595740    +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
595741    +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
595742    +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
595743    +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
595744    +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
595745    +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
595746    +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
595747    +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
595748    +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
595749    +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
595750    +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
595751    +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
595752    +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
595753    +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
595754    +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
595755    +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
595756    +        EducationGraduation  +    -0.68730596079478 * EducationMaster
595757    +          +     0.55883606830033 * Marital_StatusDivorced
595758    +          +    -0.54530037567066 * Marital_StatusMarried
595759    +          +    -0.52994736075753 * Marital_StatusSingle
595760    +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
595761    +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
595762    +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
595763    +        EducationGraduation  +     0.31201349236277 * EducationMaster
595764    +          +    -1.07368484057033 * Marital_StatusDivorced
595765    +          +     2.73313504711262 * Marital_StatusMarried
595766    +          +    -2.18530462876058 * Marital_StatusSingle
595767    +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
595768    +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
595769    +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
595770    +        EducationGraduation  +    -0.35544166792219 * EducationMaster
595771    +          +     0.49993144243043 * Marital_StatusDivorced
595772    +          +    -0.38953339116829 * Marital_StatusMarried
595773    +          +    -0.10836287319942 * Marital_StatusSingle
595774    +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
595775    +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
595776    +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
595777    +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
595778    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
595779    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
595780    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
595781    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
595782    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
595783    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
595784    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
595785    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
595786    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
595787    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
595788    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
595789    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
595790    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
595791    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
595792    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
595793    +END;
MPRINT(EM_DIAGRAM):   END;
595794    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
595795    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
595796    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
595797    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
595798    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
595799    +END;
MPRINT(EM_DIAGRAM):   END;
595800    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595801    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
595802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595803    +
595804    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
595805    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
595806    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
595807    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
595808    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
595809    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
595810    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
595811    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
595812    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
595813    +end;
MPRINT(EM_DIAGRAM):   end;
595814    +else do;
MPRINT(EM_DIAGRAM):   else do;
595815    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
595816    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
595817    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
595818    +   end;
MPRINT(EM_DIAGRAM):   end;
595819    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
595820    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
595821    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
595822    +   end;
MPRINT(EM_DIAGRAM):   end;
595823    +   else do;
MPRINT(EM_DIAGRAM):   else do;
595824    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
595825    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
595826    +   end;
MPRINT(EM_DIAGRAM):   end;
595827    +end;
MPRINT(EM_DIAGRAM):   end;
595828    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
595829    +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
595830    +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
595831    +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
595832    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
595833    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
595834    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
595835    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
595836    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
595837    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
595838    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
595839    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
595840    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
595841    +END;
MPRINT(EM_DIAGRAM):   END;
595842    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
595843    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
595844    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
595845    +END;
MPRINT(EM_DIAGRAM):   END;
595846    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
595847    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
595848    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
595849    +END;
MPRINT(EM_DIAGRAM):   END;
595850    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
595851    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
595852    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
595853    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
595854    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
595855    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
595856    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
595857    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595858    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
595859    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
595860    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
595861    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
595862    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
595863    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
595864    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
595865    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
595866    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
595867    +END;
MPRINT(EM_DIAGRAM):   END;
595868    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
595869    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
595870    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
595871    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
595872    +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
595873    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595874    +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
595875    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595876    +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
595877    +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
595878    +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
595879    +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
595880    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595881    +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
595882    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595883    +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
595884    +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
595885    +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
595886    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595887    +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
595888    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595889    +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
595890    +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
595891    +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
595892    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595893    +* Ensmbl32: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 3 of 5;
595894    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595895    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595896    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
595897    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
595898    +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
595899    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
595900    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
595901    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
595902    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
595903    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
595904    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
595905    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
595906    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
595907    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
595908    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
595909    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
595910    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
595911    +LENGTH _WARN_ $4
595912    +      F_DepVar  $ 12
595913    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
595914    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
595915    +
595916    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
595917    +
595918    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
595919    +
595920    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
595921    +
595922    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
595923    +
595924    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
595925    +
595926    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
595927    +
595928    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
595929    +
595930    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
595931    +
595932    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
595933    +
595934    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
595935    +
595936    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
595937    +
595938    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
595939    +
595940    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
595941    +
595942    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
595943    +
595944    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
595945    +
595946    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
595947    +
595948    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
595949    +
595950    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
595951    +
595952    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
595953    +
595954    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
595955    +
595956    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
595957    +
595958    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
595959    +
595960    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
595961    +
595962    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
595963    +
595964    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
595965    +
595966    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
595967    +
595968    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
595969    +
595970    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
595971    +
595972    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
595973    +
595974    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
595975    +
595976    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
595977    +
595978    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
595979    +
595980    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
595981    +
595982    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
595983    +
595984    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
595985    +
595986    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
595987    +
595988    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
595989    +
595990    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
595991    +
595992    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
595993    +
595994    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
595995    +
595996    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
595997    +
595998    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
595999    +
596000    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
596001    +
596002    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
596003    +
596004    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
596005    +
596006    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
596007    +
596008    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
596009    +
596010    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
596011    +
596012    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
596013    +
596014    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
596015    +
596016    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
596017    +
596018    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
596019    +
596020    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
596021    +
596022    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
596023    +
596024    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
596025    +
596026    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
596027    +
596028    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
596029    +
596030    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
596031    +
596032    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
596033    +
596034    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
596035    +
596036    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
596037    +
596038    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
596039    +
596040    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
596041    +
596042    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
596043    +
596044    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
596045    +
596046    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
596047    +
596048    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
596049    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
596050    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
596051    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
596052    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
596053    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596054    +end;
MPRINT(EM_DIAGRAM):   end;
596055    +else do;
MPRINT(EM_DIAGRAM):   else do;
596056    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
596057    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
596058    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
596059    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
596060    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
596061    +   end;
MPRINT(EM_DIAGRAM):   end;
596062    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
596063    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
596064    +   end;
MPRINT(EM_DIAGRAM):   end;
596065    +   else do;
MPRINT(EM_DIAGRAM):   else do;
596066    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
596067    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
596068    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596069    +   end;
MPRINT(EM_DIAGRAM):   end;
596070    +end;
MPRINT(EM_DIAGRAM):   end;
596071    +
596072    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
596073    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
596074    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
596075    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
596076    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
596077    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596078    +end;
MPRINT(EM_DIAGRAM):   end;
596079    +else do;
MPRINT(EM_DIAGRAM):   else do;
596080    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
596081    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
596082    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
596083    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
596084    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
596085    +   end;
MPRINT(EM_DIAGRAM):   end;
596086    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
596087    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
596088    +   end;
MPRINT(EM_DIAGRAM):   end;
596089    +   else do;
MPRINT(EM_DIAGRAM):   else do;
596090    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
596091    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
596092    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596093    +   end;
MPRINT(EM_DIAGRAM):   end;
596094    +end;
MPRINT(EM_DIAGRAM):   end;
596095    +
596096    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
596097    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
596098    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
596099    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
596100    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
596101    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596102    +end;
MPRINT(EM_DIAGRAM):   end;
596103    +else do;
MPRINT(EM_DIAGRAM):   else do;
596104    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
596105    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
596106    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
596107    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
596108    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
596109    +   end;
MPRINT(EM_DIAGRAM):   end;
596110    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
596111    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
596112    +   end;
MPRINT(EM_DIAGRAM):   end;
596113    +   else do;
MPRINT(EM_DIAGRAM):   else do;
596114    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
596115    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
596116    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596117    +   end;
MPRINT(EM_DIAGRAM):   end;
596118    +end;
MPRINT(EM_DIAGRAM):   end;
596119    +
596120    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
596121    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
596122    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
596123    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
596124    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
596125    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596126    +end;
MPRINT(EM_DIAGRAM):   end;
596127    +else do;
MPRINT(EM_DIAGRAM):   else do;
596128    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
596129    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
596130    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
596131    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
596132    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
596133    +   end;
MPRINT(EM_DIAGRAM):   end;
596134    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
596135    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
596136    +   end;
MPRINT(EM_DIAGRAM):   end;
596137    +   else do;
MPRINT(EM_DIAGRAM):   else do;
596138    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
596139    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
596140    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596141    +   end;
MPRINT(EM_DIAGRAM):   end;
596142    +end;
MPRINT(EM_DIAGRAM):   end;
596143    +
596144    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
596145    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
596146    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
596147    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
596148    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
596149    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596150    +end;
MPRINT(EM_DIAGRAM):   end;
596151    +else do;
MPRINT(EM_DIAGRAM):   else do;
596152    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
596153    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
596154    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
596155    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
596156    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
596157    +   end;
MPRINT(EM_DIAGRAM):   end;
596158    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
596159    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
596160    +   end;
MPRINT(EM_DIAGRAM):   end;
596161    +   else do;
MPRINT(EM_DIAGRAM):   else do;
596162    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
596163    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
596164    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596165    +   end;
MPRINT(EM_DIAGRAM):   end;
596166    +end;
MPRINT(EM_DIAGRAM):   end;
596167    +
596168    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
596169    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
596170    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
596171    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
596172    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
596173    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596174    +end;
MPRINT(EM_DIAGRAM):   end;
596175    +else do;
MPRINT(EM_DIAGRAM):   else do;
596176    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
596177    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
596178    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
596179    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
596180    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
596181    +   end;
MPRINT(EM_DIAGRAM):   end;
596182    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
596183    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
596184    +   end;
MPRINT(EM_DIAGRAM):   end;
596185    +   else do;
MPRINT(EM_DIAGRAM):   else do;
596186    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
596187    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
596188    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596189    +   end;
MPRINT(EM_DIAGRAM):   end;
596190    +end;
MPRINT(EM_DIAGRAM):   end;
596191    +
596192    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
596193    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
596194    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
596195    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
596196    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
596197    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596198    +end;
MPRINT(EM_DIAGRAM):   end;
596199    +else do;
MPRINT(EM_DIAGRAM):   else do;
596200    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
596201    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
596202    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
596203    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
596204    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
596205    +   end;
MPRINT(EM_DIAGRAM):   end;
596206    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
596207    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
596208    +   end;
MPRINT(EM_DIAGRAM):   end;
596209    +   else do;
MPRINT(EM_DIAGRAM):   else do;
596210    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
596211    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
596212    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596213    +   end;
MPRINT(EM_DIAGRAM):   end;
596214    +end;
MPRINT(EM_DIAGRAM):   end;
596215    +
596216    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
596217    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
596218    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
596219    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
596220    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
596221    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
596222    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
596223    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
596224    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
596225    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
596226    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
596227    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
596228    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
596229    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596230    +end;
MPRINT(EM_DIAGRAM):   end;
596231    +else do;
MPRINT(EM_DIAGRAM):   else do;
596232    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
596233    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
596234    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
596235    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
596236    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
596237    +   end;
MPRINT(EM_DIAGRAM):   end;
596238    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
596239    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
596240    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
596241    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
596242    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
596243    +   end;
MPRINT(EM_DIAGRAM):   end;
596244    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
596245    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
596246    +   end;
MPRINT(EM_DIAGRAM):   end;
596247    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
596248    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
596249    +   end;
MPRINT(EM_DIAGRAM):   end;
596250    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
596251    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
596252    +   end;
MPRINT(EM_DIAGRAM):   end;
596253    +   else do;
MPRINT(EM_DIAGRAM):   else do;
596254    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
596255    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
596256    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
596257    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
596258    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
596259    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596260    +   end;
MPRINT(EM_DIAGRAM):   end;
596261    +end;
MPRINT(EM_DIAGRAM):   end;
596262    +
596263    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
596264    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
596265    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
596266    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
596267    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
596268    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
596269    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
596270    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
596271    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
596272    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
596273    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
596274    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
596275    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
596276    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
596277    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596278    +end;
MPRINT(EM_DIAGRAM):   end;
596279    +else do;
MPRINT(EM_DIAGRAM):   else do;
596280    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
596281    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
596282    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
596283    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
596284    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
596285    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
596286    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
596287    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
596288    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
596289    +         end;
MPRINT(EM_DIAGRAM):   end;
596290    +         else do;
MPRINT(EM_DIAGRAM):   else do;
596291    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
596292    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
596293    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
596294    +            end;
MPRINT(EM_DIAGRAM):   end;
596295    +         end;
MPRINT(EM_DIAGRAM):   end;
596296    +      end;
MPRINT(EM_DIAGRAM):   end;
596297    +      else do;
MPRINT(EM_DIAGRAM):   else do;
596298    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
596299    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
596300    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
596301    +         end;
MPRINT(EM_DIAGRAM):   end;
596302    +      end;
MPRINT(EM_DIAGRAM):   end;
596303    +   end;
MPRINT(EM_DIAGRAM):   end;
596304    +   else do;
MPRINT(EM_DIAGRAM):   else do;
596305    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
596306    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
596307    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
596308    +      end;
MPRINT(EM_DIAGRAM):   end;
596309    +      else do;
MPRINT(EM_DIAGRAM):   else do;
596310    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
596311    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
596312    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
596313    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
596314    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
596315    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
596316    +         end;
MPRINT(EM_DIAGRAM):   end;
596317    +      end;
MPRINT(EM_DIAGRAM):   end;
596318    +   end;
MPRINT(EM_DIAGRAM):   end;
596319    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
596320    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
596321    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
596322    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
596323    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
596324    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
596325    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596326    +   end;
MPRINT(EM_DIAGRAM):   end;
596327    +end;
MPRINT(EM_DIAGRAM):   end;
596328    +
596329    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
596330    +*** Checking missing input Interval
596331    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
596332    +
596333    +IF NMISS(
596334    +   AcceptedCmpTotal ,
596335    +   Age ,
596336    +   Frq ,
596337    +   Income ,
596338    +   Kidhome ,
596339    +   Mnt ,
596340    +   MntFishProducts ,
596341    +   MntFruits ,
596342    +   MntGoldProds ,
596343    +   MntMeatProducts ,
596344    +   MntSweetProducts ,
596345    +   MntWines ,
596346    +   MonthsAsCustomer ,
596347    +   NumCatalogPurchases ,
596348    +   NumDealsPurchases ,
596349    +   NumDistPurchases ,
596350    +   NumStorePurchases ,
596351    +   NumWebPurchases ,
596352    +   NumWebVisitsMonth ,
596353    +   RFMstat ,
596354    +   RMntFrq ,
596355    +   Recency ,
596356    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
596357    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
596358    +
596359    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
596360    +END;
MPRINT(EM_DIAGRAM):   END;
596361    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
596362    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
596363    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
596364    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
596365    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
596366    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
596367    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
596368    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
596369    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
596370    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
596371    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
596372    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
596373    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
596374    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
596375    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
596376    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
596377    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
596378    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
596379    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
596380    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
596381    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
596382    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
596383    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
596384    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
596385    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
596386    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
596387    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
596388    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
596389    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
596390    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
596391    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
596392    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
596393    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
596394    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
596395    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
596396    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
596397    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
596398    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
596399    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
596400    +END;
MPRINT(EM_DIAGRAM):   END;
596401    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
596402    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
596403    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
596404    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
596405    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
596406    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
596407    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
596408    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
596409    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
596410    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
596411    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
596412    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
596413    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
596414    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
596415    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
596416    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
596417    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
596418    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
596419    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
596420    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
596421    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
596422    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
596423    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
596424    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
596425    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
596426    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
596427    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
596428    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
596429    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
596430    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
596431    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
596432    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
596433    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
596434    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
596435    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
596436    +   ELSE S_NumCatalogPurchases
596437    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
596438    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
596439    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
596440    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
596441    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
596442    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
596443    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
596444    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
596445    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
596446    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
596447    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
596448    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
596449    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
596450    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
596451    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
596452    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
596453    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
596454    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
596455    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
596456    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
596457    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
596458    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
596459    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
596460    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
596461    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
596462    +END;
MPRINT(EM_DIAGRAM):   END;
596463    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
596464    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
596465    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
596466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
596467    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
596468    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
596469    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
596470    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
596471    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
596472    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
596473    +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
596474    +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
596475    +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
596476    +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
596477    +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
596478    +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
596479    +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
596480    +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
596481    +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
596482    +          +     1.17276395296242 * S_NumDealsPurchases
596483    +          +     0.26632768295477 * S_NumDistPurchases
596484    +          +    -1.26575615903579 * S_NumStorePurchases
596485    +          +    -0.95316107557927 * S_NumWebPurchases
596486    +          +     1.01828574356487 * S_NumWebVisitsMonth
596487    +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
596488    +        S_RMntFrq  +    -0.82943281422857 * S_Recency
596489    +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
596490    +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
596491    +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
596492    +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
596493    +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
596494    +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
596495    +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
596496    +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
596497    +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
596498    +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
596499    +          +     1.14485571201233 * S_NumDealsPurchases
596500    +          +     0.21414266588987 * S_NumDistPurchases
596501    +          +    -0.10530090074297 * S_NumStorePurchases
596502    +          +    -0.41712321238458 * S_NumWebPurchases
596503    +          +    -0.99760766791108 * S_NumWebVisitsMonth
596504    +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
596505    +        S_RMntFrq  +     1.10040128548883 * S_Recency
596506    +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
596507    +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
596508    +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
596509    +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
596510    +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
596511    +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
596512    +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
596513    +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
596514    +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
596515    +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
596516    +          +      0.7196418967437 * S_NumDealsPurchases
596517    +          +     0.69035286374177 * S_NumDistPurchases
596518    +          +     0.38027656631135 * S_NumStorePurchases
596519    +          +    -0.18878358997924 * S_NumWebPurchases
596520    +          +     1.61962062004798 * S_NumWebVisitsMonth
596521    +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
596522    +        S_RMntFrq  +    -2.13821542142822 * S_Recency
596523    +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
596524    +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
596525    +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
596526    +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
596527    +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
596528    +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
596529    +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
596530    +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
596531    +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
596532    +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
596533    +          +    -0.00642902007204 * S_NumDealsPurchases
596534    +          +     0.29785069480367 * S_NumDistPurchases
596535    +          +    -0.42243322063147 * S_NumStorePurchases
596536    +          +     0.54880896338383 * S_NumWebPurchases
596537    +          +    -0.12525846016886 * S_NumWebVisitsMonth
596538    +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
596539    +        S_RMntFrq  +     0.10252211581449 * S_Recency
596540    +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
596541    +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
596542    +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
596543    +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
596544    +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
596545    +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
596546    +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
596547    +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
596548    +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
596549    +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
596550    +          +    -0.48404738328225 * S_NumDealsPurchases
596551    +          +    -0.02464180457879 * S_NumDistPurchases
596552    +          +     1.17201831082067 * S_NumStorePurchases
596553    +          +     0.57453655167516 * S_NumWebPurchases
596554    +          +    -1.94417019790248 * S_NumWebVisitsMonth
596555    +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
596556    +        S_RMntFrq  +      1.6169916658132 * S_Recency
596557    +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
596558    +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
596559    +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
596560    +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
596561    +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
596562    +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
596563    +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
596564    +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
596565    +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
596566    +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
596567    +          +    -1.49850531967483 * S_NumDealsPurchases
596568    +          +    -0.82105466264223 * S_NumDistPurchases
596569    +          +     0.29984603642824 * S_NumStorePurchases
596570    +          +     0.06557123721611 * S_NumWebPurchases
596571    +          +     1.04754749365002 * S_NumWebVisitsMonth
596572    +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
596573    +        S_RMntFrq  +     0.12396789666359 * S_Recency
596574    +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
596575    +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
596576    +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
596577    +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
596578    +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
596579    +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
596580    +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
596581    +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
596582    +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
596583    +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
596584    +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
596585    +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
596586    +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
596587    +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
596588    +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
596589    +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
596590    +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
596591    +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
596592    +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
596593    +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
596594    +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
596595    +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
596596    +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
596597    +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
596598    +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
596599    +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
596600    +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
596601    +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
596602    +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
596603    +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
596604    +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
596605    +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
596606    +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
596607    +        EducationGraduation  +     0.07595631354847 * EducationMaster
596608    +          +     0.24583509957712 * Marital_StatusDivorced
596609    +          +    -0.22681931588361 * Marital_StatusMarried
596610    +          +    -0.12924106229536 * Marital_StatusSingle
596611    +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
596612    +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
596613    +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
596614    +        EducationGraduation  +     0.23015089246655 * EducationMaster
596615    +          +    -0.12585334311068 * Marital_StatusDivorced
596616    +          +    -0.20835502467207 * Marital_StatusMarried
596617    +          +    -0.13839534449368 * Marital_StatusSingle
596618    +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
596619    +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
596620    +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
596621    +        EducationGraduation  +    -0.03608560158257 * EducationMaster
596622    +          +     0.35106363238113 * Marital_StatusDivorced
596623    +          +     -1.3414808583918 * Marital_StatusMarried
596624    +          +     1.40835320798486 * Marital_StatusSingle
596625    +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
596626    +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
596627    +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
596628    +        EducationGraduation  +      0.1746658332011 * EducationMaster
596629    +          +     0.48174546958393 * Marital_StatusDivorced
596630    +          +    -0.41416978858191 * Marital_StatusMarried
596631    +          +    -0.23376801546265 * Marital_StatusSingle
596632    +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
596633    +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
596634    +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
596635    +        EducationGraduation  +     0.68875064631577 * EducationMaster
596636    +          +    -0.67557643774246 * Marital_StatusDivorced
596637    +          +     1.63844045917367 * Marital_StatusMarried
596638    +          +    -0.70320960247699 * Marital_StatusSingle
596639    +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
596640    +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
596641    +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
596642    +        EducationGraduation  +    -0.68011360002443 * EducationMaster
596643    +          +    -0.11371453086883 * Marital_StatusDivorced
596644    +          +    -0.34226997176291 * Marital_StatusMarried
596645    +          +    -1.01568676685754 * Marital_StatusSingle
596646    +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
596647    +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
596648    +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
596649    +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
596650    +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
596651    +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
596652    +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
596653    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
596654    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
596655    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
596656    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
596657    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
596658    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
596659    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
596660    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
596661    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
596662    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
596663    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
596664    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
596665    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
596666    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
596667    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
596668    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
596669    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
596670    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
596671    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
596672    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
596673    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
596674    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
596675    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
596676    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
596677    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
596678    +END;
MPRINT(EM_DIAGRAM):   END;
596679    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
596680    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
596681    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
596682    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
596683    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
596684    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
596685    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
596686    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
596687    +END;
MPRINT(EM_DIAGRAM):   END;
596688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
596689    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
596690    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
596691    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
596692    +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
596693    +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
596694    +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
596695    +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
596696    +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
596697    +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
596698    +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
596699    +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
596700    +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
596701    +          +    -0.87259051567474 * S_NumDealsPurchases
596702    +          +    -0.36454149529139 * S_NumDistPurchases
596703    +          +     0.12447759925061 * S_NumStorePurchases
596704    +          +    -1.08133487947367 * S_NumWebPurchases
596705    +          +    -0.49882157745454 * S_NumWebVisitsMonth
596706    +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
596707    +        S_RMntFrq  +    -0.01174101172444 * S_Recency
596708    +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
596709    +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
596710    +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
596711    +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
596712    +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
596713    +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
596714    +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
596715    +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
596716    +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
596717    +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
596718    +          +     2.23121497416403 * S_NumDealsPurchases
596719    +          +    -0.48674842191071 * S_NumDistPurchases
596720    +          +     1.77510728607544 * S_NumStorePurchases
596721    +          +     0.14647433155436 * S_NumWebPurchases
596722    +          +    -0.95892686924419 * S_NumWebVisitsMonth
596723    +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
596724    +        S_RMntFrq  +     2.46497777428475 * S_Recency
596725    +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
596726    +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
596727    +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
596728    +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
596729    +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
596730    +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
596731    +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
596732    +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
596733    +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
596734    +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
596735    +          +     0.14338855349611 * S_NumDealsPurchases
596736    +          +    -2.21071010829235 * S_NumDistPurchases
596737    +          +    -0.21795889348002 * S_NumStorePurchases
596738    +          +     1.98825087883535 * S_NumWebPurchases
596739    +          +     1.02482442531149 * S_NumWebVisitsMonth
596740    +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
596741    +        S_RMntFrq  +     -1.0288777281766 * S_Recency
596742    +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
596743    +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
596744    +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
596745    +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
596746    +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
596747    +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
596748    +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
596749    +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
596750    +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
596751    +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
596752    +          +     0.30041205661012 * S_NumDealsPurchases
596753    +          +    -0.63499849986918 * S_NumDistPurchases
596754    +          +    -0.34155713433714 * S_NumStorePurchases
596755    +          +    -1.14183354933936 * S_NumWebPurchases
596756    +          +    -0.42681980262973 * S_NumWebVisitsMonth
596757    +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
596758    +        S_RMntFrq  +     1.25852246467612 * S_Recency
596759    +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
596760    +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
596761    +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
596762    +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
596763    +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
596764    +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
596765    +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
596766    +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
596767    +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
596768    +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
596769    +          +    -0.21237915559831 * S_NumDealsPurchases
596770    +          +     0.48256923764182 * S_NumDistPurchases
596771    +          +    -0.45553093140641 * S_NumStorePurchases
596772    +          +      0.5593655963659 * S_NumWebPurchases
596773    +          +     0.27943768691188 * S_NumWebVisitsMonth
596774    +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
596775    +        S_RMntFrq  +    -1.62796011550484 * S_Recency
596776    +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
596777    +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
596778    +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
596779    +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
596780    +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
596781    +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
596782    +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
596783    +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
596784    +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
596785    +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
596786    +          +     2.38967021388062 * S_NumDealsPurchases
596787    +          +    -0.97722398866481 * S_NumDistPurchases
596788    +          +     1.57612333191312 * S_NumStorePurchases
596789    +          +    -0.75968679115983 * S_NumWebPurchases
596790    +          +    -0.64207187757251 * S_NumWebVisitsMonth
596791    +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
596792    +        S_RMntFrq  +     1.71313869798331 * S_Recency
596793    +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
596794    +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
596795    +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
596796    +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
596797    +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
596798    +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
596799    +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
596800    +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
596801    +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
596802    +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
596803    +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
596804    +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
596805    +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
596806    +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
596807    +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
596808    +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
596809    +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
596810    +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
596811    +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
596812    +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
596813    +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
596814    +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
596815    +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
596816    +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
596817    +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
596818    +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
596819    +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
596820    +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
596821    +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
596822    +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
596823    +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
596824    +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
596825    +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
596826    +        EducationGraduation  +      0.1073450284316 * EducationMaster
596827    +          +     0.96470902298142 * Marital_StatusDivorced
596828    +          +     0.94805959268314 * Marital_StatusMarried
596829    +          +     -0.6523948769616 * Marital_StatusSingle
596830    +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
596831    +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
596832    +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
596833    +        EducationGraduation  +    -1.34927753306064 * EducationMaster
596834    +          +      0.3918249505531 * Marital_StatusDivorced
596835    +          +    -0.00968091979586 * Marital_StatusMarried
596836    +          +     0.84615379885071 * Marital_StatusSingle
596837    +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
596838    +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
596839    +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
596840    +        EducationGraduation  +     -0.8672743321499 * EducationMaster
596841    +          +     1.14335160313191 * Marital_StatusDivorced
596842    +          +     0.50580517192175 * Marital_StatusMarried
596843    +          +     0.17264295020921 * Marital_StatusSingle
596844    +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
596845    +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
596846    +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
596847    +        EducationGraduation  +     1.95818378342783 * EducationMaster
596848    +          +    -0.11238504444225 * Marital_StatusDivorced
596849    +          +    -0.81348274043749 * Marital_StatusMarried
596850    +          +     0.46075415610001 * Marital_StatusSingle
596851    +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
596852    +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
596853    +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
596854    +        EducationGraduation  +     0.08396135672504 * EducationMaster
596855    +          +    -0.46342068701431 * Marital_StatusDivorced
596856    +          +    -0.41667845270204 * Marital_StatusMarried
596857    +          +    -0.47166707496281 * Marital_StatusSingle
596858    +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
596859    +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
596860    +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
596861    +        EducationGraduation  +     0.36656103863186 * EducationMaster
596862    +          +    -0.45376613787812 * Marital_StatusDivorced
596863    +          +     0.01337046049801 * Marital_StatusMarried
596864    +          +    -0.92811489484121 * Marital_StatusSingle
596865    +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
596866    +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
596867    +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
596868    +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
596869    +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
596870    +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
596871    +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
596872    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
596873    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
596874    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
596875    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
596876    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
596877    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
596878    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
596879    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
596880    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
596881    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
596882    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
596883    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
596884    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
596885    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
596886    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
596887    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
596888    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
596889    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
596890    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
596891    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
596892    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
596893    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
596894    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
596895    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
596896    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
596897    +END;
MPRINT(EM_DIAGRAM):   END;
596898    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
596899    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
596900    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
596901    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
596902    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
596903    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
596904    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
596905    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
596906    +END;
MPRINT(EM_DIAGRAM):   END;
596907    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
596908    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
596909    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
596910    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
596911    +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
596912    +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
596913    +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
596914    +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
596915    +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
596916    +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
596917    +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
596918    +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
596919    +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
596920    +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
596921    +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
596922    +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
596923    +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
596924    +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
596925    +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
596926    +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
596927    +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
596928    +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
596929    +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
596930    +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
596931    +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
596932    +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
596933    +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
596934    +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
596935    +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
596936    +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
596937    +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
596938    +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
596939    +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
596940    +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
596941    +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
596942    +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
596943    +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
596944    +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
596945    +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
596946    +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
596947    +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
596948    +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
596949    +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
596950    +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
596951    +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
596952    +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
596953    +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
596954    +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
596955    +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
596956    +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
596957    +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
596958    +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
596959    +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
596960    +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
596961    +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
596962    +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
596963    +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
596964    +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
596965    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
596966    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
596967    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
596968    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
596969    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
596970    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
596971    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
596972    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
596973    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
596974    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
596975    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
596976    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
596977    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
596978    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
596979    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
596980    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
596981    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
596982    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
596983    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
596984    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
596985    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
596986    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
596987    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
596988    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
596989    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
596990    +END;
MPRINT(EM_DIAGRAM):   END;
596991    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
596992    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
596993    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
596994    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
596995    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
596996    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
596997    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
596998    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
596999    +END;
MPRINT(EM_DIAGRAM):   END;
597000    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597001    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
597002    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597003    +
597004    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
597005    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
597006    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
597007    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
597008    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
597009    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
597010    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
597011    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
597012    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
597013    +end;
MPRINT(EM_DIAGRAM):   end;
597014    +else do;
MPRINT(EM_DIAGRAM):   else do;
597015    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
597016    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
597017    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
597018    +   end;
MPRINT(EM_DIAGRAM):   end;
597019    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
597020    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
597021    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
597022    +   end;
MPRINT(EM_DIAGRAM):   end;
597023    +   else do;
MPRINT(EM_DIAGRAM):   else do;
597024    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
597025    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
597026    +   end;
MPRINT(EM_DIAGRAM):   end;
597027    +end;
MPRINT(EM_DIAGRAM):   end;
597028    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
597029    +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
597030    +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
597031    +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
597032    +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
597033    +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
597034    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
597035    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
597036    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
597037    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
597038    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
597039    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
597040    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
597041    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
597042    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
597043    +END;
MPRINT(EM_DIAGRAM):   END;
597044    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
597045    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
597046    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
597047    +END;
MPRINT(EM_DIAGRAM):   END;
597048    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
597049    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
597050    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
597051    +END;
MPRINT(EM_DIAGRAM):   END;
597052    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
597053    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
597054    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
597055    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
597056    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
597057    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
597058    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
597059    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597060    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
597061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597062    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
597063    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
597064    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
597065    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
597066    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
597067    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
597068    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
597069    +END;
MPRINT(EM_DIAGRAM):   END;
597070    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
597071    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
597072    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
597073    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
597074    +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
597075    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
597076    +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
597077    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
597078    +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
597079    +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
597080    +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
597081    +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
597082    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
597083    +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
597084    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
597085    +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
597086    +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
597087    +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
597088    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
597089    +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
597090    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
597091    +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
597092    +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
597093    +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
597094    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
597095    +* Ensmbl32: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 4 of 5;
597096    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
597097    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
597098    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
597099    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
597100    +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
597101    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
597102    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
597103    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
597104    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
597105    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
597106    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
597107    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
597108    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
597109    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
597110    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
597111    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
597112    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
597113    +LENGTH _WARN_ $4
597114    +      F_DepVar  $ 12
597115    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
597116    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
597117    +
597118    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
597119    +
597120    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
597121    +
597122    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
597123    +
597124    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
597125    +
597126    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
597127    +
597128    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
597129    +
597130    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
597131    +
597132    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
597133    +
597134    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
597135    +
597136    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
597137    +
597138    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
597139    +
597140    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
597141    +
597142    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
597143    +
597144    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
597145    +
597146    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
597147    +
597148    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
597149    +
597150    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
597151    +
597152    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
597153    +
597154    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
597155    +
597156    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
597157    +
597158    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
597159    +
597160    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
597161    +
597162    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
597163    +
597164    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
597165    +
597166    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
597167    +
597168    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
597169    +
597170    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
597171    +
597172    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
597173    +
597174    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
597175    +
597176    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
597177    +
597178    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
597179    +
597180    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
597181    +
597182    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
597183    +
597184    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
597185    +
597186    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
597187    +
597188    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
597189    +
597190    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
597191    +
597192    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
597193    +
597194    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
597195    +
597196    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
597197    +
597198    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
597199    +
597200    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
597201    +
597202    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
597203    +
597204    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
597205    +
597206    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
597207    +
597208    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
597209    +
597210    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
597211    +
597212    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
597213    +
597214    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
597215    +
597216    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
597217    +
597218    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
597219    +
597220    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
597221    +
597222    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
597223    +
597224    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
597225    +
597226    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
597227    +
597228    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
597229    +
597230    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
597231    +
597232    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
597233    +
597234    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
597235    +
597236    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
597237    +
597238    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
597239    +
597240    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
597241    +
597242    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
597243    +
597244    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
597245    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
597246    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
597247    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
597248    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
597249    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597250    +end;
MPRINT(EM_DIAGRAM):   end;
597251    +else do;
MPRINT(EM_DIAGRAM):   else do;
597252    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
597253    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
597254    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
597255    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
597256    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
597257    +   end;
MPRINT(EM_DIAGRAM):   end;
597258    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
597259    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
597260    +   end;
MPRINT(EM_DIAGRAM):   end;
597261    +   else do;
MPRINT(EM_DIAGRAM):   else do;
597262    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
597263    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
597264    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597265    +   end;
MPRINT(EM_DIAGRAM):   end;
597266    +end;
MPRINT(EM_DIAGRAM):   end;
597267    +
597268    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
597269    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
597270    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
597271    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
597272    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
597273    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597274    +end;
MPRINT(EM_DIAGRAM):   end;
597275    +else do;
MPRINT(EM_DIAGRAM):   else do;
597276    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
597277    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
597278    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
597279    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
597280    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
597281    +   end;
MPRINT(EM_DIAGRAM):   end;
597282    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
597283    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
597284    +   end;
MPRINT(EM_DIAGRAM):   end;
597285    +   else do;
MPRINT(EM_DIAGRAM):   else do;
597286    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
597287    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
597288    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597289    +   end;
MPRINT(EM_DIAGRAM):   end;
597290    +end;
MPRINT(EM_DIAGRAM):   end;
597291    +
597292    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
597293    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
597294    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
597295    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
597296    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
597297    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597298    +end;
MPRINT(EM_DIAGRAM):   end;
597299    +else do;
MPRINT(EM_DIAGRAM):   else do;
597300    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
597301    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
597302    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
597303    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
597304    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
597305    +   end;
MPRINT(EM_DIAGRAM):   end;
597306    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
597307    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
597308    +   end;
MPRINT(EM_DIAGRAM):   end;
597309    +   else do;
MPRINT(EM_DIAGRAM):   else do;
597310    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
597311    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
597312    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597313    +   end;
MPRINT(EM_DIAGRAM):   end;
597314    +end;
MPRINT(EM_DIAGRAM):   end;
597315    +
597316    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
597317    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
597318    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
597319    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
597320    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
597321    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597322    +end;
MPRINT(EM_DIAGRAM):   end;
597323    +else do;
MPRINT(EM_DIAGRAM):   else do;
597324    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
597325    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
597326    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
597327    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
597328    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
597329    +   end;
MPRINT(EM_DIAGRAM):   end;
597330    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
597331    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
597332    +   end;
MPRINT(EM_DIAGRAM):   end;
597333    +   else do;
MPRINT(EM_DIAGRAM):   else do;
597334    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
597335    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
597336    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597337    +   end;
MPRINT(EM_DIAGRAM):   end;
597338    +end;
MPRINT(EM_DIAGRAM):   end;
597339    +
597340    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
597341    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
597342    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
597343    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
597344    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
597345    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597346    +end;
MPRINT(EM_DIAGRAM):   end;
597347    +else do;
MPRINT(EM_DIAGRAM):   else do;
597348    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
597349    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
597350    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
597351    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
597352    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
597353    +   end;
MPRINT(EM_DIAGRAM):   end;
597354    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
597355    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
597356    +   end;
MPRINT(EM_DIAGRAM):   end;
597357    +   else do;
MPRINT(EM_DIAGRAM):   else do;
597358    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
597359    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
597360    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597361    +   end;
MPRINT(EM_DIAGRAM):   end;
597362    +end;
MPRINT(EM_DIAGRAM):   end;
597363    +
597364    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
597365    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
597366    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
597367    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
597368    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
597369    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597370    +end;
MPRINT(EM_DIAGRAM):   end;
597371    +else do;
MPRINT(EM_DIAGRAM):   else do;
597372    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
597373    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
597374    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
597375    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
597376    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
597377    +   end;
MPRINT(EM_DIAGRAM):   end;
597378    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
597379    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
597380    +   end;
MPRINT(EM_DIAGRAM):   end;
597381    +   else do;
MPRINT(EM_DIAGRAM):   else do;
597382    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
597383    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
597384    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597385    +   end;
MPRINT(EM_DIAGRAM):   end;
597386    +end;
MPRINT(EM_DIAGRAM):   end;
597387    +
597388    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
597389    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
597390    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
597391    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
597392    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
597393    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597394    +end;
MPRINT(EM_DIAGRAM):   end;
597395    +else do;
MPRINT(EM_DIAGRAM):   else do;
597396    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
597397    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
597398    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
597399    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
597400    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
597401    +   end;
MPRINT(EM_DIAGRAM):   end;
597402    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
597403    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
597404    +   end;
MPRINT(EM_DIAGRAM):   end;
597405    +   else do;
MPRINT(EM_DIAGRAM):   else do;
597406    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
597407    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
597408    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597409    +   end;
MPRINT(EM_DIAGRAM):   end;
597410    +end;
MPRINT(EM_DIAGRAM):   end;
597411    +
597412    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
597413    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
597414    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
597415    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
597416    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
597417    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
597418    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
597419    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
597420    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
597421    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
597422    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
597423    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
597424    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
597425    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597426    +end;
MPRINT(EM_DIAGRAM):   end;
597427    +else do;
MPRINT(EM_DIAGRAM):   else do;
597428    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
597429    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
597430    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
597431    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
597432    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
597433    +   end;
MPRINT(EM_DIAGRAM):   end;
597434    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
597435    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
597436    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
597437    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
597438    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
597439    +   end;
MPRINT(EM_DIAGRAM):   end;
597440    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
597441    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
597442    +   end;
MPRINT(EM_DIAGRAM):   end;
597443    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
597444    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
597445    +   end;
MPRINT(EM_DIAGRAM):   end;
597446    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
597447    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
597448    +   end;
MPRINT(EM_DIAGRAM):   end;
597449    +   else do;
MPRINT(EM_DIAGRAM):   else do;
597450    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
597451    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
597452    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
597453    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
597454    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
597455    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597456    +   end;
MPRINT(EM_DIAGRAM):   end;
597457    +end;
MPRINT(EM_DIAGRAM):   end;
597458    +
597459    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
597460    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
597461    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
597462    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
597463    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
597464    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
597465    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
597466    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
597467    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
597468    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
597469    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
597470    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
597471    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
597472    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
597473    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597474    +end;
MPRINT(EM_DIAGRAM):   end;
597475    +else do;
MPRINT(EM_DIAGRAM):   else do;
597476    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
597477    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
597478    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
597479    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
597480    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
597481    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
597482    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
597483    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
597484    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
597485    +         end;
MPRINT(EM_DIAGRAM):   end;
597486    +         else do;
MPRINT(EM_DIAGRAM):   else do;
597487    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
597488    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
597489    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
597490    +            end;
MPRINT(EM_DIAGRAM):   end;
597491    +         end;
MPRINT(EM_DIAGRAM):   end;
597492    +      end;
MPRINT(EM_DIAGRAM):   end;
597493    +      else do;
MPRINT(EM_DIAGRAM):   else do;
597494    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
597495    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
597496    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
597497    +         end;
MPRINT(EM_DIAGRAM):   end;
597498    +      end;
MPRINT(EM_DIAGRAM):   end;
597499    +   end;
MPRINT(EM_DIAGRAM):   end;
597500    +   else do;
MPRINT(EM_DIAGRAM):   else do;
597501    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
597502    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
597503    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
597504    +      end;
MPRINT(EM_DIAGRAM):   end;
597505    +      else do;
MPRINT(EM_DIAGRAM):   else do;
597506    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
597507    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
597508    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
597509    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
597510    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
597511    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
597512    +         end;
MPRINT(EM_DIAGRAM):   end;
597513    +      end;
MPRINT(EM_DIAGRAM):   end;
597514    +   end;
MPRINT(EM_DIAGRAM):   end;
597515    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
597516    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
597517    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
597518    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
597519    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
597520    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
597521    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597522    +   end;
MPRINT(EM_DIAGRAM):   end;
597523    +end;
MPRINT(EM_DIAGRAM):   end;
597524    +
597525    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597526    +*** Checking missing input Interval
597527    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
597528    +
597529    +IF NMISS(
597530    +   AcceptedCmpTotal ,
597531    +   Age ,
597532    +   Frq ,
597533    +   Income ,
597534    +   Kidhome ,
597535    +   Mnt ,
597536    +   MntFishProducts ,
597537    +   MntFruits ,
597538    +   MntGoldProds ,
597539    +   MntMeatProducts ,
597540    +   MntSweetProducts ,
597541    +   MntWines ,
597542    +   MonthsAsCustomer ,
597543    +   NumCatalogPurchases ,
597544    +   NumDealsPurchases ,
597545    +   NumDistPurchases ,
597546    +   NumStorePurchases ,
597547    +   NumWebPurchases ,
597548    +   NumWebVisitsMonth ,
597549    +   RFMstat ,
597550    +   RMntFrq ,
597551    +   Recency ,
597552    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
597553    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
597554    +
597555    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
597556    +END;
MPRINT(EM_DIAGRAM):   END;
597557    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597558    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
597559    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597560    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
597561    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
597562    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
597563    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
597564    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
597565    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
597566    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
597567    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
597568    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
597569    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
597570    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
597571    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
597572    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
597573    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
597574    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
597575    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
597576    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
597577    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
597578    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
597579    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
597580    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
597581    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
597582    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
597583    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
597584    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
597585    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
597586    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
597587    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
597588    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
597589    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
597590    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
597591    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
597592    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
597593    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
597594    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
597595    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
597596    +END;
MPRINT(EM_DIAGRAM):   END;
597597    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
597598    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
597599    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
597600    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
597601    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
597602    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
597603    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
597604    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
597605    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
597606    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
597607    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
597608    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
597609    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
597610    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
597611    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
597612    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
597613    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
597614    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
597615    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
597616    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
597617    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
597618    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
597619    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
597620    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
597621    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
597622    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
597623    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
597624    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
597625    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
597626    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
597627    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
597628    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
597629    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
597630    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
597631    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
597632    +   ELSE S_NumCatalogPurchases
597633    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
597634    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
597635    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
597636    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
597637    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
597638    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
597639    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
597640    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
597641    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
597642    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
597643    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
597644    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
597645    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
597646    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
597647    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
597648    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
597649    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
597650    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
597651    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
597652    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
597653    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
597654    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
597655    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
597656    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
597657    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
597658    +END;
MPRINT(EM_DIAGRAM):   END;
597659    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597660    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
597661    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597662    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597663    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
597664    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597665    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597666    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
597667    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597668    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
597669    +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
597670    +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
597671    +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
597672    +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
597673    +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
597674    +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
597675    +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
597676    +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
597677    +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
597678    +          +     0.89422627895323 * S_NumDealsPurchases
597679    +          +    -0.13304125929765 * S_NumDistPurchases
597680    +          +    -1.04568442570811 * S_NumStorePurchases
597681    +          +    -0.28677765126751 * S_NumWebPurchases
597682    +          +      1.2327638737509 * S_NumWebVisitsMonth
597683    +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
597684    +        S_RMntFrq  +    -0.86930969765816 * S_Recency
597685    +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
597686    +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
597687    +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
597688    +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
597689    +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
597690    +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
597691    +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
597692    +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
597693    +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
597694    +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
597695    +          +     0.04224590196535 * S_NumDealsPurchases
597696    +          +     0.76554742700113 * S_NumDistPurchases
597697    +          +    -0.49155496870812 * S_NumStorePurchases
597698    +          +     0.59606812744403 * S_NumWebPurchases
597699    +          +     1.86809286276405 * S_NumWebVisitsMonth
597700    +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
597701    +        S_RMntFrq  +    -2.09222283465666 * S_Recency
597702    +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
597703    +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
597704    +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
597705    +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
597706    +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
597707    +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
597708    +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
597709    +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
597710    +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
597711    +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
597712    +          +    -0.04866536993486 * S_NumDealsPurchases
597713    +          +    -0.53535979020214 * S_NumDistPurchases
597714    +          +     2.20634071253676 * S_NumStorePurchases
597715    +          +      0.6164564989007 * S_NumWebPurchases
597716    +          +    -0.43396314395263 * S_NumWebVisitsMonth
597717    +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
597718    +        S_RMntFrq  +     2.37293441098349 * S_Recency
597719    +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
597720    +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
597721    +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
597722    +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
597723    +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
597724    +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
597725    +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
597726    +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
597727    +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
597728    +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
597729    +          +     1.37461255707863 * S_NumDealsPurchases
597730    +          +    -0.17684775000818 * S_NumDistPurchases
597731    +          +    -0.62755623855535 * S_NumStorePurchases
597732    +          +    -1.46551649022657 * S_NumWebPurchases
597733    +          +     3.35784247878638 * S_NumWebVisitsMonth
597734    +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
597735    +        S_RMntFrq  +    -2.61971612923471 * S_Recency
597736    +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
597737    +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
597738    +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
597739    +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
597740    +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
597741    +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
597742    +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
597743    +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
597744    +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
597745    +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
597746    +          +    -0.76256677907121 * S_NumDealsPurchases
597747    +          +    -0.31591571751692 * S_NumDistPurchases
597748    +          +      0.0506832614089 * S_NumStorePurchases
597749    +          +      1.4636796923764 * S_NumWebPurchases
597750    +          +     0.37743519705036 * S_NumWebVisitsMonth
597751    +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
597752    +        S_RMntFrq  +     0.16854775832723 * S_Recency
597753    +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
597754    +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
597755    +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
597756    +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
597757    +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
597758    +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
597759    +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
597760    +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
597761    +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
597762    +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
597763    +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
597764    +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
597765    +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
597766    +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
597767    +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
597768    +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
597769    +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
597770    +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
597771    +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
597772    +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
597773    +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
597774    +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
597775    +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
597776    +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
597777    +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
597778    +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
597779    +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
597780    +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
597781    +        EducationGraduation  +    -0.37141290775302 * EducationMaster
597782    +          +     0.68641668264565 * Marital_StatusDivorced
597783    +          +    -0.81586871439732 * Marital_StatusMarried
597784    +          +     0.63758920518451 * Marital_StatusSingle
597785    +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
597786    +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
597787    +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
597788    +        EducationGraduation  +     -0.4412391934844 * EducationMaster
The SAS System

597789    +          +     0.05137560133238 * Marital_StatusDivorced
597790    +          +    -2.24401993266209 * Marital_StatusMarried
597791    +          +     1.57359386216115 * Marital_StatusSingle
597792    +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
597793    +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
597794    +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
597795    +        EducationGraduation  +     0.61492669859334 * EducationMaster
597796    +          +     -1.0649987815942 * Marital_StatusDivorced
597797    +          +     0.76065111692388 * Marital_StatusMarried
597798    +          +    -0.21694149754801 * Marital_StatusSingle
597799    +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
597800    +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
597801    +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
597802    +        EducationGraduation  +     0.04208620358211 * EducationMaster
597803    +          +     2.02155453548328 * Marital_StatusDivorced
597804    +          +    -2.60190649735306 * Marital_StatusMarried
597805    +          +     1.09149388354927 * Marital_StatusSingle
597806    +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
597807    +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
597808    +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
597809    +        EducationGraduation  +    -0.60853091001689 * EducationMaster
597810    +          +     0.66315970650309 * Marital_StatusDivorced
597811    +          +    -1.20476729758152 * Marital_StatusMarried
597812    +          +     0.56175027826397 * Marital_StatusSingle
597813    +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
597814    +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
597815    +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
597816    +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
597817    +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
597818    +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
597819    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
597820    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
597821    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
597822    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
597823    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
597824    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
597825    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
597826    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
597827    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
597828    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
597829    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
597830    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
597831    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
597832    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
597833    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
597834    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
597835    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
597836    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
597837    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
597838    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
597839    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
597840    +END;
MPRINT(EM_DIAGRAM):   END;
597841    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
597842    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
597843    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
597844    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
597845    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
597846    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
597847    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
597848    +END;
MPRINT(EM_DIAGRAM):   END;
597849    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597850    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
597851    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
597852    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
597853    +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
597854    +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
597855    +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
597856    +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
597857    +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
597858    +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
597859    +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
597860    +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
597861    +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
597862    +          +     1.50005927423985 * S_NumDealsPurchases
597863    +          +      0.5590536933569 * S_NumDistPurchases
597864    +          +    -0.61757824339318 * S_NumStorePurchases
597865    +          +     0.37259686538158 * S_NumWebPurchases
597866    +          +     2.59725437895564 * S_NumWebVisitsMonth
597867    +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
597868    +        S_RMntFrq  +    -2.38795796980324 * S_Recency
597869    +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
597870    +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
597871    +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
597872    +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
597873    +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
597874    +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
597875    +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
597876    +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
597877    +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
597878    +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
597879    +          +    -0.09282222088797 * S_NumDealsPurchases
597880    +          +     0.10726247938321 * S_NumDistPurchases
597881    +          +     -1.1235971458527 * S_NumStorePurchases
597882    +          +    -0.78304387839877 * S_NumWebPurchases
597883    +          +    -0.44139243179956 * S_NumWebVisitsMonth
597884    +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
597885    +        S_RMntFrq  +     2.19072220135069 * S_Recency
597886    +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
597887    +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
597888    +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
597889    +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
597890    +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
597891    +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
597892    +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
597893    +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
597894    +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
597895    +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
597896    +          +     0.35349185459988 * S_NumDealsPurchases
597897    +          +     0.06853677714859 * S_NumDistPurchases
597898    +          +    -1.47546012999338 * S_NumStorePurchases
597899    +          +     0.20926435398916 * S_NumWebPurchases
597900    +          +    -1.00535683639093 * S_NumWebVisitsMonth
597901    +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
597902    +        S_RMntFrq  +    -1.59138379954757 * S_Recency
597903    +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
597904    +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
597905    +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
597906    +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
597907    +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
597908    +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
597909    +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
597910    +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
597911    +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
597912    +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
597913    +          +      0.3873586120272 * S_NumDealsPurchases
597914    +          +     0.25911651157596 * S_NumDistPurchases
597915    +          +     1.58922489084287 * S_NumStorePurchases
597916    +          +     0.49041797743368 * S_NumWebPurchases
597917    +          +     -1.5425586871929 * S_NumWebVisitsMonth
597918    +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
597919    +        S_RMntFrq  +     1.03099569333498 * S_Recency
597920    +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
597921    +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
597922    +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
597923    +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
597924    +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
597925    +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
597926    +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
597927    +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
597928    +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
597929    +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
597930    +          +    -0.60830880287865 * S_NumDealsPurchases
597931    +          +      0.0745331267194 * S_NumDistPurchases
597932    +          +    -1.39472448256952 * S_NumStorePurchases
597933    +          +     1.95372179969087 * S_NumWebPurchases
597934    +          +    -0.63307356390404 * S_NumWebVisitsMonth
597935    +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
597936    +        S_RMntFrq  +    -0.29197897313114 * S_Recency
597937    +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
597938    +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
597939    +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
597940    +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
597941    +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
597942    +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
597943    +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
597944    +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
597945    +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
597946    +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
597947    +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
597948    +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
597949    +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
597950    +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
597951    +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
597952    +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
597953    +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
597954    +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
597955    +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
597956    +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
597957    +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
597958    +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
597959    +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
597960    +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
597961    +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
597962    +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
597963    +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
597964    +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
597965    +        EducationGraduation  +    -1.16900224373137 * EducationMaster
597966    +          +    -1.33377871643323 * Marital_StatusDivorced
597967    +          +    -0.87184228840898 * Marital_StatusMarried
597968    +          +     1.41223186340257 * Marital_StatusSingle
597969    +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
597970    +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
597971    +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
597972    +        EducationGraduation  +     0.38341272155343 * EducationMaster
597973    +          +    -0.21479890935233 * Marital_StatusDivorced
597974    +          +     -0.0025459519579 * Marital_StatusMarried
597975    +          +     1.33900491702264 * Marital_StatusSingle
597976    +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
597977    +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
597978    +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
597979    +        EducationGraduation  +     0.60739269725685 * EducationMaster
597980    +          +    -0.38307267471999 * Marital_StatusDivorced
597981    +          +     0.97088969451415 * Marital_StatusMarried
597982    +          +    -0.28578224473381 * Marital_StatusSingle
597983    +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
597984    +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
597985    +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
597986    +        EducationGraduation  +     0.14160673378252 * EducationMaster
597987    +          +    -1.42229401093569 * Marital_StatusDivorced
597988    +          +      0.7234508382397 * Marital_StatusMarried
597989    +          +    -0.29062202974628 * Marital_StatusSingle
597990    +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
597991    +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
597992    +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
597993    +        EducationGraduation  +     -0.7118631990538 * EducationMaster
597994    +          +    -0.99067637207205 * Marital_StatusDivorced
597995    +          +    -0.50245902142079 * Marital_StatusMarried
597996    +          +     0.54214494533793 * Marital_StatusSingle
597997    +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
597998    +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
597999    +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
598000    +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
598001    +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
598002    +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
598003    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
598004    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
598005    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
598006    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
598007    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
598008    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
598009    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
598010    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
598011    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
598012    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
598013    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
598014    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
598015    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
598016    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
598017    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
598018    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
598019    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
598020    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
598021    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
598022    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
598023    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
598024    +END;
MPRINT(EM_DIAGRAM):   END;
598025    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
598026    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
598027    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
598028    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
598029    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
598030    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
598031    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
598032    +END;
MPRINT(EM_DIAGRAM):   END;
598033    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598034    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
598035    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598036    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
598037    +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
598038    +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
598039    +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
598040    +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
598041    +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
598042    +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
598043    +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
598044    +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
598045    +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
598046    +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
598047    +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
598048    +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
598049    +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
598050    +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
598051    +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
598052    +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
598053    +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
598054    +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
598055    +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
598056    +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
598057    +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
598058    +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
598059    +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
598060    +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
598061    +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
598062    +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
598063    +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
598064    +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
598065    +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
598066    +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
598067    +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
598068    +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
598069    +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
598070    +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
598071    +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
598072    +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
598073    +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
598074    +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
598075    +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
598076    +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
598077    +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
598078    +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
598079    +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
598080    +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
598081    +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
598082    +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
598083    +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
598084    +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
598085    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
598086    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
598087    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
598088    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
598089    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
598090    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
598091    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
598092    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
598093    +END;
MPRINT(EM_DIAGRAM):   END;
598094    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
598095    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
598096    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
598097    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
598098    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
598099    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
598100    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
598101    +END;
MPRINT(EM_DIAGRAM):   END;
598102    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598103    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
598104    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598105    +
598106    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
598107    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
598108    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
598109    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
598110    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
598111    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
598112    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
598113    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
598114    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
598115    +end;
MPRINT(EM_DIAGRAM):   end;
598116    +else do;
MPRINT(EM_DIAGRAM):   else do;
598117    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
598118    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
598119    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
598120    +   end;
MPRINT(EM_DIAGRAM):   end;
598121    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
598122    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
598123    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
598124    +   end;
MPRINT(EM_DIAGRAM):   end;
598125    +   else do;
MPRINT(EM_DIAGRAM):   else do;
598126    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
598127    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
598128    +   end;
MPRINT(EM_DIAGRAM):   end;
598129    +end;
MPRINT(EM_DIAGRAM):   end;
598130    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
598131    +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
598132    +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
598133    +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
598134    +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
598135    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
598136    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
598137    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
598138    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
598139    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
598140    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
598141    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
598142    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
598143    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
598144    +END;
MPRINT(EM_DIAGRAM):   END;
598145    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
598146    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
598147    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
598148    +END;
MPRINT(EM_DIAGRAM):   END;
598149    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
598150    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
598151    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
598152    +END;
MPRINT(EM_DIAGRAM):   END;
598153    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
598154    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
598155    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
598156    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
598157    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
598158    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
598159    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
598160    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598161    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
598162    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598163    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
598164    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
598165    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
598166    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
598167    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
598168    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
598169    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
598170    +END;
MPRINT(EM_DIAGRAM):   END;
598171    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
598172    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
598173    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
598174    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
598175    +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
598176    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598177    +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
598178    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598179    +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
598180    +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
598181    +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
598182    +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
598183    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598184    +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
598185    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598186    +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
598187    +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
598188    +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
598189    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598190    +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
598191    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598192    +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
598193    +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
598194    +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
598195    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598196    +* Ensmbl32: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 5 of 5;
598197    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598198    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598199    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
598200    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
598201    +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
598202    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598203    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
598204    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
598205    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
598206    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
598207    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
598208    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
598209    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
598210    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
598211    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
598212    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
598213    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
598214    +LENGTH _WARN_ $4
598215    +      F_DepVar  $ 12
598216    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
598217    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
598218    +
598219    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
598220    +
598221    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
598222    +
598223    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
598224    +
598225    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
598226    +
598227    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
598228    +
598229    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
598230    +
598231    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
598232    +
598233    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
598234    +
598235    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
598236    +
598237    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
598238    +
598239    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
598240    +
598241    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
598242    +
598243    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
598244    +
598245    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
598246    +
598247    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
598248    +
598249    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
598250    +
598251    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
598252    +
598253    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
598254    +
598255    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
598256    +
598257    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
598258    +
598259    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
598260    +
598261    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
598262    +
598263    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
598264    +
598265    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
598266    +
598267    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
598268    +
598269    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
598270    +
598271    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
598272    +
598273    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
598274    +
598275    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
598276    +
598277    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
598278    +
598279    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
598280    +
598281    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
598282    +
598283    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
598284    +
598285    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
598286    +
598287    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
598288    +
598289    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
598290    +
598291    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
598292    +
598293    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
598294    +
598295    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
598296    +
598297    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
598298    +
598299    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
598300    +
598301    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
598302    +
598303    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
598304    +
598305    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
598306    +
598307    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
598308    +
598309    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
598310    +
598311    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
598312    +
598313    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
598314    +
598315    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
598316    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
598317    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
598318    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
598319    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
598320    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598321    +end;
MPRINT(EM_DIAGRAM):   end;
598322    +else do;
MPRINT(EM_DIAGRAM):   else do;
598323    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
598324    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
598325    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
598326    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
598327    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
598328    +   end;
MPRINT(EM_DIAGRAM):   end;
598329    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
598330    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
598331    +   end;
MPRINT(EM_DIAGRAM):   end;
598332    +   else do;
MPRINT(EM_DIAGRAM):   else do;
598333    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
598334    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
598335    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598336    +   end;
MPRINT(EM_DIAGRAM):   end;
598337    +end;
MPRINT(EM_DIAGRAM):   end;
598338    +
598339    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
598340    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
598341    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
598342    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
598343    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
598344    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598345    +end;
MPRINT(EM_DIAGRAM):   end;
598346    +else do;
MPRINT(EM_DIAGRAM):   else do;
598347    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
598348    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
598349    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
598350    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
598351    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
598352    +   end;
MPRINT(EM_DIAGRAM):   end;
598353    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
598354    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
598355    +   end;
MPRINT(EM_DIAGRAM):   end;
598356    +   else do;
MPRINT(EM_DIAGRAM):   else do;
598357    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
598358    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
598359    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598360    +   end;
MPRINT(EM_DIAGRAM):   end;
598361    +end;
MPRINT(EM_DIAGRAM):   end;
598362    +
598363    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
598364    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
598365    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
598366    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
598367    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
598368    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598369    +end;
MPRINT(EM_DIAGRAM):   end;
598370    +else do;
MPRINT(EM_DIAGRAM):   else do;
598371    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
598372    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
598373    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
598374    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
598375    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
598376    +   end;
MPRINT(EM_DIAGRAM):   end;
598377    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
598378    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
598379    +   end;
MPRINT(EM_DIAGRAM):   end;
598380    +   else do;
MPRINT(EM_DIAGRAM):   else do;
598381    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
598382    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
598383    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598384    +   end;
MPRINT(EM_DIAGRAM):   end;
598385    +end;
MPRINT(EM_DIAGRAM):   end;
598386    +
598387    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
598388    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
598389    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
598390    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
598391    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
598392    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598393    +end;
MPRINT(EM_DIAGRAM):   end;
598394    +else do;
MPRINT(EM_DIAGRAM):   else do;
598395    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
598396    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
598397    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
598398    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
598399    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
598400    +   end;
MPRINT(EM_DIAGRAM):   end;
598401    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
598402    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
598403    +   end;
MPRINT(EM_DIAGRAM):   end;
598404    +   else do;
MPRINT(EM_DIAGRAM):   else do;
598405    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
598406    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
598407    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598408    +   end;
MPRINT(EM_DIAGRAM):   end;
598409    +end;
MPRINT(EM_DIAGRAM):   end;
598410    +
598411    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
598412    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
598413    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
598414    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
598415    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
598416    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598417    +end;
MPRINT(EM_DIAGRAM):   end;
598418    +else do;
MPRINT(EM_DIAGRAM):   else do;
598419    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
598420    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
598421    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
598422    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
598423    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
598424    +   end;
MPRINT(EM_DIAGRAM):   end;
598425    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
598426    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
598427    +   end;
MPRINT(EM_DIAGRAM):   end;
598428    +   else do;
MPRINT(EM_DIAGRAM):   else do;
598429    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
598430    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
598431    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598432    +   end;
MPRINT(EM_DIAGRAM):   end;
598433    +end;
MPRINT(EM_DIAGRAM):   end;
598434    +
598435    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
598436    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
598437    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
598438    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
598439    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
598440    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598441    +end;
MPRINT(EM_DIAGRAM):   end;
598442    +else do;
MPRINT(EM_DIAGRAM):   else do;
598443    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
598444    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
598445    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
598446    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
598447    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
598448    +   end;
MPRINT(EM_DIAGRAM):   end;
598449    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
598450    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
598451    +   end;
MPRINT(EM_DIAGRAM):   end;
598452    +   else do;
MPRINT(EM_DIAGRAM):   else do;
598453    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
598454    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
598455    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598456    +   end;
MPRINT(EM_DIAGRAM):   end;
598457    +end;
MPRINT(EM_DIAGRAM):   end;
598458    +
598459    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
598460    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
598461    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
598462    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
598463    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
598464    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598465    +end;
MPRINT(EM_DIAGRAM):   end;
598466    +else do;
MPRINT(EM_DIAGRAM):   else do;
598467    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
598468    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
598469    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
598470    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
598471    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
598472    +   end;
MPRINT(EM_DIAGRAM):   end;
598473    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
598474    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
598475    +   end;
MPRINT(EM_DIAGRAM):   end;
598476    +   else do;
MPRINT(EM_DIAGRAM):   else do;
598477    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
598478    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
598479    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598480    +   end;
MPRINT(EM_DIAGRAM):   end;
598481    +end;
MPRINT(EM_DIAGRAM):   end;
598482    +
598483    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
598484    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
598485    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
598486    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
598487    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
598488    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
598489    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
598490    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
598491    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
598492    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
598493    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
598494    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
598495    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
598496    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598497    +end;
MPRINT(EM_DIAGRAM):   end;
598498    +else do;
MPRINT(EM_DIAGRAM):   else do;
598499    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
598500    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
598501    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
598502    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
598503    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
598504    +   end;
MPRINT(EM_DIAGRAM):   end;
598505    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
598506    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
598507    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
598508    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
598509    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
598510    +   end;
MPRINT(EM_DIAGRAM):   end;
598511    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
598512    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
598513    +   end;
MPRINT(EM_DIAGRAM):   end;
598514    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
598515    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
598516    +   end;
MPRINT(EM_DIAGRAM):   end;
598517    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
598518    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
598519    +   end;
MPRINT(EM_DIAGRAM):   end;
598520    +   else do;
MPRINT(EM_DIAGRAM):   else do;
598521    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
598522    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
598523    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
598524    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
598525    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
598526    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598527    +   end;
MPRINT(EM_DIAGRAM):   end;
598528    +end;
MPRINT(EM_DIAGRAM):   end;
598529    +
598530    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
598531    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
598532    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
598533    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
598534    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
598535    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
598536    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
598537    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
598538    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
598539    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
598540    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
598541    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
598542    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
598543    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
598544    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598545    +end;
MPRINT(EM_DIAGRAM):   end;
598546    +else do;
MPRINT(EM_DIAGRAM):   else do;
598547    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
598548    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
598549    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
598550    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
598551    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
598552    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
598553    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
598554    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
598555    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
598556    +         end;
MPRINT(EM_DIAGRAM):   end;
598557    +         else do;
MPRINT(EM_DIAGRAM):   else do;
598558    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
598559    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
598560    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
598561    +            end;
MPRINT(EM_DIAGRAM):   end;
598562    +         end;
MPRINT(EM_DIAGRAM):   end;
598563    +      end;
MPRINT(EM_DIAGRAM):   end;
598564    +      else do;
MPRINT(EM_DIAGRAM):   else do;
598565    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
598566    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
598567    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
598568    +         end;
MPRINT(EM_DIAGRAM):   end;
598569    +      end;
MPRINT(EM_DIAGRAM):   end;
598570    +   end;
MPRINT(EM_DIAGRAM):   end;
598571    +   else do;
MPRINT(EM_DIAGRAM):   else do;
598572    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
598573    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
598574    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
598575    +      end;
MPRINT(EM_DIAGRAM):   end;
598576    +      else do;
MPRINT(EM_DIAGRAM):   else do;
598577    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
598578    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
598579    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
598580    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
598581    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
598582    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
598583    +         end;
MPRINT(EM_DIAGRAM):   end;
598584    +      end;
MPRINT(EM_DIAGRAM):   end;
598585    +   end;
MPRINT(EM_DIAGRAM):   end;
598586    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
598587    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
598588    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
598589    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
598590    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
598591    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
598592    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598593    +   end;
MPRINT(EM_DIAGRAM):   end;
598594    +end;
MPRINT(EM_DIAGRAM):   end;
598595    +
598596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598597    +*** Checking missing input Interval
598598    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
598599    +
598600    +IF NMISS(
598601    +   AcceptedCmpTotal ,
598602    +   Age ,
598603    +   Frq ,
598604    +   Income ,
598605    +   Kidhome ,
598606    +   Mnt ,
598607    +   MntFishProducts ,
598608    +   MntFruits ,
598609    +   MntGoldProds ,
598610    +   MntMeatProducts ,
598611    +   MntSweetProducts ,
598612    +   MntWines ,
598613    +   MonthsAsCustomer ,
598614    +   NumCatalogPurchases ,
598615    +   NumDealsPurchases ,
598616    +   NumDistPurchases ,
598617    +   NumStorePurchases ,
598618    +   NumWebPurchases ,
598619    +   NumWebVisitsMonth ,
598620    +   RFMstat ,
598621    +   RMntFrq ,
598622    +   Recency ,
598623    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
598624    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
598625    +
598626    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
598627    +END;
MPRINT(EM_DIAGRAM):   END;
598628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598629    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
598630    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598631    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
598632    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
598633    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
598634    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
598635    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
598636    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
598637    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
598638    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
598639    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
598640    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
598641    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
598642    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
598643    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
598644    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
598645    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
598646    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
598647    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
598648    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
598649    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
598650    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
598651    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
598652    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
598653    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
598654    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
598655    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
598656    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
598657    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
598658    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
598659    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
598660    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
598661    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
598662    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
598663    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
598664    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
598665    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
598666    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
598667    +END;
MPRINT(EM_DIAGRAM):   END;
598668    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
598669    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
598670    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
598671    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
598672    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
598673    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
598674    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
598675    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
598676    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
598677    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
598678    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
598679    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
598680    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
598681    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
598682    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
598683    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
598684    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
598685    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
598686    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
598687    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
598688    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
598689    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
598690    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
598691    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
598692    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
598693    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
598694    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
598695    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
598696    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
598697    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
598698    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
598699    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
598700    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
598701    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
598702    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
598703    +   ELSE S_NumCatalogPurchases
598704    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
598705    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
598706    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
598707    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
598708    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
598709    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
598710    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
598711    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
598712    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
598713    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
598714    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
598715    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
598716    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
598717    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
598718    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
598719    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
598720    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
598721    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
598722    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
598723    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
598724    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
598725    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
598726    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
598727    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
598728    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
598729    +END;
MPRINT(EM_DIAGRAM):   END;
598730    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598731    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
598732    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598733    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598734    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
598735    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598736    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598737    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
598738    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598739    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
598740    +   H11  =     0.74666931543537 * S_AcceptedCmpTotal  +    -0.26928580042975 *
598741    +        S_Age  +     0.03131160696792 * S_Frq  +     0.37966440012262 *
598742    +        S_Income  +      0.4880522012865 * S_Kidhome
598743    +          +    -0.10642365845458 * S_Mnt  +     0.07021626529074 *
598744    +        S_MntFishProducts  +    -0.40502977166003 * S_MntFruits
598745    +          +    -0.02349027629347 * S_MntGoldProds  +     1.05528002915119 *
598746    +        S_MntMeatProducts  +    -0.12400227624159 * S_MntSweetProducts
598747    +          +    -0.97101385029429 * S_MntWines  +     0.09983399059623 *
598748    +        S_MonthsAsCustomer  +     0.92029846720585 * S_NumCatalogPurchases
598749    +          +     1.28630491068585 * S_NumDealsPurchases
598750    +          +     0.12175737778271 * S_NumDistPurchases
598751    +          +    -0.62012456448967 * S_NumStorePurchases
598752    +          +     -0.6092351519122 * S_NumWebPurchases
598753    +          +     1.46336740414795 * S_NumWebVisitsMonth
598754    +          +     0.69679756539023 * S_RFMstat  +     0.19882494898547 *
598755    +        S_RMntFrq  +    -1.02986329135861 * S_Recency
598756    +          +      0.0049755319955 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.74666931543537 * S_AcceptedCmpTotal + -0.26928580042975 * S_Age 
+ 0.03131160696792 * S_Frq + 0.37966440012262 * S_Income + 0.4880522012865 * S_Kidhome + 
-0.10642365845458 * S_Mnt + 0.07021626529074 * S_MntFishProducts + -0.40502977166003 * 
S_MntFruits + -0.02349027629347 * S_MntGoldProds + 1.05528002915119 * S_MntMeatProducts + 
-0.12400227624159 * S_MntSweetProducts + -0.97101385029429 * S_MntWines + 0.09983399059623 * 
S_MonthsAsCustomer + 0.92029846720585 * S_NumCatalogPurchases + 1.28630491068585 * 
S_NumDealsPurchases + 0.12175737778271 * S_NumDistPurchases + -0.62012456448967 * 
S_NumStorePurchases + -0.6092351519122 * S_NumWebPurchases + 1.46336740414795 * 
S_NumWebVisitsMonth + 0.69679756539023 * S_RFMstat + 0.19882494898547 * S_RMntFrq + 
-1.02986329135861 * S_Recency + 0.0049755319955 * S_Teenhome ;
598757    +   H12  =    -0.91147771903585 * S_AcceptedCmpTotal  +    -0.07240098012329 *
598758    +        S_Age  +     0.26286532004526 * S_Frq  +    -0.43462974385984 *
598759    +        S_Income  +     0.63026291057347 * S_Kidhome
598760    +          +     0.15892598048777 * S_Mnt  +     0.96482485555311 *
598761    +        S_MntFishProducts  +    -0.04775061278769 * S_MntFruits
598762    +          +    -0.14625524046285 * S_MntGoldProds  +    -1.56223918788692 *
598763    +        S_MntMeatProducts  +    -0.51302960479013 * S_MntSweetProducts
598764    +          +     0.56413001484415 * S_MntWines  +     0.28344048349537 *
598765    +        S_MonthsAsCustomer  +    -0.84830633187723 * S_NumCatalogPurchases
598766    +          +    -0.66569109065716 * S_NumDealsPurchases
598767    +          +    -0.04991685336251 * S_NumDistPurchases
598768    +          +     0.97830186941279 * S_NumStorePurchases
598769    +          +     1.01041490205359 * S_NumWebPurchases
598770    +          +    -1.32418956036577 * S_NumWebVisitsMonth
598771    +          +    -0.11032432808867 * S_RFMstat  +     0.09917599091828 *
598772    +        S_RMntFrq  +     1.45035992156192 * S_Recency
598773    +          +     0.38289769509688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.91147771903585 * S_AcceptedCmpTotal + -0.07240098012329 * S_Age 
+ 0.26286532004526 * S_Frq + -0.43462974385984 * S_Income + 0.63026291057347 * S_Kidhome + 
0.15892598048777 * S_Mnt + 0.96482485555311 * S_MntFishProducts + -0.04775061278769 * 
S_MntFruits + -0.14625524046285 * S_MntGoldProds + -1.56223918788692 * S_MntMeatProducts + 
-0.51302960479013 * S_MntSweetProducts + 0.56413001484415 * S_MntWines + 0.28344048349537 * 
S_MonthsAsCustomer + -0.84830633187723 * S_NumCatalogPurchases + -0.66569109065716 * 
S_NumDealsPurchases + -0.04991685336251 * S_NumDistPurchases + 0.97830186941279 * 
S_NumStorePurchases + 1.01041490205359 * S_NumWebPurchases + -1.32418956036577 * 
S_NumWebVisitsMonth + -0.11032432808867 * S_RFMstat + 0.09917599091828 * S_RMntFrq + 
1.45035992156192 * S_Recency + 0.38289769509688 * S_Teenhome ;
598774    +   H13  =    -0.14475824149684 * S_AcceptedCmpTotal  +    -0.16657585718812 *
598775    +        S_Age  +    -0.20157354778904 * S_Frq  +    -1.05691184936615 *
598776    +        S_Income  +     0.56998894495459 * S_Kidhome
598777    +          +     0.18949667873044 * S_Mnt  +    -0.20862370006966 *
598778    +        S_MntFishProducts  +      0.1024167951483 * S_MntFruits
598779    +          +     0.08478049294226 * S_MntGoldProds  +    -0.39072502110043 *
598780    +        S_MntMeatProducts  +     0.28675920068433 * S_MntSweetProducts
598781    +          +      0.3076165718478 * S_MntWines  +    -0.24620359701099 *
598782    +        S_MonthsAsCustomer  +    -0.59353014518331 * S_NumCatalogPurchases
598783    +          +     0.07739967453744 * S_NumDealsPurchases
598784    +          +    -0.43729543807168 * S_NumDistPurchases
598785    +          +      0.0856627398024 * S_NumStorePurchases
598786    +          +     -0.0045478100059 * S_NumWebPurchases
598787    +          +    -0.64123054514198 * S_NumWebVisitsMonth
598788    +          +     0.10052569590232 * S_RFMstat  +     -0.3728458977342 *
598789    +        S_RMntFrq  +     1.48732817876807 * S_Recency
598790    +          +     0.85232956367064 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14475824149684 * S_AcceptedCmpTotal + -0.16657585718812 * S_Age 
+ -0.20157354778904 * S_Frq + -1.05691184936615 * S_Income + 0.56998894495459 * S_Kidhome + 
0.18949667873044 * S_Mnt + -0.20862370006966 * S_MntFishProducts + 0.1024167951483 * 
S_MntFruits + 0.08478049294226 * S_MntGoldProds + -0.39072502110043 * S_MntMeatProducts + 
0.28675920068433 * S_MntSweetProducts + 0.3076165718478 * S_MntWines + -0.24620359701099 * 
S_MonthsAsCustomer + -0.59353014518331 * S_NumCatalogPurchases + 0.07739967453744 * 
S_NumDealsPurchases + -0.43729543807168 * S_NumDistPurchases + 0.0856627398024 * 
S_NumStorePurchases + -0.0045478100059 * S_NumWebPurchases + -0.64123054514198 * 
S_NumWebVisitsMonth + 0.10052569590232 * S_RFMstat + -0.3728458977342 * S_RMntFrq + 
1.48732817876807 * S_Recency + 0.85232956367064 * S_Teenhome ;
598791    +   H11  = H11  +    -0.62033856363993 * AcceptedCmp10
598792    +          +    -0.00989853037258 * AcceptedCmp20  +    -0.77097813133684 *
598793    +        AcceptedCmp30  +    -0.31448879986852 * AcceptedCmp40
598794    +          +    -0.18015100491326 * AcceptedCmp50  +     0.05706658641547 *
598795    +        Complain0  +    -0.50105732309148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.62033856363993 * AcceptedCmp10 + -0.00989853037258 * 
AcceptedCmp20 + -0.77097813133684 * AcceptedCmp30 + -0.31448879986852 * AcceptedCmp40 + 
-0.18015100491326 * AcceptedCmp50 + 0.05706658641547 * Complain0 + -0.50105732309148 * 
HigherEducationBinary0 ;
598796    +   H12  = H12  +     0.18414272565688 * AcceptedCmp10
598797    +          +      -0.043654707425 * AcceptedCmp20  +    -0.32394050721443 *
598798    +        AcceptedCmp30  +    -0.06950576864476 * AcceptedCmp40
598799    +          +     1.12623106550654 * AcceptedCmp50  +     -0.0339705259886 *
598800    +        Complain0  +    -0.02110753805765 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.18414272565688 * AcceptedCmp10 + -0.043654707425 * 
AcceptedCmp20 + -0.32394050721443 * AcceptedCmp30 + -0.06950576864476 * AcceptedCmp40 + 
1.12623106550654 * AcceptedCmp50 + -0.0339705259886 * Complain0 + -0.02110753805765 * 
HigherEducationBinary0 ;
598801    +   H13  = H13  +     0.14110100411707 * AcceptedCmp10
598802    +          +     0.64032852332569 * AcceptedCmp20  +     0.50653679176195 *
598803    +        AcceptedCmp30  +     0.42616036519805 * AcceptedCmp40
598804    +          +     0.07072170981185 * AcceptedCmp50  +     0.29291097359872 *
598805    +        Complain0  +    -0.31418317974788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.14110100411707 * AcceptedCmp10 + 0.64032852332569 * 
AcceptedCmp20 + 0.50653679176195 * AcceptedCmp30 + 0.42616036519805 * AcceptedCmp40 + 
0.07072170981185 * AcceptedCmp50 + 0.29291097359872 * Complain0 + -0.31418317974788 * 
HigherEducationBinary0 ;
598806    +   H11  = H11  +     0.03341889038374 * Education2n_Cycle
598807    +          +     0.11423971315431 * EducationBasic  +     0.27817968687951 *
598808    +        EducationGraduation  +     -0.0281674058306 * EducationMaster
598809    +          +     0.16155355707944 * Marital_StatusDivorced
598810    +          +     0.04915644167404 * Marital_StatusMarried
598811    +          +    -0.16886350906837 * Marital_StatusSingle
598812    +          +    -0.09540299348184 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03341889038374 * Education2n_Cycle + 0.11423971315431 * 
EducationBasic + 0.27817968687951 * EducationGraduation + -0.0281674058306 * EducationMaster + 
0.16155355707944 * Marital_StatusDivorced + 0.04915644167404 * Marital_StatusMarried + 
-0.16886350906837 * Marital_StatusSingle + -0.09540299348184 * Marital_StatusTogether ;
598813    +   H12  = H12  +    -0.18658767739271 * Education2n_Cycle
598814    +          +     0.31497893454838 * EducationBasic  +    -0.02835844728364 *
598815    +        EducationGraduation  +     0.03310756432448 * EducationMaster
598816    +          +    -0.15094637092036 * Marital_StatusDivorced
598817    +          +     0.07664831456886 * Marital_StatusMarried
598818    +          +    -0.47693612610813 * Marital_StatusSingle
598819    +          +     0.14693691283858 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18658767739271 * Education2n_Cycle + 0.31497893454838 * 
EducationBasic + -0.02835844728364 * EducationGraduation + 0.03310756432448 * EducationMaster 
+ -0.15094637092036 * Marital_StatusDivorced + 0.07664831456886 * Marital_StatusMarried + 
-0.47693612610813 * Marital_StatusSingle + 0.14693691283858 * Marital_StatusTogether ;
598820    +   H13  = H13  +      0.0502517318618 * Education2n_Cycle
598821    +          +    -0.13621229906896 * EducationBasic  +     0.20624951172738 *
598822    +        EducationGraduation  +     0.20173383445657 * EducationMaster
598823    +          +    -0.58672623647391 * Marital_StatusDivorced
598824    +          +      1.8684271616322 * Marital_StatusMarried
598825    +          +    -1.30134837394569 * Marital_StatusSingle
598826    +          +     1.11308583986156 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0502517318618 * Education2n_Cycle + -0.13621229906896 * 
EducationBasic + 0.20624951172738 * EducationGraduation + 0.20173383445657 * EducationMaster + 
-0.58672623647391 * Marital_StatusDivorced + 1.8684271616322 * Marital_StatusMarried + 
-1.30134837394569 * Marital_StatusSingle + 1.11308583986156 * Marital_StatusTogether ;
598827    +   H11  =    -1.22504924155195 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.22504924155195 + H11 ;
598828    +   H12  =     0.36945079976002 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36945079976002 + H12 ;
598829    +   H13  =     1.84114106095878 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.84114106095878 + H13 ;
598830    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
598831    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
598832    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
598833    +END;
MPRINT(EM_DIAGRAM):   END;
598834    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
598835    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
598836    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
598837    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
598838    +END;
MPRINT(EM_DIAGRAM):   END;
598839    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598840    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
598841    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598842    +
598843    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
598844    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
598845    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
598846    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
598847    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
598848    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
598849    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
598850    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
598851    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
598852    +end;
MPRINT(EM_DIAGRAM):   end;
598853    +else do;
MPRINT(EM_DIAGRAM):   else do;
598854    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
598855    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
598856    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
598857    +   end;
MPRINT(EM_DIAGRAM):   end;
598858    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
598859    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
598860    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
598861    +   end;
MPRINT(EM_DIAGRAM):   end;
598862    +   else do;
MPRINT(EM_DIAGRAM):   else do;
598863    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
598864    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
598865    +   end;
MPRINT(EM_DIAGRAM):   end;
598866    +end;
MPRINT(EM_DIAGRAM):   end;
598867    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
598868    +   P_DepVar1  =     2.49740994012105 * H11  +    -2.95405883837745 * H12
598869    +          +    -3.26077127833109 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.49740994012105 * H11 + -2.95405883837745 * H12 + 
-3.26077127833109 * H13 ;
598870    +   P_DepVar1  =    -0.23645507747647 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23645507747647 + P_DepVar1 ;
598871    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
598872    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
598873    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
598874    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
598875    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
598876    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
598877    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
598878    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
598879    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
598880    +END;
MPRINT(EM_DIAGRAM):   END;
598881    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
598882    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
598883    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
598884    +END;
MPRINT(EM_DIAGRAM):   END;
598885    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
598886    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
598887    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
598888    +END;
MPRINT(EM_DIAGRAM):   END;
598889    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
598890    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
598891    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
598892    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
598893    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
598894    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
598895    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
598896    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598897    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
598898    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
598899    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
598900    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
598901    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
598902    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
598903    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
598904    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
598905    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
598906    +END;
MPRINT(EM_DIAGRAM):   END;
598907    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
598908    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
598909    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
598910    +drop
598911    +H11
598912    +H12
598913    +H13
598914    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
598915    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
598916    +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
598917    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598918    +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
598919    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598920    +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
598921    +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
598922    +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
598923    +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
598924    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598925    +* Renaming Into variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural3;
598926    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598927    +length Neural3_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural3_I_DepVar $32;
598928    +drop Neural3_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural3_I_DepVar;
598929    +Neural3_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural3_I_DepVar = I_DepVar;
598930    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598931    +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
598932    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598933    +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
598934    +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
598935    +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
598936    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598937    +* Ensmbl32: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Voting to produce predicted target;
598938    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598939    +array Ensmbl32_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl32_post{2} _temporary_;
598940    +array Ensmbl32_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl32_count{2} _temporary_;
598941    +array Ensmbl32_level{2} $32 _temporary_ (
598942    +"1"
598943    +"0"
598944    +);
MPRINT(EM_DIAGRAM):   array Ensmbl32_level{2} $32 _temporary_ ( "1" "0" );
598945    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
598946    +Ensmbl32_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{i} = 0;
598947    +Ensmbl32_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{i} = 0;
598948    +end;
MPRINT(EM_DIAGRAM):   end;
598949    +if AutoNeural7_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl32_level{1} then do;
598950    +Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
598951    +Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural7_P_DepVar1;
598952    +end;
MPRINT(EM_DIAGRAM):   end;
598953    +if AutoNeural9_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl32_level{1} then do;
598954    +Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
598955    +Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural9_P_DepVar1;
598956    +end;
MPRINT(EM_DIAGRAM):   end;
598957    +if AutoNeural12_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl32_level{1} then do;
598958    +Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
598959    +Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural12_P_DepVar1;
598960    +end;
MPRINT(EM_DIAGRAM):   end;
598961    +if AutoNeural11_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl32_level{1} then do;
598962    +Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
598963    +Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural11_P_DepVar1;
598964    +end;
MPRINT(EM_DIAGRAM):   end;
598965    +if Neural3_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl32_level{1} then do;
598966    +Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
598967    +Ensmbl32_post{1}=Ensmbl32_post{1}+ Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ Neural3_P_DepVar1;
598968    +end;
MPRINT(EM_DIAGRAM):   end;
598969    +if AutoNeural7_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl32_level{2} then do;
598970    +Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
598971    +Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural7_P_DepVar0;
598972    +end;
MPRINT(EM_DIAGRAM):   end;
598973    +if AutoNeural9_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl32_level{2} then do;
598974    +Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
598975    +Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural9_P_DepVar0;
598976    +end;
MPRINT(EM_DIAGRAM):   end;
598977    +if AutoNeural12_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl32_level{2} then do;
598978    +Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
598979    +Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural12_P_DepVar0;
598980    +end;
MPRINT(EM_DIAGRAM):   end;
598981    +if AutoNeural11_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl32_level{2} then do;
598982    +Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
598983    +Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural11_P_DepVar0;
598984    +end;
MPRINT(EM_DIAGRAM):   end;
598985    +if Neural3_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl32_level{2} then do;
598986    +Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
598987    +Ensmbl32_post{2}=Ensmbl32_post{2}+ Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ Neural3_P_DepVar0;
598988    +end;
MPRINT(EM_DIAGRAM):   end;
598989    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598990    +* Ensmbl32: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Determine Into Variable;
598991    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
598992    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
598993    +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
598994    +vote_count = max(
598995    +Ensmbl32_count{1} ,
598996    +Ensmbl32_count{2}
598997    +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl32_count{1} , Ensmbl32_count{2} );
598998    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
598999    +if Ensmbl32_count{i}=vote_count and Ensmbl32_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl32_count{i}=vote_count and Ensmbl32_post{i}>vote_post then do;
599000    +I_DepVar = Ensmbl32_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl32_level{i};
599001    +vote_post = Ensmbl32_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl32_count{i};
599002    +end;
MPRINT(EM_DIAGRAM):   end;
599003    +end;
MPRINT(EM_DIAGRAM):   end;
599004    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599005    +* Ensmbl32: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Compute posterior vars using models predicting the chosen 
level;
599006    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599007    +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
599008    +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
599009    +if I_DepVar = AutoNeural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural7_I_DepVar then do;
599010    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
599011    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
599012    +end;
MPRINT(EM_DIAGRAM):   end;
599013    +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
599014    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
599015    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
599016    +end;
MPRINT(EM_DIAGRAM):   end;
599017    +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
599018    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
599019    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
599020    +end;
MPRINT(EM_DIAGRAM):   end;
599021    +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
599022    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
599023    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
599024    +end;
MPRINT(EM_DIAGRAM):   end;
599025    +if I_DepVar = Neural3_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural3_I_DepVar then do;
599026    +P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
599027    +P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
599028    +end;
MPRINT(EM_DIAGRAM):   end;
599029    +* Ensmbl32: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Averaging posterior;
599030    +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
599031    +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
599032    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599033    +* Ensmbl32: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Producing Unformatted variable;
599034    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599035    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
599036    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
599037    +else
599038    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
599039    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599040    +* Ensmbl32: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Computing _WARN_ Variable;
599041    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599042    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
599043    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
599044    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
599045    +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
599045   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
599046    +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
599046   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
599047    +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
599047   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
599048    +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
599048   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
599049    +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
599049   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
599050    +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
599050   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
599051    +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
599051   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
599052    +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
599052   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
599053    +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
599053   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
599054    +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
599054   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
599055    +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
599055   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
599056    +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
599056   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
599057    +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
599057   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
599058    +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
599058   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
599059    +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
599059   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
599060    +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
599060   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
599061    +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
599062    +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
599063    +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
599064    +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
599065    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599066    +* Ensmbl32: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Computing Residual Vars;
599067    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599068    +if
599069    +F_DepVar NE '1'
599070    +AND F_DepVar NE '0'
599071    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
599072    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
599073    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
599074    +end;
MPRINT(EM_DIAGRAM):   end;
599075    +else do;
MPRINT(EM_DIAGRAM):   else do;
599076    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
599077    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
599078    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
599079    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
599080    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
599081    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
599082    +END;
MPRINT(EM_DIAGRAM):   END;
599083    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
599084     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL32_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL7_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
599085     quit;
599086     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
599087     filename emflow
599087   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl32\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl32\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring AUTONEURAL7_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599088     *------------------------------------------------------------*;
599089     * Ensmbl32: Scoring AUTONEURAL7_VALIDATE data;
599090     *------------------------------------------------------------*;
599091     data EMWS8.Ensmbl32_VALIDATE
599092     / view=EMWS8.Ensmbl32_VALIDATE
599093     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl32_VALIDATE / view=EMWS8.Ensmbl32_VALIDATE ;
599094     set EMWS8.AutoNeural7_VALIDATE
599095     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_VALIDATE ;
599096     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl32\EMFLOWSCORE.sas.
599097    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599098    +* Ensmbl32: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Combine model for DepVar;
599099    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599100    +* Ensmbl32: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 1 of 5;
599101    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599102    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599103    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
599104    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
599105    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
599106    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599107    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599108    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
599109    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
599110    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
599111    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599112    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599113    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
599114    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
599115    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
599116    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599117    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599118    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
599119    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
599120    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
599121    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599122    +
599123    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
599124    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
599124   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
599125    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
599126    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
599127    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
599128    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
599129    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
599130    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599131    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
599132    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
599133    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
599134    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599135    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599136    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
599137    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599138    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
599139    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
599140    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
599141    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599142    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
599143    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
599144    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
599145    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599146    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599147    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
599148    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
599149    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
599150    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599151    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599152    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
599153    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
599154    +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
599155    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599156    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
599157    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
599158    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
599159    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
599160    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
599161    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
599162    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
599163    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
599164    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
599165    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
599166    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
599167    +LENGTH _WARN_ $4
599168    +      F_DepVar  $ 12
599169    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
599170    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
599171    +
599172    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
599173    +
599174    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
599175    +
599176    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
599177    +
599178    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
599179    +
599180    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
599181    +
599182    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
599183    +
599184    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
599185    +
599186    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
599187    +
599188    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
599189    +
599190    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
599191    +
599192    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
599193    +
599194    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
599195    +
599196    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
599197    +
599198    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
599199    +
599200    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
599201    +
599202    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
599203    +
599204    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
599205    +
599206    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
599207    +
599208    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
599209    +
599210    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
599211    +
599212    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
599213    +
599214    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
599215    +
599216    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
599217    +
599218    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
599219    +
599220    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
599221    +
599222    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
599223    +
599224    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
599225    +
599226    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
599227    +
599228    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
599229    +
599230    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
599231    +
599232    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
599233    +
599234    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
599235    +
599236    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
599237    +
599238    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
599239    +
599240    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
599241    +
599242    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
599243    +
599244    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
599245    +
599246    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
599247    +
599248    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
599249    +
599250    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
599251    +
599252    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
599253    +
599254    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
599255    +
599256    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
599257    +
599258    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
599259    +
599260    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
599261    +
599262    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
599263    +
599264    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
599265    +
599266    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
599267    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
599268    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
599269    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
599270    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
599271    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599272    +end;
MPRINT(EM_DIAGRAM):   end;
599273    +else do;
MPRINT(EM_DIAGRAM):   else do;
599274    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
599275    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
599276    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
599277    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
599278    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
599279    +   end;
MPRINT(EM_DIAGRAM):   end;
599280    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
599281    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
599282    +   end;
MPRINT(EM_DIAGRAM):   end;
599283    +   else do;
MPRINT(EM_DIAGRAM):   else do;
599284    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
599285    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
599286    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599287    +   end;
MPRINT(EM_DIAGRAM):   end;
599288    +end;
MPRINT(EM_DIAGRAM):   end;
599289    +
599290    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
599291    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
599292    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
599293    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
599294    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
599295    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599296    +end;
MPRINT(EM_DIAGRAM):   end;
599297    +else do;
MPRINT(EM_DIAGRAM):   else do;
599298    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
599299    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
599300    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
599301    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
599302    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
599303    +   end;
MPRINT(EM_DIAGRAM):   end;
599304    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
599305    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
599306    +   end;
MPRINT(EM_DIAGRAM):   end;
599307    +   else do;
MPRINT(EM_DIAGRAM):   else do;
599308    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
599309    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
599310    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599311    +   end;
MPRINT(EM_DIAGRAM):   end;
599312    +end;
MPRINT(EM_DIAGRAM):   end;
599313    +
599314    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
599315    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
599316    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
599317    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
599318    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
599319    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599320    +end;
MPRINT(EM_DIAGRAM):   end;
599321    +else do;
MPRINT(EM_DIAGRAM):   else do;
599322    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
599323    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
599324    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
599325    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
599326    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
599327    +   end;
MPRINT(EM_DIAGRAM):   end;
599328    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
599329    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
599330    +   end;
MPRINT(EM_DIAGRAM):   end;
599331    +   else do;
MPRINT(EM_DIAGRAM):   else do;
599332    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
599333    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
599334    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599335    +   end;
MPRINT(EM_DIAGRAM):   end;
599336    +end;
MPRINT(EM_DIAGRAM):   end;
599337    +
599338    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
599339    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
599340    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
599341    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
599342    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
599343    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599344    +end;
MPRINT(EM_DIAGRAM):   end;
599345    +else do;
MPRINT(EM_DIAGRAM):   else do;
599346    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
599347    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
599348    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
599349    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
599350    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
599351    +   end;
MPRINT(EM_DIAGRAM):   end;
599352    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
599353    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
599354    +   end;
MPRINT(EM_DIAGRAM):   end;
599355    +   else do;
MPRINT(EM_DIAGRAM):   else do;
599356    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
599357    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
599358    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599359    +   end;
MPRINT(EM_DIAGRAM):   end;
599360    +end;
MPRINT(EM_DIAGRAM):   end;
599361    +
599362    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
599363    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
599364    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
599365    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
599366    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
599367    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599368    +end;
MPRINT(EM_DIAGRAM):   end;
599369    +else do;
MPRINT(EM_DIAGRAM):   else do;
599370    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
599371    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
599372    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
599373    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
599374    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
599375    +   end;
MPRINT(EM_DIAGRAM):   end;
599376    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
599377    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
599378    +   end;
MPRINT(EM_DIAGRAM):   end;
599379    +   else do;
MPRINT(EM_DIAGRAM):   else do;
599380    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
599381    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
599382    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599383    +   end;
MPRINT(EM_DIAGRAM):   end;
599384    +end;
MPRINT(EM_DIAGRAM):   end;
599385    +
599386    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
599387    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
599388    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
599389    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
599390    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
599391    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599392    +end;
MPRINT(EM_DIAGRAM):   end;
599393    +else do;
MPRINT(EM_DIAGRAM):   else do;
599394    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
599395    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
599396    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
599397    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
599398    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
599399    +   end;
MPRINT(EM_DIAGRAM):   end;
599400    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
599401    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
599402    +   end;
MPRINT(EM_DIAGRAM):   end;
599403    +   else do;
MPRINT(EM_DIAGRAM):   else do;
599404    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
599405    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
599406    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599407    +   end;
MPRINT(EM_DIAGRAM):   end;
599408    +end;
MPRINT(EM_DIAGRAM):   end;
599409    +
599410    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
599411    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
599412    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
599413    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
599414    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
599415    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599416    +end;
MPRINT(EM_DIAGRAM):   end;
599417    +else do;
MPRINT(EM_DIAGRAM):   else do;
599418    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
599419    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
599420    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
599421    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
599422    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
599423    +   end;
MPRINT(EM_DIAGRAM):   end;
599424    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
599425    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
599426    +   end;
MPRINT(EM_DIAGRAM):   end;
599427    +   else do;
MPRINT(EM_DIAGRAM):   else do;
599428    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
599429    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
599430    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599431    +   end;
MPRINT(EM_DIAGRAM):   end;
599432    +end;
MPRINT(EM_DIAGRAM):   end;
599433    +
599434    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
599435    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
599436    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
599437    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
599438    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
599439    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
599440    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
599441    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
599442    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
599443    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
599444    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
599445    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
599446    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
599447    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599448    +end;
MPRINT(EM_DIAGRAM):   end;
599449    +else do;
MPRINT(EM_DIAGRAM):   else do;
599450    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
599451    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
599452    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
599453    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
599454    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
599455    +   end;
MPRINT(EM_DIAGRAM):   end;
599456    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
599457    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
599458    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
599459    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
599460    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
599461    +   end;
MPRINT(EM_DIAGRAM):   end;
599462    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
599463    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
599464    +   end;
MPRINT(EM_DIAGRAM):   end;
599465    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
599466    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
599467    +   end;
MPRINT(EM_DIAGRAM):   end;
599468    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
599469    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
599470    +   end;
MPRINT(EM_DIAGRAM):   end;
599471    +   else do;
MPRINT(EM_DIAGRAM):   else do;
599472    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
599473    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
599474    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
599475    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
599476    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
599477    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599478    +   end;
MPRINT(EM_DIAGRAM):   end;
599479    +end;
MPRINT(EM_DIAGRAM):   end;
599480    +
599481    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
599482    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
599483    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
599484    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
599485    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
599486    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
599487    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
599488    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
599489    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
599490    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
599491    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
599492    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
599493    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
599494    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
599495    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599496    +end;
MPRINT(EM_DIAGRAM):   end;
599497    +else do;
MPRINT(EM_DIAGRAM):   else do;
599498    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
599499    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
599500    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
599501    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
599502    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
599503    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
599504    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
599505    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
599506    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
599507    +         end;
MPRINT(EM_DIAGRAM):   end;
599508    +         else do;
MPRINT(EM_DIAGRAM):   else do;
599509    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
599510    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
599511    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
599512    +            end;
MPRINT(EM_DIAGRAM):   end;
599513    +         end;
MPRINT(EM_DIAGRAM):   end;
599514    +      end;
MPRINT(EM_DIAGRAM):   end;
599515    +      else do;
MPRINT(EM_DIAGRAM):   else do;
599516    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
599517    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
599518    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
599519    +         end;
MPRINT(EM_DIAGRAM):   end;
599520    +      end;
MPRINT(EM_DIAGRAM):   end;
599521    +   end;
MPRINT(EM_DIAGRAM):   end;
599522    +   else do;
MPRINT(EM_DIAGRAM):   else do;
599523    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
599524    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
599525    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
599526    +      end;
MPRINT(EM_DIAGRAM):   end;
599527    +      else do;
MPRINT(EM_DIAGRAM):   else do;
599528    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
599529    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
599530    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
599531    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
599532    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
599533    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
599534    +         end;
MPRINT(EM_DIAGRAM):   end;
599535    +      end;
MPRINT(EM_DIAGRAM):   end;
599536    +   end;
MPRINT(EM_DIAGRAM):   end;
599537    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
599538    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
599539    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
599540    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
599541    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
599542    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
599543    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599544    +   end;
MPRINT(EM_DIAGRAM):   end;
599545    +end;
MPRINT(EM_DIAGRAM):   end;
599546    +
599547    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
599548    +*** Checking missing input Interval
599549    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
599550    +
599551    +IF NMISS(
599552    +   AcceptedCmpTotal ,
599553    +   Age ,
599554    +   Frq ,
599555    +   Income ,
599556    +   Kidhome ,
599557    +   Mnt ,
599558    +   MntFishProducts ,
599559    +   MntFruits ,
599560    +   MntGoldProds ,
599561    +   MntMeatProducts ,
599562    +   MntSweetProducts ,
599563    +   MntWines ,
599564    +   MonthsAsCustomer ,
599565    +   NumCatalogPurchases ,
599566    +   NumDealsPurchases ,
599567    +   NumDistPurchases ,
599568    +   NumStorePurchases ,
599569    +   NumWebPurchases ,
599570    +   NumWebVisitsMonth ,
599571    +   RFMstat ,
599572    +   RMntFrq ,
599573    +   Recency ,
599574    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
599575    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
599576    +
599577    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599578    +END;
MPRINT(EM_DIAGRAM):   END;
599579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
599580    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
599581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
599582    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
599583    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
599584    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
599585    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
599586    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
599587    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
599588    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
599589    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
599590    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
599591    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
599592    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
599593    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
599594    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
599595    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
599596    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
599597    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
599598    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
599599    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
599600    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
599601    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
599602    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
599603    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
599604    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
599605    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
599606    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
599607    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
599608    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
599609    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
599610    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
599611    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
599612    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
599613    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
599614    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
599615    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
599616    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
599617    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
599618    +END;
MPRINT(EM_DIAGRAM):   END;
599619    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
599620    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
599621    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
599622    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
599623    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
599624    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
599625    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
599626    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
599627    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
599628    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
599629    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
599630    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
599631    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
599632    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
599633    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
599634    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
599635    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
599636    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
599637    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
599638    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
599639    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
599640    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
599641    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
599642    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
599643    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
599644    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
599645    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
599646    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
599647    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
599648    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
599649    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
599650    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
599651    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
599652    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
599653    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
599654    +   ELSE S_NumCatalogPurchases
599655    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
599656    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
599657    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
599658    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
599659    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
599660    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
599661    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
599662    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
599663    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
599664    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
599665    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
599666    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
599667    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
599668    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
599669    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
599670    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
599671    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
599672    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
599673    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
599674    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
599675    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
599676    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
599677    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
599678    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
599679    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
599680    +END;
MPRINT(EM_DIAGRAM):   END;
599681    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
599682    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
599683    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
599684    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
599685    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
599686    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
599687    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
599688    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
599689    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
599690    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
599691    +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
599692    +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
599693    +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
599694    +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
599695    +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
599696    +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
599697    +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
599698    +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
599699    +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
599700    +          +     0.09708841024031 * S_NumDealsPurchases
599701    +          +    -0.29075561032014 * S_NumDistPurchases
599702    +          +    -0.14495394259873 * S_NumStorePurchases
599703    +          +     0.11890705145732 * S_NumWebPurchases
599704    +          +    -0.16954189911344 * S_NumWebVisitsMonth
599705    +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
599706    +        S_RMntFrq  +     0.17150719398884 * S_Recency
599707    +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
599708    +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
599709    +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
599710    +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
599711    +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
599712    +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
599713    +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
599714    +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
599715    +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
599716    +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
599717    +          +     0.16274478997892 * S_NumDealsPurchases
599718    +          +     0.03966958784582 * S_NumDistPurchases
599719    +          +    -0.04714110726598 * S_NumStorePurchases
599720    +          +    -0.02124229528082 * S_NumWebPurchases
599721    +          +     0.29753299776832 * S_NumWebVisitsMonth
599722    +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
599723    +        S_RMntFrq  +     -0.3340129986623 * S_Recency
599724    +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
599725    +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
599726    +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
599727    +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
599728    +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
599729    +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
599730    +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
599731    +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
599732    +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
599733    +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
599734    +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
599735    +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
599736    +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
599737    +        EducationGraduation  +     0.00619669837452 * EducationMaster
599738    +          +    -0.05037639679806 * Marital_StatusDivorced
599739    +          +     0.28781968727878 * Marital_StatusMarried
599740    +          +    -0.20382417074384 * Marital_StatusSingle
599741    +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
599742    +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
599743    +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
599744    +        EducationGraduation  +    -0.06952670554019 * EducationMaster
599745    +          +     0.06970969219123 * Marital_StatusDivorced
599746    +          +    -0.15787475744986 * Marital_StatusMarried
599747    +          +     0.14345344072192 * Marital_StatusSingle
599748    +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
599749    +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
599750    +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
599751    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
599752    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
599753    +END;
MPRINT(EM_DIAGRAM):   END;
599754    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
599755    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
599756    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
599757    +END;
MPRINT(EM_DIAGRAM):   END;
599758    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
599759    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
599760    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
599761    +
599762    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
599763    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
599764    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
599765    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
599766    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
599767    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
599768    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
599769    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
599770    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
599771    +end;
MPRINT(EM_DIAGRAM):   end;
599772    +else do;
MPRINT(EM_DIAGRAM):   else do;
599773    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
599774    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
599775    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
599776    +   end;
MPRINT(EM_DIAGRAM):   end;
599777    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
599778    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
599779    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
599780    +   end;
MPRINT(EM_DIAGRAM):   end;
599781    +   else do;
MPRINT(EM_DIAGRAM):   else do;
599782    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
599783    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
599784    +   end;
MPRINT(EM_DIAGRAM):   end;
599785    +end;
MPRINT(EM_DIAGRAM):   end;
599786    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
599787    +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
599788    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
599789    +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
599790    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
599791    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
599792    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
599793    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
599794    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
599795    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
599796    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
599797    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
599798    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
599799    +END;
MPRINT(EM_DIAGRAM):   END;
599800    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
599801    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
599802    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
599803    +END;
MPRINT(EM_DIAGRAM):   END;
599804    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
599805    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
599806    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
599807    +END;
MPRINT(EM_DIAGRAM):   END;
599808    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
599809    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
599810    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
599811    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
599812    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
599813    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
599814    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
599815    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
599816    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
599817    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
599818    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
599819    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
599820    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
599821    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
599822    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
599823    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
599824    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
599825    +END;
MPRINT(EM_DIAGRAM):   END;
599826    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
599827    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
599828    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
599829    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
599830    +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
599831    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599832    +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
599833    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599834    +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
599835    +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
599836    +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
599837    +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
599838    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599839    +* Renaming Into variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural7;
599840    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599841    +length AutoNeural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural7_I_DepVar $32;
599842    +drop AutoNeural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_I_DepVar;
599843    +AutoNeural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural7_I_DepVar = I_DepVar;
599844    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599845    +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
599846    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599847    +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
599848    +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
599849    +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
599850    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599851    +* Ensmbl32: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 2 of 5;
599852    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599853    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599854    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
599855    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
599856    +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
599857    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
599858    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
599859    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
599860    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
599861    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
599862    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
599863    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
599864    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
599865    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
599866    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
599867    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
599868    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
599869    +LENGTH _WARN_ $4
599870    +      F_DepVar  $ 12
599871    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
599872    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
599873    +
599874    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
599875    +
599876    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
599877    +
599878    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
599879    +
599880    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
599881    +
599882    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
599883    +
599884    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
599885    +
599886    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
599887    +
599888    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
599889    +
599890    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
599891    +
599892    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
599893    +
599894    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
599895    +
599896    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
599897    +
599898    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
599899    +
599900    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
599901    +
599902    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
599903    +
599904    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
599905    +
599906    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
599907    +
599908    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
599909    +
599910    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
599911    +
599912    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
599913    +
599914    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
599915    +
599916    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
599917    +
599918    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
599919    +
599920    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
599921    +
599922    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
599923    +
599924    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
599925    +
599926    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
599927    +
599928    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
599929    +
599930    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
599931    +
599932    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
599933    +
599934    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
599935    +
599936    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
599937    +
599938    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
599939    +
599940    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
599941    +
599942    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
599943    +
599944    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
599945    +
599946    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
599947    +
599948    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
599949    +
599950    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
599951    +
599952    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
599953    +
599954    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
599955    +
599956    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
599957    +
599958    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
599959    +
599960    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
599961    +
599962    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
599963    +
599964    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
599965    +
599966    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
599967    +
599968    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
599969    +
599970    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
599971    +
599972    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
599973    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
599974    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
599975    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
599976    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
599977    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599978    +end;
MPRINT(EM_DIAGRAM):   end;
599979    +else do;
MPRINT(EM_DIAGRAM):   else do;
599980    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
599981    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
599982    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
599983    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
599984    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
599985    +   end;
MPRINT(EM_DIAGRAM):   end;
599986    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
599987    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
599988    +   end;
MPRINT(EM_DIAGRAM):   end;
599989    +   else do;
MPRINT(EM_DIAGRAM):   else do;
599990    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
599991    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
599992    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
599993    +   end;
MPRINT(EM_DIAGRAM):   end;
599994    +end;
MPRINT(EM_DIAGRAM):   end;
599995    +
599996    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
599997    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
599998    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
599999    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
600000    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600001    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600002    +end;
MPRINT(EM_DIAGRAM):   end;
600003    +else do;
MPRINT(EM_DIAGRAM):   else do;
600004    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
600005    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
600006    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600007    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
600008    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
600009    +   end;
MPRINT(EM_DIAGRAM):   end;
600010    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
600011    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
600012    +   end;
MPRINT(EM_DIAGRAM):   end;
600013    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600014    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
600015    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600016    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600017    +   end;
MPRINT(EM_DIAGRAM):   end;
600018    +end;
MPRINT(EM_DIAGRAM):   end;
600019    +
600020    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
600021    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
600022    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
600023    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
600024    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600025    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600026    +end;
MPRINT(EM_DIAGRAM):   end;
600027    +else do;
MPRINT(EM_DIAGRAM):   else do;
600028    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
600029    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
600030    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600031    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
600032    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
600033    +   end;
MPRINT(EM_DIAGRAM):   end;
600034    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
600035    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
600036    +   end;
MPRINT(EM_DIAGRAM):   end;
600037    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600038    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
600039    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600040    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600041    +   end;
MPRINT(EM_DIAGRAM):   end;
600042    +end;
MPRINT(EM_DIAGRAM):   end;
600043    +
600044    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
600045    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
600046    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
600047    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
600048    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600049    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600050    +end;
MPRINT(EM_DIAGRAM):   end;
600051    +else do;
MPRINT(EM_DIAGRAM):   else do;
600052    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
600053    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
600054    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600055    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
600056    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
600057    +   end;
MPRINT(EM_DIAGRAM):   end;
600058    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
600059    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
600060    +   end;
MPRINT(EM_DIAGRAM):   end;
600061    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600062    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
600063    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600064    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600065    +   end;
MPRINT(EM_DIAGRAM):   end;
600066    +end;
MPRINT(EM_DIAGRAM):   end;
600067    +
600068    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
600069    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
600070    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
600071    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
600072    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600073    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600074    +end;
MPRINT(EM_DIAGRAM):   end;
600075    +else do;
MPRINT(EM_DIAGRAM):   else do;
600076    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
600077    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
600078    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600079    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
600080    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
600081    +   end;
MPRINT(EM_DIAGRAM):   end;
600082    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
600083    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
600084    +   end;
MPRINT(EM_DIAGRAM):   end;
600085    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600086    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
600087    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600088    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600089    +   end;
MPRINT(EM_DIAGRAM):   end;
600090    +end;
MPRINT(EM_DIAGRAM):   end;
600091    +
600092    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
600093    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
600094    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
600095    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
600096    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600097    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600098    +end;
MPRINT(EM_DIAGRAM):   end;
600099    +else do;
MPRINT(EM_DIAGRAM):   else do;
600100    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
600101    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
600102    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600103    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
600104    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
600105    +   end;
MPRINT(EM_DIAGRAM):   end;
600106    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
600107    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
600108    +   end;
MPRINT(EM_DIAGRAM):   end;
600109    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600110    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
600111    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600112    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600113    +   end;
MPRINT(EM_DIAGRAM):   end;
600114    +end;
MPRINT(EM_DIAGRAM):   end;
600115    +
600116    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
600117    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
600118    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
600119    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
600120    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600121    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600122    +end;
MPRINT(EM_DIAGRAM):   end;
600123    +else do;
MPRINT(EM_DIAGRAM):   else do;
600124    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
600125    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
600126    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600127    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
600128    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
600129    +   end;
MPRINT(EM_DIAGRAM):   end;
600130    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
600131    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
600132    +   end;
MPRINT(EM_DIAGRAM):   end;
600133    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600134    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
600135    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600136    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600137    +   end;
MPRINT(EM_DIAGRAM):   end;
600138    +end;
MPRINT(EM_DIAGRAM):   end;
600139    +
600140    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
600141    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
600142    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
600143    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
600144    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
600145    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
600146    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
600147    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
600148    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
600149    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
600150    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
600151    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
600152    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600153    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600154    +end;
MPRINT(EM_DIAGRAM):   end;
600155    +else do;
MPRINT(EM_DIAGRAM):   else do;
600156    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
600157    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
600158    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600159    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
600160    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
600161    +   end;
MPRINT(EM_DIAGRAM):   end;
600162    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
600163    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
600164    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
600165    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
600166    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
600167    +   end;
MPRINT(EM_DIAGRAM):   end;
600168    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
600169    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
600170    +   end;
MPRINT(EM_DIAGRAM):   end;
600171    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
600172    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
600173    +   end;
MPRINT(EM_DIAGRAM):   end;
600174    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
600175    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
600176    +   end;
MPRINT(EM_DIAGRAM):   end;
600177    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600178    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
600179    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
600180    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
600181    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
600182    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600183    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600184    +   end;
MPRINT(EM_DIAGRAM):   end;
600185    +end;
MPRINT(EM_DIAGRAM):   end;
600186    +
600187    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
600188    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
600189    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
600190    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
600191    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
600192    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
600193    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
600194    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
600195    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
600196    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
600197    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
600198    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
600199    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
600200    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600201    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600202    +end;
MPRINT(EM_DIAGRAM):   end;
600203    +else do;
MPRINT(EM_DIAGRAM):   else do;
600204    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
600205    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
600206    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600207    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
600208    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
600209    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
600210    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
600211    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
600212    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
600213    +         end;
MPRINT(EM_DIAGRAM):   end;
600214    +         else do;
MPRINT(EM_DIAGRAM):   else do;
600215    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
600216    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
600217    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
600218    +            end;
MPRINT(EM_DIAGRAM):   end;
600219    +         end;
MPRINT(EM_DIAGRAM):   end;
600220    +      end;
MPRINT(EM_DIAGRAM):   end;
600221    +      else do;
MPRINT(EM_DIAGRAM):   else do;
600222    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
600223    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
600224    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
600225    +         end;
MPRINT(EM_DIAGRAM):   end;
600226    +      end;
MPRINT(EM_DIAGRAM):   end;
600227    +   end;
MPRINT(EM_DIAGRAM):   end;
600228    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600229    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
600230    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
600231    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
600232    +      end;
MPRINT(EM_DIAGRAM):   end;
600233    +      else do;
MPRINT(EM_DIAGRAM):   else do;
600234    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
600235    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
600236    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
600237    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
600238    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
600239    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
600240    +         end;
MPRINT(EM_DIAGRAM):   end;
600241    +      end;
MPRINT(EM_DIAGRAM):   end;
600242    +   end;
MPRINT(EM_DIAGRAM):   end;
600243    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
600244    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
600245    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
600246    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
600247    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
600248    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600249    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600250    +   end;
MPRINT(EM_DIAGRAM):   end;
600251    +end;
MPRINT(EM_DIAGRAM):   end;
600252    +
600253    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
600254    +*** Checking missing input Interval
600255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
600256    +
600257    +IF NMISS(
600258    +   AcceptedCmpTotal ,
600259    +   Age ,
600260    +   Frq ,
600261    +   Income ,
600262    +   Kidhome ,
600263    +   Mnt ,
600264    +   MntFishProducts ,
600265    +   MntFruits ,
600266    +   MntGoldProds ,
600267    +   MntMeatProducts ,
600268    +   MntSweetProducts ,
600269    +   MntWines ,
600270    +   MonthsAsCustomer ,
600271    +   NumCatalogPurchases ,
600272    +   NumDealsPurchases ,
600273    +   NumDistPurchases ,
600274    +   NumStorePurchases ,
600275    +   NumWebPurchases ,
600276    +   NumWebVisitsMonth ,
600277    +   RFMstat ,
600278    +   RMntFrq ,
600279    +   Recency ,
600280    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
600281    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
600282    +
600283    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600284    +END;
MPRINT(EM_DIAGRAM):   END;
600285    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
600286    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
600287    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
600288    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
600289    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
600290    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
600291    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
600292    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
600293    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
600294    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
600295    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
600296    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
600297    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
600298    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
600299    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
600300    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
600301    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
600302    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
600303    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
600304    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
600305    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
600306    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
600307    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
600308    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
600309    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
600310    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
600311    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
600312    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
600313    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
600314    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
600315    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
600316    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
600317    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
600318    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
600319    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
600320    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
600321    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
600322    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
600323    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
600324    +END;
MPRINT(EM_DIAGRAM):   END;
600325    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
600326    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
600327    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
600328    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
600329    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
600330    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
600331    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
600332    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
600333    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
600334    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
600335    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
600336    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
600337    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
600338    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
600339    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
600340    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
600341    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
600342    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
600343    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
600344    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
600345    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
600346    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
600347    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
600348    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
600349    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
600350    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
600351    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
600352    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
600353    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
600354    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
600355    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
600356    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
600357    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
600358    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
600359    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
600360    +   ELSE S_NumCatalogPurchases
600361    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
600362    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
600363    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
600364    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
600365    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
600366    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
600367    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
600368    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
600369    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
600370    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
600371    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
600372    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
600373    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
600374    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
600375    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
600376    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
600377    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
600378    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
600379    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
600380    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
600381    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
600382    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
600383    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
600384    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
600385    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
600386    +END;
MPRINT(EM_DIAGRAM):   END;
600387    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
600388    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
600389    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
600390    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
600391    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
600392    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
600393    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
600394    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
600395    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
600396    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
600397    +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
600398    +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
600399    +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
600400    +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
600401    +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
600402    +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
600403    +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
600404    +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
600405    +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
600406    +          +    -1.14704878034134 * S_NumDealsPurchases
600407    +          +    -0.17763404274659 * S_NumDistPurchases
600408    +          +     0.08894400267969 * S_NumStorePurchases
600409    +          +     0.59283747891957 * S_NumWebPurchases
600410    +          +     0.85268274682505 * S_NumWebVisitsMonth
600411    +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
600412    +        S_RMntFrq  +    -1.22871580072103 * S_Recency
600413    +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
600414    +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
600415    +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
600416    +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
600417    +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
600418    +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
600419    +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
600420    +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
600421    +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
600422    +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
600423    +          +    -0.80841566068716 * S_NumDealsPurchases
600424    +          +    -0.17995640033768 * S_NumDistPurchases
600425    +          +     0.00713417460936 * S_NumStorePurchases
600426    +          +     0.57881024323076 * S_NumWebPurchases
600427    +          +    -1.35134224257365 * S_NumWebVisitsMonth
600428    +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
600429    +        S_RMntFrq  +     1.16978656262499 * S_Recency
600430    +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
600431    +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
600432    +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
600433    +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
600434    +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
600435    +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
600436    +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
600437    +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
600438    +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
600439    +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
600440    +          +     0.57891364118717 * S_NumDealsPurchases
600441    +          +    -0.31024556838688 * S_NumDistPurchases
600442    +          +    -1.48708542986704 * S_NumStorePurchases
600443    +          +    -0.93009875249206 * S_NumWebPurchases
600444    +          +     2.01900039122935 * S_NumWebVisitsMonth
600445    +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
600446    +        S_RMntFrq  +    -2.30414631760388 * S_Recency
600447    +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
600448    +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
600449    +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
600450    +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
600451    +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
600452    +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
600453    +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
600454    +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
600455    +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
600456    +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
600457    +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
600458    +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
600459    +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
600460    +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
600461    +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
600462    +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
600463    +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
600464    +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
600465    +        EducationGraduation  +    -0.68730596079478 * EducationMaster
600466    +          +     0.55883606830033 * Marital_StatusDivorced
600467    +          +    -0.54530037567066 * Marital_StatusMarried
600468    +          +    -0.52994736075753 * Marital_StatusSingle
600469    +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
600470    +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
600471    +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
600472    +        EducationGraduation  +     0.31201349236277 * EducationMaster
600473    +          +    -1.07368484057033 * Marital_StatusDivorced
600474    +          +     2.73313504711262 * Marital_StatusMarried
600475    +          +    -2.18530462876058 * Marital_StatusSingle
600476    +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
600477    +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
600478    +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
600479    +        EducationGraduation  +    -0.35544166792219 * EducationMaster
600480    +          +     0.49993144243043 * Marital_StatusDivorced
600481    +          +    -0.38953339116829 * Marital_StatusMarried
600482    +          +    -0.10836287319942 * Marital_StatusSingle
600483    +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
600484    +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
600485    +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
600486    +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
600487    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
600488    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
600489    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
600490    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
600491    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
600492    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
600493    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
600494    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
600495    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
600496    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
600497    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
600498    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
600499    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
600500    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
600501    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
600502    +END;
MPRINT(EM_DIAGRAM):   END;
600503    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
600504    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
600505    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
600506    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
600507    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
600508    +END;
MPRINT(EM_DIAGRAM):   END;
600509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
600510    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
600511    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
600512    +
600513    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
600514    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
600515    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
600516    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
600517    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
600518    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600519    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
600520    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
600521    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
600522    +end;
MPRINT(EM_DIAGRAM):   end;
600523    +else do;
MPRINT(EM_DIAGRAM):   else do;
600524    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
600525    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
600526    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
600527    +   end;
MPRINT(EM_DIAGRAM):   end;
600528    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
600529    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
600530    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
600531    +   end;
MPRINT(EM_DIAGRAM):   end;
600532    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600533    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
600534    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
600535    +   end;
MPRINT(EM_DIAGRAM):   end;
600536    +end;
MPRINT(EM_DIAGRAM):   end;
600537    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
600538    +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
600539    +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
600540    +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
600541    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
600542    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
600543    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
600544    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
600545    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
600546    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
600547    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
600548    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
600549    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
600550    +END;
MPRINT(EM_DIAGRAM):   END;
600551    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
600552    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
600553    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
600554    +END;
MPRINT(EM_DIAGRAM):   END;
600555    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
600556    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
600557    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
600558    +END;
MPRINT(EM_DIAGRAM):   END;
600559    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
600560    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
600561    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
600562    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
600563    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
600564    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
600565    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
600566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
600567    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
600568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
600569    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
600570    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
600571    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
600572    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
600573    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
600574    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
600575    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
600576    +END;
MPRINT(EM_DIAGRAM):   END;
600577    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
600578    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
600579    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
600580    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
600581    +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
600582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
600583    +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
600584    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
600585    +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
600586    +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
600587    +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
600588    +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
600589    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
600590    +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
600591    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
600592    +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
600593    +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
600594    +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
600595    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
600596    +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
600597    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
600598    +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
600599    +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
600600    +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
600601    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
600602    +* Ensmbl32: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 3 of 5;
600603    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
600604    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
600605    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
600606    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
600607    +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
600608    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
600609    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
600610    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
600611    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
600612    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
600613    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
600614    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
600615    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
600616    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
600617    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
600618    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
600619    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
600620    +LENGTH _WARN_ $4
600621    +      F_DepVar  $ 12
600622    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
600623    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
600624    +
600625    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
600626    +
600627    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
600628    +
600629    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
600630    +
600631    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
600632    +
600633    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
600634    +
600635    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
600636    +
600637    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
600638    +
600639    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
600640    +
600641    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
600642    +
600643    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
600644    +
600645    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
600646    +
600647    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
600648    +
600649    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
600650    +
600651    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
600652    +
600653    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
600654    +
600655    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
600656    +
600657    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
600658    +
600659    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
600660    +
600661    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
600662    +
600663    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
600664    +
600665    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
600666    +
600667    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
600668    +
600669    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
600670    +
600671    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
600672    +
600673    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
600674    +
600675    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
600676    +
600677    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
600678    +
600679    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
600680    +
600681    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
600682    +
600683    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
600684    +
600685    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
600686    +
600687    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
600688    +
600689    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
600690    +
600691    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
600692    +
600693    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
600694    +
600695    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
600696    +
600697    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
600698    +
600699    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
600700    +
600701    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
600702    +
600703    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
600704    +
600705    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
600706    +
600707    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
600708    +
600709    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
600710    +
600711    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
600712    +
600713    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
600714    +
600715    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
600716    +
600717    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
600718    +
600719    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
600720    +
600721    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
600722    +
600723    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
600724    +
600725    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
600726    +
600727    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
600728    +
600729    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
600730    +
600731    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
600732    +
600733    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
600734    +
600735    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
600736    +
600737    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
600738    +
600739    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
600740    +
600741    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
600742    +
600743    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
600744    +
600745    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
600746    +
600747    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
600748    +
600749    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
600750    +
600751    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
600752    +
600753    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
600754    +
600755    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
600756    +
600757    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
600758    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
600759    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
600760    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
600761    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600762    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600763    +end;
MPRINT(EM_DIAGRAM):   end;
600764    +else do;
MPRINT(EM_DIAGRAM):   else do;
600765    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
600766    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
600767    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600768    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
600769    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
600770    +   end;
MPRINT(EM_DIAGRAM):   end;
600771    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
600772    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
600773    +   end;
MPRINT(EM_DIAGRAM):   end;
600774    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600775    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
600776    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600777    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600778    +   end;
MPRINT(EM_DIAGRAM):   end;
600779    +end;
MPRINT(EM_DIAGRAM):   end;
600780    +
600781    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
600782    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
600783    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
600784    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
600785    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600786    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600787    +end;
MPRINT(EM_DIAGRAM):   end;
600788    +else do;
MPRINT(EM_DIAGRAM):   else do;
600789    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
600790    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
600791    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600792    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
600793    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
600794    +   end;
MPRINT(EM_DIAGRAM):   end;
600795    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
600796    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
600797    +   end;
MPRINT(EM_DIAGRAM):   end;
600798    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600799    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
600800    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600801    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600802    +   end;
MPRINT(EM_DIAGRAM):   end;
600803    +end;
MPRINT(EM_DIAGRAM):   end;
600804    +
600805    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
600806    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
600807    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
600808    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
600809    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600810    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600811    +end;
MPRINT(EM_DIAGRAM):   end;
600812    +else do;
MPRINT(EM_DIAGRAM):   else do;
600813    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
600814    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
600815    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600816    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
600817    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
600818    +   end;
MPRINT(EM_DIAGRAM):   end;
600819    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
600820    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
600821    +   end;
MPRINT(EM_DIAGRAM):   end;
600822    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600823    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
600824    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600825    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600826    +   end;
MPRINT(EM_DIAGRAM):   end;
600827    +end;
MPRINT(EM_DIAGRAM):   end;
600828    +
600829    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
600830    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
600831    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
600832    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
600833    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600834    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600835    +end;
MPRINT(EM_DIAGRAM):   end;
600836    +else do;
MPRINT(EM_DIAGRAM):   else do;
600837    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
600838    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
600839    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600840    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
600841    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
600842    +   end;
MPRINT(EM_DIAGRAM):   end;
600843    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
600844    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
600845    +   end;
MPRINT(EM_DIAGRAM):   end;
600846    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600847    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
600848    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600849    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600850    +   end;
MPRINT(EM_DIAGRAM):   end;
600851    +end;
MPRINT(EM_DIAGRAM):   end;
600852    +
600853    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
600854    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
600855    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
600856    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
600857    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600858    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600859    +end;
MPRINT(EM_DIAGRAM):   end;
600860    +else do;
MPRINT(EM_DIAGRAM):   else do;
600861    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
600862    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
600863    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600864    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
600865    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
600866    +   end;
MPRINT(EM_DIAGRAM):   end;
600867    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
600868    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
600869    +   end;
MPRINT(EM_DIAGRAM):   end;
600870    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600871    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
600872    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600873    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600874    +   end;
MPRINT(EM_DIAGRAM):   end;
600875    +end;
MPRINT(EM_DIAGRAM):   end;
600876    +
600877    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
600878    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
600879    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
600880    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
600881    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600882    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600883    +end;
MPRINT(EM_DIAGRAM):   end;
600884    +else do;
MPRINT(EM_DIAGRAM):   else do;
600885    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
600886    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
600887    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600888    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
600889    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
600890    +   end;
MPRINT(EM_DIAGRAM):   end;
600891    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
600892    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
600893    +   end;
MPRINT(EM_DIAGRAM):   end;
600894    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600895    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
600896    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600897    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600898    +   end;
MPRINT(EM_DIAGRAM):   end;
600899    +end;
MPRINT(EM_DIAGRAM):   end;
600900    +
600901    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
600902    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
600903    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
600904    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
600905    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600906    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600907    +end;
MPRINT(EM_DIAGRAM):   end;
600908    +else do;
MPRINT(EM_DIAGRAM):   else do;
600909    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
600910    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
600911    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600912    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
600913    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
600914    +   end;
MPRINT(EM_DIAGRAM):   end;
600915    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
600916    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
600917    +   end;
MPRINT(EM_DIAGRAM):   end;
600918    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600919    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
600920    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600921    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600922    +   end;
MPRINT(EM_DIAGRAM):   end;
600923    +end;
MPRINT(EM_DIAGRAM):   end;
600924    +
600925    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
600926    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
600927    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
600928    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
600929    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
600930    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
600931    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
600932    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
600933    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
600934    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
600935    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
600936    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
600937    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600938    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600939    +end;
MPRINT(EM_DIAGRAM):   end;
600940    +else do;
MPRINT(EM_DIAGRAM):   else do;
600941    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
600942    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
600943    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600944    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
600945    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
600946    +   end;
MPRINT(EM_DIAGRAM):   end;
600947    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
600948    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
600949    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
600950    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
600951    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
600952    +   end;
MPRINT(EM_DIAGRAM):   end;
600953    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
600954    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
600955    +   end;
MPRINT(EM_DIAGRAM):   end;
600956    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
600957    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
600958    +   end;
MPRINT(EM_DIAGRAM):   end;
600959    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
600960    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
600961    +   end;
MPRINT(EM_DIAGRAM):   end;
600962    +   else do;
MPRINT(EM_DIAGRAM):   else do;
600963    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
600964    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
600965    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
600966    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
600967    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
600968    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600969    +   end;
MPRINT(EM_DIAGRAM):   end;
600970    +end;
MPRINT(EM_DIAGRAM):   end;
600971    +
600972    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
600973    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
600974    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
600975    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
600976    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
600977    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
600978    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
600979    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
600980    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
600981    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
600982    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
600983    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
600984    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
600985    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
600986    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
600987    +end;
MPRINT(EM_DIAGRAM):   end;
600988    +else do;
MPRINT(EM_DIAGRAM):   else do;
600989    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
600990    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
600991    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
600992    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
600993    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
600994    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
600995    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
600996    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
600997    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
600998    +         end;
MPRINT(EM_DIAGRAM):   end;
600999    +         else do;
MPRINT(EM_DIAGRAM):   else do;
601000    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
601001    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
601002    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
601003    +            end;
MPRINT(EM_DIAGRAM):   end;
601004    +         end;
MPRINT(EM_DIAGRAM):   end;
601005    +      end;
MPRINT(EM_DIAGRAM):   end;
601006    +      else do;
MPRINT(EM_DIAGRAM):   else do;
601007    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
601008    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
601009    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
601010    +         end;
MPRINT(EM_DIAGRAM):   end;
601011    +      end;
MPRINT(EM_DIAGRAM):   end;
601012    +   end;
MPRINT(EM_DIAGRAM):   end;
601013    +   else do;
MPRINT(EM_DIAGRAM):   else do;
601014    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
601015    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
601016    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
601017    +      end;
MPRINT(EM_DIAGRAM):   end;
601018    +      else do;
MPRINT(EM_DIAGRAM):   else do;
601019    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
601020    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
601021    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
601022    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
601023    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
601024    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
601025    +         end;
MPRINT(EM_DIAGRAM):   end;
601026    +      end;
MPRINT(EM_DIAGRAM):   end;
601027    +   end;
MPRINT(EM_DIAGRAM):   end;
601028    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
601029    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
601030    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
601031    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
601032    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
601033    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
601034    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
601035    +   end;
MPRINT(EM_DIAGRAM):   end;
601036    +end;
MPRINT(EM_DIAGRAM):   end;
601037    +
601038    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601039    +*** Checking missing input Interval
601040    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
601041    +
601042    +IF NMISS(
601043    +   AcceptedCmpTotal ,
601044    +   Age ,
601045    +   Frq ,
601046    +   Income ,
601047    +   Kidhome ,
601048    +   Mnt ,
601049    +   MntFishProducts ,
601050    +   MntFruits ,
601051    +   MntGoldProds ,
601052    +   MntMeatProducts ,
601053    +   MntSweetProducts ,
601054    +   MntWines ,
601055    +   MonthsAsCustomer ,
601056    +   NumCatalogPurchases ,
601057    +   NumDealsPurchases ,
601058    +   NumDistPurchases ,
601059    +   NumStorePurchases ,
601060    +   NumWebPurchases ,
601061    +   NumWebVisitsMonth ,
601062    +   RFMstat ,
601063    +   RMntFrq ,
601064    +   Recency ,
601065    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
601066    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
601067    +
601068    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
601069    +END;
MPRINT(EM_DIAGRAM):   END;
601070    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601071    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
601072    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601073    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
601074    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
601075    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
601076    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
601077    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
601078    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
601079    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
601080    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
601081    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
601082    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
601083    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
601084    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
601085    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
601086    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
601087    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
601088    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
601089    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
601090    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
601091    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
601092    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
601093    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
601094    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
601095    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
601096    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
601097    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
601098    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
601099    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
601100    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
601101    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
601102    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
601103    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
601104    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
601105    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
601106    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
601107    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
601108    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
601109    +END;
MPRINT(EM_DIAGRAM):   END;
601110    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
601111    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
601112    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
601113    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
601114    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
601115    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
601116    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
601117    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
601118    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
601119    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
601120    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
601121    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
601122    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
601123    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
601124    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
601125    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
601126    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
601127    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
601128    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
601129    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
601130    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
601131    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
601132    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
601133    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
601134    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
601135    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
601136    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
601137    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
601138    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
601139    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
601140    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
601141    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
601142    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
601143    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
601144    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
601145    +   ELSE S_NumCatalogPurchases
601146    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
601147    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
601148    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
601149    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
601150    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
601151    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
601152    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
601153    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
601154    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
601155    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
601156    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
601157    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
601158    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
601159    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
601160    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
601161    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
601162    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
601163    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
601164    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
601165    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
601166    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
601167    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
601168    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
601169    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
601170    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
601171    +END;
MPRINT(EM_DIAGRAM):   END;
601172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601173    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
601174    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601175    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601176    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
601177    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601178    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601179    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
601180    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601181    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
601182    +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
601183    +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
601184    +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
601185    +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
601186    +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
601187    +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
601188    +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
601189    +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
601190    +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
601191    +          +     1.17276395296242 * S_NumDealsPurchases
601192    +          +     0.26632768295477 * S_NumDistPurchases
601193    +          +    -1.26575615903579 * S_NumStorePurchases
601194    +          +    -0.95316107557927 * S_NumWebPurchases
601195    +          +     1.01828574356487 * S_NumWebVisitsMonth
601196    +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
601197    +        S_RMntFrq  +    -0.82943281422857 * S_Recency
601198    +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
601199    +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
601200    +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
601201    +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
601202    +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
601203    +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
601204    +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
601205    +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
601206    +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
601207    +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
601208    +          +     1.14485571201233 * S_NumDealsPurchases
601209    +          +     0.21414266588987 * S_NumDistPurchases
601210    +          +    -0.10530090074297 * S_NumStorePurchases
601211    +          +    -0.41712321238458 * S_NumWebPurchases
601212    +          +    -0.99760766791108 * S_NumWebVisitsMonth
601213    +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
601214    +        S_RMntFrq  +     1.10040128548883 * S_Recency
601215    +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
601216    +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
601217    +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
601218    +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
601219    +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
601220    +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
601221    +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
601222    +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
601223    +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
601224    +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
601225    +          +      0.7196418967437 * S_NumDealsPurchases
601226    +          +     0.69035286374177 * S_NumDistPurchases
601227    +          +     0.38027656631135 * S_NumStorePurchases
601228    +          +    -0.18878358997924 * S_NumWebPurchases
601229    +          +     1.61962062004798 * S_NumWebVisitsMonth
601230    +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
601231    +        S_RMntFrq  +    -2.13821542142822 * S_Recency
601232    +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
601233    +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
601234    +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
601235    +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
601236    +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
601237    +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
601238    +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
601239    +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
601240    +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
601241    +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
601242    +          +    -0.00642902007204 * S_NumDealsPurchases
601243    +          +     0.29785069480367 * S_NumDistPurchases
601244    +          +    -0.42243322063147 * S_NumStorePurchases
601245    +          +     0.54880896338383 * S_NumWebPurchases
601246    +          +    -0.12525846016886 * S_NumWebVisitsMonth
601247    +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
601248    +        S_RMntFrq  +     0.10252211581449 * S_Recency
601249    +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
601250    +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
601251    +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
601252    +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
601253    +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
601254    +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
601255    +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
601256    +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
601257    +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
601258    +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
601259    +          +    -0.48404738328225 * S_NumDealsPurchases
601260    +          +    -0.02464180457879 * S_NumDistPurchases
601261    +          +     1.17201831082067 * S_NumStorePurchases
601262    +          +     0.57453655167516 * S_NumWebPurchases
601263    +          +    -1.94417019790248 * S_NumWebVisitsMonth
601264    +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
601265    +        S_RMntFrq  +      1.6169916658132 * S_Recency
601266    +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
601267    +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
601268    +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
601269    +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
601270    +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
601271    +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
601272    +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
601273    +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
601274    +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
601275    +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
601276    +          +    -1.49850531967483 * S_NumDealsPurchases
601277    +          +    -0.82105466264223 * S_NumDistPurchases
601278    +          +     0.29984603642824 * S_NumStorePurchases
601279    +          +     0.06557123721611 * S_NumWebPurchases
601280    +          +     1.04754749365002 * S_NumWebVisitsMonth
601281    +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
601282    +        S_RMntFrq  +     0.12396789666359 * S_Recency
601283    +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
601284    +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
601285    +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
601286    +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
601287    +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
601288    +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
601289    +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
601290    +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
601291    +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
601292    +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
601293    +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
601294    +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
601295    +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
601296    +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
601297    +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
601298    +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
601299    +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
601300    +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
601301    +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
601302    +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
601303    +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
601304    +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
601305    +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
601306    +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
601307    +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
601308    +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
601309    +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
601310    +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
601311    +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
601312    +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
601313    +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
601314    +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
601315    +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
601316    +        EducationGraduation  +     0.07595631354847 * EducationMaster
601317    +          +     0.24583509957712 * Marital_StatusDivorced
601318    +          +    -0.22681931588361 * Marital_StatusMarried
601319    +          +    -0.12924106229536 * Marital_StatusSingle
601320    +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
601321    +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
601322    +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
601323    +        EducationGraduation  +     0.23015089246655 * EducationMaster
601324    +          +    -0.12585334311068 * Marital_StatusDivorced
601325    +          +    -0.20835502467207 * Marital_StatusMarried
601326    +          +    -0.13839534449368 * Marital_StatusSingle
601327    +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
601328    +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
601329    +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
601330    +        EducationGraduation  +    -0.03608560158257 * EducationMaster
601331    +          +     0.35106363238113 * Marital_StatusDivorced
601332    +          +     -1.3414808583918 * Marital_StatusMarried
601333    +          +     1.40835320798486 * Marital_StatusSingle
601334    +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
601335    +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
601336    +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
601337    +        EducationGraduation  +      0.1746658332011 * EducationMaster
601338    +          +     0.48174546958393 * Marital_StatusDivorced
601339    +          +    -0.41416978858191 * Marital_StatusMarried
601340    +          +    -0.23376801546265 * Marital_StatusSingle
601341    +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
601342    +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
601343    +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
601344    +        EducationGraduation  +     0.68875064631577 * EducationMaster
601345    +          +    -0.67557643774246 * Marital_StatusDivorced
601346    +          +     1.63844045917367 * Marital_StatusMarried
601347    +          +    -0.70320960247699 * Marital_StatusSingle
601348    +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
601349    +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
601350    +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
601351    +        EducationGraduation  +    -0.68011360002443 * EducationMaster
601352    +          +    -0.11371453086883 * Marital_StatusDivorced
601353    +          +    -0.34226997176291 * Marital_StatusMarried
601354    +          +    -1.01568676685754 * Marital_StatusSingle
601355    +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
601356    +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
601357    +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
601358    +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
601359    +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
601360    +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
601361    +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
601362    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
601363    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
601364    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
601365    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
601366    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
601367    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
601368    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
601369    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
601370    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
601371    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
601372    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
601373    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
601374    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
601375    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
601376    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
601377    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
601378    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
601379    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
601380    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
601381    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
601382    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
601383    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
601384    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
601385    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
601386    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
601387    +END;
MPRINT(EM_DIAGRAM):   END;
601388    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
601389    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
601390    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
601391    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
601392    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
601393    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
601394    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
601395    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
601396    +END;
MPRINT(EM_DIAGRAM):   END;
601397    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601398    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
601399    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601400    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
601401    +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
601402    +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
601403    +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
601404    +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
601405    +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
601406    +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
601407    +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
601408    +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
601409    +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
601410    +          +    -0.87259051567474 * S_NumDealsPurchases
601411    +          +    -0.36454149529139 * S_NumDistPurchases
601412    +          +     0.12447759925061 * S_NumStorePurchases
601413    +          +    -1.08133487947367 * S_NumWebPurchases
601414    +          +    -0.49882157745454 * S_NumWebVisitsMonth
601415    +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
601416    +        S_RMntFrq  +    -0.01174101172444 * S_Recency
601417    +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
601418    +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
601419    +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
601420    +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
601421    +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
601422    +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
601423    +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
601424    +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
601425    +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
601426    +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
601427    +          +     2.23121497416403 * S_NumDealsPurchases
601428    +          +    -0.48674842191071 * S_NumDistPurchases
601429    +          +     1.77510728607544 * S_NumStorePurchases
601430    +          +     0.14647433155436 * S_NumWebPurchases
601431    +          +    -0.95892686924419 * S_NumWebVisitsMonth
601432    +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
601433    +        S_RMntFrq  +     2.46497777428475 * S_Recency
601434    +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
601435    +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
601436    +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
601437    +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
601438    +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
601439    +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
601440    +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
601441    +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
601442    +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
601443    +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
601444    +          +     0.14338855349611 * S_NumDealsPurchases
601445    +          +    -2.21071010829235 * S_NumDistPurchases
601446    +          +    -0.21795889348002 * S_NumStorePurchases
601447    +          +     1.98825087883535 * S_NumWebPurchases
601448    +          +     1.02482442531149 * S_NumWebVisitsMonth
601449    +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
601450    +        S_RMntFrq  +     -1.0288777281766 * S_Recency
601451    +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
601452    +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
601453    +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
601454    +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
601455    +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
601456    +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
601457    +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
601458    +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
601459    +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
601460    +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
601461    +          +     0.30041205661012 * S_NumDealsPurchases
601462    +          +    -0.63499849986918 * S_NumDistPurchases
601463    +          +    -0.34155713433714 * S_NumStorePurchases
601464    +          +    -1.14183354933936 * S_NumWebPurchases
601465    +          +    -0.42681980262973 * S_NumWebVisitsMonth
601466    +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
601467    +        S_RMntFrq  +     1.25852246467612 * S_Recency
601468    +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
601469    +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
601470    +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
601471    +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
601472    +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
601473    +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
601474    +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
601475    +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
601476    +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
601477    +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
601478    +          +    -0.21237915559831 * S_NumDealsPurchases
601479    +          +     0.48256923764182 * S_NumDistPurchases
601480    +          +    -0.45553093140641 * S_NumStorePurchases
601481    +          +      0.5593655963659 * S_NumWebPurchases
601482    +          +     0.27943768691188 * S_NumWebVisitsMonth
601483    +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
601484    +        S_RMntFrq  +    -1.62796011550484 * S_Recency
601485    +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
601486    +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
601487    +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
601488    +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
601489    +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
601490    +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
601491    +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
601492    +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
601493    +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
601494    +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
601495    +          +     2.38967021388062 * S_NumDealsPurchases
601496    +          +    -0.97722398866481 * S_NumDistPurchases
601497    +          +     1.57612333191312 * S_NumStorePurchases
601498    +          +    -0.75968679115983 * S_NumWebPurchases
601499    +          +    -0.64207187757251 * S_NumWebVisitsMonth
601500    +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
601501    +        S_RMntFrq  +     1.71313869798331 * S_Recency
601502    +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
601503    +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
601504    +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
601505    +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
601506    +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
601507    +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
601508    +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
601509    +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
601510    +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
601511    +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
601512    +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
601513    +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
601514    +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
601515    +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
601516    +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
601517    +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
601518    +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
601519    +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
601520    +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
601521    +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
601522    +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
601523    +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
601524    +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
601525    +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
601526    +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
601527    +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
601528    +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
601529    +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
601530    +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
601531    +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
601532    +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
601533    +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
601534    +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
601535    +        EducationGraduation  +      0.1073450284316 * EducationMaster
601536    +          +     0.96470902298142 * Marital_StatusDivorced
601537    +          +     0.94805959268314 * Marital_StatusMarried
601538    +          +     -0.6523948769616 * Marital_StatusSingle
601539    +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
601540    +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
601541    +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
601542    +        EducationGraduation  +    -1.34927753306064 * EducationMaster
601543    +          +      0.3918249505531 * Marital_StatusDivorced
601544    +          +    -0.00968091979586 * Marital_StatusMarried
601545    +          +     0.84615379885071 * Marital_StatusSingle
601546    +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
601547    +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
601548    +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
601549    +        EducationGraduation  +     -0.8672743321499 * EducationMaster
601550    +          +     1.14335160313191 * Marital_StatusDivorced
601551    +          +     0.50580517192175 * Marital_StatusMarried
601552    +          +     0.17264295020921 * Marital_StatusSingle
601553    +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
601554    +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
601555    +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
601556    +        EducationGraduation  +     1.95818378342783 * EducationMaster
601557    +          +    -0.11238504444225 * Marital_StatusDivorced
601558    +          +    -0.81348274043749 * Marital_StatusMarried
601559    +          +     0.46075415610001 * Marital_StatusSingle
601560    +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
601561    +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
601562    +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
601563    +        EducationGraduation  +     0.08396135672504 * EducationMaster
601564    +          +    -0.46342068701431 * Marital_StatusDivorced
601565    +          +    -0.41667845270204 * Marital_StatusMarried
601566    +          +    -0.47166707496281 * Marital_StatusSingle
601567    +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
601568    +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
601569    +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
601570    +        EducationGraduation  +     0.36656103863186 * EducationMaster
601571    +          +    -0.45376613787812 * Marital_StatusDivorced
601572    +          +     0.01337046049801 * Marital_StatusMarried
601573    +          +    -0.92811489484121 * Marital_StatusSingle
601574    +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
601575    +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
601576    +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
601577    +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
601578    +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
601579    +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
601580    +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
601581    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
601582    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
601583    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
601584    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
601585    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
601586    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
601587    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
601588    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
601589    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
601590    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
601591    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
601592    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
601593    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
601594    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
601595    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
601596    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
601597    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
601598    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
601599    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
601600    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
601601    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
601602    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
601603    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
601604    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
601605    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
601606    +END;
MPRINT(EM_DIAGRAM):   END;
601607    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
601608    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
601609    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
601610    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
601611    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
601612    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
601613    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
601614    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
601615    +END;
MPRINT(EM_DIAGRAM):   END;
601616    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601617    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
601618    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601619    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
601620    +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
601621    +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
601622    +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
601623    +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
601624    +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
601625    +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
601626    +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
601627    +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
601628    +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
601629    +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
601630    +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
601631    +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
601632    +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
601633    +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
601634    +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
601635    +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
601636    +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
601637    +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
601638    +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
601639    +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
601640    +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
601641    +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
601642    +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
601643    +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
601644    +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
601645    +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
601646    +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
601647    +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
601648    +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
601649    +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
601650    +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
601651    +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
601652    +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
601653    +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
601654    +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
601655    +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
601656    +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
601657    +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
601658    +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
601659    +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
601660    +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
601661    +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
601662    +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
601663    +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
601664    +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
601665    +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
601666    +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
601667    +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
601668    +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
601669    +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
601670    +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
601671    +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
601672    +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
601673    +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
601674    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
601675    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
601676    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
601677    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
601678    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
601679    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
601680    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
601681    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
601682    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
601683    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
601684    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
601685    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
601686    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
601687    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
601688    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
601689    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
601690    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
601691    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
601692    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
601693    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
601694    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
601695    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
601696    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
601697    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
601698    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
601699    +END;
MPRINT(EM_DIAGRAM):   END;
601700    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
601701    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
601702    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
601703    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
601704    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
601705    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
601706    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
601707    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
601708    +END;
MPRINT(EM_DIAGRAM):   END;
601709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601710    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
601711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601712    +
601713    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
601714    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
601715    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
601716    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
601717    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
601718    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
601719    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
601720    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
601721    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
601722    +end;
MPRINT(EM_DIAGRAM):   end;
601723    +else do;
MPRINT(EM_DIAGRAM):   else do;
601724    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
601725    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
601726    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
601727    +   end;
MPRINT(EM_DIAGRAM):   end;
601728    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
601729    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
601730    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
601731    +   end;
MPRINT(EM_DIAGRAM):   end;
601732    +   else do;
MPRINT(EM_DIAGRAM):   else do;
601733    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
601734    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
601735    +   end;
MPRINT(EM_DIAGRAM):   end;
601736    +end;
MPRINT(EM_DIAGRAM):   end;
601737    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
601738    +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
601739    +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
601740    +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
601741    +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
601742    +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
601743    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
601744    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
601745    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
601746    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
601747    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
601748    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
601749    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
601750    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
601751    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
601752    +END;
MPRINT(EM_DIAGRAM):   END;
601753    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
601754    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
601755    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
601756    +END;
MPRINT(EM_DIAGRAM):   END;
601757    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
601758    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
601759    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
601760    +END;
MPRINT(EM_DIAGRAM):   END;
601761    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
601762    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
601763    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
601764    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
601765    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
601766    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
601767    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
601768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601769    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
601770    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
601771    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
601772    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
601773    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
601774    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
601775    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
601776    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
601777    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
601778    +END;
MPRINT(EM_DIAGRAM):   END;
601779    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
601780    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
601781    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
601782    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
601783    +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
601784    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
601785    +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
601786    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
601787    +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
601788    +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
601789    +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
601790    +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
601791    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
601792    +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
601793    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
601794    +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
601795    +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
601796    +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
601797    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
601798    +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
601799    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
601800    +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
601801    +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
601802    +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
601803    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
601804    +* Ensmbl32: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 4 of 5;
601805    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
601806    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
601807    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
601808    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
601809    +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
601810    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
601811    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
601812    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
601813    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
601814    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
601815    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
601816    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
601817    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
601818    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
601819    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
601820    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
601821    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
601822    +LENGTH _WARN_ $4
601823    +      F_DepVar  $ 12
601824    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
601825    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
601826    +
601827    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
601828    +
601829    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
601830    +
601831    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
601832    +
601833    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
601834    +
601835    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
601836    +
601837    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
601838    +
601839    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
601840    +
601841    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
601842    +
601843    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
601844    +
601845    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
601846    +
601847    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
601848    +
601849    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
601850    +
601851    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
601852    +
601853    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
601854    +
601855    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
601856    +
601857    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
601858    +
601859    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
601860    +
601861    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
601862    +
601863    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
601864    +
601865    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
601866    +
601867    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
601868    +
601869    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
601870    +
601871    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
601872    +
601873    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
601874    +
601875    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
601876    +
601877    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
601878    +
601879    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
601880    +
601881    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
601882    +
601883    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
601884    +
601885    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
601886    +
601887    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
601888    +
601889    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
601890    +
601891    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
601892    +
601893    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
601894    +
601895    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
601896    +
601897    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
601898    +
601899    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
601900    +
601901    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
601902    +
601903    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
601904    +
601905    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
601906    +
601907    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
601908    +
601909    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
601910    +
601911    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
601912    +
601913    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
601914    +
601915    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
601916    +
601917    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
601918    +
601919    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
601920    +
601921    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
601922    +
601923    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
601924    +
601925    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
601926    +
601927    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
601928    +
601929    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
601930    +
601931    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
601932    +
601933    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
601934    +
601935    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
601936    +
601937    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
601938    +
601939    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
601940    +
601941    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
601942    +
601943    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
601944    +
601945    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
601946    +
601947    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
601948    +
601949    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
601950    +
601951    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
601952    +
601953    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
601954    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
601955    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
601956    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
601957    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
601958    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
601959    +end;
MPRINT(EM_DIAGRAM):   end;
601960    +else do;
MPRINT(EM_DIAGRAM):   else do;
601961    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
601962    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
601963    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
601964    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
601965    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
601966    +   end;
MPRINT(EM_DIAGRAM):   end;
601967    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
601968    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
601969    +   end;
MPRINT(EM_DIAGRAM):   end;
601970    +   else do;
MPRINT(EM_DIAGRAM):   else do;
601971    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
601972    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
601973    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
601974    +   end;
MPRINT(EM_DIAGRAM):   end;
601975    +end;
MPRINT(EM_DIAGRAM):   end;
601976    +
601977    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
601978    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
601979    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
601980    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
601981    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
601982    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
601983    +end;
MPRINT(EM_DIAGRAM):   end;
601984    +else do;
MPRINT(EM_DIAGRAM):   else do;
601985    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
601986    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
601987    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
601988    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
601989    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
601990    +   end;
MPRINT(EM_DIAGRAM):   end;
601991    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
601992    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
601993    +   end;
MPRINT(EM_DIAGRAM):   end;
601994    +   else do;
MPRINT(EM_DIAGRAM):   else do;
601995    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
601996    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
601997    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
601998    +   end;
MPRINT(EM_DIAGRAM):   end;
601999    +end;
MPRINT(EM_DIAGRAM):   end;
602000    +
602001    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
602002    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
602003    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
602004    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
602005    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
602006    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602007    +end;
MPRINT(EM_DIAGRAM):   end;
602008    +else do;
MPRINT(EM_DIAGRAM):   else do;
602009    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
602010    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
602011    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
602012    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
602013    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
602014    +   end;
MPRINT(EM_DIAGRAM):   end;
602015    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
602016    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
602017    +   end;
MPRINT(EM_DIAGRAM):   end;
602018    +   else do;
MPRINT(EM_DIAGRAM):   else do;
602019    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
602020    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
602021    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602022    +   end;
MPRINT(EM_DIAGRAM):   end;
602023    +end;
MPRINT(EM_DIAGRAM):   end;
602024    +
602025    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
602026    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
602027    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
602028    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
602029    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
602030    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602031    +end;
MPRINT(EM_DIAGRAM):   end;
602032    +else do;
MPRINT(EM_DIAGRAM):   else do;
602033    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
602034    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
602035    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
602036    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
602037    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
602038    +   end;
MPRINT(EM_DIAGRAM):   end;
602039    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
602040    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
602041    +   end;
MPRINT(EM_DIAGRAM):   end;
602042    +   else do;
MPRINT(EM_DIAGRAM):   else do;
602043    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
602044    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
602045    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602046    +   end;
MPRINT(EM_DIAGRAM):   end;
602047    +end;
MPRINT(EM_DIAGRAM):   end;
602048    +
602049    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
602050    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
602051    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
602052    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
602053    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
602054    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602055    +end;
MPRINT(EM_DIAGRAM):   end;
602056    +else do;
MPRINT(EM_DIAGRAM):   else do;
602057    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
602058    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
602059    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
602060    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
602061    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
602062    +   end;
MPRINT(EM_DIAGRAM):   end;
602063    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
602064    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
602065    +   end;
MPRINT(EM_DIAGRAM):   end;
602066    +   else do;
MPRINT(EM_DIAGRAM):   else do;
602067    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
602068    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
602069    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602070    +   end;
MPRINT(EM_DIAGRAM):   end;
602071    +end;
MPRINT(EM_DIAGRAM):   end;
602072    +
602073    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
602074    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
602075    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
602076    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
602077    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
602078    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602079    +end;
MPRINT(EM_DIAGRAM):   end;
602080    +else do;
MPRINT(EM_DIAGRAM):   else do;
602081    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
602082    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
602083    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
602084    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
602085    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
602086    +   end;
MPRINT(EM_DIAGRAM):   end;
602087    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
602088    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
602089    +   end;
MPRINT(EM_DIAGRAM):   end;
602090    +   else do;
MPRINT(EM_DIAGRAM):   else do;
602091    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
602092    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
602093    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602094    +   end;
MPRINT(EM_DIAGRAM):   end;
602095    +end;
MPRINT(EM_DIAGRAM):   end;
602096    +
602097    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
602098    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
602099    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
602100    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
602101    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
602102    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602103    +end;
MPRINT(EM_DIAGRAM):   end;
602104    +else do;
MPRINT(EM_DIAGRAM):   else do;
602105    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
602106    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
602107    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
602108    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
602109    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
602110    +   end;
MPRINT(EM_DIAGRAM):   end;
602111    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
602112    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
602113    +   end;
MPRINT(EM_DIAGRAM):   end;
602114    +   else do;
MPRINT(EM_DIAGRAM):   else do;
602115    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
602116    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
602117    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602118    +   end;
MPRINT(EM_DIAGRAM):   end;
602119    +end;
MPRINT(EM_DIAGRAM):   end;
602120    +
602121    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
602122    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
602123    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
602124    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
602125    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
602126    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
602127    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
602128    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
602129    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
602130    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
602131    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
602132    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
602133    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
602134    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602135    +end;
MPRINT(EM_DIAGRAM):   end;
602136    +else do;
MPRINT(EM_DIAGRAM):   else do;
602137    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
602138    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
602139    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
602140    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
602141    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
602142    +   end;
MPRINT(EM_DIAGRAM):   end;
602143    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
602144    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
602145    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
602146    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
602147    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
602148    +   end;
MPRINT(EM_DIAGRAM):   end;
602149    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
602150    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
602151    +   end;
MPRINT(EM_DIAGRAM):   end;
602152    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
602153    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
602154    +   end;
MPRINT(EM_DIAGRAM):   end;
602155    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
602156    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
602157    +   end;
MPRINT(EM_DIAGRAM):   end;
602158    +   else do;
MPRINT(EM_DIAGRAM):   else do;
602159    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
602160    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
602161    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
602162    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
602163    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
602164    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602165    +   end;
MPRINT(EM_DIAGRAM):   end;
602166    +end;
MPRINT(EM_DIAGRAM):   end;
602167    +
602168    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
602169    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
602170    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
602171    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
602172    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
602173    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
602174    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
602175    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
602176    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
602177    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
602178    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
602179    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
602180    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
602181    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
602182    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602183    +end;
MPRINT(EM_DIAGRAM):   end;
602184    +else do;
MPRINT(EM_DIAGRAM):   else do;
602185    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
602186    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
602187    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
602188    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
602189    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
602190    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
602191    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
602192    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
602193    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
602194    +         end;
MPRINT(EM_DIAGRAM):   end;
602195    +         else do;
MPRINT(EM_DIAGRAM):   else do;
602196    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
602197    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
602198    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
602199    +            end;
MPRINT(EM_DIAGRAM):   end;
602200    +         end;
MPRINT(EM_DIAGRAM):   end;
602201    +      end;
MPRINT(EM_DIAGRAM):   end;
602202    +      else do;
MPRINT(EM_DIAGRAM):   else do;
602203    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
602204    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
602205    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
602206    +         end;
MPRINT(EM_DIAGRAM):   end;
602207    +      end;
MPRINT(EM_DIAGRAM):   end;
602208    +   end;
MPRINT(EM_DIAGRAM):   end;
602209    +   else do;
MPRINT(EM_DIAGRAM):   else do;
602210    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
602211    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
602212    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
602213    +      end;
MPRINT(EM_DIAGRAM):   end;
602214    +      else do;
MPRINT(EM_DIAGRAM):   else do;
602215    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
602216    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
602217    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
602218    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
602219    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
602220    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
602221    +         end;
MPRINT(EM_DIAGRAM):   end;
602222    +      end;
MPRINT(EM_DIAGRAM):   end;
602223    +   end;
MPRINT(EM_DIAGRAM):   end;
602224    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
602225    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
602226    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
602227    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
602228    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
602229    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
602230    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602231    +   end;
MPRINT(EM_DIAGRAM):   end;
602232    +end;
MPRINT(EM_DIAGRAM):   end;
602233    +
602234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602235    +*** Checking missing input Interval
602236    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
602237    +
602238    +IF NMISS(
602239    +   AcceptedCmpTotal ,
602240    +   Age ,
602241    +   Frq ,
602242    +   Income ,
602243    +   Kidhome ,
602244    +   Mnt ,
602245    +   MntFishProducts ,
602246    +   MntFruits ,
602247    +   MntGoldProds ,
602248    +   MntMeatProducts ,
602249    +   MntSweetProducts ,
602250    +   MntWines ,
602251    +   MonthsAsCustomer ,
602252    +   NumCatalogPurchases ,
602253    +   NumDealsPurchases ,
602254    +   NumDistPurchases ,
602255    +   NumStorePurchases ,
602256    +   NumWebPurchases ,
602257    +   NumWebVisitsMonth ,
602258    +   RFMstat ,
602259    +   RMntFrq ,
602260    +   Recency ,
602261    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
602262    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
602263    +
602264    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
602265    +END;
MPRINT(EM_DIAGRAM):   END;
602266    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602267    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
602268    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602269    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
602270    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
602271    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
602272    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
602273    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
602274    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
602275    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
602276    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
602277    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
602278    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
602279    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
602280    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
602281    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
602282    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
602283    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
602284    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
602285    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
602286    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
602287    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
602288    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
602289    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
602290    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
602291    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
602292    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
602293    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
602294    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
602295    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
602296    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
602297    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
602298    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
602299    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
602300    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
602301    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
602302    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
602303    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
602304    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
602305    +END;
MPRINT(EM_DIAGRAM):   END;
602306    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
602307    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
602308    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
602309    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
602310    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
602311    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
602312    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
602313    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
602314    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
602315    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
602316    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
602317    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
602318    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
602319    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
602320    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
602321    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
602322    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
602323    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
602324    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
602325    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
602326    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
602327    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
602328    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
602329    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
602330    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
602331    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
602332    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
602333    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
602334    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
602335    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
602336    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
602337    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
602338    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
602339    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
602340    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
602341    +   ELSE S_NumCatalogPurchases
602342    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
602343    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
602344    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
602345    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
602346    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
602347    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
602348    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
602349    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
602350    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
602351    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
602352    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
602353    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
602354    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
602355    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
602356    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
602357    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
602358    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
602359    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
602360    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
602361    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
602362    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
602363    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
602364    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
602365    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
602366    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
602367    +END;
MPRINT(EM_DIAGRAM):   END;
602368    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602369    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
602370    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602372    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
602373    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602374    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602375    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
602376    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602377    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
602378    +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
602379    +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
602380    +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
602381    +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
602382    +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
602383    +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
602384    +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
602385    +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
602386    +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
602387    +          +     0.89422627895323 * S_NumDealsPurchases
602388    +          +    -0.13304125929765 * S_NumDistPurchases
602389    +          +    -1.04568442570811 * S_NumStorePurchases
602390    +          +    -0.28677765126751 * S_NumWebPurchases
602391    +          +      1.2327638737509 * S_NumWebVisitsMonth
602392    +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
602393    +        S_RMntFrq  +    -0.86930969765816 * S_Recency
602394    +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
602395    +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
602396    +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
602397    +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
602398    +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
602399    +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
602400    +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
602401    +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
602402    +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
602403    +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
602404    +          +     0.04224590196535 * S_NumDealsPurchases
602405    +          +     0.76554742700113 * S_NumDistPurchases
602406    +          +    -0.49155496870812 * S_NumStorePurchases
602407    +          +     0.59606812744403 * S_NumWebPurchases
602408    +          +     1.86809286276405 * S_NumWebVisitsMonth
602409    +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
602410    +        S_RMntFrq  +    -2.09222283465666 * S_Recency
602411    +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
602412    +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
602413    +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
602414    +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
602415    +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
602416    +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
602417    +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
602418    +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
602419    +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
602420    +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
602421    +          +    -0.04866536993486 * S_NumDealsPurchases
602422    +          +    -0.53535979020214 * S_NumDistPurchases
602423    +          +     2.20634071253676 * S_NumStorePurchases
602424    +          +      0.6164564989007 * S_NumWebPurchases
602425    +          +    -0.43396314395263 * S_NumWebVisitsMonth
602426    +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
602427    +        S_RMntFrq  +     2.37293441098349 * S_Recency
602428    +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
602429    +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
602430    +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
602431    +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
602432    +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
602433    +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
602434    +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
602435    +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
602436    +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
602437    +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
602438    +          +     1.37461255707863 * S_NumDealsPurchases
602439    +          +    -0.17684775000818 * S_NumDistPurchases
602440    +          +    -0.62755623855535 * S_NumStorePurchases
602441    +          +    -1.46551649022657 * S_NumWebPurchases
602442    +          +     3.35784247878638 * S_NumWebVisitsMonth
602443    +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
602444    +        S_RMntFrq  +    -2.61971612923471 * S_Recency
602445    +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
602446    +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
602447    +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
602448    +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
602449    +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
602450    +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
602451    +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
602452    +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
602453    +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
602454    +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
602455    +          +    -0.76256677907121 * S_NumDealsPurchases
602456    +          +    -0.31591571751692 * S_NumDistPurchases
602457    +          +      0.0506832614089 * S_NumStorePurchases
602458    +          +      1.4636796923764 * S_NumWebPurchases
602459    +          +     0.37743519705036 * S_NumWebVisitsMonth
602460    +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
602461    +        S_RMntFrq  +     0.16854775832723 * S_Recency
602462    +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
602463    +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
602464    +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
602465    +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
602466    +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
602467    +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
602468    +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
602469    +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
602470    +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
602471    +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
602472    +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
602473    +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
602474    +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
602475    +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
602476    +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
602477    +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
602478    +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
602479    +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
602480    +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
602481    +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
602482    +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
602483    +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
602484    +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
602485    +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
602486    +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
602487    +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
602488    +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
602489    +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
602490    +        EducationGraduation  +    -0.37141290775302 * EducationMaster
602491    +          +     0.68641668264565 * Marital_StatusDivorced
602492    +          +    -0.81586871439732 * Marital_StatusMarried
602493    +          +     0.63758920518451 * Marital_StatusSingle
602494    +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
602495    +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
602496    +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
602497    +        EducationGraduation  +     -0.4412391934844 * EducationMaster
602498    +          +     0.05137560133238 * Marital_StatusDivorced
602499    +          +    -2.24401993266209 * Marital_StatusMarried
602500    +          +     1.57359386216115 * Marital_StatusSingle
602501    +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
602502    +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
602503    +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
602504    +        EducationGraduation  +     0.61492669859334 * EducationMaster
602505    +          +     -1.0649987815942 * Marital_StatusDivorced
602506    +          +     0.76065111692388 * Marital_StatusMarried
602507    +          +    -0.21694149754801 * Marital_StatusSingle
602508    +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
602509    +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
602510    +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
602511    +        EducationGraduation  +     0.04208620358211 * EducationMaster
602512    +          +     2.02155453548328 * Marital_StatusDivorced
602513    +          +    -2.60190649735306 * Marital_StatusMarried
602514    +          +     1.09149388354927 * Marital_StatusSingle
602515    +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
602516    +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
602517    +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
602518    +        EducationGraduation  +    -0.60853091001689 * EducationMaster
602519    +          +     0.66315970650309 * Marital_StatusDivorced
602520    +          +    -1.20476729758152 * Marital_StatusMarried
602521    +          +     0.56175027826397 * Marital_StatusSingle
602522    +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
602523    +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
602524    +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
602525    +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
602526    +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
602527    +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
602528    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
602529    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
602530    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
602531    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
602532    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
602533    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
602534    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
602535    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
602536    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
602537    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
602538    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
602539    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
602540    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
602541    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
602542    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
602543    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
602544    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
602545    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
602546    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
602547    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
602548    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
602549    +END;
MPRINT(EM_DIAGRAM):   END;
602550    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
602551    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
602552    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
602553    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
602554    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
602555    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
602556    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
602557    +END;
MPRINT(EM_DIAGRAM):   END;
602558    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602559    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
602560    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602561    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
602562    +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
602563    +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
602564    +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
602565    +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
602566    +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
602567    +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
602568    +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
602569    +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
602570    +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
602571    +          +     1.50005927423985 * S_NumDealsPurchases
602572    +          +      0.5590536933569 * S_NumDistPurchases
602573    +          +    -0.61757824339318 * S_NumStorePurchases
602574    +          +     0.37259686538158 * S_NumWebPurchases
602575    +          +     2.59725437895564 * S_NumWebVisitsMonth
602576    +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
602577    +        S_RMntFrq  +    -2.38795796980324 * S_Recency
602578    +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
602579    +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
602580    +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
602581    +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
602582    +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
602583    +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
602584    +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
602585    +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
602586    +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
602587    +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
602588    +          +    -0.09282222088797 * S_NumDealsPurchases
602589    +          +     0.10726247938321 * S_NumDistPurchases
602590    +          +     -1.1235971458527 * S_NumStorePurchases
602591    +          +    -0.78304387839877 * S_NumWebPurchases
602592    +          +    -0.44139243179956 * S_NumWebVisitsMonth
602593    +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
602594    +        S_RMntFrq  +     2.19072220135069 * S_Recency
602595    +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
602596    +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
602597    +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
602598    +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
602599    +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
602600    +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
602601    +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
602602    +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
602603    +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
602604    +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
602605    +          +     0.35349185459988 * S_NumDealsPurchases
602606    +          +     0.06853677714859 * S_NumDistPurchases
602607    +          +    -1.47546012999338 * S_NumStorePurchases
602608    +          +     0.20926435398916 * S_NumWebPurchases
602609    +          +    -1.00535683639093 * S_NumWebVisitsMonth
602610    +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
602611    +        S_RMntFrq  +    -1.59138379954757 * S_Recency
602612    +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
602613    +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
602614    +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
602615    +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
602616    +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
602617    +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
602618    +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
602619    +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
602620    +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
602621    +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
602622    +          +      0.3873586120272 * S_NumDealsPurchases
602623    +          +     0.25911651157596 * S_NumDistPurchases
602624    +          +     1.58922489084287 * S_NumStorePurchases
602625    +          +     0.49041797743368 * S_NumWebPurchases
602626    +          +     -1.5425586871929 * S_NumWebVisitsMonth
602627    +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
602628    +        S_RMntFrq  +     1.03099569333498 * S_Recency
602629    +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
602630    +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
602631    +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
602632    +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
602633    +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
602634    +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
602635    +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
602636    +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
602637    +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
602638    +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
602639    +          +    -0.60830880287865 * S_NumDealsPurchases
602640    +          +      0.0745331267194 * S_NumDistPurchases
602641    +          +    -1.39472448256952 * S_NumStorePurchases
602642    +          +     1.95372179969087 * S_NumWebPurchases
602643    +          +    -0.63307356390404 * S_NumWebVisitsMonth
602644    +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
602645    +        S_RMntFrq  +    -0.29197897313114 * S_Recency
602646    +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
602647    +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
602648    +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
602649    +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
602650    +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
602651    +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
602652    +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
602653    +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
602654    +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
602655    +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
602656    +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
602657    +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
602658    +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
602659    +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
602660    +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
602661    +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
602662    +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
602663    +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
602664    +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
602665    +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
602666    +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
602667    +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
602668    +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
602669    +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
602670    +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
602671    +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
602672    +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
602673    +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
602674    +        EducationGraduation  +    -1.16900224373137 * EducationMaster
602675    +          +    -1.33377871643323 * Marital_StatusDivorced
602676    +          +    -0.87184228840898 * Marital_StatusMarried
602677    +          +     1.41223186340257 * Marital_StatusSingle
602678    +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
602679    +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
602680    +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
602681    +        EducationGraduation  +     0.38341272155343 * EducationMaster
602682    +          +    -0.21479890935233 * Marital_StatusDivorced
602683    +          +     -0.0025459519579 * Marital_StatusMarried
602684    +          +     1.33900491702264 * Marital_StatusSingle
602685    +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
602686    +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
602687    +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
602688    +        EducationGraduation  +     0.60739269725685 * EducationMaster
602689    +          +    -0.38307267471999 * Marital_StatusDivorced
602690    +          +     0.97088969451415 * Marital_StatusMarried
602691    +          +    -0.28578224473381 * Marital_StatusSingle
602692    +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
602693    +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
602694    +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
602695    +        EducationGraduation  +     0.14160673378252 * EducationMaster
602696    +          +    -1.42229401093569 * Marital_StatusDivorced
602697    +          +      0.7234508382397 * Marital_StatusMarried
602698    +          +    -0.29062202974628 * Marital_StatusSingle
602699    +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
602700    +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
602701    +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
602702    +        EducationGraduation  +     -0.7118631990538 * EducationMaster
602703    +          +    -0.99067637207205 * Marital_StatusDivorced
602704    +          +    -0.50245902142079 * Marital_StatusMarried
602705    +          +     0.54214494533793 * Marital_StatusSingle
602706    +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
602707    +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
602708    +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
602709    +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
602710    +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
602711    +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
602712    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
602713    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
602714    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
602715    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
602716    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
602717    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
602718    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
602719    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
602720    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
602721    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
602722    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
602723    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
602724    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
602725    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
602726    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
602727    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
602728    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
602729    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
602730    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
602731    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
602732    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
602733    +END;
MPRINT(EM_DIAGRAM):   END;
602734    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
602735    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
602736    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
602737    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
602738    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
602739    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
602740    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
602741    +END;
MPRINT(EM_DIAGRAM):   END;
602742    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602743    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
602744    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602745    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
602746    +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
602747    +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
602748    +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
602749    +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
602750    +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
602751    +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
602752    +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
602753    +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
602754    +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
602755    +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
602756    +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
602757    +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
602758    +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
602759    +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
602760    +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
602761    +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
602762    +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
602763    +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
602764    +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
602765    +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
602766    +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
602767    +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
602768    +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
602769    +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
602770    +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
602771    +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
602772    +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
602773    +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
602774    +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
602775    +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
602776    +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
602777    +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
602778    +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
602779    +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
602780    +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
602781    +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
602782    +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
602783    +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
602784    +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
602785    +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
602786    +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
602787    +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
602788    +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
602789    +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
602790    +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
602791    +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
602792    +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
602793    +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
602794    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
602795    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
602796    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
602797    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
602798    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
602799    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
602800    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
602801    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
602802    +END;
MPRINT(EM_DIAGRAM):   END;
602803    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
602804    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
602805    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
602806    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
602807    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
602808    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
602809    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
602810    +END;
MPRINT(EM_DIAGRAM):   END;
602811    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602812    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
602813    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602814    +
602815    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
602816    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
602817    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
602818    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
602819    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
602820    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
602821    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
602822    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
602823    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
602824    +end;
MPRINT(EM_DIAGRAM):   end;
602825    +else do;
MPRINT(EM_DIAGRAM):   else do;
602826    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
602827    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
602828    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
602829    +   end;
MPRINT(EM_DIAGRAM):   end;
602830    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
602831    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
602832    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
602833    +   end;
MPRINT(EM_DIAGRAM):   end;
602834    +   else do;
MPRINT(EM_DIAGRAM):   else do;
602835    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
602836    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
602837    +   end;
MPRINT(EM_DIAGRAM):   end;
602838    +end;
MPRINT(EM_DIAGRAM):   end;
602839    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
602840    +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
602841    +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
602842    +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
602843    +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
602844    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
602845    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
602846    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
602847    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
602848    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
602849    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
602850    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
602851    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
602852    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
602853    +END;
MPRINT(EM_DIAGRAM):   END;
602854    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
602855    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
602856    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
602857    +END;
MPRINT(EM_DIAGRAM):   END;
602858    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
602859    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
602860    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
602861    +END;
MPRINT(EM_DIAGRAM):   END;
602862    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
602863    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
602864    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
602865    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
602866    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
602867    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
602868    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
602869    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602870    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
602871    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
602872    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
602873    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
602874    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
602875    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
602876    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
602877    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
602878    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
602879    +END;
MPRINT(EM_DIAGRAM):   END;
602880    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
602881    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
602882    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
602883    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
602884    +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
602885    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
602886    +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
602887    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
602888    +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
602889    +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
602890    +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
602891    +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
602892    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
602893    +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
602894    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
602895    +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
602896    +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
602897    +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
602898    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
602899    +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
602900    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
602901    +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
602902    +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
602903    +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
602904    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
602905    +* Ensmbl32: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 5 of 5;
602906    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
602907    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
602908    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
602909    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
602910    +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
602911    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
602912    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
602913    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
602914    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
602915    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
602916    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
602917    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
602918    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
602919    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
602920    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
602921    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
602922    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
602923    +LENGTH _WARN_ $4
602924    +      F_DepVar  $ 12
602925    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
602926    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
602927    +
602928    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
602929    +
602930    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
602931    +
602932    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
602933    +
602934    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
602935    +
602936    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
602937    +
602938    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
602939    +
602940    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
602941    +
602942    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
602943    +
602944    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
602945    +
602946    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
602947    +
602948    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
602949    +
602950    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
602951    +
602952    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
602953    +
602954    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
602955    +
602956    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
602957    +
602958    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
602959    +
602960    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
602961    +
602962    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
602963    +
602964    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
602965    +
602966    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
602967    +
602968    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
602969    +
602970    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
602971    +
602972    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
602973    +
602974    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
602975    +
602976    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
602977    +
602978    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
602979    +
602980    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
602981    +
602982    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
602983    +
602984    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
602985    +
602986    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
602987    +
602988    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
602989    +
602990    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
602991    +
602992    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
602993    +
602994    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
602995    +
602996    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
602997    +
602998    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
602999    +
603000    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
603001    +
603002    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
603003    +
603004    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
603005    +
603006    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
603007    +
603008    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
603009    +
603010    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
603011    +
603012    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
603013    +
603014    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
603015    +
603016    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
603017    +
603018    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
603019    +
603020    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
603021    +
603022    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
603023    +
603024    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
603025    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
603026    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
603027    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
603028    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
603029    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603030    +end;
MPRINT(EM_DIAGRAM):   end;
603031    +else do;
MPRINT(EM_DIAGRAM):   else do;
603032    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
603033    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
603034    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
603035    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
603036    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
603037    +   end;
MPRINT(EM_DIAGRAM):   end;
603038    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
603039    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
603040    +   end;
MPRINT(EM_DIAGRAM):   end;
603041    +   else do;
MPRINT(EM_DIAGRAM):   else do;
603042    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
603043    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
603044    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603045    +   end;
MPRINT(EM_DIAGRAM):   end;
603046    +end;
MPRINT(EM_DIAGRAM):   end;
603047    +
603048    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
603049    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
603050    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
603051    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
603052    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
603053    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603054    +end;
MPRINT(EM_DIAGRAM):   end;
603055    +else do;
MPRINT(EM_DIAGRAM):   else do;
603056    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
603057    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
603058    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
603059    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
603060    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
603061    +   end;
MPRINT(EM_DIAGRAM):   end;
603062    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
603063    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
603064    +   end;
MPRINT(EM_DIAGRAM):   end;
603065    +   else do;
MPRINT(EM_DIAGRAM):   else do;
603066    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
603067    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
603068    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603069    +   end;
MPRINT(EM_DIAGRAM):   end;
603070    +end;
MPRINT(EM_DIAGRAM):   end;
603071    +
603072    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
603073    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
603074    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
603075    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
603076    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
603077    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603078    +end;
MPRINT(EM_DIAGRAM):   end;
603079    +else do;
MPRINT(EM_DIAGRAM):   else do;
603080    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
603081    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
603082    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
603083    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
603084    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
603085    +   end;
MPRINT(EM_DIAGRAM):   end;
603086    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
603087    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
603088    +   end;
MPRINT(EM_DIAGRAM):   end;
603089    +   else do;
MPRINT(EM_DIAGRAM):   else do;
603090    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
603091    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
603092    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603093    +   end;
MPRINT(EM_DIAGRAM):   end;
603094    +end;
MPRINT(EM_DIAGRAM):   end;
603095    +
603096    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
603097    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
603098    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
603099    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
603100    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
603101    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603102    +end;
MPRINT(EM_DIAGRAM):   end;
603103    +else do;
MPRINT(EM_DIAGRAM):   else do;
603104    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
603105    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
603106    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
603107    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
603108    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
603109    +   end;
MPRINT(EM_DIAGRAM):   end;
603110    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
603111    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
603112    +   end;
MPRINT(EM_DIAGRAM):   end;
603113    +   else do;
MPRINT(EM_DIAGRAM):   else do;
603114    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
603115    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
603116    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603117    +   end;
MPRINT(EM_DIAGRAM):   end;
603118    +end;
MPRINT(EM_DIAGRAM):   end;
603119    +
603120    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
603121    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
603122    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
603123    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
603124    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
603125    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603126    +end;
MPRINT(EM_DIAGRAM):   end;
603127    +else do;
MPRINT(EM_DIAGRAM):   else do;
603128    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
603129    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
603130    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
603131    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
603132    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
The SAS System

603133    +   end;
MPRINT(EM_DIAGRAM):   end;
603134    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
603135    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
603136    +   end;
MPRINT(EM_DIAGRAM):   end;
603137    +   else do;
MPRINT(EM_DIAGRAM):   else do;
603138    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
603139    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
603140    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603141    +   end;
MPRINT(EM_DIAGRAM):   end;
603142    +end;
MPRINT(EM_DIAGRAM):   end;
603143    +
603144    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
603145    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
603146    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
603147    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
603148    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
603149    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603150    +end;
MPRINT(EM_DIAGRAM):   end;
603151    +else do;
MPRINT(EM_DIAGRAM):   else do;
603152    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
603153    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
603154    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
603155    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
603156    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
603157    +   end;
MPRINT(EM_DIAGRAM):   end;
603158    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
603159    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
603160    +   end;
MPRINT(EM_DIAGRAM):   end;
603161    +   else do;
MPRINT(EM_DIAGRAM):   else do;
603162    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
603163    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
603164    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603165    +   end;
MPRINT(EM_DIAGRAM):   end;
603166    +end;
MPRINT(EM_DIAGRAM):   end;
603167    +
603168    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
603169    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
603170    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
603171    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
603172    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
603173    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603174    +end;
MPRINT(EM_DIAGRAM):   end;
603175    +else do;
MPRINT(EM_DIAGRAM):   else do;
603176    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
603177    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
603178    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
603179    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
603180    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
603181    +   end;
MPRINT(EM_DIAGRAM):   end;
603182    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
603183    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
603184    +   end;
MPRINT(EM_DIAGRAM):   end;
603185    +   else do;
MPRINT(EM_DIAGRAM):   else do;
603186    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
603187    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
603188    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603189    +   end;
MPRINT(EM_DIAGRAM):   end;
603190    +end;
MPRINT(EM_DIAGRAM):   end;
603191    +
603192    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
603193    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
603194    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
603195    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
603196    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
603197    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
603198    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
603199    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
603200    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
603201    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
603202    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
603203    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
603204    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
603205    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603206    +end;
MPRINT(EM_DIAGRAM):   end;
603207    +else do;
MPRINT(EM_DIAGRAM):   else do;
603208    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
603209    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
603210    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
603211    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
603212    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
603213    +   end;
MPRINT(EM_DIAGRAM):   end;
603214    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
603215    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
603216    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
603217    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
603218    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
603219    +   end;
MPRINT(EM_DIAGRAM):   end;
603220    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
603221    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
603222    +   end;
MPRINT(EM_DIAGRAM):   end;
603223    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
603224    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
603225    +   end;
MPRINT(EM_DIAGRAM):   end;
603226    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
603227    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
603228    +   end;
MPRINT(EM_DIAGRAM):   end;
603229    +   else do;
MPRINT(EM_DIAGRAM):   else do;
603230    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
603231    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
603232    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
603233    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
603234    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
603235    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603236    +   end;
MPRINT(EM_DIAGRAM):   end;
603237    +end;
MPRINT(EM_DIAGRAM):   end;
603238    +
603239    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
603240    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
603241    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
603242    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
603243    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
603244    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
603245    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
603246    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
603247    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
603248    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
603249    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
603250    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
603251    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
603252    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
603253    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603254    +end;
MPRINT(EM_DIAGRAM):   end;
603255    +else do;
MPRINT(EM_DIAGRAM):   else do;
603256    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
603257    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
603258    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
603259    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
603260    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
603261    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
603262    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
603263    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
603264    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
603265    +         end;
MPRINT(EM_DIAGRAM):   end;
603266    +         else do;
MPRINT(EM_DIAGRAM):   else do;
603267    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
603268    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
603269    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
603270    +            end;
MPRINT(EM_DIAGRAM):   end;
603271    +         end;
MPRINT(EM_DIAGRAM):   end;
603272    +      end;
MPRINT(EM_DIAGRAM):   end;
603273    +      else do;
MPRINT(EM_DIAGRAM):   else do;
603274    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
603275    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
603276    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
603277    +         end;
MPRINT(EM_DIAGRAM):   end;
603278    +      end;
MPRINT(EM_DIAGRAM):   end;
603279    +   end;
MPRINT(EM_DIAGRAM):   end;
603280    +   else do;
MPRINT(EM_DIAGRAM):   else do;
603281    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
603282    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
603283    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
603284    +      end;
MPRINT(EM_DIAGRAM):   end;
603285    +      else do;
MPRINT(EM_DIAGRAM):   else do;
603286    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
603287    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
603288    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
603289    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
603290    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
603291    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
603292    +         end;
MPRINT(EM_DIAGRAM):   end;
603293    +      end;
MPRINT(EM_DIAGRAM):   end;
603294    +   end;
MPRINT(EM_DIAGRAM):   end;
603295    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
603296    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
603297    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
603298    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
603299    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
603300    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
603301    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603302    +   end;
MPRINT(EM_DIAGRAM):   end;
603303    +end;
MPRINT(EM_DIAGRAM):   end;
603304    +
603305    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
603306    +*** Checking missing input Interval
603307    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
603308    +
603309    +IF NMISS(
603310    +   AcceptedCmpTotal ,
603311    +   Age ,
603312    +   Frq ,
603313    +   Income ,
603314    +   Kidhome ,
603315    +   Mnt ,
603316    +   MntFishProducts ,
603317    +   MntFruits ,
603318    +   MntGoldProds ,
603319    +   MntMeatProducts ,
603320    +   MntSweetProducts ,
603321    +   MntWines ,
603322    +   MonthsAsCustomer ,
603323    +   NumCatalogPurchases ,
603324    +   NumDealsPurchases ,
603325    +   NumDistPurchases ,
603326    +   NumStorePurchases ,
603327    +   NumWebPurchases ,
603328    +   NumWebVisitsMonth ,
603329    +   RFMstat ,
603330    +   RMntFrq ,
603331    +   Recency ,
603332    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
603333    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
603334    +
603335    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603336    +END;
MPRINT(EM_DIAGRAM):   END;
603337    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
603338    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
603339    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
603340    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
603341    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
603342    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
603343    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
603344    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
603345    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
603346    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
603347    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
603348    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
603349    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
603350    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
603351    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
603352    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
603353    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
603354    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
603355    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
603356    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
603357    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
603358    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
603359    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
603360    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
603361    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
603362    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
603363    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
603364    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
603365    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
603366    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
603367    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
603368    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
603369    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
603370    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
603371    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
603372    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
603373    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
603374    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
603375    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
603376    +END;
MPRINT(EM_DIAGRAM):   END;
603377    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
603378    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
603379    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
603380    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
603381    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
603382    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
603383    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
603384    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
603385    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
603386    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
603387    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
603388    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
603389    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
603390    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
603391    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
603392    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
603393    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
603394    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
603395    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
603396    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
603397    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
603398    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
603399    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
603400    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
603401    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
603402    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
603403    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
603404    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
603405    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
603406    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
603407    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
603408    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
603409    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
603410    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
603411    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
603412    +   ELSE S_NumCatalogPurchases
603413    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
603414    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
603415    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
603416    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
603417    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
603418    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
603419    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
603420    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
603421    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
603422    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
603423    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
603424    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
603425    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
603426    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
603427    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
603428    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
603429    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
603430    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
603431    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
603432    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
603433    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
603434    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
603435    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
603436    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
603437    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
603438    +END;
MPRINT(EM_DIAGRAM):   END;
603439    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
603440    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
603441    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
603442    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
603443    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
603444    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
603445    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
603446    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
603447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
603448    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
603449    +   H11  =     0.74666931543537 * S_AcceptedCmpTotal  +    -0.26928580042975 *
603450    +        S_Age  +     0.03131160696792 * S_Frq  +     0.37966440012262 *
603451    +        S_Income  +      0.4880522012865 * S_Kidhome
603452    +          +    -0.10642365845458 * S_Mnt  +     0.07021626529074 *
603453    +        S_MntFishProducts  +    -0.40502977166003 * S_MntFruits
603454    +          +    -0.02349027629347 * S_MntGoldProds  +     1.05528002915119 *
603455    +        S_MntMeatProducts  +    -0.12400227624159 * S_MntSweetProducts
603456    +          +    -0.97101385029429 * S_MntWines  +     0.09983399059623 *
603457    +        S_MonthsAsCustomer  +     0.92029846720585 * S_NumCatalogPurchases
603458    +          +     1.28630491068585 * S_NumDealsPurchases
603459    +          +     0.12175737778271 * S_NumDistPurchases
603460    +          +    -0.62012456448967 * S_NumStorePurchases
603461    +          +     -0.6092351519122 * S_NumWebPurchases
603462    +          +     1.46336740414795 * S_NumWebVisitsMonth
603463    +          +     0.69679756539023 * S_RFMstat  +     0.19882494898547 *
603464    +        S_RMntFrq  +    -1.02986329135861 * S_Recency
603465    +          +      0.0049755319955 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.74666931543537 * S_AcceptedCmpTotal + -0.26928580042975 * S_Age 
+ 0.03131160696792 * S_Frq + 0.37966440012262 * S_Income + 0.4880522012865 * S_Kidhome + 
-0.10642365845458 * S_Mnt + 0.07021626529074 * S_MntFishProducts + -0.40502977166003 * 
S_MntFruits + -0.02349027629347 * S_MntGoldProds + 1.05528002915119 * S_MntMeatProducts + 
-0.12400227624159 * S_MntSweetProducts + -0.97101385029429 * S_MntWines + 0.09983399059623 * 
S_MonthsAsCustomer + 0.92029846720585 * S_NumCatalogPurchases + 1.28630491068585 * 
S_NumDealsPurchases + 0.12175737778271 * S_NumDistPurchases + -0.62012456448967 * 
S_NumStorePurchases + -0.6092351519122 * S_NumWebPurchases + 1.46336740414795 * 
S_NumWebVisitsMonth + 0.69679756539023 * S_RFMstat + 0.19882494898547 * S_RMntFrq + 
-1.02986329135861 * S_Recency + 0.0049755319955 * S_Teenhome ;
603466    +   H12  =    -0.91147771903585 * S_AcceptedCmpTotal  +    -0.07240098012329 *
603467    +        S_Age  +     0.26286532004526 * S_Frq  +    -0.43462974385984 *
603468    +        S_Income  +     0.63026291057347 * S_Kidhome
603469    +          +     0.15892598048777 * S_Mnt  +     0.96482485555311 *
603470    +        S_MntFishProducts  +    -0.04775061278769 * S_MntFruits
603471    +          +    -0.14625524046285 * S_MntGoldProds  +    -1.56223918788692 *
603472    +        S_MntMeatProducts  +    -0.51302960479013 * S_MntSweetProducts
603473    +          +     0.56413001484415 * S_MntWines  +     0.28344048349537 *
603474    +        S_MonthsAsCustomer  +    -0.84830633187723 * S_NumCatalogPurchases
603475    +          +    -0.66569109065716 * S_NumDealsPurchases
603476    +          +    -0.04991685336251 * S_NumDistPurchases
603477    +          +     0.97830186941279 * S_NumStorePurchases
603478    +          +     1.01041490205359 * S_NumWebPurchases
603479    +          +    -1.32418956036577 * S_NumWebVisitsMonth
603480    +          +    -0.11032432808867 * S_RFMstat  +     0.09917599091828 *
603481    +        S_RMntFrq  +     1.45035992156192 * S_Recency
603482    +          +     0.38289769509688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.91147771903585 * S_AcceptedCmpTotal + -0.07240098012329 * S_Age 
+ 0.26286532004526 * S_Frq + -0.43462974385984 * S_Income + 0.63026291057347 * S_Kidhome + 
0.15892598048777 * S_Mnt + 0.96482485555311 * S_MntFishProducts + -0.04775061278769 * 
S_MntFruits + -0.14625524046285 * S_MntGoldProds + -1.56223918788692 * S_MntMeatProducts + 
-0.51302960479013 * S_MntSweetProducts + 0.56413001484415 * S_MntWines + 0.28344048349537 * 
S_MonthsAsCustomer + -0.84830633187723 * S_NumCatalogPurchases + -0.66569109065716 * 
S_NumDealsPurchases + -0.04991685336251 * S_NumDistPurchases + 0.97830186941279 * 
S_NumStorePurchases + 1.01041490205359 * S_NumWebPurchases + -1.32418956036577 * 
S_NumWebVisitsMonth + -0.11032432808867 * S_RFMstat + 0.09917599091828 * S_RMntFrq + 
1.45035992156192 * S_Recency + 0.38289769509688 * S_Teenhome ;
603483    +   H13  =    -0.14475824149684 * S_AcceptedCmpTotal  +    -0.16657585718812 *
603484    +        S_Age  +    -0.20157354778904 * S_Frq  +    -1.05691184936615 *
603485    +        S_Income  +     0.56998894495459 * S_Kidhome
603486    +          +     0.18949667873044 * S_Mnt  +    -0.20862370006966 *
603487    +        S_MntFishProducts  +      0.1024167951483 * S_MntFruits
603488    +          +     0.08478049294226 * S_MntGoldProds  +    -0.39072502110043 *
603489    +        S_MntMeatProducts  +     0.28675920068433 * S_MntSweetProducts
603490    +          +      0.3076165718478 * S_MntWines  +    -0.24620359701099 *
603491    +        S_MonthsAsCustomer  +    -0.59353014518331 * S_NumCatalogPurchases
603492    +          +     0.07739967453744 * S_NumDealsPurchases
603493    +          +    -0.43729543807168 * S_NumDistPurchases
603494    +          +      0.0856627398024 * S_NumStorePurchases
603495    +          +     -0.0045478100059 * S_NumWebPurchases
603496    +          +    -0.64123054514198 * S_NumWebVisitsMonth
603497    +          +     0.10052569590232 * S_RFMstat  +     -0.3728458977342 *
603498    +        S_RMntFrq  +     1.48732817876807 * S_Recency
603499    +          +     0.85232956367064 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14475824149684 * S_AcceptedCmpTotal + -0.16657585718812 * S_Age 
+ -0.20157354778904 * S_Frq + -1.05691184936615 * S_Income + 0.56998894495459 * S_Kidhome + 
0.18949667873044 * S_Mnt + -0.20862370006966 * S_MntFishProducts + 0.1024167951483 * 
S_MntFruits + 0.08478049294226 * S_MntGoldProds + -0.39072502110043 * S_MntMeatProducts + 
0.28675920068433 * S_MntSweetProducts + 0.3076165718478 * S_MntWines + -0.24620359701099 * 
S_MonthsAsCustomer + -0.59353014518331 * S_NumCatalogPurchases + 0.07739967453744 * 
S_NumDealsPurchases + -0.43729543807168 * S_NumDistPurchases + 0.0856627398024 * 
S_NumStorePurchases + -0.0045478100059 * S_NumWebPurchases + -0.64123054514198 * 
S_NumWebVisitsMonth + 0.10052569590232 * S_RFMstat + -0.3728458977342 * S_RMntFrq + 
1.48732817876807 * S_Recency + 0.85232956367064 * S_Teenhome ;
603500    +   H11  = H11  +    -0.62033856363993 * AcceptedCmp10
603501    +          +    -0.00989853037258 * AcceptedCmp20  +    -0.77097813133684 *
603502    +        AcceptedCmp30  +    -0.31448879986852 * AcceptedCmp40
603503    +          +    -0.18015100491326 * AcceptedCmp50  +     0.05706658641547 *
603504    +        Complain0  +    -0.50105732309148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.62033856363993 * AcceptedCmp10 + -0.00989853037258 * 
AcceptedCmp20 + -0.77097813133684 * AcceptedCmp30 + -0.31448879986852 * AcceptedCmp40 + 
-0.18015100491326 * AcceptedCmp50 + 0.05706658641547 * Complain0 + -0.50105732309148 * 
HigherEducationBinary0 ;
603505    +   H12  = H12  +     0.18414272565688 * AcceptedCmp10
603506    +          +      -0.043654707425 * AcceptedCmp20  +    -0.32394050721443 *
603507    +        AcceptedCmp30  +    -0.06950576864476 * AcceptedCmp40
603508    +          +     1.12623106550654 * AcceptedCmp50  +     -0.0339705259886 *
603509    +        Complain0  +    -0.02110753805765 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.18414272565688 * AcceptedCmp10 + -0.043654707425 * 
AcceptedCmp20 + -0.32394050721443 * AcceptedCmp30 + -0.06950576864476 * AcceptedCmp40 + 
1.12623106550654 * AcceptedCmp50 + -0.0339705259886 * Complain0 + -0.02110753805765 * 
HigherEducationBinary0 ;
603510    +   H13  = H13  +     0.14110100411707 * AcceptedCmp10
603511    +          +     0.64032852332569 * AcceptedCmp20  +     0.50653679176195 *
603512    +        AcceptedCmp30  +     0.42616036519805 * AcceptedCmp40
603513    +          +     0.07072170981185 * AcceptedCmp50  +     0.29291097359872 *
603514    +        Complain0  +    -0.31418317974788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.14110100411707 * AcceptedCmp10 + 0.64032852332569 * 
AcceptedCmp20 + 0.50653679176195 * AcceptedCmp30 + 0.42616036519805 * AcceptedCmp40 + 
0.07072170981185 * AcceptedCmp50 + 0.29291097359872 * Complain0 + -0.31418317974788 * 
HigherEducationBinary0 ;
603515    +   H11  = H11  +     0.03341889038374 * Education2n_Cycle
603516    +          +     0.11423971315431 * EducationBasic  +     0.27817968687951 *
603517    +        EducationGraduation  +     -0.0281674058306 * EducationMaster
603518    +          +     0.16155355707944 * Marital_StatusDivorced
603519    +          +     0.04915644167404 * Marital_StatusMarried
603520    +          +    -0.16886350906837 * Marital_StatusSingle
603521    +          +    -0.09540299348184 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03341889038374 * Education2n_Cycle + 0.11423971315431 * 
EducationBasic + 0.27817968687951 * EducationGraduation + -0.0281674058306 * EducationMaster + 
0.16155355707944 * Marital_StatusDivorced + 0.04915644167404 * Marital_StatusMarried + 
-0.16886350906837 * Marital_StatusSingle + -0.09540299348184 * Marital_StatusTogether ;
603522    +   H12  = H12  +    -0.18658767739271 * Education2n_Cycle
603523    +          +     0.31497893454838 * EducationBasic  +    -0.02835844728364 *
603524    +        EducationGraduation  +     0.03310756432448 * EducationMaster
603525    +          +    -0.15094637092036 * Marital_StatusDivorced
603526    +          +     0.07664831456886 * Marital_StatusMarried
603527    +          +    -0.47693612610813 * Marital_StatusSingle
603528    +          +     0.14693691283858 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18658767739271 * Education2n_Cycle + 0.31497893454838 * 
EducationBasic + -0.02835844728364 * EducationGraduation + 0.03310756432448 * EducationMaster 
+ -0.15094637092036 * Marital_StatusDivorced + 0.07664831456886 * Marital_StatusMarried + 
-0.47693612610813 * Marital_StatusSingle + 0.14693691283858 * Marital_StatusTogether ;
603529    +   H13  = H13  +      0.0502517318618 * Education2n_Cycle
603530    +          +    -0.13621229906896 * EducationBasic  +     0.20624951172738 *
603531    +        EducationGraduation  +     0.20173383445657 * EducationMaster
603532    +          +    -0.58672623647391 * Marital_StatusDivorced
603533    +          +      1.8684271616322 * Marital_StatusMarried
603534    +          +    -1.30134837394569 * Marital_StatusSingle
603535    +          +     1.11308583986156 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0502517318618 * Education2n_Cycle + -0.13621229906896 * 
EducationBasic + 0.20624951172738 * EducationGraduation + 0.20173383445657 * EducationMaster + 
-0.58672623647391 * Marital_StatusDivorced + 1.8684271616322 * Marital_StatusMarried + 
-1.30134837394569 * Marital_StatusSingle + 1.11308583986156 * Marital_StatusTogether ;
603536    +   H11  =    -1.22504924155195 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.22504924155195 + H11 ;
603537    +   H12  =     0.36945079976002 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36945079976002 + H12 ;
603538    +   H13  =     1.84114106095878 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.84114106095878 + H13 ;
603539    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
603540    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
603541    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
603542    +END;
MPRINT(EM_DIAGRAM):   END;
603543    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
603544    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
603545    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
603546    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
603547    +END;
MPRINT(EM_DIAGRAM):   END;
603548    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
603549    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
603550    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
603551    +
603552    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
603553    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
603554    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
603555    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
603556    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
603557    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
603558    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
603559    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
603560    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
603561    +end;
MPRINT(EM_DIAGRAM):   end;
603562    +else do;
MPRINT(EM_DIAGRAM):   else do;
603563    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
603564    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
603565    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
603566    +   end;
MPRINT(EM_DIAGRAM):   end;
603567    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
603568    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
603569    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
603570    +   end;
MPRINT(EM_DIAGRAM):   end;
603571    +   else do;
MPRINT(EM_DIAGRAM):   else do;
603572    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
603573    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
603574    +   end;
MPRINT(EM_DIAGRAM):   end;
603575    +end;
MPRINT(EM_DIAGRAM):   end;
603576    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
603577    +   P_DepVar1  =     2.49740994012105 * H11  +    -2.95405883837745 * H12
603578    +          +    -3.26077127833109 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.49740994012105 * H11 + -2.95405883837745 * H12 + 
-3.26077127833109 * H13 ;
603579    +   P_DepVar1  =    -0.23645507747647 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23645507747647 + P_DepVar1 ;
603580    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
603581    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
603582    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
603583    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
603584    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
603585    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
603586    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
603587    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
603588    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
603589    +END;
MPRINT(EM_DIAGRAM):   END;
603590    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
603591    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
603592    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
603593    +END;
MPRINT(EM_DIAGRAM):   END;
603594    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
603595    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
603596    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
603597    +END;
MPRINT(EM_DIAGRAM):   END;
603598    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
603599    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
603600    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
603601    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
603602    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
603603    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
603604    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
603605    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
603606    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
603607    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
603608    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
603609    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
603610    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
603611    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
603612    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
603613    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
603614    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
603615    +END;
MPRINT(EM_DIAGRAM):   END;
603616    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
603617    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
603618    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
603619    +drop
603620    +H11
603621    +H12
603622    +H13
603623    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
603624    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
603625    +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
603626    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603627    +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
603628    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603629    +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
603630    +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
603631    +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
603632    +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
603633    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603634    +* Renaming Into variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural3;
603635    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603636    +length Neural3_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural3_I_DepVar $32;
603637    +drop Neural3_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural3_I_DepVar;
603638    +Neural3_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural3_I_DepVar = I_DepVar;
603639    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603640    +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
603641    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603642    +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
603643    +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
603644    +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
603645    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603646    +* Ensmbl32: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Voting to produce predicted target;
603647    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603648    +array Ensmbl32_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl32_post{2} _temporary_;
603649    +array Ensmbl32_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl32_count{2} _temporary_;
603650    +array Ensmbl32_level{2} $32 _temporary_ (
603651    +"1"
603652    +"0"
603653    +);
MPRINT(EM_DIAGRAM):   array Ensmbl32_level{2} $32 _temporary_ ( "1" "0" );
603654    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
603655    +Ensmbl32_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{i} = 0;
603656    +Ensmbl32_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{i} = 0;
603657    +end;
MPRINT(EM_DIAGRAM):   end;
603658    +if AutoNeural7_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl32_level{1} then do;
603659    +Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
603660    +Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural7_P_DepVar1;
603661    +end;
MPRINT(EM_DIAGRAM):   end;
603662    +if AutoNeural9_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl32_level{1} then do;
603663    +Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
603664    +Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural9_P_DepVar1;
603665    +end;
MPRINT(EM_DIAGRAM):   end;
603666    +if AutoNeural12_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl32_level{1} then do;
603667    +Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
603668    +Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural12_P_DepVar1;
603669    +end;
MPRINT(EM_DIAGRAM):   end;
603670    +if AutoNeural11_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl32_level{1} then do;
603671    +Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
603672    +Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ AutoNeural11_P_DepVar1;
603673    +end;
MPRINT(EM_DIAGRAM):   end;
603674    +if Neural3_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl32_level{1} then do;
603675    +Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
603676    +Ensmbl32_post{1}=Ensmbl32_post{1}+ Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ Neural3_P_DepVar1;
603677    +end;
MPRINT(EM_DIAGRAM):   end;
603678    +if AutoNeural7_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl32_level{2} then do;
603679    +Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
603680    +Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural7_P_DepVar0;
603681    +end;
MPRINT(EM_DIAGRAM):   end;
603682    +if AutoNeural9_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl32_level{2} then do;
603683    +Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
603684    +Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural9_P_DepVar0;
603685    +end;
MPRINT(EM_DIAGRAM):   end;
603686    +if AutoNeural12_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl32_level{2} then do;
603687    +Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
603688    +Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural12_P_DepVar0;
603689    +end;
MPRINT(EM_DIAGRAM):   end;
603690    +if AutoNeural11_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl32_level{2} then do;
603691    +Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
603692    +Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ AutoNeural11_P_DepVar0;
603693    +end;
MPRINT(EM_DIAGRAM):   end;
603694    +if Neural3_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl32_level{2} then do;
603695    +Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
603696    +Ensmbl32_post{2}=Ensmbl32_post{2}+ Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ Neural3_P_DepVar0;
603697    +end;
MPRINT(EM_DIAGRAM):   end;
603698    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603699    +* Ensmbl32: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Determine Into Variable;
603700    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603701    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
603702    +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
603703    +vote_count = max(
603704    +Ensmbl32_count{1} ,
603705    +Ensmbl32_count{2}
603706    +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl32_count{1} , Ensmbl32_count{2} );
603707    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
603708    +if Ensmbl32_count{i}=vote_count and Ensmbl32_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl32_count{i}=vote_count and Ensmbl32_post{i}>vote_post then do;
603709    +I_DepVar = Ensmbl32_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl32_level{i};
603710    +vote_post = Ensmbl32_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl32_count{i};
603711    +end;
MPRINT(EM_DIAGRAM):   end;
603712    +end;
MPRINT(EM_DIAGRAM):   end;
603713    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603714    +* Ensmbl32: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Compute posterior vars using models predicting the chosen 
level;
603715    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603716    +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
603717    +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
603718    +if I_DepVar = AutoNeural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural7_I_DepVar then do;
603719    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
603720    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
603721    +end;
MPRINT(EM_DIAGRAM):   end;
603722    +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
603723    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
603724    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
603725    +end;
MPRINT(EM_DIAGRAM):   end;
603726    +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
603727    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
603728    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
603729    +end;
MPRINT(EM_DIAGRAM):   end;
603730    +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
603731    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
603732    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
603733    +end;
MPRINT(EM_DIAGRAM):   end;
603734    +if I_DepVar = Neural3_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural3_I_DepVar then do;
603735    +P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
603736    +P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
603737    +end;
MPRINT(EM_DIAGRAM):   end;
603738    +* Ensmbl32: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Averaging posterior;
603739    +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
603740    +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
603741    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603742    +* Ensmbl32: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Producing Unformatted variable;
603743    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603744    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
603745    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
603746    +else
603747    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
603748    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603749    +* Ensmbl32: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Computing _WARN_ Variable;
603750    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603751    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
603752    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
603753    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
603754    +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
603754   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
603755    +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
603755   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
603756    +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
603756   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
603757    +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
603757   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
603758    +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
603758   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
603759    +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
603759   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
603760    +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
603760   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
603761    +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
603761   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
603762    +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
603762   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
603763    +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
603763   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
603764    +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
603764   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
603765    +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
603765   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
603766    +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
603766   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
603767    +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
603767   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
603768    +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
603768   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
603769    +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
603769   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
603770    +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
603771    +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
603772    +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
603773    +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
603774    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603775    +* Ensmbl32: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Computing Residual Vars;
603776    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
603777    +if
603778    +F_DepVar NE '1'
603779    +AND F_DepVar NE '0'
603780    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
603781    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
603782    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
603783    +end;
MPRINT(EM_DIAGRAM):   end;
603784    +else do;
MPRINT(EM_DIAGRAM):   else do;
603785    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
603786    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
603787    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
603788    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
603789    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
603790    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
603791    +END;
MPRINT(EM_DIAGRAM):   END;
603792    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
603793     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL32_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL7_VALIDATE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
603794     quit;
603795     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl32_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl32_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl32_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl32_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl32_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
603855     filename _pref
603855   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
603856     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
603857     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
603858    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
603859    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
603860    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
603861    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
603862    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
603863    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
603864    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
603865    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
603866    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
603867    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
603868    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
603869    +LENGTH _WARN_ $4
603870    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
603871    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
603872    +
603873    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
603874    +
603875    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
603876    +
603877    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
603878    +
603879    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
603880    +
603881    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
603882    +
603883    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
603884    +
603885    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
603886    +
603887    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
603888    +
603889    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
603890    +
603891    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
603892    +
603893    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
603894    +
603895    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
603896    +
603897    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
603898    +
603899    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
603900    +
603901    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
603902    +
603903    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
603904    +
603905    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
603906    +
603907    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
603908    +
603909    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
603910    +
603911    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
603912    +
603913    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
603914    +
603915    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
603916    +
603917    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
603918    +
603919    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
603920    +
603921    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
603922    +
603923    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
603924    +
603925    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
603926    +
603927    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
603928    +
603929    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
603930    +
603931    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
603932    +
603933    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
603934    +
603935    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
603936    +
603937    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
603938    +
603939    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
603940    +
603941    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
603942    +
603943    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
603944    +
603945    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
603946    +
603947    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
603948    +
603949    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
603950    +
603951    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
603952    +
603953    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
603954    +
603955    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
603956    +
603957    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
603958    +
603959    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
603960    +
603961    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
603962    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
603963    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
603964    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
603965    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
603966    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603967    +end;
MPRINT(EM_DIAGRAM):   end;
603968    +else do;
MPRINT(EM_DIAGRAM):   else do;
603969    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
603970    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
603971    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
603972    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
603973    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
603974    +   end;
MPRINT(EM_DIAGRAM):   end;
603975    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
603976    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
603977    +   end;
MPRINT(EM_DIAGRAM):   end;
603978    +   else do;
MPRINT(EM_DIAGRAM):   else do;
603979    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
603980    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
603981    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603982    +   end;
MPRINT(EM_DIAGRAM):   end;
603983    +end;
MPRINT(EM_DIAGRAM):   end;
603984    +
603985    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
603986    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
603987    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
603988    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
603989    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
603990    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
603991    +end;
MPRINT(EM_DIAGRAM):   end;
603992    +else do;
MPRINT(EM_DIAGRAM):   else do;
603993    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
603994    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
603995    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
603996    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
603997    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
603998    +   end;
MPRINT(EM_DIAGRAM):   end;
603999    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
604000    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
604001    +   end;
MPRINT(EM_DIAGRAM):   end;
604002    +   else do;
MPRINT(EM_DIAGRAM):   else do;
604003    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
604004    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
604005    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604006    +   end;
MPRINT(EM_DIAGRAM):   end;
604007    +end;
MPRINT(EM_DIAGRAM):   end;
604008    +
604009    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
604010    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
604011    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
604012    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
604013    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
604014    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604015    +end;
MPRINT(EM_DIAGRAM):   end;
604016    +else do;
MPRINT(EM_DIAGRAM):   else do;
604017    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
604018    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
604019    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
604020    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
604021    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
604022    +   end;
MPRINT(EM_DIAGRAM):   end;
604023    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
604024    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
604025    +   end;
MPRINT(EM_DIAGRAM):   end;
604026    +   else do;
MPRINT(EM_DIAGRAM):   else do;
604027    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
604028    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
604029    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604030    +   end;
MPRINT(EM_DIAGRAM):   end;
604031    +end;
MPRINT(EM_DIAGRAM):   end;
604032    +
604033    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
604034    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
604035    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
604036    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
604037    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
604038    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604039    +end;
MPRINT(EM_DIAGRAM):   end;
604040    +else do;
MPRINT(EM_DIAGRAM):   else do;
604041    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
604042    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
604043    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
604044    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
604045    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
604046    +   end;
MPRINT(EM_DIAGRAM):   end;
604047    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
604048    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
604049    +   end;
MPRINT(EM_DIAGRAM):   end;
604050    +   else do;
MPRINT(EM_DIAGRAM):   else do;
604051    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
604052    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
604053    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604054    +   end;
MPRINT(EM_DIAGRAM):   end;
604055    +end;
MPRINT(EM_DIAGRAM):   end;
604056    +
604057    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
604058    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
604059    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
604060    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
604061    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
604062    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604063    +end;
MPRINT(EM_DIAGRAM):   end;
604064    +else do;
MPRINT(EM_DIAGRAM):   else do;
604065    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
604066    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
604067    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
604068    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
604069    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
604070    +   end;
MPRINT(EM_DIAGRAM):   end;
604071    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
604072    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
604073    +   end;
MPRINT(EM_DIAGRAM):   end;
604074    +   else do;
MPRINT(EM_DIAGRAM):   else do;
604075    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
604076    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
604077    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604078    +   end;
MPRINT(EM_DIAGRAM):   end;
604079    +end;
MPRINT(EM_DIAGRAM):   end;
604080    +
604081    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
604082    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
604083    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
604084    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
604085    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
604086    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604087    +end;
MPRINT(EM_DIAGRAM):   end;
604088    +else do;
MPRINT(EM_DIAGRAM):   else do;
604089    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
604090    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
604091    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
604092    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
604093    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
604094    +   end;
MPRINT(EM_DIAGRAM):   end;
604095    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
604096    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
604097    +   end;
MPRINT(EM_DIAGRAM):   end;
604098    +   else do;
MPRINT(EM_DIAGRAM):   else do;
604099    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
604100    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
604101    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604102    +   end;
MPRINT(EM_DIAGRAM):   end;
604103    +end;
MPRINT(EM_DIAGRAM):   end;
604104    +
604105    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
604106    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
604107    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
604108    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
604109    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
604110    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604111    +end;
MPRINT(EM_DIAGRAM):   end;
604112    +else do;
MPRINT(EM_DIAGRAM):   else do;
604113    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
604114    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
604115    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
604116    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
604117    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
604118    +   end;
MPRINT(EM_DIAGRAM):   end;
604119    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
604120    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
604121    +   end;
MPRINT(EM_DIAGRAM):   end;
604122    +   else do;
MPRINT(EM_DIAGRAM):   else do;
604123    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
604124    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
604125    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604126    +   end;
MPRINT(EM_DIAGRAM):   end;
604127    +end;
MPRINT(EM_DIAGRAM):   end;
604128    +
604129    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
604130    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
604131    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
604132    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
604133    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
604134    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
604135    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
604136    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
604137    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
604138    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
604139    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
604140    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
604141    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
604142    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604143    +end;
MPRINT(EM_DIAGRAM):   end;
604144    +else do;
MPRINT(EM_DIAGRAM):   else do;
604145    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
604146    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
604147    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
604148    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
604149    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
604150    +   end;
MPRINT(EM_DIAGRAM):   end;
604151    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
604152    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
604153    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
604154    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
604155    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
604156    +   end;
MPRINT(EM_DIAGRAM):   end;
604157    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
604158    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
604159    +   end;
MPRINT(EM_DIAGRAM):   end;
604160    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
604161    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
604162    +   end;
MPRINT(EM_DIAGRAM):   end;
604163    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
604164    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
604165    +   end;
MPRINT(EM_DIAGRAM):   end;
604166    +   else do;
MPRINT(EM_DIAGRAM):   else do;
604167    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
604168    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
604169    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
604170    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
604171    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
604172    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604173    +   end;
MPRINT(EM_DIAGRAM):   end;
604174    +end;
MPRINT(EM_DIAGRAM):   end;
604175    +
604176    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
604177    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
604178    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
604179    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
604180    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
604181    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
604182    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
604183    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
604184    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
604185    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
604186    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
604187    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
604188    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
604189    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
604190    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604191    +end;
MPRINT(EM_DIAGRAM):   end;
604192    +else do;
MPRINT(EM_DIAGRAM):   else do;
604193    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
604194    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
604195    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
604196    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
604197    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
604198    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
604199    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
604200    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
604201    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
604202    +         end;
MPRINT(EM_DIAGRAM):   end;
604203    +         else do;
MPRINT(EM_DIAGRAM):   else do;
604204    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
604205    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
604206    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
604207    +            end;
MPRINT(EM_DIAGRAM):   end;
604208    +         end;
MPRINT(EM_DIAGRAM):   end;
604209    +      end;
MPRINT(EM_DIAGRAM):   end;
604210    +      else do;
MPRINT(EM_DIAGRAM):   else do;
604211    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
604212    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
604213    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
604214    +         end;
MPRINT(EM_DIAGRAM):   end;
604215    +      end;
MPRINT(EM_DIAGRAM):   end;
604216    +   end;
MPRINT(EM_DIAGRAM):   end;
604217    +   else do;
MPRINT(EM_DIAGRAM):   else do;
604218    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
604219    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
604220    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
604221    +      end;
MPRINT(EM_DIAGRAM):   end;
604222    +      else do;
MPRINT(EM_DIAGRAM):   else do;
604223    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
604224    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
604225    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
604226    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
604227    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
604228    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
604229    +         end;
MPRINT(EM_DIAGRAM):   end;
604230    +      end;
MPRINT(EM_DIAGRAM):   end;
604231    +   end;
MPRINT(EM_DIAGRAM):   end;
604232    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
604233    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
604234    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
604235    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
604236    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
604237    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
604238    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604239    +   end;
MPRINT(EM_DIAGRAM):   end;
604240    +end;
MPRINT(EM_DIAGRAM):   end;
604241    +
604242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
604243    +*** Checking missing input Interval
604244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
604245    +
604246    +IF NMISS(
604247    +   AcceptedCmpTotal ,
604248    +   Age ,
604249    +   Frq ,
604250    +   Income ,
604251    +   Kidhome ,
604252    +   Mnt ,
604253    +   MntFishProducts ,
604254    +   MntFruits ,
604255    +   MntGoldProds ,
604256    +   MntMeatProducts ,
604257    +   MntSweetProducts ,
604258    +   MntWines ,
604259    +   MonthsAsCustomer ,
604260    +   NumCatalogPurchases ,
604261    +   NumDealsPurchases ,
604262    +   NumDistPurchases ,
604263    +   NumStorePurchases ,
604264    +   NumWebPurchases ,
604265    +   NumWebVisitsMonth ,
604266    +   RFMstat ,
604267    +   RMntFrq ,
604268    +   Recency ,
604269    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
604270    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
604271    +
604272    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604273    +END;
MPRINT(EM_DIAGRAM):   END;
604274    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
604275    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
604276    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
604277    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
604278    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
604279    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
604280    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
604281    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
604282    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
604283    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
604284    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
604285    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
604286    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
604287    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
604288    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
604289    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
604290    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
604291    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
604292    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
604293    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
604294    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
604295    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
604296    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
604297    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
604298    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
604299    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
604300    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
604301    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
604302    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
604303    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
604304    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
604305    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
604306    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
604307    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
604308    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
604309    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
604310    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
604311    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
604312    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
604313    +END;
MPRINT(EM_DIAGRAM):   END;
604314    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
604315    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
604316    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
604317    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
604318    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
604319    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
604320    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
604321    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
604322    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
604323    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
604324    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
604325    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
604326    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
604327    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
604328    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
604329    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
604330    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
604331    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
604332    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
604333    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
604334    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
604335    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
604336    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
604337    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
604338    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
604339    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
604340    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
604341    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
604342    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
604343    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
604344    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
604345    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
604346    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
604347    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
604348    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
604349    +   ELSE S_NumCatalogPurchases
604350    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
604351    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
604352    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
604353    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
604354    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
604355    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
604356    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
604357    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
604358    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
604359    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
604360    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
604361    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
604362    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
604363    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
604364    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
604365    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
604366    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
604367    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
604368    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
604369    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
604370    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
604371    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
604372    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
604373    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
604374    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
604375    +END;
MPRINT(EM_DIAGRAM):   END;
604376    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
604377    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
604378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
604379    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
604380    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
604381    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
604382    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
604383    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
604384    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
604385    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
604386    +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
604387    +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
604388    +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
604389    +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
604390    +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
604391    +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
604392    +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
604393    +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
604394    +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
604395    +          +     0.09708841024031 * S_NumDealsPurchases
604396    +          +    -0.29075561032014 * S_NumDistPurchases
604397    +          +    -0.14495394259873 * S_NumStorePurchases
604398    +          +     0.11890705145732 * S_NumWebPurchases
604399    +          +    -0.16954189911344 * S_NumWebVisitsMonth
604400    +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
604401    +        S_RMntFrq  +     0.17150719398884 * S_Recency
604402    +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
604403    +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
604404    +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
604405    +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
604406    +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
604407    +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
604408    +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
604409    +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
604410    +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
604411    +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
604412    +          +     0.16274478997892 * S_NumDealsPurchases
604413    +          +     0.03966958784582 * S_NumDistPurchases
604414    +          +    -0.04714110726598 * S_NumStorePurchases
604415    +          +    -0.02124229528082 * S_NumWebPurchases
604416    +          +     0.29753299776832 * S_NumWebVisitsMonth
604417    +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
604418    +        S_RMntFrq  +     -0.3340129986623 * S_Recency
604419    +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
604420    +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
604421    +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
604422    +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
604423    +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
604424    +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
604425    +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
604426    +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
604427    +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
604428    +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
604429    +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
604430    +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
604431    +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
604432    +        EducationGraduation  +     0.00619669837452 * EducationMaster
604433    +          +    -0.05037639679806 * Marital_StatusDivorced
604434    +          +     0.28781968727878 * Marital_StatusMarried
604435    +          +    -0.20382417074384 * Marital_StatusSingle
604436    +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
604437    +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
604438    +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
604439    +        EducationGraduation  +    -0.06952670554019 * EducationMaster
604440    +          +     0.06970969219123 * Marital_StatusDivorced
604441    +          +    -0.15787475744986 * Marital_StatusMarried
604442    +          +     0.14345344072192 * Marital_StatusSingle
604443    +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
604444    +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
604445    +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
604446    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
604447    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
604448    +END;
MPRINT(EM_DIAGRAM):   END;
604449    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
604450    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
604451    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
604452    +END;
MPRINT(EM_DIAGRAM):   END;
604453    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
604454    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
604455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
604456    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
604457    +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
604458    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
604459    +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
604460    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
604461    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
604462    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
604463    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
604464    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
604465    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
604466    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
604467    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
604468    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
604469    +END;
MPRINT(EM_DIAGRAM):   END;
604470    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
604471    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
604472    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
604473    +END;
MPRINT(EM_DIAGRAM):   END;
604474    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
604475    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
604476    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
604477    +END;
MPRINT(EM_DIAGRAM):   END;
604478    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
604479    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
604480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
604481    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
604482    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
604483    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
604484    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
604485    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
604486    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
604487    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
604488    +END;
MPRINT(EM_DIAGRAM):   END;
604489    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
604490    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
604491    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
604492    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
604493     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
604494     quit;
604495     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
604496     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
604497     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
604498     retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
604499     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
604500     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604501     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
604502     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604503     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604504     proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME 
CREATOR);
604505     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604506     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604507     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
604508     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
604509     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
604510     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604511     proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
604512     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

604513     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
604514     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604515     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604516     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
604517     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
604518     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604519     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604520     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
604521     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
604521   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.

604522     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

604523     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
604524     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604525     filename _pref
604525   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
604526     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
604527     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
604528    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604529    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
604530    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604531    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
604532    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
604533    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
604534     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
604535     quit;
604536     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
604537     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
604538     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
604539     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
604540     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
604541     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604542     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
604543     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604544     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

604545     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
604546     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604547     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604548     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
604549     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
604550     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
604551     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604552     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
604553     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

604554     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
604555     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604556     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604557     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
604558     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
604559     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604560     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604561     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
604562     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
604562   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

604563     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604564     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
604565     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604566     filename _pref
604566   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
604567     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
604568     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
604569    +
604570    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
604571    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
604571   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
604572    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
604573    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
604574    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
604575    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
604576    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
604577     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
604578     quit;
604579     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
604580     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
604581     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
604582     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
604583     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
604584     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604585     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
604586     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604587     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604588     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
604589     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604590     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

604591     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
604592     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
604593     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
604594     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604595     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
604596     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604597     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
604598     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604599     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

604600     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
604601     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
604602     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604603     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604604     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
604605     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
604605   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

604606     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604607     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
604608     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604609     filename _pref
604609   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
604610     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
604611     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
604612    +
604613    +
604614    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
604615    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
604616    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
604617    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
604618    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
604619    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
604620    +
604621    +
604622    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
604623    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
604624    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
604625    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
604626    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
604627    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
604628    +
604629    +
604630    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
604631    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
604632    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
604633    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
604634    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
604635    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
604636    +
604637    +
604638    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
604639    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
604640    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
604641    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
604642    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
604643    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
604644    +
604645    +
604646    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
604647    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
604648    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
604649    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
604650    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
604651    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
604652    +
604653    +
604654    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
604655    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
604656    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
604657    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
604658    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
604659    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
604660    +
604661    +
604662    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
604663    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
604664    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
604665    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
604666    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
604667    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
604668    +
604669    +
604670    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
604671    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
604672    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
604673    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
604674    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
604675    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
604676    +if
604677    +_FILTERNORM1 not in ( '.')
604678    + and
604679    +_FILTERNORM2 not in ( '.')
604680    + and
604681    +_FILTERNORM3 not in ( '.')
604682    + and
604683    +_FILTERNORM4 not in ( '.')
604684    + and
604685    +_FILTERNORM5 not in ( '.')
604686    + and
604687    +_FILTERNORM6 not in ( '.')
604688    + and
604689    +_FILTERNORM7 not in ( ' ')
604690    + and
604691    +_FILTERNORM8 not in ( ' ')
604692    +and
604693    +( Dt_Customer ne .)
604694    +and ( Income ne . and (Income<=107000))
604695    +and ( Kidhome ne .)
604696    +and ( MntFishProducts ne .)
604697    +and ( MntFruits ne .)
604698    +and ( MntGoldProds ne .)
604699    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
604700    +and ( MntSweetProducts ne .)
604701    +and ( MntWines ne .)
604702    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
604703    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
604704    +and ( NumStorePurchases ne .)
604705    +and ( NumWebPurchases ne .)
604706    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
604707    +and ( Recency ne .)
604708    +and ( Teenhome ne .)
604709    +and ( Year_Birth ne .)
604710    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
604711    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
604712    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
604713    +end;
MPRINT(EM_DIAGRAM):   end;
604714    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
604715    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
604716     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
604717     quit;
604718     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
604719     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
604720     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
604721     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
604722     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
604723     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604724     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
604725     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604726     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604727     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
604728     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604729     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

604730     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
604731     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
604732     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
604733     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604734     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
604735     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

604736     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
604737     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604738     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604739     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
604740     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
604741     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
604742     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604743     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
604744     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
604744   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

604745     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604746     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
604747     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604748     %macro varDept(fcmpdata=,id=);
604749     %global nobs&id scoreFlag&id;
604750     %let scoreFlag&id = 0;
604751     %if &id=1 or ^&fcmpStart %then %do;
604752     proc sort data=&fcmpdata out=_temp&id nodupkey;
604753     by NAME;
604754     where id=&id and LHS in( %let j=1;
604755     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
604756     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
604757     "&var" %let j = %eval(&j+1);
604758     %end;
604759     );
604760     run;
604761     %let dsid = %sysfunc(open(_temp&id));
604762     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
604763     %let dsid = %sysfunc(close(&dsid));
604764     %if &&nobs&id %then %do;
604765     %let scoreFlag&id = 1;
604766     %let fcmpStart = 1;
604767     %end;
604768     %else %let fcmpStart = 0;
604769     %end;
604770     %else %do;
604771     proc sort data=&fcmpdata out=_tempid;
604772     where id=&id;
604773     by LHS;
604774     run;
604775     %let dsid = %sysfunc(open(_tempid));
604776     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
604777     %let dsid = %sysfunc(close(&dsid));
604778     %if ^&&nobs&id %then %do;
604779     proc datasets lib=work nolist;
604780     delete _tempid;
604781     run;
604782     quit;
604783     %end;
604784     %else %do;
604785     data _tempAll;
604786     set %let j=%eval(&id-1);
604787     %do x=1 %to &j;
604788     %if &&nobs&x %then %do;
604789     _temp&x %end;
604790     %end;
604791     ;
604792     run;
604793     proc sql;
604794     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
604794   ! work._tempid p2 where p.name=p2.lhs;
604795     quit;
604796     data _temp&id;
604797     set _temp&id;
604798     where LHS ne '' and NAME ne '' and Node ne '';
604799     run;
604800     proc datasets lib=work nolist;
604801     delete _tempAll;
604802     run;
604803     %let dsid = %sysfunc(open(_temp&id));
604804     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
604805     %let dsid = %sysfunc(close(&dsid));
604806     %if ^&&nobs&id %then %do;
604807     proc datasets lib=work nolist;
604808     delete _temp&id;
604809     run;
604810     quit;
604811     %end;
604812     %else %do;
604813     %let scoreFlag&id = 1;
604814     data _temp&id;
604815     set _temp&id;
604816     where LHS ne NAME and node ne '';
604817     run;
604818     %let dsid = %sysfunc(open(_temp&id));
604819     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
604820     %let dsid = %sysfunc(close(&dsid));
604821     %if ^&&nobs&id %then %do;
604822     proc datasets lib=work nolist;
604823     delete _temp&id;
604824     run;
604825     quit;
604826     %end;
604827     %else %do;
604828     proc sort data=_temp&id nodupkey;
604829     by LHS NAME;
604830     run;
604831     %end;
604832     %end;
604833     %end;
604834     %end;
604835     %mend varDept;
604836     %macro optCode(outdata=fcmpdata);
604837     %global fcmpStart;
604838     %let fcmpStart = 0;
604839     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
604840     %let NumNodes=9;
604841     %do k=1 %to &NumNodes;
604842     %vardept(fcmpdata=&outdata, id=&k);
604843     %end;
604844     %mend optCode;
604845     %optcode(outData=EMWS8.Ensmbl32_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 140 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

604846     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
604847     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
604848     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
604849     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604850     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
604851     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
604852     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
604853     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604854     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
604855     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
604855   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

604856     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

604857     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
604858     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
604859     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604860     filename _pref
604860   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
604861     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
604862     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
604863    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
604864    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
604865    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
604866    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
604867    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
604868    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
604869    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
604870    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
604871    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
604872    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
604873    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
604874    +LENGTH _WARN_ $4
604875    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
604876    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
604877    +
604878    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
604879    +
604880    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
604881    +
604882    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
604883    +
604884    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
604885    +
604886    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
604887    +
604888    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
604889    +
604890    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
604891    +
604892    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
604893    +
604894    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
604895    +
604896    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
604897    +
604898    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
604899    +
604900    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
604901    +
604902    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
604903    +
604904    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
604905    +
604906    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
604907    +
604908    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
604909    +
604910    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
604911    +
604912    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
604913    +
604914    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
604915    +
604916    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
604917    +
604918    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
604919    +
604920    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
604921    +
604922    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
604923    +
604924    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
604925    +
604926    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
604927    +
604928    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
604929    +
604930    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
604931    +
604932    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
604933    +
604934    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
604935    +
604936    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
604937    +
604938    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
604939    +
604940    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
604941    +
604942    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
604943    +
604944    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
604945    +
604946    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
604947    +
604948    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
604949    +
604950    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
604951    +
604952    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
604953    +
604954    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
604955    +
604956    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
604957    +
604958    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
604959    +
604960    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
604961    +
604962    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
604963    +
604964    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
604965    +
604966    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
604967    +
604968    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
604969    +
604970    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
604971    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
604972    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
604973    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
604974    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
604975    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604976    +end;
MPRINT(EM_DIAGRAM):   end;
604977    +else do;
MPRINT(EM_DIAGRAM):   else do;
604978    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
604979    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
604980    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
604981    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
604982    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
604983    +   end;
MPRINT(EM_DIAGRAM):   end;
604984    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
604985    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
604986    +   end;
MPRINT(EM_DIAGRAM):   end;
604987    +   else do;
MPRINT(EM_DIAGRAM):   else do;
604988    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
604989    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
604990    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
604991    +   end;
MPRINT(EM_DIAGRAM):   end;
604992    +end;
MPRINT(EM_DIAGRAM):   end;
604993    +
604994    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
604995    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
604996    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
604997    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
604998    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
604999    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605000    +end;
MPRINT(EM_DIAGRAM):   end;
605001    +else do;
MPRINT(EM_DIAGRAM):   else do;
605002    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
605003    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
605004    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
605005    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
605006    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
605007    +   end;
MPRINT(EM_DIAGRAM):   end;
605008    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
605009    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
605010    +   end;
MPRINT(EM_DIAGRAM):   end;
605011    +   else do;
MPRINT(EM_DIAGRAM):   else do;
605012    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
605013    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
605014    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605015    +   end;
MPRINT(EM_DIAGRAM):   end;
605016    +end;
MPRINT(EM_DIAGRAM):   end;
605017    +
605018    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
605019    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
605020    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
605021    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
605022    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
605023    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605024    +end;
MPRINT(EM_DIAGRAM):   end;
605025    +else do;
MPRINT(EM_DIAGRAM):   else do;
605026    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
605027    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
605028    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
605029    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
605030    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
605031    +   end;
MPRINT(EM_DIAGRAM):   end;
605032    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
605033    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
605034    +   end;
MPRINT(EM_DIAGRAM):   end;
605035    +   else do;
MPRINT(EM_DIAGRAM):   else do;
605036    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
605037    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
605038    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605039    +   end;
MPRINT(EM_DIAGRAM):   end;
605040    +end;
MPRINT(EM_DIAGRAM):   end;
605041    +
605042    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
605043    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
605044    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
605045    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
605046    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
605047    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605048    +end;
MPRINT(EM_DIAGRAM):   end;
605049    +else do;
MPRINT(EM_DIAGRAM):   else do;
605050    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
605051    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
605052    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
605053    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
605054    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
605055    +   end;
MPRINT(EM_DIAGRAM):   end;
605056    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
605057    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
605058    +   end;
MPRINT(EM_DIAGRAM):   end;
605059    +   else do;
MPRINT(EM_DIAGRAM):   else do;
605060    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
605061    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
605062    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605063    +   end;
MPRINT(EM_DIAGRAM):   end;
605064    +end;
MPRINT(EM_DIAGRAM):   end;
605065    +
605066    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
605067    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
605068    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
605069    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
605070    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
605071    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605072    +end;
MPRINT(EM_DIAGRAM):   end;
605073    +else do;
MPRINT(EM_DIAGRAM):   else do;
605074    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
605075    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
605076    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
605077    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
605078    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
605079    +   end;
MPRINT(EM_DIAGRAM):   end;
605080    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
605081    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
605082    +   end;
MPRINT(EM_DIAGRAM):   end;
605083    +   else do;
MPRINT(EM_DIAGRAM):   else do;
605084    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
605085    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
605086    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605087    +   end;
MPRINT(EM_DIAGRAM):   end;
605088    +end;
MPRINT(EM_DIAGRAM):   end;
605089    +
605090    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
605091    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
605092    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
605093    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
605094    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
605095    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605096    +end;
MPRINT(EM_DIAGRAM):   end;
605097    +else do;
MPRINT(EM_DIAGRAM):   else do;
605098    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
605099    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
605100    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
605101    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
605102    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
605103    +   end;
MPRINT(EM_DIAGRAM):   end;
605104    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
605105    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
605106    +   end;
MPRINT(EM_DIAGRAM):   end;
605107    +   else do;
MPRINT(EM_DIAGRAM):   else do;
605108    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
605109    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
605110    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605111    +   end;
MPRINT(EM_DIAGRAM):   end;
605112    +end;
MPRINT(EM_DIAGRAM):   end;
605113    +
605114    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
605115    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
605116    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
605117    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
605118    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
605119    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605120    +end;
MPRINT(EM_DIAGRAM):   end;
605121    +else do;
MPRINT(EM_DIAGRAM):   else do;
605122    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
605123    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
605124    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
605125    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
605126    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
605127    +   end;
MPRINT(EM_DIAGRAM):   end;
605128    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
605129    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
605130    +   end;
MPRINT(EM_DIAGRAM):   end;
605131    +   else do;
MPRINT(EM_DIAGRAM):   else do;
605132    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
605133    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
605134    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605135    +   end;
MPRINT(EM_DIAGRAM):   end;
605136    +end;
MPRINT(EM_DIAGRAM):   end;
605137    +
605138    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
605139    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
605140    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
605141    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
605142    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
605143    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
605144    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
605145    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
605146    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
605147    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
605148    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
605149    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
605150    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
605151    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605152    +end;
MPRINT(EM_DIAGRAM):   end;
605153    +else do;
MPRINT(EM_DIAGRAM):   else do;
605154    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
605155    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
605156    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
605157    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
605158    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
605159    +   end;
MPRINT(EM_DIAGRAM):   end;
605160    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
605161    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
605162    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
605163    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
605164    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
605165    +   end;
MPRINT(EM_DIAGRAM):   end;
605166    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
605167    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
605168    +   end;
MPRINT(EM_DIAGRAM):   end;
605169    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
605170    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
605171    +   end;
MPRINT(EM_DIAGRAM):   end;
605172    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
605173    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
605174    +   end;
MPRINT(EM_DIAGRAM):   end;
605175    +   else do;
MPRINT(EM_DIAGRAM):   else do;
605176    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
605177    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
605178    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
605179    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
605180    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
605181    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605182    +   end;
MPRINT(EM_DIAGRAM):   end;
605183    +end;
MPRINT(EM_DIAGRAM):   end;
605184    +
605185    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
605186    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
605187    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
605188    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
605189    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
605190    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
605191    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
605192    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
605193    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
605194    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
605195    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
605196    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
605197    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
605198    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
605199    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605200    +end;
MPRINT(EM_DIAGRAM):   end;
605201    +else do;
MPRINT(EM_DIAGRAM):   else do;
605202    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
605203    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
605204    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
605205    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
605206    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
605207    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
605208    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
605209    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
605210    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
605211    +         end;
MPRINT(EM_DIAGRAM):   end;
605212    +         else do;
MPRINT(EM_DIAGRAM):   else do;
605213    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
605214    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
605215    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
605216    +            end;
MPRINT(EM_DIAGRAM):   end;
605217    +         end;
MPRINT(EM_DIAGRAM):   end;
605218    +      end;
MPRINT(EM_DIAGRAM):   end;
605219    +      else do;
MPRINT(EM_DIAGRAM):   else do;
605220    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
605221    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
605222    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
605223    +         end;
MPRINT(EM_DIAGRAM):   end;
605224    +      end;
MPRINT(EM_DIAGRAM):   end;
605225    +   end;
MPRINT(EM_DIAGRAM):   end;
605226    +   else do;
MPRINT(EM_DIAGRAM):   else do;
605227    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
605228    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
605229    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
605230    +      end;
MPRINT(EM_DIAGRAM):   end;
605231    +      else do;
MPRINT(EM_DIAGRAM):   else do;
605232    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
605233    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
605234    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
605235    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
605236    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
605237    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
605238    +         end;
MPRINT(EM_DIAGRAM):   end;
605239    +      end;
MPRINT(EM_DIAGRAM):   end;
605240    +   end;
MPRINT(EM_DIAGRAM):   end;
605241    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
605242    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
605243    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
605244    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
605245    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
605246    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
605247    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605248    +   end;
MPRINT(EM_DIAGRAM):   end;
605249    +end;
MPRINT(EM_DIAGRAM):   end;
605250    +
605251    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
605252    +*** Checking missing input Interval
605253    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
605254    +
605255    +IF NMISS(
605256    +   AcceptedCmpTotal ,
605257    +   Age ,
605258    +   Frq ,
605259    +   Income ,
605260    +   Kidhome ,
605261    +   Mnt ,
605262    +   MntFishProducts ,
605263    +   MntFruits ,
605264    +   MntGoldProds ,
605265    +   MntMeatProducts ,
605266    +   MntSweetProducts ,
605267    +   MntWines ,
605268    +   MonthsAsCustomer ,
605269    +   NumCatalogPurchases ,
605270    +   NumDealsPurchases ,
605271    +   NumDistPurchases ,
605272    +   NumStorePurchases ,
605273    +   NumWebPurchases ,
605274    +   NumWebVisitsMonth ,
605275    +   RFMstat ,
605276    +   RMntFrq ,
605277    +   Recency ,
605278    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
605279    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
605280    +
605281    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
605282    +END;
MPRINT(EM_DIAGRAM):   END;
605283    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
605284    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
605285    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
605286    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
605287    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
605288    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
605289    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
605290    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
605291    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
605292    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
605293    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
605294    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
605295    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
605296    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
605297    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
605298    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
605299    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
605300    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
605301    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
605302    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
605303    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
605304    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
605305    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
605306    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
605307    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
605308    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
605309    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
605310    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
605311    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
605312    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
605313    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
605314    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
605315    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
605316    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
605317    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
605318    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
605319    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
605320    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
605321    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
605322    +END;
MPRINT(EM_DIAGRAM):   END;
605323    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
605324    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
605325    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
605326    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
605327    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
605328    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
605329    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
605330    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
605331    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
605332    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
605333    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
605334    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
605335    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
605336    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
605337    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
605338    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
605339    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
605340    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
605341    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
605342    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
605343    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
605344    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
605345    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
605346    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
605347    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
605348    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
605349    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
605350    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
605351    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
605352    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
605353    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
605354    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
605355    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
605356    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
605357    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
605358    +   ELSE S_NumCatalogPurchases
605359    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
605360    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
605361    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
605362    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
605363    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
605364    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
605365    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
605366    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
605367    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
605368    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
605369    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
605370    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
605371    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
605372    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
605373    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
605374    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
605375    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
605376    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
605377    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
605378    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
605379    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
605380    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
605381    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
605382    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
605383    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
605384    +END;
MPRINT(EM_DIAGRAM):   END;
605385    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
605386    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
605387    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
605388    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
605389    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
605390    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
605391    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
605392    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
605393    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
605394    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
605395    +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
605396    +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
605397    +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
605398    +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
605399    +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
605400    +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
605401    +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
605402    +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
605403    +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
605404    +          +    -1.14704878034134 * S_NumDealsPurchases
605405    +          +    -0.17763404274659 * S_NumDistPurchases
605406    +          +     0.08894400267969 * S_NumStorePurchases
605407    +          +     0.59283747891957 * S_NumWebPurchases
605408    +          +     0.85268274682505 * S_NumWebVisitsMonth
605409    +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
605410    +        S_RMntFrq  +    -1.22871580072103 * S_Recency
605411    +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
605412    +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
605413    +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
605414    +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
605415    +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
605416    +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
605417    +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
605418    +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
605419    +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
605420    +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
605421    +          +    -0.80841566068716 * S_NumDealsPurchases
605422    +          +    -0.17995640033768 * S_NumDistPurchases
605423    +          +     0.00713417460936 * S_NumStorePurchases
605424    +          +     0.57881024323076 * S_NumWebPurchases
605425    +          +    -1.35134224257365 * S_NumWebVisitsMonth
605426    +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
605427    +        S_RMntFrq  +     1.16978656262499 * S_Recency
605428    +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
605429    +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
605430    +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
605431    +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
605432    +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
605433    +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
605434    +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
605435    +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
605436    +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
605437    +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
605438    +          +     0.57891364118717 * S_NumDealsPurchases
605439    +          +    -0.31024556838688 * S_NumDistPurchases
605440    +          +    -1.48708542986704 * S_NumStorePurchases
605441    +          +    -0.93009875249206 * S_NumWebPurchases
605442    +          +     2.01900039122935 * S_NumWebVisitsMonth
605443    +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
605444    +        S_RMntFrq  +    -2.30414631760388 * S_Recency
605445    +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
605446    +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
605447    +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
605448    +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
605449    +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
605450    +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
605451    +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
605452    +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
605453    +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
605454    +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
605455    +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
605456    +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
605457    +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
605458    +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
605459    +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
605460    +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
605461    +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
605462    +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
605463    +        EducationGraduation  +    -0.68730596079478 * EducationMaster
605464    +          +     0.55883606830033 * Marital_StatusDivorced
605465    +          +    -0.54530037567066 * Marital_StatusMarried
605466    +          +    -0.52994736075753 * Marital_StatusSingle
605467    +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
605468    +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
605469    +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
605470    +        EducationGraduation  +     0.31201349236277 * EducationMaster
605471    +          +    -1.07368484057033 * Marital_StatusDivorced
605472    +          +     2.73313504711262 * Marital_StatusMarried
605473    +          +    -2.18530462876058 * Marital_StatusSingle
605474    +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
605475    +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
605476    +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
605477    +        EducationGraduation  +    -0.35544166792219 * EducationMaster
605478    +          +     0.49993144243043 * Marital_StatusDivorced
605479    +          +    -0.38953339116829 * Marital_StatusMarried
605480    +          +    -0.10836287319942 * Marital_StatusSingle
605481    +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
605482    +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
605483    +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
605484    +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
605485    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
605486    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
605487    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
605488    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
605489    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
605490    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
605491    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
605492    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
605493    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
605494    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
605495    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
605496    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
605497    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
605498    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
605499    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
605500    +END;
MPRINT(EM_DIAGRAM):   END;
605501    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
605502    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
605503    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
605504    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
605505    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
605506    +END;
MPRINT(EM_DIAGRAM):   END;
605507    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
605508    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
605509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
605510    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
605511    +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
605512    +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
605513    +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
605514    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
605515    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
605516    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
605517    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
605518    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
605519    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
605520    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
605521    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
605522    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
605523    +END;
MPRINT(EM_DIAGRAM):   END;
605524    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
605525    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
605526    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
605527    +END;
MPRINT(EM_DIAGRAM):   END;
605528    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
605529    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
605530    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
605531    +END;
MPRINT(EM_DIAGRAM):   END;
605532    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
605533    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
605534    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
605535    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
605536    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
605537    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
605538    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
605539    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
605540    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
605541    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
605542    +END;
MPRINT(EM_DIAGRAM):   END;
605543    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
605544    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
605545    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
605546    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
605547     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
605548     quit;
605549     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
605550     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
605551     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
605552     retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
605553     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
605554     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605555     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
605556     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605557     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605558     proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
605559     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605560     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605561     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
605562     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
605563     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
605564     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605565     proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
605566     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

605567     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
605568     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605569     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605570     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
605571     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
605572     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605573     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605574     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
605575     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
605575   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.

605576     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605577     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
605578     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605579     filename _pref
605579   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
605580     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
605581     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
605582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605583    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
605584    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605585    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
605586    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
605587    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
605588     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
605589     quit;
605590     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
605591     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
605592     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
605593     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
605594     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
605595     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605596     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
605597     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605598     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605599     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
605600     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605601     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605602     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
605603     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
605604     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
605605     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605606     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
605607     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

605608     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
605609     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605610     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605611     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
605612     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
605613     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605614     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605615     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
605616     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
605616   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

605617     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605618     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
605619     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605620     filename _pref
605620   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
605621     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
605622     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
605623    +
605624    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
605625    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
605625   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
605626    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
605627    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
605628    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
605629    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
605630    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
605631     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
605632     quit;
605633     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
605634     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
605635     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
605636     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
605637     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
605638     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605639     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
605640     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605641     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605642     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
605643     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605644     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605645     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
605646     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
605647     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
605648     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605649     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
605650     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605651     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
605652     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605653     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605654     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
605655     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
605656     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605657     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605658     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
605659     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
605659   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

605660     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605661     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
605662     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605663     filename _pref
605663   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
605664     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
605665     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
605666    +
605667    +
605668    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
605669    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
605670    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
605671    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
605672    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
605673    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
605674    +
605675    +
605676    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
605677    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
605678    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
605679    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
605680    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
605681    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
605682    +
605683    +
605684    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
605685    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
605686    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
605687    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
605688    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
605689    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
605690    +
605691    +
605692    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
605693    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
605694    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
605695    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
605696    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
605697    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
605698    +
605699    +
605700    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
605701    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
605702    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
605703    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
605704    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
605705    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
605706    +
605707    +
605708    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
605709    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
605710    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
605711    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
605712    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
605713    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
605714    +
605715    +
605716    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
605717    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
605718    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
605719    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
605720    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
605721    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
605722    +
605723    +
605724    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
605725    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
605726    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
605727    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
605728    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
605729    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
605730    +if
605731    +_FILTERNORM1 not in ( '.')
605732    + and
605733    +_FILTERNORM2 not in ( '.')
605734    + and
605735    +_FILTERNORM3 not in ( '.')
605736    + and
605737    +_FILTERNORM4 not in ( '.')
605738    + and
605739    +_FILTERNORM5 not in ( '.')
605740    + and
605741    +_FILTERNORM6 not in ( '.')
605742    + and
605743    +_FILTERNORM7 not in ( ' ')
605744    + and
605745    +_FILTERNORM8 not in ( ' ')
605746    +and
605747    +( Dt_Customer ne .)
605748    +and ( Income ne . and (Income<=107000))
605749    +and ( Kidhome ne .)
605750    +and ( MntFishProducts ne .)
605751    +and ( MntFruits ne .)
605752    +and ( MntGoldProds ne .)
605753    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
605754    +and ( MntSweetProducts ne .)
605755    +and ( MntWines ne .)
605756    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
605757    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
605758    +and ( NumStorePurchases ne .)
605759    +and ( NumWebPurchases ne .)
605760    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
605761    +and ( Recency ne .)
605762    +and ( Teenhome ne .)
605763    +and ( Year_Birth ne .)
605764    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
605765    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
605766    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
605767    +end;
MPRINT(EM_DIAGRAM):   end;
605768    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
605769    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
605770     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
605771     quit;
605772     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
605773     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
605774     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
605775     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
605776     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
605777     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605778     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
605779     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605780     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605781     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
605782     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605783     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605784     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
605785     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
605786     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
605787     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605788     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
605789     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605790     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
605791     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605792     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605793     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
605794     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
605795     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
605796     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605797     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
605798     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
605798   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

605799     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605800     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
605801     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605802     %macro varDept(fcmpdata=,id=);
605803     %global nobs&id scoreFlag&id;
605804     %let scoreFlag&id = 0;
605805     %if &id=1 or ^&fcmpStart %then %do;
605806     proc sort data=&fcmpdata out=_temp&id nodupkey;
605807     by NAME;
605808     where id=&id and LHS in( %let j=1;
605809     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
605810     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
605811     "&var" %let j = %eval(&j+1);
605812     %end;
605813     );
605814     run;
605815     %let dsid = %sysfunc(open(_temp&id));
605816     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
605817     %let dsid = %sysfunc(close(&dsid));
605818     %if &&nobs&id %then %do;
605819     %let scoreFlag&id = 1;
605820     %let fcmpStart = 1;
605821     %end;
605822     %else %let fcmpStart = 0;
605823     %end;
605824     %else %do;
605825     proc sort data=&fcmpdata out=_tempid;
605826     where id=&id;
605827     by LHS;
605828     run;
605829     %let dsid = %sysfunc(open(_tempid));
605830     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
605831     %let dsid = %sysfunc(close(&dsid));
605832     %if ^&&nobs&id %then %do;
605833     proc datasets lib=work nolist;
605834     delete _tempid;
605835     run;
605836     quit;
605837     %end;
605838     %else %do;
605839     data _tempAll;
605840     set %let j=%eval(&id-1);
605841     %do x=1 %to &j;
605842     %if &&nobs&x %then %do;
605843     _temp&x %end;
605844     %end;
605845     ;
605846     run;
605847     proc sql;
605848     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
605848   ! work._tempid p2 where p.name=p2.lhs;
605849     quit;
605850     data _temp&id;
605851     set _temp&id;
605852     where LHS ne '' and NAME ne '' and Node ne '';
605853     run;
605854     proc datasets lib=work nolist;
605855     delete _tempAll;
605856     run;
605857     %let dsid = %sysfunc(open(_temp&id));
605858     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
605859     %let dsid = %sysfunc(close(&dsid));
605860     %if ^&&nobs&id %then %do;
605861     proc datasets lib=work nolist;
605862     delete _temp&id;
605863     run;
605864     quit;
605865     %end;
605866     %else %do;
605867     %let scoreFlag&id = 1;
605868     data _temp&id;
605869     set _temp&id;
605870     where LHS ne NAME and node ne '';
605871     run;
605872     %let dsid = %sysfunc(open(_temp&id));
605873     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
605874     %let dsid = %sysfunc(close(&dsid));
605875     %if ^&&nobs&id %then %do;
605876     proc datasets lib=work nolist;
605877     delete _temp&id;
605878     run;
605879     quit;
605880     %end;
605881     %else %do;
605882     proc sort data=_temp&id nodupkey;
605883     by LHS NAME;
605884     run;
605885     %end;
605886     %end;
605887     %end;
605888     %end;
605889     %mend varDept;
605890     %macro optCode(outdata=fcmpdata);
605891     %global fcmpStart;
605892     %let fcmpStart = 0;
605893     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
605894     %let NumNodes=9;
605895     %do k=1 %to &NumNodes;
605896     %vardept(fcmpdata=&outdata, id=&k);
605897     %end;
605898     %mend optCode;
605899     %optcode(outData=EMWS8.Ensmbl32_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 146 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

605900     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
605901     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
605902     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
605903     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605904     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
605905     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
605906     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
605907     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605908     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
605909     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
605909   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

605910     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605911     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
605912     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
605913     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605914     filename _pref
605914   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
605915     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
605916     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
605917    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
605918    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
605919    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
605920    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
605921    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
605922    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
605923    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
605924    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
605925    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
605926    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
605927    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
605928    +LENGTH _WARN_ $4
605929    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
605930    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
605931    +
605932    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
605933    +
605934    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
605935    +
605936    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
605937    +
605938    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
605939    +
605940    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
605941    +
605942    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
605943    +
605944    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
605945    +
605946    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
605947    +
605948    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
605949    +
605950    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
605951    +
605952    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
605953    +
605954    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
605955    +
605956    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
605957    +
605958    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
605959    +
605960    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
605961    +
605962    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
605963    +
605964    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
605965    +
605966    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
605967    +
605968    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
605969    +
605970    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
605971    +
605972    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
605973    +
605974    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
605975    +
605976    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
605977    +
605978    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
605979    +
605980    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
605981    +
605982    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
605983    +
605984    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
605985    +
605986    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
605987    +
605988    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
605989    +
605990    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
605991    +
605992    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
605993    +
605994    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
605995    +
605996    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
605997    +
605998    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
605999    +
606000    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
606001    +
606002    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
606003    +
606004    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
606005    +
606006    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
606007    +
606008    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
606009    +
606010    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
606011    +
606012    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
606013    +
606014    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
606015    +
606016    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
606017    +
606018    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
606019    +
606020    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
606021    +
606022    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
606023    +
606024    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
606025    +
606026    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
606027    +
606028    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
606029    +
606030    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
606031    +
606032    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
606033    +
606034    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
606035    +
606036    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
606037    +
606038    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
606039    +
606040    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
606041    +
606042    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
606043    +
606044    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
606045    +
606046    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
606047    +
606048    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
606049    +
606050    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
606051    +
606052    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
606053    +
606054    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
606055    +
606056    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
606057    +
606058    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
606059    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
606060    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
606061    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
606062    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
606063    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606064    +end;
MPRINT(EM_DIAGRAM):   end;
606065    +else do;
MPRINT(EM_DIAGRAM):   else do;
606066    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
606067    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
606068    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
606069    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
606070    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
606071    +   end;
MPRINT(EM_DIAGRAM):   end;
606072    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
606073    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
606074    +   end;
MPRINT(EM_DIAGRAM):   end;
606075    +   else do;
MPRINT(EM_DIAGRAM):   else do;
606076    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
606077    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
606078    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606079    +   end;
MPRINT(EM_DIAGRAM):   end;
606080    +end;
MPRINT(EM_DIAGRAM):   end;
606081    +
606082    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
606083    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
606084    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
606085    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
606086    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
606087    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606088    +end;
MPRINT(EM_DIAGRAM):   end;
606089    +else do;
MPRINT(EM_DIAGRAM):   else do;
606090    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
606091    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
606092    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
606093    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
606094    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
606095    +   end;
MPRINT(EM_DIAGRAM):   end;
606096    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
606097    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
606098    +   end;
MPRINT(EM_DIAGRAM):   end;
606099    +   else do;
MPRINT(EM_DIAGRAM):   else do;
606100    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
606101    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
606102    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606103    +   end;
MPRINT(EM_DIAGRAM):   end;
606104    +end;
MPRINT(EM_DIAGRAM):   end;
606105    +
606106    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
606107    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
606108    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
606109    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
606110    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
606111    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606112    +end;
MPRINT(EM_DIAGRAM):   end;
606113    +else do;
MPRINT(EM_DIAGRAM):   else do;
606114    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
606115    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
606116    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
606117    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
606118    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
606119    +   end;
MPRINT(EM_DIAGRAM):   end;
606120    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
606121    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
606122    +   end;
MPRINT(EM_DIAGRAM):   end;
606123    +   else do;
MPRINT(EM_DIAGRAM):   else do;
606124    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
606125    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
606126    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606127    +   end;
MPRINT(EM_DIAGRAM):   end;
606128    +end;
MPRINT(EM_DIAGRAM):   end;
606129    +
606130    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
606131    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
606132    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
606133    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
606134    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
606135    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606136    +end;
MPRINT(EM_DIAGRAM):   end;
606137    +else do;
MPRINT(EM_DIAGRAM):   else do;
606138    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
606139    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
606140    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
606141    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
606142    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
606143    +   end;
MPRINT(EM_DIAGRAM):   end;
606144    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
606145    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
606146    +   end;
MPRINT(EM_DIAGRAM):   end;
606147    +   else do;
MPRINT(EM_DIAGRAM):   else do;
606148    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
606149    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
606150    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606151    +   end;
MPRINT(EM_DIAGRAM):   end;
606152    +end;
MPRINT(EM_DIAGRAM):   end;
606153    +
606154    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
606155    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
606156    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
606157    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
606158    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
606159    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606160    +end;
MPRINT(EM_DIAGRAM):   end;
606161    +else do;
MPRINT(EM_DIAGRAM):   else do;
606162    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
606163    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
606164    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
606165    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
606166    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
606167    +   end;
MPRINT(EM_DIAGRAM):   end;
606168    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
606169    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
606170    +   end;
MPRINT(EM_DIAGRAM):   end;
606171    +   else do;
MPRINT(EM_DIAGRAM):   else do;
606172    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
606173    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
606174    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606175    +   end;
MPRINT(EM_DIAGRAM):   end;
606176    +end;
MPRINT(EM_DIAGRAM):   end;
606177    +
606178    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
606179    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
606180    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
606181    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
606182    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
606183    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606184    +end;
MPRINT(EM_DIAGRAM):   end;
606185    +else do;
MPRINT(EM_DIAGRAM):   else do;
606186    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
606187    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
606188    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
606189    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
606190    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
606191    +   end;
MPRINT(EM_DIAGRAM):   end;
606192    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
606193    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
606194    +   end;
MPRINT(EM_DIAGRAM):   end;
606195    +   else do;
MPRINT(EM_DIAGRAM):   else do;
606196    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
606197    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
606198    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606199    +   end;
MPRINT(EM_DIAGRAM):   end;
606200    +end;
MPRINT(EM_DIAGRAM):   end;
606201    +
606202    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
606203    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
606204    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
606205    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
606206    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
606207    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606208    +end;
MPRINT(EM_DIAGRAM):   end;
606209    +else do;
MPRINT(EM_DIAGRAM):   else do;
606210    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
606211    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
606212    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
606213    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
606214    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
606215    +   end;
MPRINT(EM_DIAGRAM):   end;
606216    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
606217    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
606218    +   end;
MPRINT(EM_DIAGRAM):   end;
606219    +   else do;
MPRINT(EM_DIAGRAM):   else do;
606220    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
606221    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
606222    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606223    +   end;
MPRINT(EM_DIAGRAM):   end;
606224    +end;
MPRINT(EM_DIAGRAM):   end;
606225    +
606226    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
606227    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
606228    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
606229    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
606230    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
606231    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
606232    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
606233    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
606234    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
606235    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
606236    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
606237    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
606238    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
606239    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606240    +end;
MPRINT(EM_DIAGRAM):   end;
606241    +else do;
MPRINT(EM_DIAGRAM):   else do;
606242    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
606243    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
606244    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
606245    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
606246    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
606247    +   end;
MPRINT(EM_DIAGRAM):   end;
606248    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
606249    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
606250    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
606251    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
606252    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
606253    +   end;
MPRINT(EM_DIAGRAM):   end;
606254    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
606255    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
606256    +   end;
MPRINT(EM_DIAGRAM):   end;
606257    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
606258    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
606259    +   end;
MPRINT(EM_DIAGRAM):   end;
606260    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
606261    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
606262    +   end;
MPRINT(EM_DIAGRAM):   end;
606263    +   else do;
MPRINT(EM_DIAGRAM):   else do;
606264    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
606265    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
606266    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
606267    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
606268    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
606269    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606270    +   end;
MPRINT(EM_DIAGRAM):   end;
606271    +end;
MPRINT(EM_DIAGRAM):   end;
606272    +
606273    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
606274    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
606275    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
606276    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
606277    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
606278    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
606279    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
606280    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
606281    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
606282    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
606283    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
606284    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
606285    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
606286    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
606287    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606288    +end;
MPRINT(EM_DIAGRAM):   end;
606289    +else do;
MPRINT(EM_DIAGRAM):   else do;
606290    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
606291    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
606292    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
606293    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
606294    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
606295    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
606296    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
606297    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
606298    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
606299    +         end;
MPRINT(EM_DIAGRAM):   end;
606300    +         else do;
MPRINT(EM_DIAGRAM):   else do;
606301    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
606302    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
606303    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
606304    +            end;
MPRINT(EM_DIAGRAM):   end;
606305    +         end;
MPRINT(EM_DIAGRAM):   end;
606306    +      end;
MPRINT(EM_DIAGRAM):   end;
606307    +      else do;
MPRINT(EM_DIAGRAM):   else do;
606308    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
606309    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
606310    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
606311    +         end;
MPRINT(EM_DIAGRAM):   end;
606312    +      end;
MPRINT(EM_DIAGRAM):   end;
606313    +   end;
MPRINT(EM_DIAGRAM):   end;
606314    +   else do;
MPRINT(EM_DIAGRAM):   else do;
606315    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
606316    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
606317    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
606318    +      end;
MPRINT(EM_DIAGRAM):   end;
606319    +      else do;
MPRINT(EM_DIAGRAM):   else do;
606320    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
606321    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
606322    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
606323    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
606324    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
606325    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
606326    +         end;
MPRINT(EM_DIAGRAM):   end;
606327    +      end;
MPRINT(EM_DIAGRAM):   end;
606328    +   end;
MPRINT(EM_DIAGRAM):   end;
606329    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
606330    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
606331    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
606332    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
606333    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
606334    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
606335    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606336    +   end;
MPRINT(EM_DIAGRAM):   end;
606337    +end;
MPRINT(EM_DIAGRAM):   end;
606338    +
606339    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
606340    +*** Checking missing input Interval
606341    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
606342    +
606343    +IF NMISS(
606344    +   AcceptedCmpTotal ,
606345    +   Age ,
606346    +   Frq ,
606347    +   Income ,
606348    +   Kidhome ,
606349    +   Mnt ,
606350    +   MntFishProducts ,
606351    +   MntFruits ,
606352    +   MntGoldProds ,
606353    +   MntMeatProducts ,
606354    +   MntSweetProducts ,
606355    +   MntWines ,
606356    +   MonthsAsCustomer ,
606357    +   NumCatalogPurchases ,
606358    +   NumDealsPurchases ,
606359    +   NumDistPurchases ,
606360    +   NumStorePurchases ,
606361    +   NumWebPurchases ,
606362    +   NumWebVisitsMonth ,
606363    +   RFMstat ,
606364    +   RMntFrq ,
606365    +   Recency ,
606366    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
606367    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
606368    +
606369    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
606370    +END;
MPRINT(EM_DIAGRAM):   END;
606371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
606372    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
606373    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
606374    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
606375    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
606376    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
606377    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
606378    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
606379    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
606380    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
606381    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
606382    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
606383    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
606384    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
606385    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
606386    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
606387    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
606388    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
606389    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
606390    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
606391    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
606392    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
606393    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
606394    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
606395    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
606396    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
606397    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
606398    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
606399    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
606400    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
606401    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
606402    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
606403    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
606404    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
606405    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
606406    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
606407    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
606408    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
606409    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
606410    +END;
MPRINT(EM_DIAGRAM):   END;
606411    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
606412    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
606413    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
606414    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
606415    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
606416    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
606417    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
606418    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
606419    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
606420    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
606421    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
606422    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
606423    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
606424    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
606425    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
606426    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
606427    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
606428    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
606429    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
606430    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
606431    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
606432    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
606433    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
606434    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
606435    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
606436    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
606437    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
606438    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
606439    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
606440    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
606441    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
606442    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
606443    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
606444    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
606445    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
606446    +   ELSE S_NumCatalogPurchases
606447    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
606448    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
606449    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
606450    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
606451    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
606452    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
606453    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
606454    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
606455    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
606456    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
606457    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
606458    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
606459    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
606460    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
606461    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
606462    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
606463    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
606464    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
606465    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
606466    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
606467    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
606468    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
606469    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
606470    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
606471    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
606472    +END;
MPRINT(EM_DIAGRAM):   END;
606473    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
606474    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
606475    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
606476    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
606477    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
606478    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
606479    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
606480    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
606481    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
606482    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
606483    +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
606484    +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
606485    +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
606486    +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
606487    +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
606488    +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
606489    +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
606490    +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
606491    +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
606492    +          +     1.17276395296242 * S_NumDealsPurchases
606493    +          +     0.26632768295477 * S_NumDistPurchases
606494    +          +    -1.26575615903579 * S_NumStorePurchases
606495    +          +    -0.95316107557927 * S_NumWebPurchases
606496    +          +     1.01828574356487 * S_NumWebVisitsMonth
606497    +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
606498    +        S_RMntFrq  +    -0.82943281422857 * S_Recency
606499    +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
606500    +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
606501    +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
606502    +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
606503    +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
606504    +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
606505    +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
606506    +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
606507    +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
606508    +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
606509    +          +     1.14485571201233 * S_NumDealsPurchases
606510    +          +     0.21414266588987 * S_NumDistPurchases
606511    +          +    -0.10530090074297 * S_NumStorePurchases
606512    +          +    -0.41712321238458 * S_NumWebPurchases
606513    +          +    -0.99760766791108 * S_NumWebVisitsMonth
606514    +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
606515    +        S_RMntFrq  +     1.10040128548883 * S_Recency
606516    +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
606517    +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
606518    +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
606519    +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
606520    +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
606521    +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
606522    +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
606523    +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
606524    +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
606525    +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
606526    +          +      0.7196418967437 * S_NumDealsPurchases
606527    +          +     0.69035286374177 * S_NumDistPurchases
606528    +          +     0.38027656631135 * S_NumStorePurchases
606529    +          +    -0.18878358997924 * S_NumWebPurchases
606530    +          +     1.61962062004798 * S_NumWebVisitsMonth
606531    +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
606532    +        S_RMntFrq  +    -2.13821542142822 * S_Recency
606533    +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
606534    +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
606535    +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
606536    +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
606537    +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
606538    +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
606539    +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
606540    +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
606541    +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
606542    +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
606543    +          +    -0.00642902007204 * S_NumDealsPurchases
606544    +          +     0.29785069480367 * S_NumDistPurchases
606545    +          +    -0.42243322063147 * S_NumStorePurchases
606546    +          +     0.54880896338383 * S_NumWebPurchases
606547    +          +    -0.12525846016886 * S_NumWebVisitsMonth
606548    +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
606549    +        S_RMntFrq  +     0.10252211581449 * S_Recency
606550    +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
606551    +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
606552    +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
606553    +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
606554    +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
606555    +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
606556    +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
606557    +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
606558    +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
606559    +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
606560    +          +    -0.48404738328225 * S_NumDealsPurchases
606561    +          +    -0.02464180457879 * S_NumDistPurchases
606562    +          +     1.17201831082067 * S_NumStorePurchases
606563    +          +     0.57453655167516 * S_NumWebPurchases
606564    +          +    -1.94417019790248 * S_NumWebVisitsMonth
606565    +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
606566    +        S_RMntFrq  +      1.6169916658132 * S_Recency
606567    +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
606568    +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
606569    +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
606570    +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
606571    +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
606572    +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
606573    +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
606574    +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
606575    +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
606576    +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
606577    +          +    -1.49850531967483 * S_NumDealsPurchases
606578    +          +    -0.82105466264223 * S_NumDistPurchases
606579    +          +     0.29984603642824 * S_NumStorePurchases
606580    +          +     0.06557123721611 * S_NumWebPurchases
606581    +          +     1.04754749365002 * S_NumWebVisitsMonth
606582    +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
606583    +        S_RMntFrq  +     0.12396789666359 * S_Recency
606584    +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
606585    +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
606586    +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
606587    +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
606588    +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
606589    +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
606590    +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
606591    +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
606592    +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
606593    +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
606594    +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
606595    +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
606596    +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
606597    +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
606598    +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
606599    +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
606600    +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
606601    +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
606602    +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
606603    +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
606604    +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
606605    +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
606606    +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
606607    +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
606608    +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
606609    +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
606610    +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
606611    +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
606612    +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
606613    +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
606614    +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
606615    +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
606616    +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
606617    +        EducationGraduation  +     0.07595631354847 * EducationMaster
606618    +          +     0.24583509957712 * Marital_StatusDivorced
606619    +          +    -0.22681931588361 * Marital_StatusMarried
606620    +          +    -0.12924106229536 * Marital_StatusSingle
606621    +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
606622    +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
606623    +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
606624    +        EducationGraduation  +     0.23015089246655 * EducationMaster
606625    +          +    -0.12585334311068 * Marital_StatusDivorced
606626    +          +    -0.20835502467207 * Marital_StatusMarried
606627    +          +    -0.13839534449368 * Marital_StatusSingle
606628    +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
606629    +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
606630    +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
606631    +        EducationGraduation  +    -0.03608560158257 * EducationMaster
606632    +          +     0.35106363238113 * Marital_StatusDivorced
606633    +          +     -1.3414808583918 * Marital_StatusMarried
606634    +          +     1.40835320798486 * Marital_StatusSingle
606635    +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
606636    +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
606637    +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
606638    +        EducationGraduation  +      0.1746658332011 * EducationMaster
606639    +          +     0.48174546958393 * Marital_StatusDivorced
606640    +          +    -0.41416978858191 * Marital_StatusMarried
606641    +          +    -0.23376801546265 * Marital_StatusSingle
606642    +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
606643    +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
606644    +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
606645    +        EducationGraduation  +     0.68875064631577 * EducationMaster
606646    +          +    -0.67557643774246 * Marital_StatusDivorced
606647    +          +     1.63844045917367 * Marital_StatusMarried
606648    +          +    -0.70320960247699 * Marital_StatusSingle
606649    +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
606650    +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
606651    +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
606652    +        EducationGraduation  +    -0.68011360002443 * EducationMaster
606653    +          +    -0.11371453086883 * Marital_StatusDivorced
606654    +          +    -0.34226997176291 * Marital_StatusMarried
606655    +          +    -1.01568676685754 * Marital_StatusSingle
606656    +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
606657    +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
606658    +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
606659    +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
606660    +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
606661    +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
606662    +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
606663    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
606664    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
606665    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
606666    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
606667    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
606668    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
606669    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
606670    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
606671    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
606672    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
606673    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
606674    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
606675    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
606676    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
606677    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
606678    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
606679    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
606680    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
606681    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
606682    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
606683    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
606684    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
606685    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
606686    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
606687    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
606688    +END;
MPRINT(EM_DIAGRAM):   END;
606689    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
606690    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
606691    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
606692    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
606693    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
606694    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
606695    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
606696    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
606697    +END;
MPRINT(EM_DIAGRAM):   END;
606698    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
606699    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
606700    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
606701    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
606702    +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
606703    +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
606704    +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
606705    +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
606706    +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
606707    +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
606708    +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
606709    +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
606710    +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
606711    +          +    -0.87259051567474 * S_NumDealsPurchases
606712    +          +    -0.36454149529139 * S_NumDistPurchases
606713    +          +     0.12447759925061 * S_NumStorePurchases
606714    +          +    -1.08133487947367 * S_NumWebPurchases
606715    +          +    -0.49882157745454 * S_NumWebVisitsMonth
606716    +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
606717    +        S_RMntFrq  +    -0.01174101172444 * S_Recency
606718    +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
606719    +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
606720    +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
606721    +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
606722    +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
606723    +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
606724    +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
606725    +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
606726    +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
606727    +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
606728    +          +     2.23121497416403 * S_NumDealsPurchases
606729    +          +    -0.48674842191071 * S_NumDistPurchases
606730    +          +     1.77510728607544 * S_NumStorePurchases
606731    +          +     0.14647433155436 * S_NumWebPurchases
606732    +          +    -0.95892686924419 * S_NumWebVisitsMonth
606733    +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
606734    +        S_RMntFrq  +     2.46497777428475 * S_Recency
606735    +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
606736    +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
606737    +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
606738    +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
606739    +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
606740    +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
606741    +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
606742    +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
606743    +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
606744    +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
606745    +          +     0.14338855349611 * S_NumDealsPurchases
606746    +          +    -2.21071010829235 * S_NumDistPurchases
606747    +          +    -0.21795889348002 * S_NumStorePurchases
606748    +          +     1.98825087883535 * S_NumWebPurchases
606749    +          +     1.02482442531149 * S_NumWebVisitsMonth
606750    +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
606751    +        S_RMntFrq  +     -1.0288777281766 * S_Recency
606752    +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
606753    +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
606754    +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
606755    +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
606756    +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
606757    +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
606758    +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
606759    +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
606760    +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
606761    +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
606762    +          +     0.30041205661012 * S_NumDealsPurchases
606763    +          +    -0.63499849986918 * S_NumDistPurchases
606764    +          +    -0.34155713433714 * S_NumStorePurchases
606765    +          +    -1.14183354933936 * S_NumWebPurchases
606766    +          +    -0.42681980262973 * S_NumWebVisitsMonth
606767    +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
606768    +        S_RMntFrq  +     1.25852246467612 * S_Recency
606769    +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
606770    +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
606771    +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
606772    +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
606773    +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
606774    +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
606775    +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
606776    +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
606777    +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
606778    +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
606779    +          +    -0.21237915559831 * S_NumDealsPurchases
606780    +          +     0.48256923764182 * S_NumDistPurchases
606781    +          +    -0.45553093140641 * S_NumStorePurchases
606782    +          +      0.5593655963659 * S_NumWebPurchases
606783    +          +     0.27943768691188 * S_NumWebVisitsMonth
606784    +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
606785    +        S_RMntFrq  +    -1.62796011550484 * S_Recency
606786    +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
606787    +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
606788    +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
606789    +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
606790    +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
606791    +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
606792    +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
606793    +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
606794    +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
606795    +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
606796    +          +     2.38967021388062 * S_NumDealsPurchases
606797    +          +    -0.97722398866481 * S_NumDistPurchases
606798    +          +     1.57612333191312 * S_NumStorePurchases
606799    +          +    -0.75968679115983 * S_NumWebPurchases
606800    +          +    -0.64207187757251 * S_NumWebVisitsMonth
606801    +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
606802    +        S_RMntFrq  +     1.71313869798331 * S_Recency
606803    +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
606804    +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
606805    +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
606806    +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
606807    +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
606808    +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
606809    +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
606810    +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
606811    +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
606812    +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
606813    +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
606814    +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
606815    +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
606816    +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
606817    +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
606818    +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
606819    +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
606820    +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
606821    +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
606822    +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
606823    +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
606824    +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
606825    +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
606826    +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
606827    +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
606828    +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
606829    +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
606830    +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
606831    +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
606832    +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
606833    +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
606834    +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
606835    +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
606836    +        EducationGraduation  +      0.1073450284316 * EducationMaster
606837    +          +     0.96470902298142 * Marital_StatusDivorced
606838    +          +     0.94805959268314 * Marital_StatusMarried
606839    +          +     -0.6523948769616 * Marital_StatusSingle
606840    +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
606841    +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
606842    +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
606843    +        EducationGraduation  +    -1.34927753306064 * EducationMaster
606844    +          +      0.3918249505531 * Marital_StatusDivorced
606845    +          +    -0.00968091979586 * Marital_StatusMarried
606846    +          +     0.84615379885071 * Marital_StatusSingle
606847    +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
606848    +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
606849    +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
606850    +        EducationGraduation  +     -0.8672743321499 * EducationMaster
606851    +          +     1.14335160313191 * Marital_StatusDivorced
606852    +          +     0.50580517192175 * Marital_StatusMarried
606853    +          +     0.17264295020921 * Marital_StatusSingle
606854    +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
606855    +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
606856    +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
606857    +        EducationGraduation  +     1.95818378342783 * EducationMaster
606858    +          +    -0.11238504444225 * Marital_StatusDivorced
606859    +          +    -0.81348274043749 * Marital_StatusMarried
606860    +          +     0.46075415610001 * Marital_StatusSingle
606861    +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
606862    +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
606863    +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
606864    +        EducationGraduation  +     0.08396135672504 * EducationMaster
606865    +          +    -0.46342068701431 * Marital_StatusDivorced
606866    +          +    -0.41667845270204 * Marital_StatusMarried
606867    +          +    -0.47166707496281 * Marital_StatusSingle
606868    +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
606869    +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
606870    +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
606871    +        EducationGraduation  +     0.36656103863186 * EducationMaster
606872    +          +    -0.45376613787812 * Marital_StatusDivorced
606873    +          +     0.01337046049801 * Marital_StatusMarried
606874    +          +    -0.92811489484121 * Marital_StatusSingle
606875    +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
606876    +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
606877    +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
606878    +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
606879    +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
606880    +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
606881    +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
606882    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
606883    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
606884    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
606885    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
606886    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
606887    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
606888    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
606889    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
606890    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
606891    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
606892    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
606893    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
606894    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
606895    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
606896    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
606897    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
606898    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
606899    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
606900    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
606901    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
606902    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
606903    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
606904    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
606905    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
606906    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
606907    +END;
MPRINT(EM_DIAGRAM):   END;
606908    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
606909    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
606910    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
606911    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
606912    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
606913    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
606914    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
606915    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
606916    +END;
MPRINT(EM_DIAGRAM):   END;
606917    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
606918    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
606919    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
606920    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
606921    +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
606922    +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
606923    +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
606924    +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
606925    +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
606926    +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
606927    +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
606928    +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
606929    +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
606930    +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
606931    +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
606932    +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
606933    +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
606934    +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
606935    +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
606936    +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
606937    +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
606938    +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
606939    +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
606940    +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
606941    +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
606942    +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
606943    +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
606944    +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
606945    +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
606946    +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
606947    +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
606948    +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
606949    +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
606950    +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
606951    +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
606952    +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
606953    +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
606954    +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
606955    +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
606956    +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
606957    +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
606958    +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
606959    +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
606960    +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
606961    +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
606962    +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
606963    +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
606964    +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
606965    +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
606966    +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
606967    +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
606968    +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
606969    +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
606970    +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
606971    +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
606972    +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
606973    +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
606974    +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
606975    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
606976    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
606977    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
606978    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
606979    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
606980    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
606981    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
606982    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
606983    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
606984    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
606985    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
606986    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
606987    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
606988    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
606989    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
606990    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
606991    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
606992    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
606993    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
606994    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
606995    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
606996    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
606997    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
606998    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
606999    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
607000    +END;
MPRINT(EM_DIAGRAM):   END;
607001    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
607002    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
607003    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
607004    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
607005    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
607006    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
607007    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
607008    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
607009    +END;
MPRINT(EM_DIAGRAM):   END;
607010    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
607011    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
607012    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
607013    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
607014    +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
607015    +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
607016    +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
607017    +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
607018    +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
607019    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
607020    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
607021    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
607022    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
607023    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
607024    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
607025    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
607026    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
607027    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
607028    +END;
MPRINT(EM_DIAGRAM):   END;
607029    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
607030    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
607031    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
607032    +END;
MPRINT(EM_DIAGRAM):   END;
607033    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
607034    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
607035    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
607036    +END;
MPRINT(EM_DIAGRAM):   END;
607037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
607038    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
607039    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
607040    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
607041    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
607042    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
607043    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
607044    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
607045    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
607046    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
607047    +END;
MPRINT(EM_DIAGRAM):   END;
607048    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
607049    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
607050    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
607051    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
607052     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
607053     quit;
607054     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
607055     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
607056     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
607057     retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
607058     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
607059     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607060     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
607061     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607062     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607063     proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
607064     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607065     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607066     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
607067     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
607068     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
607069     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607070     proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
607071     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607072     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
607073     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607074     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607075     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
607076     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
607077     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607078     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607079     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
607080     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
607080   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3727 rows and 5 columns.

607081     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607082     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
607083     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3727 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 3727 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607084     filename _pref
607084   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
607085     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
607086     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
607087    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
607088    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
607089    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
607090    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
607091    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
607092    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
607093     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
607094     quit;
607095     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
607096     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
607097     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
607098     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
607099     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
607100     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607101     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
607102     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607103     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607104     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
607105     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607106     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607107     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
607108     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
607109     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
607110     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607111     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
607112     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607113     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
607114     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607115     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      

607116     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
607117     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
607118     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607119     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607120     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
607121     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
607121   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

607122     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607123     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
607124     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 3731 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607125     filename _pref
607125   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
607126     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
607127     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
607128    +
607129    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
607130    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
607130   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
607131    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
607132    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
607133    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
607134    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
607135    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
607136     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
607137     quit;
607138     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
607139     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
607140     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
607141     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
607142     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
607143     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607144     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
607145     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607146     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607147     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
607148     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607149     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607150     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
607151     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
607152     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
607153     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607154     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
607155     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607156     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
607157     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607158     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

607159     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
607160     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
607161     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607162     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607163     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
607164     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
607164   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

607165     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607166     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
607167     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 3770 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607168     filename _pref
607168   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
607169     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
607170     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
607171    +
607172    +
607173    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
607174    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
607175    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
607176    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
607177    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
607178    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
607179    +
607180    +
607181    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
607182    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
607183    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
607184    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
607185    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
607186    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
607187    +
607188    +
607189    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
607190    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
607191    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
607192    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
607193    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
607194    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
607195    +
607196    +
607197    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
607198    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
607199    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
607200    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
607201    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
607202    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
607203    +
607204    +
607205    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
607206    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
607207    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
607208    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
607209    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
607210    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
607211    +
607212    +
607213    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
607214    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
607215    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
607216    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
607217    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
607218    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
607219    +
607220    +
607221    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
607222    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
607223    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
607224    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
607225    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
607226    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
607227    +
607228    +
607229    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
607230    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
607231    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
607232    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
607233    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
607234    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
607235    +if
607236    +_FILTERNORM1 not in ( '.')
607237    + and
607238    +_FILTERNORM2 not in ( '.')
607239    + and
607240    +_FILTERNORM3 not in ( '.')
607241    + and
607242    +_FILTERNORM4 not in ( '.')
607243    + and
607244    +_FILTERNORM5 not in ( '.')
607245    + and
607246    +_FILTERNORM6 not in ( '.')
607247    + and
607248    +_FILTERNORM7 not in ( ' ')
607249    + and
607250    +_FILTERNORM8 not in ( ' ')
607251    +and
607252    +( Dt_Customer ne .)
607253    +and ( Income ne . and (Income<=107000))
607254    +and ( Kidhome ne .)
607255    +and ( MntFishProducts ne .)
607256    +and ( MntFruits ne .)
607257    +and ( MntGoldProds ne .)
607258    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
607259    +and ( MntSweetProducts ne .)
607260    +and ( MntWines ne .)
607261    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
607262    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
607263    +and ( NumStorePurchases ne .)
607264    +and ( NumWebPurchases ne .)
607265    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
607266    +and ( Recency ne .)
607267    +and ( Teenhome ne .)
607268    +and ( Year_Birth ne .)
607269    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
607270    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
607271    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
607272    +end;
MPRINT(EM_DIAGRAM):   end;
607273    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
607274    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
607275     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
607276     quit;
607277     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
607278     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
607279     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
607280     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
607281     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
607282     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607283     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
607284     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607285     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607286     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
607287     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607288     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607289     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
607290     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
607291     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
607292     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607293     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
607294     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

607295     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
607296     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607297     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607298     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
607299     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
607300     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
607301     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607302     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
607303     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
607303   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

607304     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

607305     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
607306     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 3836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607307     %macro varDept(fcmpdata=,id=);
607308     %global nobs&id scoreFlag&id;
607309     %let scoreFlag&id = 0;
607310     %if &id=1 or ^&fcmpStart %then %do;
607311     proc sort data=&fcmpdata out=_temp&id nodupkey;
607312     by NAME;
607313     where id=&id and LHS in( %let j=1;
607314     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
607315     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
607316     "&var" %let j = %eval(&j+1);
607317     %end;
607318     );
607319     run;
607320     %let dsid = %sysfunc(open(_temp&id));
607321     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
607322     %let dsid = %sysfunc(close(&dsid));
607323     %if &&nobs&id %then %do;
607324     %let scoreFlag&id = 1;
607325     %let fcmpStart = 1;
607326     %end;
607327     %else %let fcmpStart = 0;
607328     %end;
607329     %else %do;
607330     proc sort data=&fcmpdata out=_tempid;
607331     where id=&id;
607332     by LHS;
607333     run;
607334     %let dsid = %sysfunc(open(_tempid));
607335     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
607336     %let dsid = %sysfunc(close(&dsid));
607337     %if ^&&nobs&id %then %do;
607338     proc datasets lib=work nolist;
607339     delete _tempid;
607340     run;
607341     quit;
607342     %end;
607343     %else %do;
607344     data _tempAll;
607345     set %let j=%eval(&id-1);
607346     %do x=1 %to &j;
607347     %if &&nobs&x %then %do;
607348     _temp&x %end;
607349     %end;
607350     ;
607351     run;
607352     proc sql;
607353     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
607353   ! work._tempid p2 where p.name=p2.lhs;
607354     quit;
607355     data _temp&id;
607356     set _temp&id;
607357     where LHS ne '' and NAME ne '' and Node ne '';
607358     run;
607359     proc datasets lib=work nolist;
607360     delete _tempAll;
607361     run;
607362     %let dsid = %sysfunc(open(_temp&id));
607363     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
607364     %let dsid = %sysfunc(close(&dsid));
607365     %if ^&&nobs&id %then %do;
607366     proc datasets lib=work nolist;
607367     delete _temp&id;
607368     run;
607369     quit;
607370     %end;
607371     %else %do;
607372     %let scoreFlag&id = 1;
607373     data _temp&id;
607374     set _temp&id;
607375     where LHS ne NAME and node ne '';
607376     run;
607377     %let dsid = %sysfunc(open(_temp&id));
607378     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
607379     %let dsid = %sysfunc(close(&dsid));
607380     %if ^&&nobs&id %then %do;
607381     proc datasets lib=work nolist;
607382     delete _temp&id;
607383     run;
607384     quit;
607385     %end;
607386     %else %do;
607387     proc sort data=_temp&id nodupkey;
607388     by LHS NAME;
607389     run;
607390     %end;
607391     %end;
607392     %end;
607393     %end;
607394     %mend varDept;
607395     %macro optCode(outdata=fcmpdata);
607396     %global fcmpStart;
607397     %let fcmpStart = 0;
607398     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
607399     %let NumNodes=9;
607400     %do k=1 %to &NumNodes;
607401     %vardept(fcmpdata=&outdata, id=&k);
607402     %end;
607403     %mend optCode;
607404     %optcode(outData=EMWS8.Ensmbl32_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 197 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 142 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 55 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 59 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
The SAS System

      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 98 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

607405     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
607406     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
607407     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
607408     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607409     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
607410     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
607411     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
607412     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607413     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
607414     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
607414   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

607415     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

607416     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
607417     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
607418     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

607419     filename _pref
607419   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
607420     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
607421     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
607422    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
607423    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
607424    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
607425    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
607426    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
607427    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
607428    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
607429    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
607430    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
607431    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
607432    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
607433    +LENGTH _WARN_ $4
607434    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
607435    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
607436    +
607437    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
607438    +
607439    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
607440    +
607441    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
607442    +
607443    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
607444    +
607445    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
607446    +
607447    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
607448    +
607449    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
607450    +
607451    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
607452    +
607453    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
607454    +
607455    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
607456    +
607457    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
607458    +
607459    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
607460    +
607461    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
607462    +
607463    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
607464    +
607465    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
607466    +
607467    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
607468    +
607469    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
607470    +
607471    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
607472    +
607473    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
607474    +
607475    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
607476    +
607477    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
607478    +
607479    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
607480    +
607481    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
607482    +
607483    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
607484    +
607485    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
607486    +
607487    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
607488    +
607489    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
607490    +
607491    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
607492    +
607493    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
607494    +
607495    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
607496    +
607497    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
607498    +
607499    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
607500    +
607501    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
607502    +
607503    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
607504    +
607505    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
607506    +
607507    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
607508    +
607509    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
607510    +
607511    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
607512    +
607513    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
607514    +
607515    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
607516    +
607517    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
607518    +
607519    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
607520    +
607521    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
607522    +
607523    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
607524    +
607525    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
607526    +
607527    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
607528    +
607529    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
607530    +
607531    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
607532    +
607533    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
607534    +
607535    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
607536    +
607537    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
607538    +
607539    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
607540    +
607541    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
607542    +
607543    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
607544    +
607545    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
607546    +
607547    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
607548    +
607549    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
607550    +
607551    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
607552    +
607553    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
607554    +
607555    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
607556    +
607557    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
607558    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
607559    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
607560    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
607561    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
607562    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607563    +end;
MPRINT(EM_DIAGRAM):   end;
607564    +else do;
MPRINT(EM_DIAGRAM):   else do;
607565    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
607566    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
607567    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
607568    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
607569    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
607570    +   end;
MPRINT(EM_DIAGRAM):   end;
607571    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
607572    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
607573    +   end;
MPRINT(EM_DIAGRAM):   end;
607574    +   else do;
MPRINT(EM_DIAGRAM):   else do;
607575    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
607576    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
607577    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607578    +   end;
MPRINT(EM_DIAGRAM):   end;
607579    +end;
MPRINT(EM_DIAGRAM):   end;
607580    +
607581    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
607582    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
607583    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
607584    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
607585    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
607586    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607587    +end;
MPRINT(EM_DIAGRAM):   end;
607588    +else do;
MPRINT(EM_DIAGRAM):   else do;
607589    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
607590    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
607591    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
607592    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
607593    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
607594    +   end;
MPRINT(EM_DIAGRAM):   end;
607595    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
607596    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
607597    +   end;
MPRINT(EM_DIAGRAM):   end;
607598    +   else do;
MPRINT(EM_DIAGRAM):   else do;
607599    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
607600    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
607601    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607602    +   end;
MPRINT(EM_DIAGRAM):   end;
607603    +end;
MPRINT(EM_DIAGRAM):   end;
607604    +
607605    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
607606    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
607607    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
607608    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
607609    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
607610    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607611    +end;
MPRINT(EM_DIAGRAM):   end;
607612    +else do;
MPRINT(EM_DIAGRAM):   else do;
607613    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
607614    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
607615    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
607616    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
607617    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
607618    +   end;
MPRINT(EM_DIAGRAM):   end;
607619    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
607620    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
607621    +   end;
MPRINT(EM_DIAGRAM):   end;
607622    +   else do;
MPRINT(EM_DIAGRAM):   else do;
607623    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
607624    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
607625    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607626    +   end;
MPRINT(EM_DIAGRAM):   end;
607627    +end;
MPRINT(EM_DIAGRAM):   end;
607628    +
607629    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
607630    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
607631    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
607632    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
607633    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
607634    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607635    +end;
MPRINT(EM_DIAGRAM):   end;
607636    +else do;
MPRINT(EM_DIAGRAM):   else do;
607637    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
607638    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
607639    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
607640    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
607641    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
607642    +   end;
MPRINT(EM_DIAGRAM):   end;
607643    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
607644    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
607645    +   end;
MPRINT(EM_DIAGRAM):   end;
607646    +   else do;
MPRINT(EM_DIAGRAM):   else do;
607647    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
607648    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
607649    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607650    +   end;
MPRINT(EM_DIAGRAM):   end;
607651    +end;
MPRINT(EM_DIAGRAM):   end;
607652    +
607653    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
607654    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
607655    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
607656    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
607657    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
607658    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607659    +end;
MPRINT(EM_DIAGRAM):   end;
607660    +else do;
MPRINT(EM_DIAGRAM):   else do;
607661    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
607662    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
607663    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
607664    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
607665    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
607666    +   end;
MPRINT(EM_DIAGRAM):   end;
607667    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
607668    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
607669    +   end;
MPRINT(EM_DIAGRAM):   end;
607670    +   else do;
MPRINT(EM_DIAGRAM):   else do;
607671    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
607672    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
607673    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607674    +   end;
MPRINT(EM_DIAGRAM):   end;
607675    +end;
MPRINT(EM_DIAGRAM):   end;
607676    +
607677    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
607678    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
607679    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
607680    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
607681    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
607682    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607683    +end;
MPRINT(EM_DIAGRAM):   end;
607684    +else do;
MPRINT(EM_DIAGRAM):   else do;
607685    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
607686    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
607687    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
607688    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
607689    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
607690    +   end;
MPRINT(EM_DIAGRAM):   end;
607691    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
607692    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
607693    +   end;
MPRINT(EM_DIAGRAM):   end;
607694    +   else do;
MPRINT(EM_DIAGRAM):   else do;
607695    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
607696    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
607697    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607698    +   end;
MPRINT(EM_DIAGRAM):   end;
607699    +end;
MPRINT(EM_DIAGRAM):   end;
607700    +
607701    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
607702    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
607703    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
607704    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
607705    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
607706    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607707    +end;
MPRINT(EM_DIAGRAM):   end;
607708    +else do;
MPRINT(EM_DIAGRAM):   else do;
607709    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
607710    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
607711    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
607712    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
607713    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
607714    +   end;
MPRINT(EM_DIAGRAM):   end;
607715    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
607716    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
607717    +   end;
MPRINT(EM_DIAGRAM):   end;
607718    +   else do;
MPRINT(EM_DIAGRAM):   else do;
607719    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
607720    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
607721    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607722    +   end;
MPRINT(EM_DIAGRAM):   end;
607723    +end;
MPRINT(EM_DIAGRAM):   end;
607724    +
607725    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
607726    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
607727    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
607728    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
607729    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
607730    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
607731    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
607732    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
607733    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
607734    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
607735    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
607736    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
607737    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
607738    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607739    +end;
MPRINT(EM_DIAGRAM):   end;
607740    +else do;
MPRINT(EM_DIAGRAM):   else do;
607741    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
607742    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
607743    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
607744    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
607745    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
607746    +   end;
MPRINT(EM_DIAGRAM):   end;
607747    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
607748    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
607749    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
607750    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
607751    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
607752    +   end;
MPRINT(EM_DIAGRAM):   end;
607753    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
607754    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
607755    +   end;
MPRINT(EM_DIAGRAM):   end;
607756    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
607757    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
607758    +   end;
MPRINT(EM_DIAGRAM):   end;
607759    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
607760    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
607761    +   end;
MPRINT(EM_DIAGRAM):   end;
607762    +   else do;
MPRINT(EM_DIAGRAM):   else do;
607763    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
607764    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
607765    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
607766    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
607767    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
607768    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607769    +   end;
MPRINT(EM_DIAGRAM):   end;
607770    +end;
MPRINT(EM_DIAGRAM):   end;
607771    +
607772    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
607773    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
607774    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
607775    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
607776    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
607777    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
607778    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
607779    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
607780    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
607781    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
607782    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
607783    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
607784    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
607785    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
607786    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607787    +end;
MPRINT(EM_DIAGRAM):   end;
607788    +else do;
MPRINT(EM_DIAGRAM):   else do;
607789    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
607790    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
607791    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
607792    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
607793    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
607794    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
607795    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
607796    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
607797    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
607798    +         end;
MPRINT(EM_DIAGRAM):   end;
607799    +         else do;
MPRINT(EM_DIAGRAM):   else do;
607800    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
607801    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
607802    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
607803    +            end;
MPRINT(EM_DIAGRAM):   end;
607804    +         end;
MPRINT(EM_DIAGRAM):   end;
607805    +      end;
MPRINT(EM_DIAGRAM):   end;
607806    +      else do;
MPRINT(EM_DIAGRAM):   else do;
607807    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
607808    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
607809    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
607810    +         end;
MPRINT(EM_DIAGRAM):   end;
607811    +      end;
MPRINT(EM_DIAGRAM):   end;
607812    +   end;
MPRINT(EM_DIAGRAM):   end;
607813    +   else do;
MPRINT(EM_DIAGRAM):   else do;
607814    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
607815    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
607816    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
607817    +      end;
MPRINT(EM_DIAGRAM):   end;
607818    +      else do;
MPRINT(EM_DIAGRAM):   else do;
607819    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
607820    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
607821    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
607822    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
607823    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
607824    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
607825    +         end;
MPRINT(EM_DIAGRAM):   end;
607826    +      end;
MPRINT(EM_DIAGRAM):   end;
607827    +   end;
MPRINT(EM_DIAGRAM):   end;
607828    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
607829    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
607830    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
607831    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
607832    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
607833    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
607834    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607835    +   end;
MPRINT(EM_DIAGRAM):   end;
607836    +end;
MPRINT(EM_DIAGRAM):   end;
607837    +
607838    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
607839    +*** Checking missing input Interval
607840    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
607841    +
607842    +IF NMISS(
607843    +   AcceptedCmpTotal ,
607844    +   Age ,
607845    +   Frq ,
607846    +   Income ,
607847    +   Kidhome ,
607848    +   Mnt ,
607849    +   MntFishProducts ,
607850    +   MntFruits ,
607851    +   MntGoldProds ,
607852    +   MntMeatProducts ,
607853    +   MntSweetProducts ,
607854    +   MntWines ,
607855    +   MonthsAsCustomer ,
607856    +   NumCatalogPurchases ,
607857    +   NumDealsPurchases ,
607858    +   NumDistPurchases ,
607859    +   NumStorePurchases ,
607860    +   NumWebPurchases ,
607861    +   NumWebVisitsMonth ,
607862    +   RFMstat ,
607863    +   RMntFrq ,
607864    +   Recency ,
607865    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
607866    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
607867    +
607868    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
607869    +END;
MPRINT(EM_DIAGRAM):   END;
607870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
607871    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
607872    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
607873    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
607874    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
607875    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
607876    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
607877    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
607878    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
607879    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
607880    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
607881    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
607882    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
607883    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
607884    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
607885    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
607886    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
607887    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
607888    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
607889    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
607890    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
607891    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
607892    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
607893    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
607894    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
607895    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
607896    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
607897    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
607898    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
607899    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
607900    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
607901    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
607902    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
607903    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
607904    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
607905    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
607906    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
607907    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
607908    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
607909    +END;
MPRINT(EM_DIAGRAM):   END;
607910    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
607911    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
607912    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
607913    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
607914    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
607915    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
607916    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
607917    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
607918    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
607919    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
607920    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
607921    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
607922    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
607923    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
607924    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
607925    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
607926    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
607927    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
607928    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
607929    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
607930    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
607931    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
607932    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
607933    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
607934    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
607935    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
607936    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
607937    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
607938    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
607939    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
607940    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
607941    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
607942    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
607943    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
607944    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
607945    +   ELSE S_NumCatalogPurchases
607946    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
607947    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
607948    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
607949    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
607950    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
607951    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
607952    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
607953    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
607954    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
607955    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
607956    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
607957    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
607958    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
607959    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
607960    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
607961    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
607962    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
607963    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
607964    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
607965    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
607966    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
607967    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
607968    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
607969    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
607970    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
607971    +END;
MPRINT(EM_DIAGRAM):   END;
607972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
607973    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
607974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
607975    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
607976    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
607977    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
607978    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
607979    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
607980    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
607981    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
607982    +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
607983    +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
607984    +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
607985    +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
607986    +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
607987    +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
607988    +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
607989    +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
607990    +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
607991    +          +     0.89422627895323 * S_NumDealsPurchases
607992    +          +    -0.13304125929765 * S_NumDistPurchases
607993    +          +    -1.04568442570811 * S_NumStorePurchases
607994    +          +    -0.28677765126751 * S_NumWebPurchases
607995    +          +      1.2327638737509 * S_NumWebVisitsMonth
607996    +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
607997    +        S_RMntFrq  +    -0.86930969765816 * S_Recency
607998    +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
607999    +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
608000    +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
608001    +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
608002    +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
608003    +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
608004    +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
608005    +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
608006    +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
608007    +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
608008    +          +     0.04224590196535 * S_NumDealsPurchases
608009    +          +     0.76554742700113 * S_NumDistPurchases
608010    +          +    -0.49155496870812 * S_NumStorePurchases
608011    +          +     0.59606812744403 * S_NumWebPurchases
608012    +          +     1.86809286276405 * S_NumWebVisitsMonth
608013    +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
608014    +        S_RMntFrq  +    -2.09222283465666 * S_Recency
608015    +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
608016    +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
608017    +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
608018    +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
608019    +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
608020    +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
608021    +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
608022    +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
608023    +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
608024    +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
608025    +          +    -0.04866536993486 * S_NumDealsPurchases
608026    +          +    -0.53535979020214 * S_NumDistPurchases
608027    +          +     2.20634071253676 * S_NumStorePurchases
608028    +          +      0.6164564989007 * S_NumWebPurchases
608029    +          +    -0.43396314395263 * S_NumWebVisitsMonth
608030    +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
608031    +        S_RMntFrq  +     2.37293441098349 * S_Recency
608032    +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
608033    +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
608034    +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
608035    +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
608036    +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
608037    +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
608038    +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
608039    +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
608040    +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
608041    +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
608042    +          +     1.37461255707863 * S_NumDealsPurchases
608043    +          +    -0.17684775000818 * S_NumDistPurchases
608044    +          +    -0.62755623855535 * S_NumStorePurchases
608045    +          +    -1.46551649022657 * S_NumWebPurchases
608046    +          +     3.35784247878638 * S_NumWebVisitsMonth
608047    +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
608048    +        S_RMntFrq  +    -2.61971612923471 * S_Recency
608049    +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
608050    +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
608051    +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
608052    +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
608053    +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
608054    +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
608055    +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
608056    +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
608057    +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
608058    +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
608059    +          +    -0.76256677907121 * S_NumDealsPurchases
608060    +          +    -0.31591571751692 * S_NumDistPurchases
608061    +          +      0.0506832614089 * S_NumStorePurchases
608062    +          +      1.4636796923764 * S_NumWebPurchases
608063    +          +     0.37743519705036 * S_NumWebVisitsMonth
608064    +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
608065    +        S_RMntFrq  +     0.16854775832723 * S_Recency
608066    +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
608067    +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
608068    +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
608069    +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
608070    +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
608071    +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
608072    +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
608073    +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
608074    +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
608075    +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
608076    +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
608077    +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
608078    +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
608079    +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
608080    +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
608081    +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
608082    +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
608083    +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
608084    +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
608085    +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
608086    +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
608087    +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
608088    +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
608089    +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
608090    +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
608091    +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
608092    +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
608093    +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
608094    +        EducationGraduation  +    -0.37141290775302 * EducationMaster
608095    +          +     0.68641668264565 * Marital_StatusDivorced
608096    +          +    -0.81586871439732 * Marital_StatusMarried
608097    +          +     0.63758920518451 * Marital_StatusSingle
608098    +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
608099    +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
608100    +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
608101    +        EducationGraduation  +     -0.4412391934844 * EducationMaster
608102    +          +     0.05137560133238 * Marital_StatusDivorced
608103    +          +    -2.24401993266209 * Marital_StatusMarried
608104    +          +     1.57359386216115 * Marital_StatusSingle
608105    +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
608106    +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
608107    +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
608108    +        EducationGraduation  +     0.61492669859334 * EducationMaster
608109    +          +     -1.0649987815942 * Marital_StatusDivorced
608110    +          +     0.76065111692388 * Marital_StatusMarried
608111    +          +    -0.21694149754801 * Marital_StatusSingle
608112    +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
608113    +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
608114    +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
608115    +        EducationGraduation  +     0.04208620358211 * EducationMaster
608116    +          +     2.02155453548328 * Marital_StatusDivorced
608117    +          +    -2.60190649735306 * Marital_StatusMarried
608118    +          +     1.09149388354927 * Marital_StatusSingle
608119    +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
608120    +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
608121    +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
608122    +        EducationGraduation  +    -0.60853091001689 * EducationMaster
608123    +          +     0.66315970650309 * Marital_StatusDivorced
608124    +          +    -1.20476729758152 * Marital_StatusMarried
608125    +          +     0.56175027826397 * Marital_StatusSingle
608126    +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
608127    +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
608128    +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
608129    +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
608130    +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
608131    +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
608132    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
608133    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
608134    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
608135    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
608136    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
608137    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
608138    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
608139    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
608140    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
608141    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
608142    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
608143    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
608144    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
608145    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
608146    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
608147    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
608148    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
608149    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
608150    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
608151    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
608152    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
608153    +END;
MPRINT(EM_DIAGRAM):   END;
608154    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
608155    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
608156    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
608157    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
608158    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
608159    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
608160    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
608161    +END;
MPRINT(EM_DIAGRAM):   END;
608162    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
608163    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
608164    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
608165    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
608166    +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
608167    +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
608168    +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
608169    +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
608170    +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
608171    +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
608172    +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
608173    +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
608174    +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
608175    +          +     1.50005927423985 * S_NumDealsPurchases
608176    +          +      0.5590536933569 * S_NumDistPurchases
608177    +          +    -0.61757824339318 * S_NumStorePurchases
608178    +          +     0.37259686538158 * S_NumWebPurchases
608179    +          +     2.59725437895564 * S_NumWebVisitsMonth
608180    +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
608181    +        S_RMntFrq  +    -2.38795796980324 * S_Recency
608182    +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
608183    +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
608184    +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
608185    +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
608186    +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
608187    +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
608188    +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
608189    +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
608190    +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
608191    +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
608192    +          +    -0.09282222088797 * S_NumDealsPurchases
608193    +          +     0.10726247938321 * S_NumDistPurchases
608194    +          +     -1.1235971458527 * S_NumStorePurchases
608195    +          +    -0.78304387839877 * S_NumWebPurchases
608196    +          +    -0.44139243179956 * S_NumWebVisitsMonth
608197    +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
608198    +        S_RMntFrq  +     2.19072220135069 * S_Recency
608199    +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
608200    +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
608201    +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
608202    +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
608203    +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
608204    +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
608205    +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
608206    +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
608207    +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
608208    +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
608209    +          +     0.35349185459988 * S_NumDealsPurchases
608210    +          +     0.06853677714859 * S_NumDistPurchases
608211    +          +    -1.47546012999338 * S_NumStorePurchases
608212    +          +     0.20926435398916 * S_NumWebPurchases
608213    +          +    -1.00535683639093 * S_NumWebVisitsMonth
608214    +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
608215    +        S_RMntFrq  +    -1.59138379954757 * S_Recency
608216    +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
608217    +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
608218    +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
608219    +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
608220    +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
608221    +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
608222    +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
608223    +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
608224    +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
608225    +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
608226    +          +      0.3873586120272 * S_NumDealsPurchases
608227    +          +     0.25911651157596 * S_NumDistPurchases
608228    +          +     1.58922489084287 * S_NumStorePurchases
608229    +          +     0.49041797743368 * S_NumWebPurchases
608230    +          +     -1.5425586871929 * S_NumWebVisitsMonth
608231    +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
608232    +        S_RMntFrq  +     1.03099569333498 * S_Recency
608233    +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
608234    +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
608235    +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
608236    +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
608237    +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
608238    +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
608239    +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
608240    +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
608241    +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
608242    +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
608243    +          +    -0.60830880287865 * S_NumDealsPurchases
608244    +          +      0.0745331267194 * S_NumDistPurchases
608245    +          +    -1.39472448256952 * S_NumStorePurchases
608246    +          +     1.95372179969087 * S_NumWebPurchases
608247    +          +    -0.63307356390404 * S_NumWebVisitsMonth
608248    +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
608249    +        S_RMntFrq  +    -0.29197897313114 * S_Recency
608250    +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
608251    +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
608252    +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
608253    +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
608254    +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
608255    +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
608256    +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
608257    +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
608258    +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
608259    +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
608260    +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
608261    +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
608262    +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
608263    +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
608264    +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
608265    +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
608266    +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
608267    +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
608268    +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
608269    +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
608270    +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
608271    +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
608272    +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
608273    +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
608274    +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
608275    +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
608276    +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
608277    +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
608278    +        EducationGraduation  +    -1.16900224373137 * EducationMaster
608279    +          +    -1.33377871643323 * Marital_StatusDivorced
608280    +          +    -0.87184228840898 * Marital_StatusMarried
608281    +          +     1.41223186340257 * Marital_StatusSingle
608282    +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
608283    +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
608284    +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
608285    +        EducationGraduation  +     0.38341272155343 * EducationMaster
608286    +          +    -0.21479890935233 * Marital_StatusDivorced
608287    +          +     -0.0025459519579 * Marital_StatusMarried
608288    +          +     1.33900491702264 * Marital_StatusSingle
608289    +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
608290    +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
608291    +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
608292    +        EducationGraduation  +     0.60739269725685 * EducationMaster
608293    +          +    -0.38307267471999 * Marital_StatusDivorced
608294    +          +     0.97088969451415 * Marital_StatusMarried
608295    +          +    -0.28578224473381 * Marital_StatusSingle
608296    +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
608297    +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
608298    +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
608299    +        EducationGraduation  +     0.14160673378252 * EducationMaster
608300    +          +    -1.42229401093569 * Marital_StatusDivorced
608301    +          +      0.7234508382397 * Marital_StatusMarried
608302    +          +    -0.29062202974628 * Marital_StatusSingle
608303    +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
608304    +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
608305    +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
608306    +        EducationGraduation  +     -0.7118631990538 * EducationMaster
608307    +          +    -0.99067637207205 * Marital_StatusDivorced
608308    +          +    -0.50245902142079 * Marital_StatusMarried
608309    +          +     0.54214494533793 * Marital_StatusSingle
608310    +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
608311    +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
608312    +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
608313    +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
608314    +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
608315    +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
608316    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
608317    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
608318    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
608319    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
608320    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
608321    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
608322    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
608323    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
608324    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
608325    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
608326    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
608327    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
608328    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
608329    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
608330    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
608331    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
608332    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
608333    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
608334    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
608335    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
608336    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
608337    +END;
MPRINT(EM_DIAGRAM):   END;
608338    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
608339    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
608340    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
608341    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
608342    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
608343    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
608344    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
608345    +END;
MPRINT(EM_DIAGRAM):   END;
608346    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
608347    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
608348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
608349    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
608350    +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
608351    +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
608352    +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
608353    +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
608354    +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
608355    +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
608356    +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
608357    +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
608358    +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
608359    +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
608360    +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
608361    +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
608362    +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
608363    +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
608364    +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
608365    +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
608366    +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
608367    +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
608368    +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
608369    +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
608370    +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
608371    +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
608372    +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
608373    +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
608374    +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
608375    +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
608376    +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
608377    +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
608378    +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
608379    +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
608380    +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
608381    +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
608382    +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
608383    +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
608384    +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
608385    +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
608386    +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
608387    +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
608388    +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
608389    +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
608390    +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
608391    +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
608392    +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
608393    +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
608394    +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
608395    +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
608396    +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
608397    +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
608398    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
608399    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
608400    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
608401    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
608402    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
608403    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
608404    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
608405    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
608406    +END;
MPRINT(EM_DIAGRAM):   END;
608407    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
608408    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
608409    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
608410    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
608411    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
608412    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
608413    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
608414    +END;
MPRINT(EM_DIAGRAM):   END;
608415    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
608416    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
608417    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
608418    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
608419    +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
608420    +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
608421    +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
608422    +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
608423    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
608424    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
608425    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
608426    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
608427    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
608428    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
608429    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
608430    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
608431    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
608432    +END;
MPRINT(EM_DIAGRAM):   END;
608433    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
608434    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
608435    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
608436    +END;
MPRINT(EM_DIAGRAM):   END;
608437    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
608438    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
608439    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
608440    +END;
MPRINT(EM_DIAGRAM):   END;
608441    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
608442    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
608443    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
608444    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
608445    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
608446    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
608447    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
608448    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
608449    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
608450    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
608451    +END;
MPRINT(EM_DIAGRAM):   END;
608452    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
608453    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
608454    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
608455    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
608456     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
608457     quit;
608458     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
608459     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
608460     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
608461     retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
608462     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
608463     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

608464     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
608465     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608466     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

608467     proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
608468     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608469     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608470     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
608471     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
608472     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
608473     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608474     proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
608475     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

608476     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
608477     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608478     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

608479     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
608480     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
608481     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608482     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608483     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
608484     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
608484   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.

608485     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608486     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
608487     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

608488     filename _pref
608488   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
608489     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
608490     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
608491    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
608492    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
608493    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
608494    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
608495    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
608496    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
608497     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
608498     quit;
608499     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
608500     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
608501     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
608502     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
608503     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
608504     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608505     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
608506     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608507     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608508     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
608509     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608510     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608511     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
608512     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
608513     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
608514     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

608515     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
608516     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

608517     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
608518     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608519     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

608520     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
608521     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
608522     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608523     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608524     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
608525     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
608525   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

608526     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608527     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
608528     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608529     filename _pref
608529   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
608530     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
608531     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
608532    +
608533    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
608534    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
608534   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
608535    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
608536    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
608537    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
608538    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
608539    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
608540     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
608541     quit;
608542     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
608543     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
608544     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
608545     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
608546     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
608547     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

608548     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
608549     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608550     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608551     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
608552     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608553     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608554     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
608555     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
608556     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
608557     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608558     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
608559     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

608560     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
608561     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608562     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608563     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
608564     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
608565     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608566     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608567     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
608568     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
608568   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

608569     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

608570     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
608571     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608572     filename _pref
608572   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
608573     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
608574     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
608575    +
608576    +
608577    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
608578    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
608579    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
608580    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
608581    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
608582    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
608583    +
608584    +
608585    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
608586    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
608587    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
608588    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
608589    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
608590    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
608591    +
608592    +
608593    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
608594    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
608595    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
608596    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
608597    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
608598    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
608599    +
608600    +
608601    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
608602    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
608603    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
608604    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
608605    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
608606    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
608607    +
608608    +
608609    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
608610    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
608611    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
608612    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
608613    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
608614    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
608615    +
608616    +
608617    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
608618    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
608619    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
608620    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
608621    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
608622    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
608623    +
608624    +
608625    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
608626    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
608627    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
608628    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
608629    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
608630    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
608631    +
608632    +
608633    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
608634    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
608635    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
608636    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
608637    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
608638    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
608639    +if
608640    +_FILTERNORM1 not in ( '.')
608641    + and
608642    +_FILTERNORM2 not in ( '.')
608643    + and
608644    +_FILTERNORM3 not in ( '.')
608645    + and
608646    +_FILTERNORM4 not in ( '.')
608647    + and
608648    +_FILTERNORM5 not in ( '.')
608649    + and
608650    +_FILTERNORM6 not in ( '.')
608651    + and
608652    +_FILTERNORM7 not in ( ' ')
608653    + and
608654    +_FILTERNORM8 not in ( ' ')
608655    +and
608656    +( Dt_Customer ne .)
608657    +and ( Income ne . and (Income<=107000))
608658    +and ( Kidhome ne .)
608659    +and ( MntFishProducts ne .)
608660    +and ( MntFruits ne .)
608661    +and ( MntGoldProds ne .)
608662    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
608663    +and ( MntSweetProducts ne .)
608664    +and ( MntWines ne .)
608665    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
608666    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
608667    +and ( NumStorePurchases ne .)
608668    +and ( NumWebPurchases ne .)
608669    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
608670    +and ( Recency ne .)
608671    +and ( Teenhome ne .)
608672    +and ( Year_Birth ne .)
608673    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
608674    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
608675    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
608676    +end;
MPRINT(EM_DIAGRAM):   end;
608677    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
608678    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
608679     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
608680     quit;
608681     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
608682     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
608683     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
608684     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
608685     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
608686     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608687     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
608688     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608689     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608690     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
608691     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608692     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608693     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
608694     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
608695     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
608696     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608697     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
608698     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

608699     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
608700     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608701     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608702     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
608703     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
608704     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
608705     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608706     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
608707     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
608707   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

608708     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608709     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
608710     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608711     %macro varDept(fcmpdata=,id=);
608712     %global nobs&id scoreFlag&id;
608713     %let scoreFlag&id = 0;
608714     %if &id=1 or ^&fcmpStart %then %do;
608715     proc sort data=&fcmpdata out=_temp&id nodupkey;
608716     by NAME;
608717     where id=&id and LHS in( %let j=1;
608718     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
608719     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
608720     "&var" %let j = %eval(&j+1);
608721     %end;
608722     );
608723     run;
608724     %let dsid = %sysfunc(open(_temp&id));
608725     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
608726     %let dsid = %sysfunc(close(&dsid));
608727     %if &&nobs&id %then %do;
608728     %let scoreFlag&id = 1;
608729     %let fcmpStart = 1;
608730     %end;
608731     %else %let fcmpStart = 0;
608732     %end;
608733     %else %do;
608734     proc sort data=&fcmpdata out=_tempid;
608735     where id=&id;
608736     by LHS;
608737     run;
608738     %let dsid = %sysfunc(open(_tempid));
608739     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
608740     %let dsid = %sysfunc(close(&dsid));
608741     %if ^&&nobs&id %then %do;
608742     proc datasets lib=work nolist;
608743     delete _tempid;
608744     run;
608745     quit;
608746     %end;
608747     %else %do;
608748     data _tempAll;
608749     set %let j=%eval(&id-1);
608750     %do x=1 %to &j;
608751     %if &&nobs&x %then %do;
608752     _temp&x %end;
608753     %end;
608754     ;
608755     run;
608756     proc sql;
608757     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
608757   ! work._tempid p2 where p.name=p2.lhs;
608758     quit;
608759     data _temp&id;
608760     set _temp&id;
608761     where LHS ne '' and NAME ne '' and Node ne '';
608762     run;
608763     proc datasets lib=work nolist;
608764     delete _tempAll;
608765     run;
608766     %let dsid = %sysfunc(open(_temp&id));
608767     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
608768     %let dsid = %sysfunc(close(&dsid));
608769     %if ^&&nobs&id %then %do;
608770     proc datasets lib=work nolist;
608771     delete _temp&id;
608772     run;
608773     quit;
608774     %end;
608775     %else %do;
608776     %let scoreFlag&id = 1;
608777     data _temp&id;
608778     set _temp&id;
608779     where LHS ne NAME and node ne '';
608780     run;
608781     %let dsid = %sysfunc(open(_temp&id));
608782     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
608783     %let dsid = %sysfunc(close(&dsid));
608784     %if ^&&nobs&id %then %do;
608785     proc datasets lib=work nolist;
608786     delete _temp&id;
608787     run;
608788     quit;
608789     %end;
608790     %else %do;
608791     proc sort data=_temp&id nodupkey;
608792     by LHS NAME;
608793     run;
608794     %end;
608795     %end;
608796     %end;
608797     %end;
608798     %mend varDept;
608799     %macro optCode(outdata=fcmpdata);
608800     %global fcmpStart;
608801     %let fcmpStart = 0;
608802     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
608803     %let NumNodes=9;
608804     %do k=1 %to &NumNodes;
608805     %vardept(fcmpdata=&outdata, id=&k);
608806     %end;
608807     %mend optCode;
608808     %optcode(outData=EMWS8.Ensmbl32_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 188 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

608809     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
608810     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
608811     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
608812     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608813     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
608814     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
608815     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
608816     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

608817     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
608818     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
608818   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

608819     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

608820     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
608821     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
608822     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

608823     filename _pref
608823   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
608824     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
608825     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
608826    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
608827    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
608828    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
608829    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
608830    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
608831    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
608832    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
608833    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
608834    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
608835    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
608836    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
608837    +LENGTH _WARN_ $4
608838    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
608839    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
608840    +
608841    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
608842    +
608843    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
608844    +
608845    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
608846    +
608847    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
608848    +
608849    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
608850    +
608851    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
608852    +
608853    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
608854    +
608855    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
608856    +
608857    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
608858    +
608859    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
608860    +
608861    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
608862    +
608863    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
608864    +
608865    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
608866    +
608867    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
608868    +
608869    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
608870    +
608871    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
608872    +
608873    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
608874    +
608875    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
608876    +
608877    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
608878    +
608879    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
608880    +
608881    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
608882    +
608883    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
608884    +
608885    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
608886    +
608887    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
608888    +
608889    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
608890    +
608891    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
608892    +
608893    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
608894    +
608895    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
608896    +
608897    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
608898    +
608899    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
608900    +
608901    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
608902    +
608903    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
608904    +
608905    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
608906    +
608907    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
608908    +
608909    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
608910    +
608911    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
608912    +
608913    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
608914    +
608915    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
608916    +
608917    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
608918    +
608919    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
608920    +
608921    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
608922    +
608923    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
608924    +
608925    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
608926    +
608927    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
608928    +
608929    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
608930    +
608931    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
608932    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
608933    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
608934    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
608935    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608936    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608937    +end;
MPRINT(EM_DIAGRAM):   end;
608938    +else do;
MPRINT(EM_DIAGRAM):   else do;
608939    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608940    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
608941    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608942    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
608943    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
608944    +   end;
MPRINT(EM_DIAGRAM):   end;
608945    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
608946    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
608947    +   end;
MPRINT(EM_DIAGRAM):   end;
608948    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608949    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
608950    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608951    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608952    +   end;
MPRINT(EM_DIAGRAM):   end;
608953    +end;
MPRINT(EM_DIAGRAM):   end;
608954    +
608955    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
608956    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
608957    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
608958    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
608959    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608960    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608961    +end;
MPRINT(EM_DIAGRAM):   end;
608962    +else do;
MPRINT(EM_DIAGRAM):   else do;
608963    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608964    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
608965    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608966    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
608967    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
608968    +   end;
MPRINT(EM_DIAGRAM):   end;
608969    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
608970    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
608971    +   end;
MPRINT(EM_DIAGRAM):   end;
608972    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608973    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
608974    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608975    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608976    +   end;
MPRINT(EM_DIAGRAM):   end;
608977    +end;
MPRINT(EM_DIAGRAM):   end;
608978    +
608979    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
608980    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
608981    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
608982    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
608983    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608984    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608985    +end;
MPRINT(EM_DIAGRAM):   end;
608986    +else do;
MPRINT(EM_DIAGRAM):   else do;
608987    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608988    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
608989    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608990    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
608991    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
608992    +   end;
MPRINT(EM_DIAGRAM):   end;
608993    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
608994    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
608995    +   end;
MPRINT(EM_DIAGRAM):   end;
608996    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608997    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
608998    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608999    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609000    +   end;
MPRINT(EM_DIAGRAM):   end;
609001    +end;
MPRINT(EM_DIAGRAM):   end;
609002    +
609003    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
609004    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
609005    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
609006    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
609007    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609008    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609009    +end;
MPRINT(EM_DIAGRAM):   end;
609010    +else do;
MPRINT(EM_DIAGRAM):   else do;
609011    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609012    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
609013    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609014    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609015    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
609016    +   end;
MPRINT(EM_DIAGRAM):   end;
609017    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609018    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
609019    +   end;
MPRINT(EM_DIAGRAM):   end;
609020    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609021    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
609022    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609023    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609024    +   end;
MPRINT(EM_DIAGRAM):   end;
609025    +end;
MPRINT(EM_DIAGRAM):   end;
609026    +
609027    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
609028    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
609029    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
609030    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
609031    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609032    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609033    +end;
MPRINT(EM_DIAGRAM):   end;
609034    +else do;
MPRINT(EM_DIAGRAM):   else do;
609035    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609036    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
609037    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609038    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609039    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
609040    +   end;
MPRINT(EM_DIAGRAM):   end;
609041    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609042    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
609043    +   end;
MPRINT(EM_DIAGRAM):   end;
609044    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609045    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
609046    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609047    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609048    +   end;
MPRINT(EM_DIAGRAM):   end;
609049    +end;
MPRINT(EM_DIAGRAM):   end;
609050    +
609051    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
609052    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
609053    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
609054    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
609055    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609056    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609057    +end;
MPRINT(EM_DIAGRAM):   end;
609058    +else do;
MPRINT(EM_DIAGRAM):   else do;
609059    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609060    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
609061    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609062    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609063    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
609064    +   end;
MPRINT(EM_DIAGRAM):   end;
609065    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609066    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
609067    +   end;
MPRINT(EM_DIAGRAM):   end;
609068    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609069    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
609070    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609071    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609072    +   end;
MPRINT(EM_DIAGRAM):   end;
609073    +end;
MPRINT(EM_DIAGRAM):   end;
609074    +
609075    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
609076    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
609077    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
609078    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
609079    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609080    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609081    +end;
MPRINT(EM_DIAGRAM):   end;
609082    +else do;
MPRINT(EM_DIAGRAM):   else do;
609083    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609084    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
609085    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609086    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
609087    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
609088    +   end;
MPRINT(EM_DIAGRAM):   end;
609089    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
609090    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
609091    +   end;
MPRINT(EM_DIAGRAM):   end;
609092    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609093    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
609094    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609095    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609096    +   end;
MPRINT(EM_DIAGRAM):   end;
609097    +end;
MPRINT(EM_DIAGRAM):   end;
609098    +
609099    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
609100    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
609101    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
609102    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
609103    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
609104    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
609105    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
609106    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
609107    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
609108    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
609109    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
609110    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
609111    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609112    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609113    +end;
MPRINT(EM_DIAGRAM):   end;
609114    +else do;
MPRINT(EM_DIAGRAM):   else do;
609115    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
609116    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
609117    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609118    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
609119    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
609120    +   end;
MPRINT(EM_DIAGRAM):   end;
609121    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
609122    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
609123    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
609124    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
609125    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
609126    +   end;
MPRINT(EM_DIAGRAM):   end;
609127    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
609128    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
609129    +   end;
MPRINT(EM_DIAGRAM):   end;
609130    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
609131    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
609132    +   end;
MPRINT(EM_DIAGRAM):   end;
609133    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
609134    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
609135    +   end;
MPRINT(EM_DIAGRAM):   end;
609136    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609137    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
609138    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
609139    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
609140    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
609141    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609142    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609143    +   end;
MPRINT(EM_DIAGRAM):   end;
609144    +end;
MPRINT(EM_DIAGRAM):   end;
609145    +
609146    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
609147    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
609148    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
609149    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
609150    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
609151    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
609152    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
609153    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
609154    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
609155    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
609156    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
609157    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
609158    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
609159    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609160    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609161    +end;
MPRINT(EM_DIAGRAM):   end;
609162    +else do;
MPRINT(EM_DIAGRAM):   else do;
609163    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
609164    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
609165    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609166    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
609167    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
609168    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
609169    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
609170    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
609171    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609172    +         end;
MPRINT(EM_DIAGRAM):   end;
609173    +         else do;
MPRINT(EM_DIAGRAM):   else do;
609174    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
609175    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
609176    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609177    +            end;
MPRINT(EM_DIAGRAM):   end;
609178    +         end;
MPRINT(EM_DIAGRAM):   end;
609179    +      end;
MPRINT(EM_DIAGRAM):   end;
609180    +      else do;
MPRINT(EM_DIAGRAM):   else do;
609181    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
609182    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
609183    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609184    +         end;
MPRINT(EM_DIAGRAM):   end;
609185    +      end;
MPRINT(EM_DIAGRAM):   end;
609186    +   end;
MPRINT(EM_DIAGRAM):   end;
609187    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609188    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
609189    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
609190    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609191    +      end;
MPRINT(EM_DIAGRAM):   end;
609192    +      else do;
MPRINT(EM_DIAGRAM):   else do;
609193    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
609194    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
609195    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
609196    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
609197    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
609198    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609199    +         end;
MPRINT(EM_DIAGRAM):   end;
609200    +      end;
MPRINT(EM_DIAGRAM):   end;
609201    +   end;
MPRINT(EM_DIAGRAM):   end;
609202    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
609203    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
609204    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
609205    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
609206    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
609207    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609208    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609209    +   end;
MPRINT(EM_DIAGRAM):   end;
609210    +end;
MPRINT(EM_DIAGRAM):   end;
609211    +
609212    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609213    +*** Checking missing input Interval
609214    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
609215    +
609216    +IF NMISS(
609217    +   AcceptedCmpTotal ,
609218    +   Age ,
609219    +   Frq ,
609220    +   Income ,
609221    +   Kidhome ,
609222    +   Mnt ,
609223    +   MntFishProducts ,
609224    +   MntFruits ,
609225    +   MntGoldProds ,
609226    +   MntMeatProducts ,
609227    +   MntSweetProducts ,
609228    +   MntWines ,
609229    +   MonthsAsCustomer ,
609230    +   NumCatalogPurchases ,
609231    +   NumDealsPurchases ,
609232    +   NumDistPurchases ,
609233    +   NumStorePurchases ,
609234    +   NumWebPurchases ,
609235    +   NumWebVisitsMonth ,
609236    +   RFMstat ,
609237    +   RMntFrq ,
609238    +   Recency ,
609239    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
609240    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
609241    +
609242    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609243    +END;
MPRINT(EM_DIAGRAM):   END;
609244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609245    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
609246    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609247    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
609248    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
609249    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
609250    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
609251    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
609252    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
609253    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
609254    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
609255    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
609256    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
609257    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
609258    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
609259    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
609260    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
609261    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
609262    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
609263    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
609264    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
609265    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
609266    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
609267    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
609268    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
609269    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
609270    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
609271    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
609272    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
609273    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
609274    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
609275    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
609276    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
609277    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
609278    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
609279    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
609280    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
609281    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
609282    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
609283    +END;
MPRINT(EM_DIAGRAM):   END;
609284    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
609285    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
609286    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
609287    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
609288    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
609289    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
609290    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
609291    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
609292    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
609293    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
609294    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
609295    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
609296    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
609297    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
609298    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
609299    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
609300    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
609301    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
609302    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
609303    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
609304    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
609305    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
609306    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
609307    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
609308    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
609309    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
609310    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
609311    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
609312    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
609313    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
609314    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
609315    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
609316    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
609317    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
609318    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
609319    +   ELSE S_NumCatalogPurchases
609320    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
609321    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
609322    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
609323    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
609324    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
609325    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
609326    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
609327    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
609328    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
609329    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
609330    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
609331    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
609332    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
609333    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
609334    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
609335    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
609336    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
609337    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
609338    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
609339    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
609340    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
609341    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
609342    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
609343    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
609344    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
609345    +END;
MPRINT(EM_DIAGRAM):   END;
609346    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609347    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
609348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609349    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609350    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
609351    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609352    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609353    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
609354    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609355    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
609356    +   H11  =     0.74666931543537 * S_AcceptedCmpTotal  +    -0.26928580042975 *
609357    +        S_Age  +     0.03131160696792 * S_Frq  +     0.37966440012262 *
609358    +        S_Income  +      0.4880522012865 * S_Kidhome
609359    +          +    -0.10642365845458 * S_Mnt  +     0.07021626529074 *
609360    +        S_MntFishProducts  +    -0.40502977166003 * S_MntFruits
609361    +          +    -0.02349027629347 * S_MntGoldProds  +     1.05528002915119 *
609362    +        S_MntMeatProducts  +    -0.12400227624159 * S_MntSweetProducts
609363    +          +    -0.97101385029429 * S_MntWines  +     0.09983399059623 *
609364    +        S_MonthsAsCustomer  +     0.92029846720585 * S_NumCatalogPurchases
609365    +          +     1.28630491068585 * S_NumDealsPurchases
609366    +          +     0.12175737778271 * S_NumDistPurchases
609367    +          +    -0.62012456448967 * S_NumStorePurchases
609368    +          +     -0.6092351519122 * S_NumWebPurchases
609369    +          +     1.46336740414795 * S_NumWebVisitsMonth
609370    +          +     0.69679756539023 * S_RFMstat  +     0.19882494898547 *
609371    +        S_RMntFrq  +    -1.02986329135861 * S_Recency
609372    +          +      0.0049755319955 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.74666931543537 * S_AcceptedCmpTotal + -0.26928580042975 * S_Age 
+ 0.03131160696792 * S_Frq + 0.37966440012262 * S_Income + 0.4880522012865 * S_Kidhome + 
-0.10642365845458 * S_Mnt + 0.07021626529074 * S_MntFishProducts + -0.40502977166003 * 
S_MntFruits + -0.02349027629347 * S_MntGoldProds + 1.05528002915119 * S_MntMeatProducts + 
-0.12400227624159 * S_MntSweetProducts + -0.97101385029429 * S_MntWines + 0.09983399059623 * 
S_MonthsAsCustomer + 0.92029846720585 * S_NumCatalogPurchases + 1.28630491068585 * 
S_NumDealsPurchases + 0.12175737778271 * S_NumDistPurchases + -0.62012456448967 * 
S_NumStorePurchases + -0.6092351519122 * S_NumWebPurchases + 1.46336740414795 * 
S_NumWebVisitsMonth + 0.69679756539023 * S_RFMstat + 0.19882494898547 * S_RMntFrq + 
-1.02986329135861 * S_Recency + 0.0049755319955 * S_Teenhome ;
609373    +   H12  =    -0.91147771903585 * S_AcceptedCmpTotal  +    -0.07240098012329 *
609374    +        S_Age  +     0.26286532004526 * S_Frq  +    -0.43462974385984 *
609375    +        S_Income  +     0.63026291057347 * S_Kidhome
609376    +          +     0.15892598048777 * S_Mnt  +     0.96482485555311 *
609377    +        S_MntFishProducts  +    -0.04775061278769 * S_MntFruits
609378    +          +    -0.14625524046285 * S_MntGoldProds  +    -1.56223918788692 *
609379    +        S_MntMeatProducts  +    -0.51302960479013 * S_MntSweetProducts
609380    +          +     0.56413001484415 * S_MntWines  +     0.28344048349537 *
609381    +        S_MonthsAsCustomer  +    -0.84830633187723 * S_NumCatalogPurchases
609382    +          +    -0.66569109065716 * S_NumDealsPurchases
609383    +          +    -0.04991685336251 * S_NumDistPurchases
609384    +          +     0.97830186941279 * S_NumStorePurchases
609385    +          +     1.01041490205359 * S_NumWebPurchases
609386    +          +    -1.32418956036577 * S_NumWebVisitsMonth
609387    +          +    -0.11032432808867 * S_RFMstat  +     0.09917599091828 *
609388    +        S_RMntFrq  +     1.45035992156192 * S_Recency
609389    +          +     0.38289769509688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.91147771903585 * S_AcceptedCmpTotal + -0.07240098012329 * S_Age 
+ 0.26286532004526 * S_Frq + -0.43462974385984 * S_Income + 0.63026291057347 * S_Kidhome + 
0.15892598048777 * S_Mnt + 0.96482485555311 * S_MntFishProducts + -0.04775061278769 * 
S_MntFruits + -0.14625524046285 * S_MntGoldProds + -1.56223918788692 * S_MntMeatProducts + 
-0.51302960479013 * S_MntSweetProducts + 0.56413001484415 * S_MntWines + 0.28344048349537 * 
S_MonthsAsCustomer + -0.84830633187723 * S_NumCatalogPurchases + -0.66569109065716 * 
S_NumDealsPurchases + -0.04991685336251 * S_NumDistPurchases + 0.97830186941279 * 
S_NumStorePurchases + 1.01041490205359 * S_NumWebPurchases + -1.32418956036577 * 
S_NumWebVisitsMonth + -0.11032432808867 * S_RFMstat + 0.09917599091828 * S_RMntFrq + 
1.45035992156192 * S_Recency + 0.38289769509688 * S_Teenhome ;
609390    +   H13  =    -0.14475824149684 * S_AcceptedCmpTotal  +    -0.16657585718812 *
609391    +        S_Age  +    -0.20157354778904 * S_Frq  +    -1.05691184936615 *
609392    +        S_Income  +     0.56998894495459 * S_Kidhome
609393    +          +     0.18949667873044 * S_Mnt  +    -0.20862370006966 *
609394    +        S_MntFishProducts  +      0.1024167951483 * S_MntFruits
609395    +          +     0.08478049294226 * S_MntGoldProds  +    -0.39072502110043 *
609396    +        S_MntMeatProducts  +     0.28675920068433 * S_MntSweetProducts
609397    +          +      0.3076165718478 * S_MntWines  +    -0.24620359701099 *
609398    +        S_MonthsAsCustomer  +    -0.59353014518331 * S_NumCatalogPurchases
609399    +          +     0.07739967453744 * S_NumDealsPurchases
609400    +          +    -0.43729543807168 * S_NumDistPurchases
609401    +          +      0.0856627398024 * S_NumStorePurchases
609402    +          +     -0.0045478100059 * S_NumWebPurchases
609403    +          +    -0.64123054514198 * S_NumWebVisitsMonth
609404    +          +     0.10052569590232 * S_RFMstat  +     -0.3728458977342 *
609405    +        S_RMntFrq  +     1.48732817876807 * S_Recency
609406    +          +     0.85232956367064 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14475824149684 * S_AcceptedCmpTotal + -0.16657585718812 * S_Age 
+ -0.20157354778904 * S_Frq + -1.05691184936615 * S_Income + 0.56998894495459 * S_Kidhome + 
0.18949667873044 * S_Mnt + -0.20862370006966 * S_MntFishProducts + 0.1024167951483 * 
S_MntFruits + 0.08478049294226 * S_MntGoldProds + -0.39072502110043 * S_MntMeatProducts + 
0.28675920068433 * S_MntSweetProducts + 0.3076165718478 * S_MntWines + -0.24620359701099 * 
S_MonthsAsCustomer + -0.59353014518331 * S_NumCatalogPurchases + 0.07739967453744 * 
S_NumDealsPurchases + -0.43729543807168 * S_NumDistPurchases + 0.0856627398024 * 
S_NumStorePurchases + -0.0045478100059 * S_NumWebPurchases + -0.64123054514198 * 
S_NumWebVisitsMonth + 0.10052569590232 * S_RFMstat + -0.3728458977342 * S_RMntFrq + 
1.48732817876807 * S_Recency + 0.85232956367064 * S_Teenhome ;
609407    +   H11  = H11  +    -0.62033856363993 * AcceptedCmp10
609408    +          +    -0.00989853037258 * AcceptedCmp20  +    -0.77097813133684 *
609409    +        AcceptedCmp30  +    -0.31448879986852 * AcceptedCmp40
609410    +          +    -0.18015100491326 * AcceptedCmp50  +     0.05706658641547 *
609411    +        Complain0  +    -0.50105732309148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.62033856363993 * AcceptedCmp10 + -0.00989853037258 * 
AcceptedCmp20 + -0.77097813133684 * AcceptedCmp30 + -0.31448879986852 * AcceptedCmp40 + 
-0.18015100491326 * AcceptedCmp50 + 0.05706658641547 * Complain0 + -0.50105732309148 * 
HigherEducationBinary0 ;
609412    +   H12  = H12  +     0.18414272565688 * AcceptedCmp10
609413    +          +      -0.043654707425 * AcceptedCmp20  +    -0.32394050721443 *
609414    +        AcceptedCmp30  +    -0.06950576864476 * AcceptedCmp40
609415    +          +     1.12623106550654 * AcceptedCmp50  +     -0.0339705259886 *
609416    +        Complain0  +    -0.02110753805765 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.18414272565688 * AcceptedCmp10 + -0.043654707425 * 
AcceptedCmp20 + -0.32394050721443 * AcceptedCmp30 + -0.06950576864476 * AcceptedCmp40 + 
1.12623106550654 * AcceptedCmp50 + -0.0339705259886 * Complain0 + -0.02110753805765 * 
HigherEducationBinary0 ;
609417    +   H13  = H13  +     0.14110100411707 * AcceptedCmp10
609418    +          +     0.64032852332569 * AcceptedCmp20  +     0.50653679176195 *
609419    +        AcceptedCmp30  +     0.42616036519805 * AcceptedCmp40
609420    +          +     0.07072170981185 * AcceptedCmp50  +     0.29291097359872 *
609421    +        Complain0  +    -0.31418317974788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.14110100411707 * AcceptedCmp10 + 0.64032852332569 * 
AcceptedCmp20 + 0.50653679176195 * AcceptedCmp30 + 0.42616036519805 * AcceptedCmp40 + 
0.07072170981185 * AcceptedCmp50 + 0.29291097359872 * Complain0 + -0.31418317974788 * 
HigherEducationBinary0 ;
609422    +   H11  = H11  +     0.03341889038374 * Education2n_Cycle
609423    +          +     0.11423971315431 * EducationBasic  +     0.27817968687951 *
609424    +        EducationGraduation  +     -0.0281674058306 * EducationMaster
609425    +          +     0.16155355707944 * Marital_StatusDivorced
609426    +          +     0.04915644167404 * Marital_StatusMarried
609427    +          +    -0.16886350906837 * Marital_StatusSingle
609428    +          +    -0.09540299348184 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03341889038374 * Education2n_Cycle + 0.11423971315431 * 
EducationBasic + 0.27817968687951 * EducationGraduation + -0.0281674058306 * EducationMaster + 
0.16155355707944 * Marital_StatusDivorced + 0.04915644167404 * Marital_StatusMarried + 
-0.16886350906837 * Marital_StatusSingle + -0.09540299348184 * Marital_StatusTogether ;
609429    +   H12  = H12  +    -0.18658767739271 * Education2n_Cycle
609430    +          +     0.31497893454838 * EducationBasic  +    -0.02835844728364 *
609431    +        EducationGraduation  +     0.03310756432448 * EducationMaster
609432    +          +    -0.15094637092036 * Marital_StatusDivorced
609433    +          +     0.07664831456886 * Marital_StatusMarried
609434    +          +    -0.47693612610813 * Marital_StatusSingle
609435    +          +     0.14693691283858 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18658767739271 * Education2n_Cycle + 0.31497893454838 * 
EducationBasic + -0.02835844728364 * EducationGraduation + 0.03310756432448 * EducationMaster 
+ -0.15094637092036 * Marital_StatusDivorced + 0.07664831456886 * Marital_StatusMarried + 
-0.47693612610813 * Marital_StatusSingle + 0.14693691283858 * Marital_StatusTogether ;
609436    +   H13  = H13  +      0.0502517318618 * Education2n_Cycle
609437    +          +    -0.13621229906896 * EducationBasic  +     0.20624951172738 *
609438    +        EducationGraduation  +     0.20173383445657 * EducationMaster
609439    +          +    -0.58672623647391 * Marital_StatusDivorced
609440    +          +      1.8684271616322 * Marital_StatusMarried
609441    +          +    -1.30134837394569 * Marital_StatusSingle
609442    +          +     1.11308583986156 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0502517318618 * Education2n_Cycle + -0.13621229906896 * 
EducationBasic + 0.20624951172738 * EducationGraduation + 0.20173383445657 * EducationMaster + 
-0.58672623647391 * Marital_StatusDivorced + 1.8684271616322 * Marital_StatusMarried + 
-1.30134837394569 * Marital_StatusSingle + 1.11308583986156 * Marital_StatusTogether ;
609443    +   H11  =    -1.22504924155195 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.22504924155195 + H11 ;
609444    +   H12  =     0.36945079976002 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36945079976002 + H12 ;
609445    +   H13  =     1.84114106095878 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.84114106095878 + H13 ;
609446    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
609447    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
609448    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
609449    +END;
MPRINT(EM_DIAGRAM):   END;
609450    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
609451    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
609452    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
609453    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
609454    +END;
MPRINT(EM_DIAGRAM):   END;
609455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609456    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
609457    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609458    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
609459    +   P_DepVar1  =     2.49740994012105 * H11  +    -2.95405883837745 * H12
609460    +          +    -3.26077127833109 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.49740994012105 * H11 + -2.95405883837745 * H12 + 
-3.26077127833109 * H13 ;
609461    +   P_DepVar1  =    -0.23645507747647 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23645507747647 + P_DepVar1 ;
609462    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
609463    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
609464    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
609465    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
609466    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
609467    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
609468    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
609469    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
609470    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
609471    +END;
MPRINT(EM_DIAGRAM):   END;
609472    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
609473    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
609474    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
609475    +END;
MPRINT(EM_DIAGRAM):   END;
609476    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
609477    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
609478    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
609479    +END;
MPRINT(EM_DIAGRAM):   END;
609480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609481    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
609482    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609483    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
609484    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
609485    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
609486    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
609487    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
609488    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
609489    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
609490    +END;
MPRINT(EM_DIAGRAM):   END;
609491    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
609492    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
609493    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
609494    +drop
609495    +H11
609496    +H12
609497    +H13
609498    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
609499    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
609500     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
609501     quit;
609502     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
609503     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
609504     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
609505     retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
609506     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
609507     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609508     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
609509     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609510     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609511     proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
609512     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609513     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

609514     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
609515     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
609516     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
609517     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609518     proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
609519     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

609520     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
609521     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609522     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609523     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
609524     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
609525     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609526     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609527     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
609528     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
609528   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.

609529     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609530     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
609531     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609532     filename _pref
609532   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
609533     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
609534     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
609535    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
609536    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
609537    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
609538    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
609539    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
609540    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
609541     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
609542     quit;
609543     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
609544     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
609545     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
609546     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
609547     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
609548     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609549     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
609550     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609551     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

609552     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
609553     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609554     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609555     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
609556     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
609557     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
609558     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609559     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
609560     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

609561     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
609562     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609563     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609564     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
609565     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
609566     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609567     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

609568     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
609569     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
609569   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

609570     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609571     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
609572     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609573     filename _pref
609573   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
609574     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
609575     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
609576    +
609577    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
609578    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
609578   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
609579    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
609580    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
609581    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
609582    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
609583    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
609584     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
609585     quit;
609586     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
609587     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
609588     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
609589     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
609590     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
609591     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609592     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
609593     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609594     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609595     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
609596     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609597     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

609598     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
609599     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
609600     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
609601     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609602     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
609603     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609604     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
609605     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609606     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609607     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
609608     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
609609     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609610     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

609611     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
609612     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
609612   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

609613     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609614     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
609615     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609616     filename _pref
609616   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
609617     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
609618     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
609619    +
609620    +
609621    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
609622    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
609623    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
609624    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
609625    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
609626    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
609627    +
609628    +
609629    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
609630    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
609631    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
609632    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
609633    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
609634    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
609635    +
609636    +
609637    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
609638    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
609639    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
609640    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
609641    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
609642    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
609643    +
609644    +
609645    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
609646    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
609647    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
609648    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
609649    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
609650    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
609651    +
609652    +
609653    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
609654    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
609655    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
609656    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
609657    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
609658    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
609659    +
609660    +
609661    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
609662    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
609663    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
609664    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
609665    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
609666    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
609667    +
609668    +
609669    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
609670    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
609671    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
609672    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
609673    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
609674    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
609675    +
609676    +
609677    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
609678    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
609679    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
609680    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
609681    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
609682    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
609683    +if
609684    +_FILTERNORM1 not in ( '.')
609685    + and
609686    +_FILTERNORM2 not in ( '.')
609687    + and
609688    +_FILTERNORM3 not in ( '.')
609689    + and
609690    +_FILTERNORM4 not in ( '.')
609691    + and
609692    +_FILTERNORM5 not in ( '.')
609693    + and
609694    +_FILTERNORM6 not in ( '.')
609695    + and
609696    +_FILTERNORM7 not in ( ' ')
609697    + and
609698    +_FILTERNORM8 not in ( ' ')
609699    +and
609700    +( Dt_Customer ne .)
609701    +and ( Income ne . and (Income<=107000))
609702    +and ( Kidhome ne .)
609703    +and ( MntFishProducts ne .)
609704    +and ( MntFruits ne .)
609705    +and ( MntGoldProds ne .)
609706    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
609707    +and ( MntSweetProducts ne .)
609708    +and ( MntWines ne .)
609709    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
609710    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
609711    +and ( NumStorePurchases ne .)
609712    +and ( NumWebPurchases ne .)
609713    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
609714    +and ( Recency ne .)
609715    +and ( Teenhome ne .)
609716    +and ( Year_Birth ne .)
609717    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
609718    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
609719    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
609720    +end;
MPRINT(EM_DIAGRAM):   end;
609721    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
609722    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
609723     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
609724     quit;
609725     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
609726     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
609727     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
609728     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
609729     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
609730     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

609731     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
609732     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609733     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609734     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
609735     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609736     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609737     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
609738     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
609739     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
609740     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

609741     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
609742     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

609743     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
609744     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609745     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

609746     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
609747     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
609748     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
609749     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609750     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
609751     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
609751   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

609752     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609753     proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl32_FCMP data=_tempx;
609754     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL32_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL32_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609755     %macro varDept(fcmpdata=,id=);
609756     %global nobs&id scoreFlag&id;
609757     %let scoreFlag&id = 0;
609758     %if &id=1 or ^&fcmpStart %then %do;
609759     proc sort data=&fcmpdata out=_temp&id nodupkey;
609760     by NAME;
609761     where id=&id and LHS in( %let j=1;
609762     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
609763     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
609764     "&var" %let j = %eval(&j+1);
609765     %end;
609766     );
609767     run;
609768     %let dsid = %sysfunc(open(_temp&id));
609769     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
609770     %let dsid = %sysfunc(close(&dsid));
609771     %if &&nobs&id %then %do;
609772     %let scoreFlag&id = 1;
609773     %let fcmpStart = 1;
609774     %end;
609775     %else %let fcmpStart = 0;
609776     %end;
609777     %else %do;
609778     proc sort data=&fcmpdata out=_tempid;
609779     where id=&id;
609780     by LHS;
609781     run;
609782     %let dsid = %sysfunc(open(_tempid));
609783     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
609784     %let dsid = %sysfunc(close(&dsid));
609785     %if ^&&nobs&id %then %do;
609786     proc datasets lib=work nolist;
609787     delete _tempid;
609788     run;
609789     quit;
609790     %end;
609791     %else %do;
609792     data _tempAll;
609793     set %let j=%eval(&id-1);
609794     %do x=1 %to &j;
609795     %if &&nobs&x %then %do;
609796     _temp&x %end;
609797     %end;
609798     ;
609799     run;
609800     proc sql;
609801     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
609801   ! work._tempid p2 where p.name=p2.lhs;
609802     quit;
609803     data _temp&id;
609804     set _temp&id;
609805     where LHS ne '' and NAME ne '' and Node ne '';
609806     run;
609807     proc datasets lib=work nolist;
609808     delete _tempAll;
609809     run;
609810     %let dsid = %sysfunc(open(_temp&id));
609811     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
609812     %let dsid = %sysfunc(close(&dsid));
609813     %if ^&&nobs&id %then %do;
609814     proc datasets lib=work nolist;
609815     delete _temp&id;
609816     run;
609817     quit;
609818     %end;
609819     %else %do;
609820     %let scoreFlag&id = 1;
609821     data _temp&id;
609822     set _temp&id;
609823     where LHS ne NAME and node ne '';
609824     run;
609825     %let dsid = %sysfunc(open(_temp&id));
609826     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
609827     %let dsid = %sysfunc(close(&dsid));
609828     %if ^&&nobs&id %then %do;
609829     proc datasets lib=work nolist;
609830     delete _temp&id;
609831     run;
609832     quit;
609833     %end;
609834     %else %do;
609835     proc sort data=_temp&id nodupkey;
609836     by LHS NAME;
609837     run;
609838     %end;
609839     %end;
609840     %end;
609841     %end;
609842     %mend varDept;
609843     %macro optCode(outdata=fcmpdata);
609844     %global fcmpStart;
609845     %let fcmpStart = 0;
609846     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
609847     %let NumNodes=9;
609848     %do k=1 %to &NumNodes;
609849     %vardept(fcmpdata=&outdata, id=&k);
609850     %end;
609851     %mend optCode;
609852     %optcode(outData=EMWS8.Ensmbl32_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl32_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

609853     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
609854     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
609855     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
609856     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609857     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
609858     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
609859     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
609860     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609861     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
609862     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
609862   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

609863     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

609864     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
609865     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
609866     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

609867     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
609868     * Ensmbl32: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Computing metadata for TRAIN data;
609869     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL32_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl32\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl32_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl32_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl32_TRAIN out=WORK.M1906CH1 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1906CH1;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1906CH1(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1906CH1;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1906CH1;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0V12X_Z NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0V12X_Z;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V12X_Z;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MZ6D3J(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V12X_Z;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0V12X_Z;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V12X_Z;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0V12X_Z;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V12X_Z;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl32_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl32";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl32";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl32";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl32";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl32";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl32";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl32";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl32";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl32";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl32";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl32";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
610189     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
610190     set EMWS8.Ensmbl32_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl32_EMINFO;
610191     where DATA='Ensmbl32' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl32' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
610192     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_EMINFO.
      WHERE (DATA='Ensmbl32') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

610193     data EMWS8.Ensmbl32_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl32_EMINFO;
610194     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
610195     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
610196     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL32_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
610200     run;
610201     data EMWS8.Ensmbl32_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl32_EMINFO;
610202     set EMWS8.Ensmbl32_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl32_EMINFO WORK.MODELTEMP_INFO;
610203     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL32_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL32_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

610204     proc sort data = EMWS8.Ensmbl32_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl32_EMINFO NOTHREADS;
610205     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
610206     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL32_EMINFO.
NOTE: The data set EMWS8.ENSMBL32_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

610207     proc sort data = EMWS8.AutoNeural7_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural7_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
610208     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
610209     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

610210     proc sort data = EMWS8.Ensmbl32_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl32_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
610211     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
610212     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL32_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

610213     data EMWS8.Ensmbl32_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl32_EMINFO;
610214     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
610215     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
610216     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL32_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

610217     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
610218     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
610219     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
610220     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL32_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL32_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
