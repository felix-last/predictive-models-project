MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.14 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                16. April 2016
Time:                20.14 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1MMUDXG 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1MMUDXG new;
MPRINT(EM_DIAGRAM):   run;
608074     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
608075     set EMWS8.Neural18_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural18_OUTKEY;
608076     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
608077     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set EMWS8.NEURAL18_OUTKEY.
NOTE: The data set WORK.OUTKEY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

608078     filename emflow
608078   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural18: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
608079     *------------------------------------------------------------*;
608080     * Neural18: Scoring DATA data;
608081     *------------------------------------------------------------*;
608082     data EMWS8.Neural18_TRAIN
608083     / view=EMWS8.Neural18_TRAIN
608084     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural18_TRAIN / view=EMWS8.Neural18_TRAIN ;
608085     set EMWS8.BINNING_TRAIN
608086     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
608087     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMFLOWSCORE.sas.
608088    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
608089    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
608090    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
608091    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
608092    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
608093    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
608094    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
608095    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
608096    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
608097    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
608098    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
608099    +LENGTH _WARN_ $4
608100    +      F_DepVar  $ 12
608101    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
608102    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
608103    +
608104    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
608105    +
608106    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
608107    +
608108    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
608109    +
608110    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
608111    +
608112    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
608113    +
608114    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
608115    +
608116    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
608117    +
608118    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
608119    +
608120    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
608121    +
608122    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
608123    +
608124    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
608125    +
608126    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
608127    +
608128    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
608129    +
608130    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
608131    +
608132    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
608133    +
608134    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
608135    +
608136    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
608137    +
608138    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
608139    +
608140    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
608141    +
608142    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
608143    +
608144    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
608145    +
608146    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
608147    +
608148    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
608149    +
608150    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
608151    +
608152    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
608153    +
608154    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
608155    +
608156    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
608157    +
608158    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
608159    +
608160    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
608161    +
608162    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
608163    +
608164    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
608165    +
608166    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
608167    +
608168    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
608169    +
608170    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
608171    +
608172    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
608173    +
608174    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
608175    +
608176    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
608177    +
608178    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
608179    +
608180    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
608181    +
608182    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
608183    +
608184    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
608185    +
608186    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
608187    +
608188    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
608189    +
608190    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
608191    +
608192    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
608193    +
608194    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
608195    +
608196    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
608197    +
608198    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
608199    +
608200    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
608201    +
608202    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
608203    +
608204    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
608205    +
608206    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
608207    +
608208    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
608209    +
608210    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
608211    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
608212    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
608213    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
608214    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608215    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608216    +end;
MPRINT(EM_DIAGRAM):   end;
608217    +else do;
MPRINT(EM_DIAGRAM):   else do;
608218    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608219    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
608220    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608221    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
608222    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
608223    +   end;
MPRINT(EM_DIAGRAM):   end;
608224    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
608225    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
608226    +   end;
MPRINT(EM_DIAGRAM):   end;
608227    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608228    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
608229    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608230    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608231    +   end;
MPRINT(EM_DIAGRAM):   end;
608232    +end;
MPRINT(EM_DIAGRAM):   end;
608233    +
608234    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
608235    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
608236    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
608237    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
608238    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
608239    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
608240    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608241    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608242    +end;
MPRINT(EM_DIAGRAM):   end;
608243    +else do;
MPRINT(EM_DIAGRAM):   else do;
608244    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608245    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
608246    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608247    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
608248    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
608249    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
608250    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
608251    +   end;
MPRINT(EM_DIAGRAM):   end;
608252    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
608253    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
608254    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
608255    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
608256    +   end;
MPRINT(EM_DIAGRAM):   end;
608257    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
608258    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
608259    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
608260    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
608261    +   end;
MPRINT(EM_DIAGRAM):   end;
608262    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
608263    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
608264    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
608265    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
608266    +   end;
MPRINT(EM_DIAGRAM):   end;
608267    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608268    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
608269    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
608270    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
608271    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608272    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608273    +   end;
MPRINT(EM_DIAGRAM):   end;
608274    +end;
MPRINT(EM_DIAGRAM):   end;
608275    +
608276    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
608277    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
608278    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
608279    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
608280    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
608281    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
608282    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608283    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608284    +end;
MPRINT(EM_DIAGRAM):   end;
608285    +else do;
MPRINT(EM_DIAGRAM):   else do;
608286    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608287    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
608288    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608289    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
608290    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
608291    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
608292    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
608293    +   end;
MPRINT(EM_DIAGRAM):   end;
608294    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
608295    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
608296    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
608297    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
608298    +   end;
MPRINT(EM_DIAGRAM):   end;
608299    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
608300    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
608301    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
608302    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
608303    +   end;
MPRINT(EM_DIAGRAM):   end;
608304    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
608305    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
608306    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
608307    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
608308    +   end;
MPRINT(EM_DIAGRAM):   end;
608309    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608310    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
608311    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
608312    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
608313    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608314    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608315    +   end;
MPRINT(EM_DIAGRAM):   end;
608316    +end;
MPRINT(EM_DIAGRAM):   end;
608317    +
608318    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
608319    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
608320    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
608321    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
608322    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
608323    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
608324    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608325    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608326    +end;
MPRINT(EM_DIAGRAM):   end;
608327    +else do;
MPRINT(EM_DIAGRAM):   else do;
608328    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608329    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
608330    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608331    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
608332    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
608333    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
608334    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
608335    +   end;
MPRINT(EM_DIAGRAM):   end;
608336    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
608337    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
608338    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
608339    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
608340    +   end;
MPRINT(EM_DIAGRAM):   end;
608341    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
608342    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
608343    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
608344    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
608345    +   end;
MPRINT(EM_DIAGRAM):   end;
608346    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
608347    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
608348    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
608349    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
608350    +   end;
MPRINT(EM_DIAGRAM):   end;
608351    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608352    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
608353    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
608354    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
608355    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608356    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608357    +   end;
MPRINT(EM_DIAGRAM):   end;
608358    +end;
MPRINT(EM_DIAGRAM):   end;
608359    +
608360    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
608361    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
608362    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
608363    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
608364    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
608365    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
608366    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608367    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608368    +end;
MPRINT(EM_DIAGRAM):   end;
608369    +else do;
MPRINT(EM_DIAGRAM):   else do;
608370    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608371    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
608372    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608373    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
608374    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
608375    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
608376    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
608377    +   end;
MPRINT(EM_DIAGRAM):   end;
608378    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
608379    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
608380    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
608381    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
608382    +   end;
MPRINT(EM_DIAGRAM):   end;
608383    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
608384    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
608385    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
608386    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
608387    +   end;
MPRINT(EM_DIAGRAM):   end;
608388    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
608389    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
608390    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
608391    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
608392    +   end;
MPRINT(EM_DIAGRAM):   end;
608393    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608394    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
608395    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
608396    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
608397    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608398    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608399    +   end;
MPRINT(EM_DIAGRAM):   end;
608400    +end;
MPRINT(EM_DIAGRAM):   end;
608401    +
608402    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
608403    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
608404    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
608405    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
608406    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
608407    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
608408    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608409    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608410    +end;
MPRINT(EM_DIAGRAM):   end;
608411    +else do;
MPRINT(EM_DIAGRAM):   else do;
608412    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608413    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
608414    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608415    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
608416    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
608417    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
608418    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
608419    +   end;
MPRINT(EM_DIAGRAM):   end;
608420    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
608421    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
608422    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
608423    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
608424    +   end;
MPRINT(EM_DIAGRAM):   end;
608425    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
608426    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
608427    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
608428    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
608429    +   end;
MPRINT(EM_DIAGRAM):   end;
608430    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
608431    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
608432    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
608433    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
608434    +   end;
MPRINT(EM_DIAGRAM):   end;
608435    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608436    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
608437    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
608438    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
608439    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608440    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608441    +   end;
MPRINT(EM_DIAGRAM):   end;
608442    +end;
MPRINT(EM_DIAGRAM):   end;
608443    +
608444    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
608445    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
608446    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
608447    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
608448    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
608449    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
608450    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608451    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608452    +end;
MPRINT(EM_DIAGRAM):   end;
608453    +else do;
MPRINT(EM_DIAGRAM):   else do;
608454    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608455    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
608456    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608457    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
608458    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
608459    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
608460    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
608461    +   end;
MPRINT(EM_DIAGRAM):   end;
608462    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
608463    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
608464    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
608465    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
608466    +   end;
MPRINT(EM_DIAGRAM):   end;
608467    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
608468    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
608469    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
608470    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
608471    +   end;
MPRINT(EM_DIAGRAM):   end;
608472    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
608473    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
608474    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
608475    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
608476    +   end;
MPRINT(EM_DIAGRAM):   end;
608477    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608478    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
608479    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
608480    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
608481    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608482    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608483    +   end;
MPRINT(EM_DIAGRAM):   end;
608484    +end;
MPRINT(EM_DIAGRAM):   end;
608485    +
608486    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
608487    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
608488    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
608489    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
608490    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
608491    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
608492    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608493    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608494    +end;
MPRINT(EM_DIAGRAM):   end;
608495    +else do;
MPRINT(EM_DIAGRAM):   else do;
608496    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608497    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
608498    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608499    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
608500    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
608501    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
608502    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
608503    +   end;
MPRINT(EM_DIAGRAM):   end;
608504    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
608505    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
608506    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
608507    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
608508    +   end;
MPRINT(EM_DIAGRAM):   end;
608509    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
608510    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
608511    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
608512    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
608513    +   end;
MPRINT(EM_DIAGRAM):   end;
608514    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
608515    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
608516    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
608517    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
608518    +   end;
MPRINT(EM_DIAGRAM):   end;
608519    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608520    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
608521    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
608522    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
608523    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608524    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608525    +   end;
MPRINT(EM_DIAGRAM):   end;
608526    +end;
MPRINT(EM_DIAGRAM):   end;
608527    +
608528    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
608529    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
608530    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
608531    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
608532    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
608533    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608534    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608535    +end;
MPRINT(EM_DIAGRAM):   end;
608536    +else do;
MPRINT(EM_DIAGRAM):   else do;
608537    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608538    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
608539    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608540    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
608541    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
608542    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
608543    +   end;
MPRINT(EM_DIAGRAM):   end;
608544    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
608545    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
608546    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
608547    +   end;
MPRINT(EM_DIAGRAM):   end;
608548    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
608549    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
608550    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
608551    +   end;
MPRINT(EM_DIAGRAM):   end;
608552    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608553    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
608554    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
608555    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608556    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608557    +   end;
MPRINT(EM_DIAGRAM):   end;
608558    +end;
MPRINT(EM_DIAGRAM):   end;
608559    +
608560    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
608561    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
608562    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
608563    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
608564    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
608565    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
608566    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608567    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608568    +end;
MPRINT(EM_DIAGRAM):   end;
608569    +else do;
MPRINT(EM_DIAGRAM):   else do;
608570    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608571    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
608572    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608573    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
608574    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
608575    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
608576    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
608577    +   end;
MPRINT(EM_DIAGRAM):   end;
608578    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
608579    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
608580    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
608581    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
608582    +   end;
MPRINT(EM_DIAGRAM):   end;
608583    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
608584    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
608585    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
608586    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
608587    +   end;
MPRINT(EM_DIAGRAM):   end;
608588    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
608589    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
608590    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
608591    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
608592    +   end;
MPRINT(EM_DIAGRAM):   end;
608593    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608594    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
608595    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
608596    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
608597    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608598    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608599    +   end;
MPRINT(EM_DIAGRAM):   end;
608600    +end;
MPRINT(EM_DIAGRAM):   end;
608601    +
608602    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
608603    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
608604    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
608605    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
608606    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
608607    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
608608    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608609    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608610    +end;
MPRINT(EM_DIAGRAM):   end;
608611    +else do;
MPRINT(EM_DIAGRAM):   else do;
608612    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608613    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
608614    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608615    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
608616    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
608617    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
608618    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
608619    +   end;
MPRINT(EM_DIAGRAM):   end;
608620    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
608621    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
608622    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
608623    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
608624    +   end;
MPRINT(EM_DIAGRAM):   end;
608625    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
608626    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
608627    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
608628    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
608629    +   end;
MPRINT(EM_DIAGRAM):   end;
608630    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
608631    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
608632    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
608633    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
608634    +   end;
MPRINT(EM_DIAGRAM):   end;
608635    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608636    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
608637    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
608638    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
608639    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608640    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608641    +   end;
MPRINT(EM_DIAGRAM):   end;
608642    +end;
MPRINT(EM_DIAGRAM):   end;
608643    +
608644    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
608645    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
608646    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
608647    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
608648    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
608649    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
608650    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608651    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608652    +end;
MPRINT(EM_DIAGRAM):   end;
608653    +else do;
MPRINT(EM_DIAGRAM):   else do;
608654    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608655    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
608656    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608657    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
608658    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
608659    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
608660    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
608661    +   end;
MPRINT(EM_DIAGRAM):   end;
608662    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
608663    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
608664    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
608665    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
608666    +   end;
MPRINT(EM_DIAGRAM):   end;
608667    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
608668    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
608669    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
608670    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
608671    +   end;
MPRINT(EM_DIAGRAM):   end;
608672    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
608673    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
608674    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
608675    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
608676    +   end;
MPRINT(EM_DIAGRAM):   end;
608677    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608678    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
608679    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
608680    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
608681    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608682    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608683    +   end;
MPRINT(EM_DIAGRAM):   end;
608684    +end;
MPRINT(EM_DIAGRAM):   end;
608685    +
608686    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
608687    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
608688    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
608689    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
608690    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
608691    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
608692    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608693    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608694    +end;
MPRINT(EM_DIAGRAM):   end;
608695    +else do;
MPRINT(EM_DIAGRAM):   else do;
608696    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608697    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
608698    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608699    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
608700    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
608701    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
608702    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
608703    +   end;
MPRINT(EM_DIAGRAM):   end;
608704    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
608705    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
608706    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
608707    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
608708    +   end;
MPRINT(EM_DIAGRAM):   end;
608709    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
608710    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
608711    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
608712    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
608713    +   end;
MPRINT(EM_DIAGRAM):   end;
608714    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
608715    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
608716    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
608717    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
608718    +   end;
MPRINT(EM_DIAGRAM):   end;
608719    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608720    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
608721    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
608722    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
608723    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608724    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608725    +   end;
MPRINT(EM_DIAGRAM):   end;
608726    +end;
MPRINT(EM_DIAGRAM):   end;
608727    +
608728    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
608729    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
608730    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
608731    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
608732    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
608733    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
608734    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
608735    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608736    +end;
MPRINT(EM_DIAGRAM):   end;
608737    +else do;
MPRINT(EM_DIAGRAM):   else do;
608738    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
608739    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
608740    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
608741    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
608742    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
608743    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
608744    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
608745    +   end;
MPRINT(EM_DIAGRAM):   end;
608746    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
608747    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
608748    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
608749    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
608750    +   end;
MPRINT(EM_DIAGRAM):   end;
608751    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
608752    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
608753    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
608754    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
608755    +   end;
MPRINT(EM_DIAGRAM):   end;
608756    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
608757    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
608758    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
608759    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
608760    +   end;
MPRINT(EM_DIAGRAM):   end;
608761    +   else do;
MPRINT(EM_DIAGRAM):   else do;
608762    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
608763    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
608764    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
608765    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
608766    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
608767    +   end;
MPRINT(EM_DIAGRAM):   end;
608768    +end;
MPRINT(EM_DIAGRAM):   end;
608769    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
608770    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
608771    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
608772    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
608773    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
608774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
608775    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
608776    +   H11  =     0.04711628818085 * GRP_AcceptedCmp52  +    -0.13027365748107 *
608777    +        GRP_Frq2  +    -0.04632677563882 * GRP_Frq3  +    -0.08320341313947 *
608778    +        GRP_Frq4  +     0.15407011801643 * GRP_Income2
608779    +          +    -0.10383560943317 * GRP_Income3  +    -0.40582360882321 *
608780    +        GRP_Income4  +    -0.00866872751194 * GRP_Mnt2
608781    +          +     0.03835423241766 * GRP_Mnt3  +     0.10111653307734 * GRP_Mnt4
608782    +          +     0.27649544705807 * GRP_MntFishProducts2
608783    +          +     0.03806617200527 * GRP_MntFishProducts3
608784    +          +    -0.14924458232763 * GRP_MntFishProducts4
608785    +          +    -0.61470593668196 * GRP_MntGoldProds2
608786    +          +      0.3229990608995 * GRP_MntGoldProds3
608787    +          +    -0.38604519701302 * GRP_MntGoldProds4
608788    +          +    -0.16788745104812 * GRP_MntMeatProducts2
608789    +          +    -0.02411102582134 * GRP_MntMeatProducts3
608790    +          +     0.20999119459991 * GRP_MntMeatProducts4
608791    +          +     0.00013023256115 * GRP_MntWines2  +    -0.19154805414183 *
608792    +        GRP_MntWines3  +     0.10487287927665 * GRP_MntWines4
608793    +          +    -0.18385399575632 * GRP_NumCatalogPurchases3
608794    +          +     0.26139870297501 * GRP_NumCatalogPurchases4
608795    +          +    -0.45516424216634 * GRP_NumDistPurchases2
608796    +          +    -0.02821228922166 * GRP_NumDistPurchases3
608797    +          +     -0.0277463007541 * GRP_NumDistPurchases4
608798    +          +    -0.20089085216463 * GRP_NumWebPurchases2
608799    +          +     0.25653821989992 * GRP_NumWebPurchases3
608800    +          +    -0.28787845842774 * GRP_NumWebPurchases4
608801    +          +    -0.55935702240721 * GRP_RFMstat2  +     0.06115264011229 *
608802    +        GRP_RFMstat3  +     0.23395576453228 * GRP_RFMstat4
608803    +          +     0.14575536355828 * GRP_RMntFrq2  +    -0.17534689953321 *
608804    +        GRP_RMntFrq3  +     0.02136609987453 * GRP_RMntFrq4
608805    +          +       0.198287170399 * GRP_Recency2  +     0.20837384647001 *
608806    +        GRP_Recency3  +    -0.03491976754069 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = 0.04711628818085 * GRP_AcceptedCmp52 + -0.13027365748107 * 
GRP_Frq2 + -0.04632677563882 * GRP_Frq3 + -0.08320341313947 * GRP_Frq4 + 0.15407011801643 * 
GRP_Income2 + -0.10383560943317 * GRP_Income3 + -0.40582360882321 * GRP_Income4 + 
-0.00866872751194 * GRP_Mnt2 + 0.03835423241766 * GRP_Mnt3 + 0.10111653307734 * GRP_Mnt4 + 
0.27649544705807 * GRP_MntFishProducts2 + 0.03806617200527 * GRP_MntFishProducts3 + 
-0.14924458232763 * GRP_MntFishProducts4 + -0.61470593668196 * GRP_MntGoldProds2 + 
0.3229990608995 * GRP_MntGoldProds3 + -0.38604519701302 * GRP_MntGoldProds4 + 
-0.16788745104812 * GRP_MntMeatProducts2 + -0.02411102582134 * GRP_MntMeatProducts3 + 
0.20999119459991 * GRP_MntMeatProducts4 + 0.00013023256115 * GRP_MntWines2 + -0.19154805414183 
* GRP_MntWines3 + 0.10487287927665 * GRP_MntWines4 + -0.18385399575632 * 
GRP_NumCatalogPurchases3 + 0.26139870297501 * GRP_NumCatalogPurchases4 + -0.45516424216634 * 
GRP_NumDistPurchases2 + -0.02821228922166 * GRP_NumDistPurchases3 + -0.0277463007541 * 
GRP_NumDistPurchases4 + -0.20089085216463 * GRP_NumWebPurchases2 + 0.25653821989992 * 
GRP_NumWebPurchases3 + -0.28787845842774 * GRP_NumWebPurchases4 + -0.55935702240721 * 
GRP_RFMstat2 + 0.06115264011229 * GRP_RFMstat3 + 0.23395576453228 * GRP_RFMstat4 + 
0.14575536355828 * GRP_RMntFrq2 + -0.17534689953321 * GRP_RMntFrq3 + 0.02136609987453 * 
GRP_RMntFrq4 + 0.198287170399 * GRP_Recency2 + 0.20837384647001 * GRP_Recency3 + 
-0.03491976754069 * GRP_Recency4 ;
608807    +   H12  =     0.27125178346152 * GRP_AcceptedCmp52  +     0.39367144184074 *
608808    +        GRP_Frq2  +     0.47183329287273 * GRP_Frq3  +     0.06075107930837 *
608809    +        GRP_Frq4  +     0.77794746315957 * GRP_Income2
608810    +          +     0.86453663986099 * GRP_Income3  +    -0.24014105964843 *
608811    +        GRP_Income4  +     0.18332391092776 * GRP_Mnt2
608812    +          +    -0.05132712807258 * GRP_Mnt3  +    -0.12150106989075 * GRP_Mnt4
608813    +          +     0.37088160406221 * GRP_MntFishProducts2
608814    +          +     0.16511263167544 * GRP_MntFishProducts3
608815    +          +    -0.25696902575665 * GRP_MntFishProducts4
608816    +          +    -0.25511966497767 * GRP_MntGoldProds2
608817    +          +     0.10357155941955 * GRP_MntGoldProds3
608818    +          +    -0.04921872016349 * GRP_MntGoldProds4
608819    +          +    -0.11063359070508 * GRP_MntMeatProducts2
608820    +          +    -0.08379163747059 * GRP_MntMeatProducts3
608821    +          +     0.18893182644469 * GRP_MntMeatProducts4
608822    +          +     0.41618237258351 * GRP_MntWines2  +    -0.00683285266538 *
608823    +        GRP_MntWines3  +    -0.12347598430406 * GRP_MntWines4
608824    +          +    -0.28043452635336 * GRP_NumCatalogPurchases3
608825    +          +     0.19010019257459 * GRP_NumCatalogPurchases4
608826    +          +    -0.29362124038326 * GRP_NumDistPurchases2
608827    +          +    -0.03304017306295 * GRP_NumDistPurchases3
608828    +          +    -0.11165609534026 * GRP_NumDistPurchases4
608829    +          +      0.1536111955491 * GRP_NumWebPurchases2
608830    +          +     0.14856361677069 * GRP_NumWebPurchases3
608831    +          +      0.0385282170017 * GRP_NumWebPurchases4
608832    +          +    -0.42245587008719 * GRP_RFMstat2  +     0.15962543914936 *
608833    +        GRP_RFMstat3  +    -0.39342058803069 * GRP_RFMstat4
608834    +          +    -0.28590254800789 * GRP_RMntFrq2  +    -0.21564130946407 *
608835    +        GRP_RMntFrq3  +    -0.22044591524393 * GRP_RMntFrq4
608836    +          +      1.1127849486131 * GRP_Recency2  +     0.37451568388848 *
608837    +        GRP_Recency3  +    -0.33640572843758 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = 0.27125178346152 * GRP_AcceptedCmp52 + 0.39367144184074 * GRP_Frq2 
+ 0.47183329287273 * GRP_Frq3 + 0.06075107930837 * GRP_Frq4 + 0.77794746315957 * GRP_Income2 + 
0.86453663986099 * GRP_Income3 + -0.24014105964843 * GRP_Income4 + 0.18332391092776 * GRP_Mnt2 
+ -0.05132712807258 * GRP_Mnt3 + -0.12150106989075 * GRP_Mnt4 + 0.37088160406221 * 
GRP_MntFishProducts2 + 0.16511263167544 * GRP_MntFishProducts3 + -0.25696902575665 * 
GRP_MntFishProducts4 + -0.25511966497767 * GRP_MntGoldProds2 + 0.10357155941955 * 
GRP_MntGoldProds3 + -0.04921872016349 * GRP_MntGoldProds4 + -0.11063359070508 * 
GRP_MntMeatProducts2 + -0.08379163747059 * GRP_MntMeatProducts3 + 0.18893182644469 * 
GRP_MntMeatProducts4 + 0.41618237258351 * GRP_MntWines2 + -0.00683285266538 * GRP_MntWines3 + 
-0.12347598430406 * GRP_MntWines4 + -0.28043452635336 * GRP_NumCatalogPurchases3 + 
0.19010019257459 * GRP_NumCatalogPurchases4 + -0.29362124038326 * GRP_NumDistPurchases2 + 
-0.03304017306295 * GRP_NumDistPurchases3 + -0.11165609534026 * GRP_NumDistPurchases4 + 
0.1536111955491 * GRP_NumWebPurchases2 + 0.14856361677069 * GRP_NumWebPurchases3 + 
0.0385282170017 * GRP_NumWebPurchases4 + -0.42245587008719 * GRP_RFMstat2 + 0.15962543914936 * 
GRP_RFMstat3 + -0.39342058803069 * GRP_RFMstat4 + -0.28590254800789 * GRP_RMntFrq2 + 
-0.21564130946407 * GRP_RMntFrq3 + -0.22044591524393 * GRP_RMntFrq4 + 1.1127849486131 * 
GRP_Recency2 + 0.37451568388848 * GRP_Recency3 + -0.33640572843758 * GRP_Recency4 ;
608838    +   H13  =    -0.00640066603747 * GRP_AcceptedCmp52  +    -0.11333647417979 *
608839    +        GRP_Frq2  +    -0.11647952262542 * GRP_Frq3  +    -0.14006488881524 *
608840    +        GRP_Frq4  +     0.27728124026233 * GRP_Income2
608841    +          +     0.05697521068764 * GRP_Income3  +    -0.37633026358792 *
608842    +        GRP_Income4  +    -0.17440692689662 * GRP_Mnt2
608843    +          +    -0.10036881667196 * GRP_Mnt3  +    -0.13642140412399 * GRP_Mnt4
608844    +          +      0.2081380258467 * GRP_MntFishProducts2
608845    +          +    -0.08668229639505 * GRP_MntFishProducts3
608846    +          +     0.14081019578955 * GRP_MntFishProducts4
608847    +          +    -0.17027561298255 * GRP_MntGoldProds2
608848    +          +    -0.34742776244059 * GRP_MntGoldProds3
608849    +          +     0.12168590176726 * GRP_MntGoldProds4
608850    +          +    -0.05512121591373 * GRP_MntMeatProducts2
608851    +          +    -0.34519642935258 * GRP_MntMeatProducts3
608852    +          +    -0.13168847945689 * GRP_MntMeatProducts4
608853    +          +     0.28193282372353 * GRP_MntWines2  +     0.14946457186192 *
608854    +        GRP_MntWines3  +     0.06804391722409 * GRP_MntWines4
608855    +          +    -0.08346399909028 * GRP_NumCatalogPurchases3
608856    +          +    -0.15880621701951 * GRP_NumCatalogPurchases4
608857    +          +    -0.25528445685452 * GRP_NumDistPurchases2
608858    +          +    -0.10526630829598 * GRP_NumDistPurchases3
608859    +          +    -0.03726952062424 * GRP_NumDistPurchases4
608860    +          +    -0.05938919871449 * GRP_NumWebPurchases2
608861    +          +     0.18366019558751 * GRP_NumWebPurchases3
608862    +          +    -0.19335960904254 * GRP_NumWebPurchases4
608863    +          +     0.15283900648967 * GRP_RFMstat2  +    -0.03738648354517 *
608864    +        GRP_RFMstat3  +      0.0780054343538 * GRP_RFMstat4
608865    +          +     0.08482465227003 * GRP_RMntFrq2  +    -0.04156217601701 *
608866    +        GRP_RMntFrq3  +    -0.27972469674532 * GRP_RMntFrq4
608867    +          +     0.20311018978803 * GRP_Recency2  +     0.02026894035212 *
608868    +        GRP_Recency3  +    -0.22461335805045 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = -0.00640066603747 * GRP_AcceptedCmp52 + -0.11333647417979 * 
GRP_Frq2 + -0.11647952262542 * GRP_Frq3 + -0.14006488881524 * GRP_Frq4 + 0.27728124026233 * 
GRP_Income2 + 0.05697521068764 * GRP_Income3 + -0.37633026358792 * GRP_Income4 + 
-0.17440692689662 * GRP_Mnt2 + -0.10036881667196 * GRP_Mnt3 + -0.13642140412399 * GRP_Mnt4 + 
0.2081380258467 * GRP_MntFishProducts2 + -0.08668229639505 * GRP_MntFishProducts3 + 
0.14081019578955 * GRP_MntFishProducts4 + -0.17027561298255 * GRP_MntGoldProds2 + 
-0.34742776244059 * GRP_MntGoldProds3 + 0.12168590176726 * GRP_MntGoldProds4 + 
-0.05512121591373 * GRP_MntMeatProducts2 + -0.34519642935258 * GRP_MntMeatProducts3 + 
-0.13168847945689 * GRP_MntMeatProducts4 + 0.28193282372353 * GRP_MntWines2 + 0.14946457186192 
* GRP_MntWines3 + 0.06804391722409 * GRP_MntWines4 + -0.08346399909028 * 
GRP_NumCatalogPurchases3 + -0.15880621701951 * GRP_NumCatalogPurchases4 + -0.25528445685452 * 
GRP_NumDistPurchases2 + -0.10526630829598 * GRP_NumDistPurchases3 + -0.03726952062424 * 
GRP_NumDistPurchases4 + -0.05938919871449 * GRP_NumWebPurchases2 + 0.18366019558751 * 
GRP_NumWebPurchases3 + -0.19335960904254 * GRP_NumWebPurchases4 + 0.15283900648967 * 
GRP_RFMstat2 + -0.03738648354517 * GRP_RFMstat3 + 0.0780054343538 * GRP_RFMstat4 + 
0.08482465227003 * GRP_RMntFrq2 + -0.04156217601701 * GRP_RMntFrq3 + -0.27972469674532 * 
GRP_RMntFrq4 + 0.20311018978803 * GRP_Recency2 + 0.02026894035212 * GRP_Recency3 + 
-0.22461335805045 * GRP_Recency4 ;
608869    +   H14  =     0.84759844370999 * GRP_AcceptedCmp52  +    -0.40207108050785 *
608870    +        GRP_Frq2  +    -0.11957926267486 * GRP_Frq3  +     0.39764041522616 *
608871    +        GRP_Frq4  +    -0.21133467357887 * GRP_Income2
608872    +          +    -0.37600727819569 * GRP_Income3  +     0.61191321060217 *
608873    +        GRP_Income4  +    -0.01918945699115 * GRP_Mnt2
608874    +          +    -0.28923187120656 * GRP_Mnt3  +     0.20590552102477 * GRP_Mnt4
608875    +          +     0.03194734131194 * GRP_MntFishProducts2
608876    +          +    -0.08555244396388 * GRP_MntFishProducts3
608877    +          +     -0.1294949057865 * GRP_MntFishProducts4
608878    +          +    -0.28742848639985 * GRP_MntGoldProds2
608879    +          +    -0.00435260781733 * GRP_MntGoldProds3
608880    +          +    -0.12007613875856 * GRP_MntGoldProds4
608881    +          +     0.36325039255643 * GRP_MntMeatProducts2
608882    +          +    -0.08728922471846 * GRP_MntMeatProducts3
608883    +          +    -0.19062123750322 * GRP_MntMeatProducts4
608884    +          +    -0.54694203087226 * GRP_MntWines2  +    -0.63189775838668 *
608885    +        GRP_MntWines3  +      0.3957291463714 * GRP_MntWines4
608886    +          +       0.435944756052 * GRP_NumCatalogPurchases3
608887    +          +      0.2205855993165 * GRP_NumCatalogPurchases4
608888    +          +     0.59192262496927 * GRP_NumDistPurchases2
608889    +          +     0.04008128670209 * GRP_NumDistPurchases3
608890    +          +    -0.00330725734446 * GRP_NumDistPurchases4
608891    +          +     0.18235346155154 * GRP_NumWebPurchases2
608892    +          +     0.06863306934707 * GRP_NumWebPurchases3
608893    +          +     0.06339667504979 * GRP_NumWebPurchases4
608894    +          +     0.09545179117637 * GRP_RFMstat2  +     0.14008923310046 *
608895    +        GRP_RFMstat3  +    -0.26191188327872 * GRP_RFMstat4
608896    +          +    -0.21341781402946 * GRP_RMntFrq2  +    -0.16158721892261 *
608897    +        GRP_RMntFrq3  +    -0.03125612925483 * GRP_RMntFrq4
608898    +          +    -0.57136536034562 * GRP_Recency2  +    -0.28843025104868 *
608899    +        GRP_Recency3  +     0.23682927566038 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84759844370999 * GRP_AcceptedCmp52 + -0.40207108050785 * 
GRP_Frq2 + -0.11957926267486 * GRP_Frq3 + 0.39764041522616 * GRP_Frq4 + -0.21133467357887 * 
GRP_Income2 + -0.37600727819569 * GRP_Income3 + 0.61191321060217 * GRP_Income4 + 
-0.01918945699115 * GRP_Mnt2 + -0.28923187120656 * GRP_Mnt3 + 0.20590552102477 * GRP_Mnt4 + 
0.03194734131194 * GRP_MntFishProducts2 + -0.08555244396388 * GRP_MntFishProducts3 + 
-0.1294949057865 * GRP_MntFishProducts4 + -0.28742848639985 * GRP_MntGoldProds2 + 
-0.00435260781733 * GRP_MntGoldProds3 + -0.12007613875856 * GRP_MntGoldProds4 + 
0.36325039255643 * GRP_MntMeatProducts2 + -0.08728922471846 * GRP_MntMeatProducts3 + 
-0.19062123750322 * GRP_MntMeatProducts4 + -0.54694203087226 * GRP_MntWines2 + 
-0.63189775838668 * GRP_MntWines3 + 0.3957291463714 * GRP_MntWines4 + 0.435944756052 * 
GRP_NumCatalogPurchases3 + 0.2205855993165 * GRP_NumCatalogPurchases4 + 0.59192262496927 * 
GRP_NumDistPurchases2 + 0.04008128670209 * GRP_NumDistPurchases3 + -0.00330725734446 * 
GRP_NumDistPurchases4 + 0.18235346155154 * GRP_NumWebPurchases2 + 0.06863306934707 * 
GRP_NumWebPurchases3 + 0.06339667504979 * GRP_NumWebPurchases4 + 0.09545179117637 * 
GRP_RFMstat2 + 0.14008923310046 * GRP_RFMstat3 + -0.26191188327872 * GRP_RFMstat4 + 
-0.21341781402946 * GRP_RMntFrq2 + -0.16158721892261 * GRP_RMntFrq3 + -0.03125612925483 * 
GRP_RMntFrq4 + -0.57136536034562 * GRP_Recency2 + -0.28843025104868 * GRP_Recency3 + 
0.23682927566038 * GRP_Recency4 ;
608900    +   H15  =      -0.270075163047 * GRP_AcceptedCmp52  +     0.12329750151184 *
608901    +        GRP_Frq2  +    -0.00636074237745 * GRP_Frq3  +     0.06125360704983 *
608902    +        GRP_Frq4  +    -0.02221726738608 * GRP_Income2
608903    +          +     0.02831089386274 * GRP_Income3  +    -0.14245161962732 *
608904    +        GRP_Income4  +    -0.33215929968734 * GRP_Mnt2
608905    +          +    -0.12990224977804 * GRP_Mnt3  +     0.01224047316232 * GRP_Mnt4
608906    +          +     0.43021866757807 * GRP_MntFishProducts2
608907    +          +    -0.27483945374498 * GRP_MntFishProducts3
608908    +          +     0.35053639451726 * GRP_MntFishProducts4
608909    +          +    -0.00509900753344 * GRP_MntGoldProds2
608910    +          +     -0.2114201518265 * GRP_MntGoldProds3
608911    +          +    -0.13970354632794 * GRP_MntGoldProds4
608912    +          +     0.08840789662233 * GRP_MntMeatProducts2
608913    +          +    -0.00365357432837 * GRP_MntMeatProducts3
608914    +          +    -0.17124615615804 * GRP_MntMeatProducts4
608915    +          +     -0.3149461311814 * GRP_MntWines2  +     0.13173264925134 *
608916    +        GRP_MntWines3  +    -0.11604679382146 * GRP_MntWines4
608917    +          +     -0.5316533346484 * GRP_NumCatalogPurchases3
608918    +          +    -0.29157679545376 * GRP_NumCatalogPurchases4
608919    +          +    -0.08055861305066 * GRP_NumDistPurchases2
608920    +          +    -0.08674081531395 * GRP_NumDistPurchases3
608921    +          +    -0.17551921835199 * GRP_NumDistPurchases4
608922    +          +    -0.03222539166367 * GRP_NumWebPurchases2
608923    +          +    -0.13811302108485 * GRP_NumWebPurchases3
608924    +          +     0.06646439445075 * GRP_NumWebPurchases4
608925    +          +    -0.07079122602276 * GRP_RFMstat2  +    -0.39615424117539 *
608926    +        GRP_RFMstat3  +     0.04146636703929 * GRP_RFMstat4
608927    +          +     -0.0853308883886 * GRP_RMntFrq2  +    -0.13702404280363 *
608928    +        GRP_RMntFrq3  +    -0.27355720177265 * GRP_RMntFrq4
608929    +          +     0.33867777321903 * GRP_Recency2  +    -0.09253457902218 *
608930    +        GRP_Recency3  +    -0.05897210090797 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = -0.270075163047 * GRP_AcceptedCmp52 + 0.12329750151184 * GRP_Frq2 
+ -0.00636074237745 * GRP_Frq3 + 0.06125360704983 * GRP_Frq4 + -0.02221726738608 * GRP_Income2 
+ 0.02831089386274 * GRP_Income3 + -0.14245161962732 * GRP_Income4 + -0.33215929968734 * 
GRP_Mnt2 + -0.12990224977804 * GRP_Mnt3 + 0.01224047316232 * GRP_Mnt4 + 0.43021866757807 * 
GRP_MntFishProducts2 + -0.27483945374498 * GRP_MntFishProducts3 + 0.35053639451726 * 
GRP_MntFishProducts4 + -0.00509900753344 * GRP_MntGoldProds2 + -0.2114201518265 * 
GRP_MntGoldProds3 + -0.13970354632794 * GRP_MntGoldProds4 + 0.08840789662233 * 
GRP_MntMeatProducts2 + -0.00365357432837 * GRP_MntMeatProducts3 + -0.17124615615804 * 
GRP_MntMeatProducts4 + -0.3149461311814 * GRP_MntWines2 + 0.13173264925134 * GRP_MntWines3 + 
-0.11604679382146 * GRP_MntWines4 + -0.5316533346484 * GRP_NumCatalogPurchases3 + 
-0.29157679545376 * GRP_NumCatalogPurchases4 + -0.08055861305066 * GRP_NumDistPurchases2 + 
-0.08674081531395 * GRP_NumDistPurchases3 + -0.17551921835199 * GRP_NumDistPurchases4 + 
-0.03222539166367 * GRP_NumWebPurchases2 + -0.13811302108485 * GRP_NumWebPurchases3 + 
0.06646439445075 * GRP_NumWebPurchases4 + -0.07079122602276 * GRP_RFMstat2 + -0.39615424117539 
* GRP_RFMstat3 + 0.04146636703929 * GRP_RFMstat4 + -0.0853308883886 * GRP_RMntFrq2 + 
-0.13702404280363 * GRP_RMntFrq3 + -0.27355720177265 * GRP_RMntFrq4 + 0.33867777321903 * 
GRP_Recency2 + -0.09253457902218 * GRP_Recency3 + -0.05897210090797 * GRP_Recency4 ;
608931    +   H16  =    -0.30271284676983 * GRP_AcceptedCmp52  +     0.03117199224725 *
608932    +        GRP_Frq2  +    -0.26799382098604 * GRP_Frq3  +    -0.13070336759958 *
608933    +        GRP_Frq4  +     0.12672160649087 * GRP_Income2
608934    +          +    -0.21150829323326 * GRP_Income3  +    -0.15720750294685 *
608935    +        GRP_Income4  +     0.09905728950306 * GRP_Mnt2
608936    +          +    -0.43923284882193 * GRP_Mnt3  +     0.03431635930451 * GRP_Mnt4
608937    +          +     0.06947673564935 * GRP_MntFishProducts2
608938    +          +     -0.2220161944842 * GRP_MntFishProducts3
608939    +          +      -0.115965454808 * GRP_MntFishProducts4
608940    +          +    -0.01957355844265 * GRP_MntGoldProds2
608941    +          +     0.29129268161925 * GRP_MntGoldProds3
608942    +          +     0.06228256145252 * GRP_MntGoldProds4
608943    +          +    -0.09695386874195 * GRP_MntMeatProducts2
608944    +          +    -0.15864685727366 * GRP_MntMeatProducts3
608945    +          +    -0.49032797729016 * GRP_MntMeatProducts4
608946    +          +     0.37470089287985 * GRP_MntWines2  +     0.36115743239288 *
608947    +        GRP_MntWines3  +    -0.34359138002961 * GRP_MntWines4
608948    +          +    -0.19461285131827 * GRP_NumCatalogPurchases3
608949    +          +     0.04513674368784 * GRP_NumCatalogPurchases4
608950    +          +    -0.03507865895925 * GRP_NumDistPurchases2
608951    +          +     0.09915485245283 * GRP_NumDistPurchases3
608952    +          +    -0.33100664342194 * GRP_NumDistPurchases4
608953    +          +     0.13724527126482 * GRP_NumWebPurchases2
608954    +          +    -0.02356592443136 * GRP_NumWebPurchases3
608955    +          +      0.2573229592217 * GRP_NumWebPurchases4
608956    +          +     0.05747809528111 * GRP_RFMstat2  +     0.09535983705402 *
608957    +        GRP_RFMstat3  +    -0.10249907985488 * GRP_RFMstat4
608958    +          +     0.08979004612339 * GRP_RMntFrq2  +     0.21152228987437 *
608959    +        GRP_RMntFrq3  +     0.01345639991803 * GRP_RMntFrq4
608960    +          +     0.52890036744064 * GRP_Recency2  +    -0.04507648861408 *
608961    +        GRP_Recency3  +    -0.03669931738284 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = -0.30271284676983 * GRP_AcceptedCmp52 + 0.03117199224725 * 
GRP_Frq2 + -0.26799382098604 * GRP_Frq3 + -0.13070336759958 * GRP_Frq4 + 0.12672160649087 * 
GRP_Income2 + -0.21150829323326 * GRP_Income3 + -0.15720750294685 * GRP_Income4 + 
0.09905728950306 * GRP_Mnt2 + -0.43923284882193 * GRP_Mnt3 + 0.03431635930451 * GRP_Mnt4 + 
0.06947673564935 * GRP_MntFishProducts2 + -0.2220161944842 * GRP_MntFishProducts3 + 
-0.115965454808 * GRP_MntFishProducts4 + -0.01957355844265 * GRP_MntGoldProds2 + 
0.29129268161925 * GRP_MntGoldProds3 + 0.06228256145252 * GRP_MntGoldProds4 + 
-0.09695386874195 * GRP_MntMeatProducts2 + -0.15864685727366 * GRP_MntMeatProducts3 + 
-0.49032797729016 * GRP_MntMeatProducts4 + 0.37470089287985 * GRP_MntWines2 + 0.36115743239288 
* GRP_MntWines3 + -0.34359138002961 * GRP_MntWines4 + -0.19461285131827 * 
GRP_NumCatalogPurchases3 + 0.04513674368784 * GRP_NumCatalogPurchases4 + -0.03507865895925 * 
GRP_NumDistPurchases2 + 0.09915485245283 * GRP_NumDistPurchases3 + -0.33100664342194 * 
GRP_NumDistPurchases4 + 0.13724527126482 * GRP_NumWebPurchases2 + -0.02356592443136 * 
GRP_NumWebPurchases3 + 0.2573229592217 * GRP_NumWebPurchases4 + 0.05747809528111 * 
GRP_RFMstat2 + 0.09535983705402 * GRP_RFMstat3 + -0.10249907985488 * GRP_RFMstat4 + 
0.08979004612339 * GRP_RMntFrq2 + 0.21152228987437 * GRP_RMntFrq3 + 0.01345639991803 * 
GRP_RMntFrq4 + 0.52890036744064 * GRP_Recency2 + -0.04507648861408 * GRP_Recency3 + 
-0.03669931738284 * GRP_Recency4 ;
608962    +   H17  =    -0.24394616675587 * GRP_AcceptedCmp52  +     0.28964856194613 *
608963    +        GRP_Frq2  +    -0.08289613695725 * GRP_Frq3  +     0.21998897095553 *
608964    +        GRP_Frq4  +     0.18107497199311 * GRP_Income2
608965    +          +      0.1107558510921 * GRP_Income3  +    -0.36116869826735 *
608966    +        GRP_Income4  +     0.02424010270897 * GRP_Mnt2
608967    +          +    -0.15852275336702 * GRP_Mnt3  +    -0.35418266455505 * GRP_Mnt4
608968    +          +     0.20869043565167 * GRP_MntFishProducts2
608969    +          +     0.10833559681607 * GRP_MntFishProducts3
608970    +          +    -0.10347776442631 * GRP_MntFishProducts4
608971    +          +    -0.32065428276511 * GRP_MntGoldProds2
608972    +          +    -0.43926899233496 * GRP_MntGoldProds3
608973    +          +    -0.10606506374615 * GRP_MntGoldProds4
608974    +          +    -0.31984276315874 * GRP_MntMeatProducts2
608975    +          +    -0.10334364706061 * GRP_MntMeatProducts3
608976    +          +    -0.00884354140504 * GRP_MntMeatProducts4
608977    +          +     0.23600639890053 * GRP_MntWines2  +    -0.29934386684584 *
608978    +        GRP_MntWines3  +     0.16274179248724 * GRP_MntWines4
608979    +          +    -0.32950762391869 * GRP_NumCatalogPurchases3
608980    +          +     0.01712392556947 * GRP_NumCatalogPurchases4
608981    +          +    -0.34220067420996 * GRP_NumDistPurchases2
608982    +          +    -0.15410597036596 * GRP_NumDistPurchases3
608983    +          +    -0.05769918195545 * GRP_NumDistPurchases4
608984    +          +    -0.03929570019271 * GRP_NumWebPurchases2
608985    +          +    -0.30647973770852 * GRP_NumWebPurchases3
608986    +          +    -0.09809448516146 * GRP_NumWebPurchases4
608987    +          +     0.02199652262588 * GRP_RFMstat2  +    -0.18677191406874 *
608988    +        GRP_RFMstat3  +    -0.06022520470141 * GRP_RFMstat4
608989    +          +    -0.14995521360575 * GRP_RMntFrq2  +     0.00512207268691 *
608990    +        GRP_RMntFrq3  +    -0.58308661640325 * GRP_RMntFrq4
608991    +          +     0.09125052186965 * GRP_Recency2  +    -0.01605996390173 *
608992    +        GRP_Recency3  +     0.09260166797685 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = -0.24394616675587 * GRP_AcceptedCmp52 + 0.28964856194613 * 
GRP_Frq2 + -0.08289613695725 * GRP_Frq3 + 0.21998897095553 * GRP_Frq4 + 0.18107497199311 * 
GRP_Income2 + 0.1107558510921 * GRP_Income3 + -0.36116869826735 * GRP_Income4 + 
0.02424010270897 * GRP_Mnt2 + -0.15852275336702 * GRP_Mnt3 + -0.35418266455505 * GRP_Mnt4 + 
0.20869043565167 * GRP_MntFishProducts2 + 0.10833559681607 * GRP_MntFishProducts3 + 
-0.10347776442631 * GRP_MntFishProducts4 + -0.32065428276511 * GRP_MntGoldProds2 + 
-0.43926899233496 * GRP_MntGoldProds3 + -0.10606506374615 * GRP_MntGoldProds4 + 
-0.31984276315874 * GRP_MntMeatProducts2 + -0.10334364706061 * GRP_MntMeatProducts3 + 
-0.00884354140504 * GRP_MntMeatProducts4 + 0.23600639890053 * GRP_MntWines2 + 
-0.29934386684584 * GRP_MntWines3 + 0.16274179248724 * GRP_MntWines4 + -0.32950762391869 * 
GRP_NumCatalogPurchases3 + 0.01712392556947 * GRP_NumCatalogPurchases4 + -0.34220067420996 * 
GRP_NumDistPurchases2 + -0.15410597036596 * GRP_NumDistPurchases3 + -0.05769918195545 * 
GRP_NumDistPurchases4 + -0.03929570019271 * GRP_NumWebPurchases2 + -0.30647973770852 * 
GRP_NumWebPurchases3 + -0.09809448516146 * GRP_NumWebPurchases4 + 0.02199652262588 * 
GRP_RFMstat2 + -0.18677191406874 * GRP_RFMstat3 + -0.06022520470141 * GRP_RFMstat4 + 
-0.14995521360575 * GRP_RMntFrq2 + 0.00512207268691 * GRP_RMntFrq3 + -0.58308661640325 * 
GRP_RMntFrq4 + 0.09125052186965 * GRP_Recency2 + -0.01605996390173 * GRP_Recency3 + 
0.09260166797685 * GRP_Recency4 ;
608993    +   H11  =     1.47536864687001 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.47536864687001 + H11 ;
608994    +   H12  =    -0.03796823184366 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03796823184366 + H12 ;
608995    +   H13  =     0.20545721254095 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.20545721254095 + H13 ;
608996    +   H14  =     0.82513531048516 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82513531048516 + H14 ;
608997    +   H15  =    -0.86531822153621 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.86531822153621 + H15 ;
608998    +   H16  =    -1.63588460642984 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.63588460642984 + H16 ;
608999    +   H17  =     1.27216054538203 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.27216054538203 + H17 ;
609000    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
609001    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
609002    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
609003    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
609004    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
609005    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
609006    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
609007    +END;
MPRINT(EM_DIAGRAM):   END;
609008    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
609009    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
609010    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
609011    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
609012    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
609013    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
609014    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
609015    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
609016    +END;
MPRINT(EM_DIAGRAM):   END;
609017    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609018    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
609019    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609020    +
609021    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
609022    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
609023    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
609024    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
609025    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
609026    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609027    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
609028    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
609029    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
609030    +end;
MPRINT(EM_DIAGRAM):   end;
609031    +else do;
MPRINT(EM_DIAGRAM):   else do;
609032    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
609033    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
609034    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
609035    +   end;
MPRINT(EM_DIAGRAM):   end;
609036    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
609037    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
609038    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
609039    +   end;
MPRINT(EM_DIAGRAM):   end;
609040    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609041    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
609042    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
609043    +   end;
MPRINT(EM_DIAGRAM):   end;
609044    +end;
MPRINT(EM_DIAGRAM):   end;
609045    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
609046    +   P_DepVar1  =     1.96524348977009 * H11  +     1.80437226064293 * H12
609047    +          +     0.26614818926491 * H13  +     -2.3095876381555 * H14
609048    +          +     0.55402099095215 * H15  +     1.54522449582288 * H16
609049    +          +     1.13845442289883 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.96524348977009 * H11 + 1.80437226064293 * H12 + 
0.26614818926491 * H13 + -2.3095876381555 * H14 + 0.55402099095215 * H15 + 1.54522449582288 * 
H16 + 1.13845442289883 * H17 ;
609050    +   P_DepVar1  =    -1.53783202740594 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53783202740594 + P_DepVar1 ;
609051    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
609052    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
609053    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
609054    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
609055    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
609056    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
609057    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
609058    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
609059    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
609060    +END;
MPRINT(EM_DIAGRAM):   END;
609061    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
609062    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
609063    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
609064    +END;
MPRINT(EM_DIAGRAM):   END;
609065    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
609066    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
609067    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
609068    +END;
MPRINT(EM_DIAGRAM):   END;
609069    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
609070    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
609071    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
609072    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
609073    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
609074    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
609075    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
609076    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609077    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
609078    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609079    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
609080    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
609081    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
609082    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
609083    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
609084    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
609085    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
609086    +END;
MPRINT(EM_DIAGRAM):   END;
609087    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
609088    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
609089    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
609090    +drop
609091    +H11
609092    +H12
609093    +H13
609094    +H14
609095    +H15
609096    +H16
609097    +H17
609098    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
609099     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL18_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
609100     quit;
609101     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
609102     filename emflow
609102   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural18: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
609103     *------------------------------------------------------------*;
609104     * Neural18: Scoring VALIDATE data;
609105     *------------------------------------------------------------*;
609106     data EMWS8.Neural18_VALIDATE
609107     / view=EMWS8.Neural18_VALIDATE
609108     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural18_VALIDATE / view=EMWS8.Neural18_VALIDATE ;
609109     set EMWS8.BINNING_VALIDATE
609110     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
609111     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMFLOWSCORE.sas.
609112    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
609113    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
609114    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
609115    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
609116    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
609117    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
609118    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
609119    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
609120    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
609121    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
609122    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
609123    +LENGTH _WARN_ $4
609124    +      F_DepVar  $ 12
609125    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
609126    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
609127    +
609128    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
609129    +
609130    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
609131    +
609132    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
609133    +
609134    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
609135    +
609136    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
609137    +
609138    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
609139    +
609140    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
609141    +
609142    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
609143    +
609144    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
609145    +
609146    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
609147    +
609148    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
609149    +
609150    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
609151    +
609152    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
609153    +
609154    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
609155    +
609156    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
609157    +
609158    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
609159    +
609160    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
609161    +
609162    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
609163    +
609164    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
609165    +
609166    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
609167    +
609168    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
609169    +
609170    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
609171    +
609172    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
609173    +
609174    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
609175    +
609176    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
609177    +
609178    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
609179    +
609180    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
609181    +
609182    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
609183    +
609184    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
609185    +
609186    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
609187    +
609188    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
609189    +
609190    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
609191    +
609192    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
609193    +
609194    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
609195    +
609196    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
609197    +
609198    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
609199    +
609200    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
609201    +
609202    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
609203    +
609204    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
609205    +
609206    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
609207    +
609208    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
609209    +
609210    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
609211    +
609212    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
609213    +
609214    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
609215    +
609216    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
609217    +
609218    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
609219    +
609220    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
609221    +
609222    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
609223    +
609224    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
609225    +
609226    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
609227    +
609228    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
609229    +
609230    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
609231    +
609232    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
609233    +
609234    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
609235    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
609236    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
609237    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
609238    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609239    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609240    +end;
MPRINT(EM_DIAGRAM):   end;
609241    +else do;
MPRINT(EM_DIAGRAM):   else do;
609242    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609243    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
609244    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609245    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
609246    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
609247    +   end;
MPRINT(EM_DIAGRAM):   end;
609248    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
609249    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
609250    +   end;
MPRINT(EM_DIAGRAM):   end;
609251    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609252    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
609253    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609254    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609255    +   end;
MPRINT(EM_DIAGRAM):   end;
609256    +end;
MPRINT(EM_DIAGRAM):   end;
609257    +
609258    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
609259    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
609260    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
609261    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
609262    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
609263    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
609264    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609265    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609266    +end;
MPRINT(EM_DIAGRAM):   end;
609267    +else do;
MPRINT(EM_DIAGRAM):   else do;
609268    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609269    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
609270    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609271    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
609272    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
609273    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
609274    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
609275    +   end;
MPRINT(EM_DIAGRAM):   end;
609276    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
609277    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
609278    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
609279    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
609280    +   end;
MPRINT(EM_DIAGRAM):   end;
609281    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
609282    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
609283    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
609284    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
609285    +   end;
MPRINT(EM_DIAGRAM):   end;
609286    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
609287    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
609288    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
609289    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
609290    +   end;
MPRINT(EM_DIAGRAM):   end;
609291    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609292    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
609293    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
609294    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
609295    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609296    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609297    +   end;
MPRINT(EM_DIAGRAM):   end;
609298    +end;
MPRINT(EM_DIAGRAM):   end;
609299    +
609300    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
609301    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
609302    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
609303    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
609304    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
609305    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
609306    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609307    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609308    +end;
MPRINT(EM_DIAGRAM):   end;
609309    +else do;
MPRINT(EM_DIAGRAM):   else do;
609310    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609311    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
609312    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609313    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
609314    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
609315    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
609316    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
609317    +   end;
MPRINT(EM_DIAGRAM):   end;
609318    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
609319    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
609320    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
609321    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
609322    +   end;
MPRINT(EM_DIAGRAM):   end;
609323    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
609324    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
609325    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
609326    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
609327    +   end;
MPRINT(EM_DIAGRAM):   end;
609328    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
609329    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
609330    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
609331    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
609332    +   end;
MPRINT(EM_DIAGRAM):   end;
609333    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609334    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
609335    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
609336    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
609337    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609338    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609339    +   end;
MPRINT(EM_DIAGRAM):   end;
609340    +end;
MPRINT(EM_DIAGRAM):   end;
609341    +
609342    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
609343    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
609344    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
609345    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
609346    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
609347    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
609348    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609349    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609350    +end;
MPRINT(EM_DIAGRAM):   end;
609351    +else do;
MPRINT(EM_DIAGRAM):   else do;
609352    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609353    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
609354    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609355    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
609356    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
609357    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
609358    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
609359    +   end;
MPRINT(EM_DIAGRAM):   end;
609360    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
609361    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
609362    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
609363    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
609364    +   end;
MPRINT(EM_DIAGRAM):   end;
609365    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
609366    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
609367    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
609368    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
609369    +   end;
MPRINT(EM_DIAGRAM):   end;
609370    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
609371    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
609372    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
609373    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
609374    +   end;
MPRINT(EM_DIAGRAM):   end;
609375    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609376    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
609377    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
609378    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
609379    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609380    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609381    +   end;
MPRINT(EM_DIAGRAM):   end;
609382    +end;
MPRINT(EM_DIAGRAM):   end;
609383    +
609384    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
609385    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
609386    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
609387    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
609388    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
609389    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
609390    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609391    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609392    +end;
MPRINT(EM_DIAGRAM):   end;
609393    +else do;
MPRINT(EM_DIAGRAM):   else do;
609394    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609395    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
609396    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609397    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
609398    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
609399    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
609400    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
609401    +   end;
MPRINT(EM_DIAGRAM):   end;
609402    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
609403    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
609404    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
609405    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
609406    +   end;
MPRINT(EM_DIAGRAM):   end;
609407    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
609408    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
609409    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
609410    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
609411    +   end;
MPRINT(EM_DIAGRAM):   end;
609412    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
609413    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
609414    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
609415    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
609416    +   end;
MPRINT(EM_DIAGRAM):   end;
609417    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609418    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
609419    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
609420    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
609421    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609422    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609423    +   end;
MPRINT(EM_DIAGRAM):   end;
609424    +end;
MPRINT(EM_DIAGRAM):   end;
609425    +
609426    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
609427    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
609428    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
609429    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
609430    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
609431    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
609432    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609433    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609434    +end;
MPRINT(EM_DIAGRAM):   end;
609435    +else do;
MPRINT(EM_DIAGRAM):   else do;
609436    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609437    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
609438    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609439    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
609440    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
609441    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
609442    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
609443    +   end;
MPRINT(EM_DIAGRAM):   end;
609444    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
609445    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
609446    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
609447    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
609448    +   end;
MPRINT(EM_DIAGRAM):   end;
609449    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
609450    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
609451    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
609452    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
609453    +   end;
MPRINT(EM_DIAGRAM):   end;
609454    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
609455    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
609456    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
609457    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
609458    +   end;
MPRINT(EM_DIAGRAM):   end;
609459    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609460    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
609461    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
609462    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
609463    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609464    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609465    +   end;
MPRINT(EM_DIAGRAM):   end;
609466    +end;
MPRINT(EM_DIAGRAM):   end;
609467    +
609468    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
609469    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
609470    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
609471    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
609472    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
609473    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
609474    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609475    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609476    +end;
MPRINT(EM_DIAGRAM):   end;
609477    +else do;
MPRINT(EM_DIAGRAM):   else do;
609478    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609479    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
609480    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609481    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
609482    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
609483    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
609484    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
609485    +   end;
MPRINT(EM_DIAGRAM):   end;
609486    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
609487    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
609488    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
609489    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
609490    +   end;
MPRINT(EM_DIAGRAM):   end;
609491    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
609492    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
609493    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
609494    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
609495    +   end;
MPRINT(EM_DIAGRAM):   end;
609496    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
609497    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
609498    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
609499    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
609500    +   end;
MPRINT(EM_DIAGRAM):   end;
609501    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609502    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
609503    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
609504    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
609505    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609506    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609507    +   end;
MPRINT(EM_DIAGRAM):   end;
609508    +end;
MPRINT(EM_DIAGRAM):   end;
609509    +
609510    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
609511    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
609512    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
609513    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
609514    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
609515    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
609516    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609517    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609518    +end;
MPRINT(EM_DIAGRAM):   end;
609519    +else do;
MPRINT(EM_DIAGRAM):   else do;
609520    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609521    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
609522    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609523    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
609524    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
609525    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
609526    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
609527    +   end;
MPRINT(EM_DIAGRAM):   end;
609528    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
609529    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
609530    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
609531    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
609532    +   end;
MPRINT(EM_DIAGRAM):   end;
609533    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
609534    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
609535    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
609536    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
609537    +   end;
MPRINT(EM_DIAGRAM):   end;
609538    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
609539    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
609540    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
609541    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
609542    +   end;
MPRINT(EM_DIAGRAM):   end;
609543    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609544    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
609545    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
609546    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
609547    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609548    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609549    +   end;
MPRINT(EM_DIAGRAM):   end;
609550    +end;
MPRINT(EM_DIAGRAM):   end;
609551    +
609552    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
609553    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
609554    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
609555    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
609556    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
609557    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609558    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609559    +end;
MPRINT(EM_DIAGRAM):   end;
609560    +else do;
MPRINT(EM_DIAGRAM):   else do;
609561    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609562    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
609563    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609564    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
609565    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
609566    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
609567    +   end;
MPRINT(EM_DIAGRAM):   end;
609568    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
609569    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
609570    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
609571    +   end;
MPRINT(EM_DIAGRAM):   end;
609572    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
609573    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
609574    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
609575    +   end;
MPRINT(EM_DIAGRAM):   end;
609576    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609577    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
609578    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
609579    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609580    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609581    +   end;
MPRINT(EM_DIAGRAM):   end;
609582    +end;
MPRINT(EM_DIAGRAM):   end;
609583    +
609584    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
609585    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
609586    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
609587    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
609588    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
609589    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
609590    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609591    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609592    +end;
MPRINT(EM_DIAGRAM):   end;
609593    +else do;
MPRINT(EM_DIAGRAM):   else do;
609594    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609595    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
609596    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609597    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
609598    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
609599    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
609600    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
609601    +   end;
MPRINT(EM_DIAGRAM):   end;
609602    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
609603    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
609604    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
609605    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
609606    +   end;
MPRINT(EM_DIAGRAM):   end;
609607    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
609608    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
609609    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
609610    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
609611    +   end;
MPRINT(EM_DIAGRAM):   end;
609612    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
609613    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
609614    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
609615    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
609616    +   end;
MPRINT(EM_DIAGRAM):   end;
609617    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609618    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
609619    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
609620    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
609621    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609622    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609623    +   end;
MPRINT(EM_DIAGRAM):   end;
609624    +end;
MPRINT(EM_DIAGRAM):   end;
609625    +
609626    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
609627    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
609628    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
609629    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
609630    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
609631    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
609632    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609633    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609634    +end;
MPRINT(EM_DIAGRAM):   end;
609635    +else do;
MPRINT(EM_DIAGRAM):   else do;
609636    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609637    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
609638    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609639    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
609640    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
609641    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
609642    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
609643    +   end;
MPRINT(EM_DIAGRAM):   end;
609644    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
609645    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
609646    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
609647    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
609648    +   end;
MPRINT(EM_DIAGRAM):   end;
609649    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
609650    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
609651    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
609652    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
609653    +   end;
MPRINT(EM_DIAGRAM):   end;
609654    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
609655    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
609656    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
609657    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
609658    +   end;
MPRINT(EM_DIAGRAM):   end;
609659    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609660    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
609661    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
609662    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
609663    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609664    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609665    +   end;
MPRINT(EM_DIAGRAM):   end;
609666    +end;
MPRINT(EM_DIAGRAM):   end;
609667    +
609668    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
609669    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
609670    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
609671    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
609672    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
609673    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
609674    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609675    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609676    +end;
MPRINT(EM_DIAGRAM):   end;
609677    +else do;
MPRINT(EM_DIAGRAM):   else do;
609678    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609679    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
609680    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609681    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
609682    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
609683    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
609684    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
609685    +   end;
MPRINT(EM_DIAGRAM):   end;
609686    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
609687    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
609688    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
609689    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
609690    +   end;
MPRINT(EM_DIAGRAM):   end;
609691    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
609692    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
609693    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
609694    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
609695    +   end;
MPRINT(EM_DIAGRAM):   end;
609696    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
609697    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
609698    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
609699    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
609700    +   end;
MPRINT(EM_DIAGRAM):   end;
609701    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609702    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
609703    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
609704    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
609705    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609706    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609707    +   end;
MPRINT(EM_DIAGRAM):   end;
609708    +end;
MPRINT(EM_DIAGRAM):   end;
609709    +
609710    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
609711    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
609712    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
609713    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
609714    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
609715    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
609716    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609717    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609718    +end;
MPRINT(EM_DIAGRAM):   end;
609719    +else do;
MPRINT(EM_DIAGRAM):   else do;
609720    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609721    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
609722    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609723    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
609724    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
609725    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
609726    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
609727    +   end;
MPRINT(EM_DIAGRAM):   end;
609728    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
609729    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
609730    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
609731    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
609732    +   end;
MPRINT(EM_DIAGRAM):   end;
609733    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
609734    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
609735    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
609736    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
609737    +   end;
MPRINT(EM_DIAGRAM):   end;
609738    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
609739    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
609740    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
609741    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
609742    +   end;
MPRINT(EM_DIAGRAM):   end;
609743    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609744    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
609745    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
609746    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
609747    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609748    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609749    +   end;
MPRINT(EM_DIAGRAM):   end;
609750    +end;
MPRINT(EM_DIAGRAM):   end;
609751    +
609752    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
609753    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
609754    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
609755    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
609756    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
609757    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
609758    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609759    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609760    +end;
MPRINT(EM_DIAGRAM):   end;
609761    +else do;
MPRINT(EM_DIAGRAM):   else do;
609762    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609763    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
609764    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609765    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
609766    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
609767    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
609768    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
609769    +   end;
MPRINT(EM_DIAGRAM):   end;
609770    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
609771    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
609772    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
609773    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
609774    +   end;
MPRINT(EM_DIAGRAM):   end;
609775    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
609776    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
609777    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
609778    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
609779    +   end;
MPRINT(EM_DIAGRAM):   end;
609780    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
609781    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
609782    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
609783    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
609784    +   end;
MPRINT(EM_DIAGRAM):   end;
609785    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609786    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
609787    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
609788    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
609789    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609790    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609791    +   end;
MPRINT(EM_DIAGRAM):   end;
609792    +end;
MPRINT(EM_DIAGRAM):   end;
609793    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609794    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
609795    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609796    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609797    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
609798    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609799    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
609800    +   H11  =     0.04711628818085 * GRP_AcceptedCmp52  +    -0.13027365748107 *
609801    +        GRP_Frq2  +    -0.04632677563882 * GRP_Frq3  +    -0.08320341313947 *
609802    +        GRP_Frq4  +     0.15407011801643 * GRP_Income2
609803    +          +    -0.10383560943317 * GRP_Income3  +    -0.40582360882321 *
609804    +        GRP_Income4  +    -0.00866872751194 * GRP_Mnt2
609805    +          +     0.03835423241766 * GRP_Mnt3  +     0.10111653307734 * GRP_Mnt4
609806    +          +     0.27649544705807 * GRP_MntFishProducts2
609807    +          +     0.03806617200527 * GRP_MntFishProducts3
609808    +          +    -0.14924458232763 * GRP_MntFishProducts4
609809    +          +    -0.61470593668196 * GRP_MntGoldProds2
609810    +          +      0.3229990608995 * GRP_MntGoldProds3
609811    +          +    -0.38604519701302 * GRP_MntGoldProds4
609812    +          +    -0.16788745104812 * GRP_MntMeatProducts2
609813    +          +    -0.02411102582134 * GRP_MntMeatProducts3
609814    +          +     0.20999119459991 * GRP_MntMeatProducts4
609815    +          +     0.00013023256115 * GRP_MntWines2  +    -0.19154805414183 *
609816    +        GRP_MntWines3  +     0.10487287927665 * GRP_MntWines4
609817    +          +    -0.18385399575632 * GRP_NumCatalogPurchases3
609818    +          +     0.26139870297501 * GRP_NumCatalogPurchases4
609819    +          +    -0.45516424216634 * GRP_NumDistPurchases2
609820    +          +    -0.02821228922166 * GRP_NumDistPurchases3
609821    +          +     -0.0277463007541 * GRP_NumDistPurchases4
609822    +          +    -0.20089085216463 * GRP_NumWebPurchases2
609823    +          +     0.25653821989992 * GRP_NumWebPurchases3
609824    +          +    -0.28787845842774 * GRP_NumWebPurchases4
609825    +          +    -0.55935702240721 * GRP_RFMstat2  +     0.06115264011229 *
609826    +        GRP_RFMstat3  +     0.23395576453228 * GRP_RFMstat4
609827    +          +     0.14575536355828 * GRP_RMntFrq2  +    -0.17534689953321 *
609828    +        GRP_RMntFrq3  +     0.02136609987453 * GRP_RMntFrq4
609829    +          +       0.198287170399 * GRP_Recency2  +     0.20837384647001 *
609830    +        GRP_Recency3  +    -0.03491976754069 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = 0.04711628818085 * GRP_AcceptedCmp52 + -0.13027365748107 * 
GRP_Frq2 + -0.04632677563882 * GRP_Frq3 + -0.08320341313947 * GRP_Frq4 + 0.15407011801643 * 
GRP_Income2 + -0.10383560943317 * GRP_Income3 + -0.40582360882321 * GRP_Income4 + 
-0.00866872751194 * GRP_Mnt2 + 0.03835423241766 * GRP_Mnt3 + 0.10111653307734 * GRP_Mnt4 + 
0.27649544705807 * GRP_MntFishProducts2 + 0.03806617200527 * GRP_MntFishProducts3 + 
-0.14924458232763 * GRP_MntFishProducts4 + -0.61470593668196 * GRP_MntGoldProds2 + 
0.3229990608995 * GRP_MntGoldProds3 + -0.38604519701302 * GRP_MntGoldProds4 + 
-0.16788745104812 * GRP_MntMeatProducts2 + -0.02411102582134 * GRP_MntMeatProducts3 + 
0.20999119459991 * GRP_MntMeatProducts4 + 0.00013023256115 * GRP_MntWines2 + -0.19154805414183 
* GRP_MntWines3 + 0.10487287927665 * GRP_MntWines4 + -0.18385399575632 * 
GRP_NumCatalogPurchases3 + 0.26139870297501 * GRP_NumCatalogPurchases4 + -0.45516424216634 * 
GRP_NumDistPurchases2 + -0.02821228922166 * GRP_NumDistPurchases3 + -0.0277463007541 * 
GRP_NumDistPurchases4 + -0.20089085216463 * GRP_NumWebPurchases2 + 0.25653821989992 * 
GRP_NumWebPurchases3 + -0.28787845842774 * GRP_NumWebPurchases4 + -0.55935702240721 * 
GRP_RFMstat2 + 0.06115264011229 * GRP_RFMstat3 + 0.23395576453228 * GRP_RFMstat4 + 
0.14575536355828 * GRP_RMntFrq2 + -0.17534689953321 * GRP_RMntFrq3 + 0.02136609987453 * 
GRP_RMntFrq4 + 0.198287170399 * GRP_Recency2 + 0.20837384647001 * GRP_Recency3 + 
-0.03491976754069 * GRP_Recency4 ;
609831    +   H12  =     0.27125178346152 * GRP_AcceptedCmp52  +     0.39367144184074 *
609832    +        GRP_Frq2  +     0.47183329287273 * GRP_Frq3  +     0.06075107930837 *
609833    +        GRP_Frq4  +     0.77794746315957 * GRP_Income2
609834    +          +     0.86453663986099 * GRP_Income3  +    -0.24014105964843 *
609835    +        GRP_Income4  +     0.18332391092776 * GRP_Mnt2
609836    +          +    -0.05132712807258 * GRP_Mnt3  +    -0.12150106989075 * GRP_Mnt4
609837    +          +     0.37088160406221 * GRP_MntFishProducts2
609838    +          +     0.16511263167544 * GRP_MntFishProducts3
609839    +          +    -0.25696902575665 * GRP_MntFishProducts4
609840    +          +    -0.25511966497767 * GRP_MntGoldProds2
609841    +          +     0.10357155941955 * GRP_MntGoldProds3
609842    +          +    -0.04921872016349 * GRP_MntGoldProds4
609843    +          +    -0.11063359070508 * GRP_MntMeatProducts2
609844    +          +    -0.08379163747059 * GRP_MntMeatProducts3
609845    +          +     0.18893182644469 * GRP_MntMeatProducts4
609846    +          +     0.41618237258351 * GRP_MntWines2  +    -0.00683285266538 *
609847    +        GRP_MntWines3  +    -0.12347598430406 * GRP_MntWines4
609848    +          +    -0.28043452635336 * GRP_NumCatalogPurchases3
609849    +          +     0.19010019257459 * GRP_NumCatalogPurchases4
609850    +          +    -0.29362124038326 * GRP_NumDistPurchases2
609851    +          +    -0.03304017306295 * GRP_NumDistPurchases3
609852    +          +    -0.11165609534026 * GRP_NumDistPurchases4
609853    +          +      0.1536111955491 * GRP_NumWebPurchases2
609854    +          +     0.14856361677069 * GRP_NumWebPurchases3
609855    +          +      0.0385282170017 * GRP_NumWebPurchases4
609856    +          +    -0.42245587008719 * GRP_RFMstat2  +     0.15962543914936 *
609857    +        GRP_RFMstat3  +    -0.39342058803069 * GRP_RFMstat4
609858    +          +    -0.28590254800789 * GRP_RMntFrq2  +    -0.21564130946407 *
609859    +        GRP_RMntFrq3  +    -0.22044591524393 * GRP_RMntFrq4
609860    +          +      1.1127849486131 * GRP_Recency2  +     0.37451568388848 *
609861    +        GRP_Recency3  +    -0.33640572843758 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = 0.27125178346152 * GRP_AcceptedCmp52 + 0.39367144184074 * GRP_Frq2 
+ 0.47183329287273 * GRP_Frq3 + 0.06075107930837 * GRP_Frq4 + 0.77794746315957 * GRP_Income2 + 
0.86453663986099 * GRP_Income3 + -0.24014105964843 * GRP_Income4 + 0.18332391092776 * GRP_Mnt2 
+ -0.05132712807258 * GRP_Mnt3 + -0.12150106989075 * GRP_Mnt4 + 0.37088160406221 * 
GRP_MntFishProducts2 + 0.16511263167544 * GRP_MntFishProducts3 + -0.25696902575665 * 
GRP_MntFishProducts4 + -0.25511966497767 * GRP_MntGoldProds2 + 0.10357155941955 * 
GRP_MntGoldProds3 + -0.04921872016349 * GRP_MntGoldProds4 + -0.11063359070508 * 
GRP_MntMeatProducts2 + -0.08379163747059 * GRP_MntMeatProducts3 + 0.18893182644469 * 
GRP_MntMeatProducts4 + 0.41618237258351 * GRP_MntWines2 + -0.00683285266538 * GRP_MntWines3 + 
-0.12347598430406 * GRP_MntWines4 + -0.28043452635336 * GRP_NumCatalogPurchases3 + 
0.19010019257459 * GRP_NumCatalogPurchases4 + -0.29362124038326 * GRP_NumDistPurchases2 + 
-0.03304017306295 * GRP_NumDistPurchases3 + -0.11165609534026 * GRP_NumDistPurchases4 + 
0.1536111955491 * GRP_NumWebPurchases2 + 0.14856361677069 * GRP_NumWebPurchases3 + 
0.0385282170017 * GRP_NumWebPurchases4 + -0.42245587008719 * GRP_RFMstat2 + 0.15962543914936 * 
GRP_RFMstat3 + -0.39342058803069 * GRP_RFMstat4 + -0.28590254800789 * GRP_RMntFrq2 + 
-0.21564130946407 * GRP_RMntFrq3 + -0.22044591524393 * GRP_RMntFrq4 + 1.1127849486131 * 
GRP_Recency2 + 0.37451568388848 * GRP_Recency3 + -0.33640572843758 * GRP_Recency4 ;
609862    +   H13  =    -0.00640066603747 * GRP_AcceptedCmp52  +    -0.11333647417979 *
609863    +        GRP_Frq2  +    -0.11647952262542 * GRP_Frq3  +    -0.14006488881524 *
609864    +        GRP_Frq4  +     0.27728124026233 * GRP_Income2
609865    +          +     0.05697521068764 * GRP_Income3  +    -0.37633026358792 *
609866    +        GRP_Income4  +    -0.17440692689662 * GRP_Mnt2
609867    +          +    -0.10036881667196 * GRP_Mnt3  +    -0.13642140412399 * GRP_Mnt4
609868    +          +      0.2081380258467 * GRP_MntFishProducts2
609869    +          +    -0.08668229639505 * GRP_MntFishProducts3
609870    +          +     0.14081019578955 * GRP_MntFishProducts4
609871    +          +    -0.17027561298255 * GRP_MntGoldProds2
609872    +          +    -0.34742776244059 * GRP_MntGoldProds3
609873    +          +     0.12168590176726 * GRP_MntGoldProds4
609874    +          +    -0.05512121591373 * GRP_MntMeatProducts2
609875    +          +    -0.34519642935258 * GRP_MntMeatProducts3
609876    +          +    -0.13168847945689 * GRP_MntMeatProducts4
609877    +          +     0.28193282372353 * GRP_MntWines2  +     0.14946457186192 *
609878    +        GRP_MntWines3  +     0.06804391722409 * GRP_MntWines4
609879    +          +    -0.08346399909028 * GRP_NumCatalogPurchases3
609880    +          +    -0.15880621701951 * GRP_NumCatalogPurchases4
609881    +          +    -0.25528445685452 * GRP_NumDistPurchases2
609882    +          +    -0.10526630829598 * GRP_NumDistPurchases3
609883    +          +    -0.03726952062424 * GRP_NumDistPurchases4
609884    +          +    -0.05938919871449 * GRP_NumWebPurchases2
609885    +          +     0.18366019558751 * GRP_NumWebPurchases3
609886    +          +    -0.19335960904254 * GRP_NumWebPurchases4
609887    +          +     0.15283900648967 * GRP_RFMstat2  +    -0.03738648354517 *
609888    +        GRP_RFMstat3  +      0.0780054343538 * GRP_RFMstat4
609889    +          +     0.08482465227003 * GRP_RMntFrq2  +    -0.04156217601701 *
609890    +        GRP_RMntFrq3  +    -0.27972469674532 * GRP_RMntFrq4
609891    +          +     0.20311018978803 * GRP_Recency2  +     0.02026894035212 *
609892    +        GRP_Recency3  +    -0.22461335805045 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = -0.00640066603747 * GRP_AcceptedCmp52 + -0.11333647417979 * 
GRP_Frq2 + -0.11647952262542 * GRP_Frq3 + -0.14006488881524 * GRP_Frq4 + 0.27728124026233 * 
GRP_Income2 + 0.05697521068764 * GRP_Income3 + -0.37633026358792 * GRP_Income4 + 
-0.17440692689662 * GRP_Mnt2 + -0.10036881667196 * GRP_Mnt3 + -0.13642140412399 * GRP_Mnt4 + 
0.2081380258467 * GRP_MntFishProducts2 + -0.08668229639505 * GRP_MntFishProducts3 + 
0.14081019578955 * GRP_MntFishProducts4 + -0.17027561298255 * GRP_MntGoldProds2 + 
-0.34742776244059 * GRP_MntGoldProds3 + 0.12168590176726 * GRP_MntGoldProds4 + 
-0.05512121591373 * GRP_MntMeatProducts2 + -0.34519642935258 * GRP_MntMeatProducts3 + 
-0.13168847945689 * GRP_MntMeatProducts4 + 0.28193282372353 * GRP_MntWines2 + 0.14946457186192 
* GRP_MntWines3 + 0.06804391722409 * GRP_MntWines4 + -0.08346399909028 * 
GRP_NumCatalogPurchases3 + -0.15880621701951 * GRP_NumCatalogPurchases4 + -0.25528445685452 * 
GRP_NumDistPurchases2 + -0.10526630829598 * GRP_NumDistPurchases3 + -0.03726952062424 * 
GRP_NumDistPurchases4 + -0.05938919871449 * GRP_NumWebPurchases2 + 0.18366019558751 * 
GRP_NumWebPurchases3 + -0.19335960904254 * GRP_NumWebPurchases4 + 0.15283900648967 * 
GRP_RFMstat2 + -0.03738648354517 * GRP_RFMstat3 + 0.0780054343538 * GRP_RFMstat4 + 
0.08482465227003 * GRP_RMntFrq2 + -0.04156217601701 * GRP_RMntFrq3 + -0.27972469674532 * 
GRP_RMntFrq4 + 0.20311018978803 * GRP_Recency2 + 0.02026894035212 * GRP_Recency3 + 
-0.22461335805045 * GRP_Recency4 ;
609893    +   H14  =     0.84759844370999 * GRP_AcceptedCmp52  +    -0.40207108050785 *
609894    +        GRP_Frq2  +    -0.11957926267486 * GRP_Frq3  +     0.39764041522616 *
609895    +        GRP_Frq4  +    -0.21133467357887 * GRP_Income2
609896    +          +    -0.37600727819569 * GRP_Income3  +     0.61191321060217 *
609897    +        GRP_Income4  +    -0.01918945699115 * GRP_Mnt2
609898    +          +    -0.28923187120656 * GRP_Mnt3  +     0.20590552102477 * GRP_Mnt4
609899    +          +     0.03194734131194 * GRP_MntFishProducts2
609900    +          +    -0.08555244396388 * GRP_MntFishProducts3
609901    +          +     -0.1294949057865 * GRP_MntFishProducts4
609902    +          +    -0.28742848639985 * GRP_MntGoldProds2
609903    +          +    -0.00435260781733 * GRP_MntGoldProds3
609904    +          +    -0.12007613875856 * GRP_MntGoldProds4
609905    +          +     0.36325039255643 * GRP_MntMeatProducts2
609906    +          +    -0.08728922471846 * GRP_MntMeatProducts3
609907    +          +    -0.19062123750322 * GRP_MntMeatProducts4
609908    +          +    -0.54694203087226 * GRP_MntWines2  +    -0.63189775838668 *
609909    +        GRP_MntWines3  +      0.3957291463714 * GRP_MntWines4
609910    +          +       0.435944756052 * GRP_NumCatalogPurchases3
609911    +          +      0.2205855993165 * GRP_NumCatalogPurchases4
609912    +          +     0.59192262496927 * GRP_NumDistPurchases2
609913    +          +     0.04008128670209 * GRP_NumDistPurchases3
609914    +          +    -0.00330725734446 * GRP_NumDistPurchases4
609915    +          +     0.18235346155154 * GRP_NumWebPurchases2
609916    +          +     0.06863306934707 * GRP_NumWebPurchases3
609917    +          +     0.06339667504979 * GRP_NumWebPurchases4
609918    +          +     0.09545179117637 * GRP_RFMstat2  +     0.14008923310046 *
609919    +        GRP_RFMstat3  +    -0.26191188327872 * GRP_RFMstat4
609920    +          +    -0.21341781402946 * GRP_RMntFrq2  +    -0.16158721892261 *
609921    +        GRP_RMntFrq3  +    -0.03125612925483 * GRP_RMntFrq4
609922    +          +    -0.57136536034562 * GRP_Recency2  +    -0.28843025104868 *
609923    +        GRP_Recency3  +     0.23682927566038 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84759844370999 * GRP_AcceptedCmp52 + -0.40207108050785 * 
GRP_Frq2 + -0.11957926267486 * GRP_Frq3 + 0.39764041522616 * GRP_Frq4 + -0.21133467357887 * 
GRP_Income2 + -0.37600727819569 * GRP_Income3 + 0.61191321060217 * GRP_Income4 + 
-0.01918945699115 * GRP_Mnt2 + -0.28923187120656 * GRP_Mnt3 + 0.20590552102477 * GRP_Mnt4 + 
0.03194734131194 * GRP_MntFishProducts2 + -0.08555244396388 * GRP_MntFishProducts3 + 
-0.1294949057865 * GRP_MntFishProducts4 + -0.28742848639985 * GRP_MntGoldProds2 + 
-0.00435260781733 * GRP_MntGoldProds3 + -0.12007613875856 * GRP_MntGoldProds4 + 
0.36325039255643 * GRP_MntMeatProducts2 + -0.08728922471846 * GRP_MntMeatProducts3 + 
-0.19062123750322 * GRP_MntMeatProducts4 + -0.54694203087226 * GRP_MntWines2 + 
-0.63189775838668 * GRP_MntWines3 + 0.3957291463714 * GRP_MntWines4 + 0.435944756052 * 
GRP_NumCatalogPurchases3 + 0.2205855993165 * GRP_NumCatalogPurchases4 + 0.59192262496927 * 
GRP_NumDistPurchases2 + 0.04008128670209 * GRP_NumDistPurchases3 + -0.00330725734446 * 
GRP_NumDistPurchases4 + 0.18235346155154 * GRP_NumWebPurchases2 + 0.06863306934707 * 
GRP_NumWebPurchases3 + 0.06339667504979 * GRP_NumWebPurchases4 + 0.09545179117637 * 
GRP_RFMstat2 + 0.14008923310046 * GRP_RFMstat3 + -0.26191188327872 * GRP_RFMstat4 + 
-0.21341781402946 * GRP_RMntFrq2 + -0.16158721892261 * GRP_RMntFrq3 + -0.03125612925483 * 
GRP_RMntFrq4 + -0.57136536034562 * GRP_Recency2 + -0.28843025104868 * GRP_Recency3 + 
0.23682927566038 * GRP_Recency4 ;
609924    +   H15  =      -0.270075163047 * GRP_AcceptedCmp52  +     0.12329750151184 *
609925    +        GRP_Frq2  +    -0.00636074237745 * GRP_Frq3  +     0.06125360704983 *
609926    +        GRP_Frq4  +    -0.02221726738608 * GRP_Income2
609927    +          +     0.02831089386274 * GRP_Income3  +    -0.14245161962732 *
609928    +        GRP_Income4  +    -0.33215929968734 * GRP_Mnt2
609929    +          +    -0.12990224977804 * GRP_Mnt3  +     0.01224047316232 * GRP_Mnt4
609930    +          +     0.43021866757807 * GRP_MntFishProducts2
609931    +          +    -0.27483945374498 * GRP_MntFishProducts3
609932    +          +     0.35053639451726 * GRP_MntFishProducts4
609933    +          +    -0.00509900753344 * GRP_MntGoldProds2
609934    +          +     -0.2114201518265 * GRP_MntGoldProds3
609935    +          +    -0.13970354632794 * GRP_MntGoldProds4
609936    +          +     0.08840789662233 * GRP_MntMeatProducts2
609937    +          +    -0.00365357432837 * GRP_MntMeatProducts3
609938    +          +    -0.17124615615804 * GRP_MntMeatProducts4
609939    +          +     -0.3149461311814 * GRP_MntWines2  +     0.13173264925134 *
609940    +        GRP_MntWines3  +    -0.11604679382146 * GRP_MntWines4
609941    +          +     -0.5316533346484 * GRP_NumCatalogPurchases3
609942    +          +    -0.29157679545376 * GRP_NumCatalogPurchases4
609943    +          +    -0.08055861305066 * GRP_NumDistPurchases2
609944    +          +    -0.08674081531395 * GRP_NumDistPurchases3
609945    +          +    -0.17551921835199 * GRP_NumDistPurchases4
609946    +          +    -0.03222539166367 * GRP_NumWebPurchases2
609947    +          +    -0.13811302108485 * GRP_NumWebPurchases3
609948    +          +     0.06646439445075 * GRP_NumWebPurchases4
609949    +          +    -0.07079122602276 * GRP_RFMstat2  +    -0.39615424117539 *
609950    +        GRP_RFMstat3  +     0.04146636703929 * GRP_RFMstat4
609951    +          +     -0.0853308883886 * GRP_RMntFrq2  +    -0.13702404280363 *
609952    +        GRP_RMntFrq3  +    -0.27355720177265 * GRP_RMntFrq4
609953    +          +     0.33867777321903 * GRP_Recency2  +    -0.09253457902218 *
609954    +        GRP_Recency3  +    -0.05897210090797 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = -0.270075163047 * GRP_AcceptedCmp52 + 0.12329750151184 * GRP_Frq2 
+ -0.00636074237745 * GRP_Frq3 + 0.06125360704983 * GRP_Frq4 + -0.02221726738608 * GRP_Income2 
+ 0.02831089386274 * GRP_Income3 + -0.14245161962732 * GRP_Income4 + -0.33215929968734 * 
GRP_Mnt2 + -0.12990224977804 * GRP_Mnt3 + 0.01224047316232 * GRP_Mnt4 + 0.43021866757807 * 
GRP_MntFishProducts2 + -0.27483945374498 * GRP_MntFishProducts3 + 0.35053639451726 * 
GRP_MntFishProducts4 + -0.00509900753344 * GRP_MntGoldProds2 + -0.2114201518265 * 
GRP_MntGoldProds3 + -0.13970354632794 * GRP_MntGoldProds4 + 0.08840789662233 * 
GRP_MntMeatProducts2 + -0.00365357432837 * GRP_MntMeatProducts3 + -0.17124615615804 * 
GRP_MntMeatProducts4 + -0.3149461311814 * GRP_MntWines2 + 0.13173264925134 * GRP_MntWines3 + 
-0.11604679382146 * GRP_MntWines4 + -0.5316533346484 * GRP_NumCatalogPurchases3 + 
-0.29157679545376 * GRP_NumCatalogPurchases4 + -0.08055861305066 * GRP_NumDistPurchases2 + 
-0.08674081531395 * GRP_NumDistPurchases3 + -0.17551921835199 * GRP_NumDistPurchases4 + 
-0.03222539166367 * GRP_NumWebPurchases2 + -0.13811302108485 * GRP_NumWebPurchases3 + 
0.06646439445075 * GRP_NumWebPurchases4 + -0.07079122602276 * GRP_RFMstat2 + -0.39615424117539 
* GRP_RFMstat3 + 0.04146636703929 * GRP_RFMstat4 + -0.0853308883886 * GRP_RMntFrq2 + 
-0.13702404280363 * GRP_RMntFrq3 + -0.27355720177265 * GRP_RMntFrq4 + 0.33867777321903 * 
GRP_Recency2 + -0.09253457902218 * GRP_Recency3 + -0.05897210090797 * GRP_Recency4 ;
609955    +   H16  =    -0.30271284676983 * GRP_AcceptedCmp52  +     0.03117199224725 *
609956    +        GRP_Frq2  +    -0.26799382098604 * GRP_Frq3  +    -0.13070336759958 *
609957    +        GRP_Frq4  +     0.12672160649087 * GRP_Income2
609958    +          +    -0.21150829323326 * GRP_Income3  +    -0.15720750294685 *
609959    +        GRP_Income4  +     0.09905728950306 * GRP_Mnt2
609960    +          +    -0.43923284882193 * GRP_Mnt3  +     0.03431635930451 * GRP_Mnt4
609961    +          +     0.06947673564935 * GRP_MntFishProducts2
609962    +          +     -0.2220161944842 * GRP_MntFishProducts3
609963    +          +      -0.115965454808 * GRP_MntFishProducts4
609964    +          +    -0.01957355844265 * GRP_MntGoldProds2
609965    +          +     0.29129268161925 * GRP_MntGoldProds3
609966    +          +     0.06228256145252 * GRP_MntGoldProds4
609967    +          +    -0.09695386874195 * GRP_MntMeatProducts2
609968    +          +    -0.15864685727366 * GRP_MntMeatProducts3
609969    +          +    -0.49032797729016 * GRP_MntMeatProducts4
609970    +          +     0.37470089287985 * GRP_MntWines2  +     0.36115743239288 *
609971    +        GRP_MntWines3  +    -0.34359138002961 * GRP_MntWines4
609972    +          +    -0.19461285131827 * GRP_NumCatalogPurchases3
609973    +          +     0.04513674368784 * GRP_NumCatalogPurchases4
609974    +          +    -0.03507865895925 * GRP_NumDistPurchases2
609975    +          +     0.09915485245283 * GRP_NumDistPurchases3
609976    +          +    -0.33100664342194 * GRP_NumDistPurchases4
609977    +          +     0.13724527126482 * GRP_NumWebPurchases2
609978    +          +    -0.02356592443136 * GRP_NumWebPurchases3
609979    +          +      0.2573229592217 * GRP_NumWebPurchases4
609980    +          +     0.05747809528111 * GRP_RFMstat2  +     0.09535983705402 *
609981    +        GRP_RFMstat3  +    -0.10249907985488 * GRP_RFMstat4
609982    +          +     0.08979004612339 * GRP_RMntFrq2  +     0.21152228987437 *
609983    +        GRP_RMntFrq3  +     0.01345639991803 * GRP_RMntFrq4
609984    +          +     0.52890036744064 * GRP_Recency2  +    -0.04507648861408 *
609985    +        GRP_Recency3  +    -0.03669931738284 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = -0.30271284676983 * GRP_AcceptedCmp52 + 0.03117199224725 * 
GRP_Frq2 + -0.26799382098604 * GRP_Frq3 + -0.13070336759958 * GRP_Frq4 + 0.12672160649087 * 
GRP_Income2 + -0.21150829323326 * GRP_Income3 + -0.15720750294685 * GRP_Income4 + 
0.09905728950306 * GRP_Mnt2 + -0.43923284882193 * GRP_Mnt3 + 0.03431635930451 * GRP_Mnt4 + 
0.06947673564935 * GRP_MntFishProducts2 + -0.2220161944842 * GRP_MntFishProducts3 + 
-0.115965454808 * GRP_MntFishProducts4 + -0.01957355844265 * GRP_MntGoldProds2 + 
0.29129268161925 * GRP_MntGoldProds3 + 0.06228256145252 * GRP_MntGoldProds4 + 
-0.09695386874195 * GRP_MntMeatProducts2 + -0.15864685727366 * GRP_MntMeatProducts3 + 
-0.49032797729016 * GRP_MntMeatProducts4 + 0.37470089287985 * GRP_MntWines2 + 0.36115743239288 
* GRP_MntWines3 + -0.34359138002961 * GRP_MntWines4 + -0.19461285131827 * 
GRP_NumCatalogPurchases3 + 0.04513674368784 * GRP_NumCatalogPurchases4 + -0.03507865895925 * 
GRP_NumDistPurchases2 + 0.09915485245283 * GRP_NumDistPurchases3 + -0.33100664342194 * 
GRP_NumDistPurchases4 + 0.13724527126482 * GRP_NumWebPurchases2 + -0.02356592443136 * 
GRP_NumWebPurchases3 + 0.2573229592217 * GRP_NumWebPurchases4 + 0.05747809528111 * 
GRP_RFMstat2 + 0.09535983705402 * GRP_RFMstat3 + -0.10249907985488 * GRP_RFMstat4 + 
0.08979004612339 * GRP_RMntFrq2 + 0.21152228987437 * GRP_RMntFrq3 + 0.01345639991803 * 
GRP_RMntFrq4 + 0.52890036744064 * GRP_Recency2 + -0.04507648861408 * GRP_Recency3 + 
-0.03669931738284 * GRP_Recency4 ;
609986    +   H17  =    -0.24394616675587 * GRP_AcceptedCmp52  +     0.28964856194613 *
609987    +        GRP_Frq2  +    -0.08289613695725 * GRP_Frq3  +     0.21998897095553 *
609988    +        GRP_Frq4  +     0.18107497199311 * GRP_Income2
609989    +          +      0.1107558510921 * GRP_Income3  +    -0.36116869826735 *
609990    +        GRP_Income4  +     0.02424010270897 * GRP_Mnt2
609991    +          +    -0.15852275336702 * GRP_Mnt3  +    -0.35418266455505 * GRP_Mnt4
609992    +          +     0.20869043565167 * GRP_MntFishProducts2
609993    +          +     0.10833559681607 * GRP_MntFishProducts3
609994    +          +    -0.10347776442631 * GRP_MntFishProducts4
609995    +          +    -0.32065428276511 * GRP_MntGoldProds2
609996    +          +    -0.43926899233496 * GRP_MntGoldProds3
609997    +          +    -0.10606506374615 * GRP_MntGoldProds4
609998    +          +    -0.31984276315874 * GRP_MntMeatProducts2
609999    +          +    -0.10334364706061 * GRP_MntMeatProducts3
610000    +          +    -0.00884354140504 * GRP_MntMeatProducts4
610001    +          +     0.23600639890053 * GRP_MntWines2  +    -0.29934386684584 *
610002    +        GRP_MntWines3  +     0.16274179248724 * GRP_MntWines4
610003    +          +    -0.32950762391869 * GRP_NumCatalogPurchases3
610004    +          +     0.01712392556947 * GRP_NumCatalogPurchases4
610005    +          +    -0.34220067420996 * GRP_NumDistPurchases2
610006    +          +    -0.15410597036596 * GRP_NumDistPurchases3
610007    +          +    -0.05769918195545 * GRP_NumDistPurchases4
610008    +          +    -0.03929570019271 * GRP_NumWebPurchases2
610009    +          +    -0.30647973770852 * GRP_NumWebPurchases3
610010    +          +    -0.09809448516146 * GRP_NumWebPurchases4
610011    +          +     0.02199652262588 * GRP_RFMstat2  +    -0.18677191406874 *
610012    +        GRP_RFMstat3  +    -0.06022520470141 * GRP_RFMstat4
610013    +          +    -0.14995521360575 * GRP_RMntFrq2  +     0.00512207268691 *
610014    +        GRP_RMntFrq3  +    -0.58308661640325 * GRP_RMntFrq4
610015    +          +     0.09125052186965 * GRP_Recency2  +    -0.01605996390173 *
610016    +        GRP_Recency3  +     0.09260166797685 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = -0.24394616675587 * GRP_AcceptedCmp52 + 0.28964856194613 * 
GRP_Frq2 + -0.08289613695725 * GRP_Frq3 + 0.21998897095553 * GRP_Frq4 + 0.18107497199311 * 
GRP_Income2 + 0.1107558510921 * GRP_Income3 + -0.36116869826735 * GRP_Income4 + 
0.02424010270897 * GRP_Mnt2 + -0.15852275336702 * GRP_Mnt3 + -0.35418266455505 * GRP_Mnt4 + 
0.20869043565167 * GRP_MntFishProducts2 + 0.10833559681607 * GRP_MntFishProducts3 + 
-0.10347776442631 * GRP_MntFishProducts4 + -0.32065428276511 * GRP_MntGoldProds2 + 
-0.43926899233496 * GRP_MntGoldProds3 + -0.10606506374615 * GRP_MntGoldProds4 + 
-0.31984276315874 * GRP_MntMeatProducts2 + -0.10334364706061 * GRP_MntMeatProducts3 + 
-0.00884354140504 * GRP_MntMeatProducts4 + 0.23600639890053 * GRP_MntWines2 + 
-0.29934386684584 * GRP_MntWines3 + 0.16274179248724 * GRP_MntWines4 + -0.32950762391869 * 
GRP_NumCatalogPurchases3 + 0.01712392556947 * GRP_NumCatalogPurchases4 + -0.34220067420996 * 
GRP_NumDistPurchases2 + -0.15410597036596 * GRP_NumDistPurchases3 + -0.05769918195545 * 
GRP_NumDistPurchases4 + -0.03929570019271 * GRP_NumWebPurchases2 + -0.30647973770852 * 
GRP_NumWebPurchases3 + -0.09809448516146 * GRP_NumWebPurchases4 + 0.02199652262588 * 
GRP_RFMstat2 + -0.18677191406874 * GRP_RFMstat3 + -0.06022520470141 * GRP_RFMstat4 + 
-0.14995521360575 * GRP_RMntFrq2 + 0.00512207268691 * GRP_RMntFrq3 + -0.58308661640325 * 
GRP_RMntFrq4 + 0.09125052186965 * GRP_Recency2 + -0.01605996390173 * GRP_Recency3 + 
0.09260166797685 * GRP_Recency4 ;
610017    +   H11  =     1.47536864687001 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.47536864687001 + H11 ;
610018    +   H12  =    -0.03796823184366 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03796823184366 + H12 ;
610019    +   H13  =     0.20545721254095 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.20545721254095 + H13 ;
610020    +   H14  =     0.82513531048516 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82513531048516 + H14 ;
610021    +   H15  =    -0.86531822153621 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.86531822153621 + H15 ;
610022    +   H16  =    -1.63588460642984 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.63588460642984 + H16 ;
610023    +   H17  =     1.27216054538203 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.27216054538203 + H17 ;
610024    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
610025    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
610026    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
610027    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
610028    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
610029    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
610030    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
610031    +END;
MPRINT(EM_DIAGRAM):   END;
610032    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
610033    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
610034    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
610035    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
610036    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
610037    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
610038    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
610039    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
610040    +END;
MPRINT(EM_DIAGRAM):   END;
610041    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610042    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
610043    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610044    +
610045    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
610046    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
610047    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
610048    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
610049    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
610050    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610051    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
610052    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
610053    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
610054    +end;
MPRINT(EM_DIAGRAM):   end;
610055    +else do;
MPRINT(EM_DIAGRAM):   else do;
610056    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
610057    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
610058    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
610059    +   end;
MPRINT(EM_DIAGRAM):   end;
610060    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
610061    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
610062    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
610063    +   end;
MPRINT(EM_DIAGRAM):   end;
610064    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610065    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
610066    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
610067    +   end;
MPRINT(EM_DIAGRAM):   end;
610068    +end;
MPRINT(EM_DIAGRAM):   end;
610069    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
610070    +   P_DepVar1  =     1.96524348977009 * H11  +     1.80437226064293 * H12
610071    +          +     0.26614818926491 * H13  +     -2.3095876381555 * H14
610072    +          +     0.55402099095215 * H15  +     1.54522449582288 * H16
610073    +          +     1.13845442289883 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.96524348977009 * H11 + 1.80437226064293 * H12 + 
0.26614818926491 * H13 + -2.3095876381555 * H14 + 0.55402099095215 * H15 + 1.54522449582288 * 
H16 + 1.13845442289883 * H17 ;
610074    +   P_DepVar1  =    -1.53783202740594 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53783202740594 + P_DepVar1 ;
610075    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
610076    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
610077    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
610078    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
610079    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
610080    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
610081    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
610082    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
610083    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
610084    +END;
MPRINT(EM_DIAGRAM):   END;
610085    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
610086    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
610087    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
610088    +END;
MPRINT(EM_DIAGRAM):   END;
610089    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
610090    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
610091    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
610092    +END;
MPRINT(EM_DIAGRAM):   END;
610093    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
610094    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
610095    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
610096    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
610097    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
610098    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
610099    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
610100    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610101    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
610102    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610103    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
610104    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
610105    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
610106    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
610107    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
610108    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
610109    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
610110    +END;
MPRINT(EM_DIAGRAM):   END;
610111    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
610112    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
610113    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
610114    +drop
610115    +H11
610116    +H12
610117    +H13
610118    +H14
610119    +H15
610120    +H16
610121    +H17
610122    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
610123     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL18_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
610124     quit;
610125     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
610126     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
610127     * Neural18: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural18: Computing metadata for TRAIN data;
610128     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL18_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural18\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural18_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural18_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural18_TRAIN out=WORK.M300ASXV noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M300ASXV;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M300ASXV(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M300ASXV;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M300ASXV;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M10AWOCF NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10AWOCF;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M10AWOCF;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M01_68ZT(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M10AWOCF;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10AWOCF;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M10AWOCF;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10AWOCF;
MPRINT(EMADVISECOLUMNS):   set WORK.M10AWOCF;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural18_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural18";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural18";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural18";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural18";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural18";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural18";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural18";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural18";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural18";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural18";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural18: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
610440     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
610441     set EMWS8.Neural18_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural18_EMINFO;
610442     where DATA='Neural18' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural18' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
610443     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL18_EMINFO.
      WHERE (DATA='Neural18') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

610444     data EMWS8.Neural18_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural18_EMINFO;
610445     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
610446     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
610447     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL18_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
610451     run;
610452     data EMWS8.Neural18_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural18_EMINFO;
610453     set EMWS8.Neural18_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural18_EMINFO WORK.MODELTEMP_INFO;
610454     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL18_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL18_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

610455     proc sort data = EMWS8.Neural18_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural18_EMINFO NOTHREADS;
610456     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
610457     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL18_EMINFO.
NOTE: The data set EMWS8.NEURAL18_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

610458     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
610459     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
610460     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

610461     proc sort data = EMWS8.Neural18_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural18_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
610462     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
610463     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL18_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

610464     data EMWS8.Neural18_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural18_EMINFO;
610465     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
610466     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
610467     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL18_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

610468     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
610469     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
610470     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
610471     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL18_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL18_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
