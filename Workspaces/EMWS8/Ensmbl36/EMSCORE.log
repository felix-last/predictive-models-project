MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.38 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.38 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1LH1QGR 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1LH1QGR new;
MPRINT(EM_DIAGRAM):   run;
2246739    filename emflow
2246739  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring AUTONEURAL6_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246740    *------------------------------------------------------------*;
2246741    * Ensmbl36: Scoring AUTONEURAL6_TRAIN data;
2246742    *------------------------------------------------------------*;
2246743    data EMWS8.Ensmbl36_TRAIN
2246744    / view=EMWS8.Ensmbl36_TRAIN
2246745    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_TRAIN / view=EMWS8.Ensmbl36_TRAIN ;
2246746    set EMWS8.AutoNeural6_TRAIN
2246747    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_TRAIN ;
2246748    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMFLOWSCORE.sas.
2246749   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246750   +* Ensmbl36: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Combine model for DepVar;
2246751   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246752   +* Ensmbl36: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 1 of 7;
2246753   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246754   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246755   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2246756   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2246757   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2246758   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246760   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2246761   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2246762   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2246763   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246764   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246765   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2246766   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2246767   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2246768   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246769   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246770   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2246771   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2246772   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2246773   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246774   +
2246775   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2246776   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2246776  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2246777   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2246778   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2246779   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2246780   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2246781   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2246782   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246783   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2246784   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2246785   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2246786   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246787   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246788   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2246789   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246790   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2246791   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2246792   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2246793   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246794   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2246795   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2246796   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2246797   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246799   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2246800   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2246801   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2246802   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246803   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246804   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2246805   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2246806   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
2246807   +*------------------------------------------------------------*;
The SAS System

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2246808   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2246809   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2246810   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2246811   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2246812   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2246813   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2246814   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2246815   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2246816   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2246817   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2246818   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2246819   +LENGTH _WARN_ $4
2246820   +      F_DepVar  $ 12
2246821   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2246822   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2246823   +
2246824   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2246825   +
2246826   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2246827   +
2246828   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2246829   +
2246830   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2246831   +
2246832   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2246833   +
2246834   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2246835   +
2246836   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2246837   +
2246838   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2246839   +
2246840   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2246841   +
2246842   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2246843   +
2246844   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2246845   +
2246846   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2246847   +
2246848   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2246849   +
2246850   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2246851   +
2246852   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2246853   +
2246854   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2246855   +
2246856   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2246857   +
2246858   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2246859   +
2246860   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2246861   +
2246862   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2246863   +
2246864   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2246865   +
2246866   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2246867   +
2246868   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2246869   +
2246870   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2246871   +
2246872   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2246873   +
2246874   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2246875   +
2246876   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2246877   +
2246878   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2246879   +
2246880   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2246881   +
2246882   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2246883   +
2246884   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2246885   +
2246886   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2246887   +
2246888   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2246889   +
2246890   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2246891   +
2246892   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2246893   +
2246894   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2246895   +
2246896   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2246897   +
2246898   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2246899   +
2246900   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2246901   +
2246902   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2246903   +
2246904   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2246905   +
2246906   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2246907   +
2246908   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2246909   +
2246910   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2246911   +
2246912   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2246913   +
2246914   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2246915   +
2246916   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2246917   +
2246918   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2246919   +
2246920   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2246921   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2246922   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2246923   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2246924   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2246925   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2246926   +end;
MPRINT(EM_DIAGRAM):   end;
2246927   +else do;
MPRINT(EM_DIAGRAM):   else do;
2246928   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2246929   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2246930   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2246931   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2246932   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2246933   +   end;
MPRINT(EM_DIAGRAM):   end;
2246934   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2246935   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2246936   +   end;
MPRINT(EM_DIAGRAM):   end;
2246937   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2246938   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2246939   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2246940   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2246941   +   end;
MPRINT(EM_DIAGRAM):   end;
2246942   +end;
MPRINT(EM_DIAGRAM):   end;
2246943   +
2246944   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2246945   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2246946   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2246947   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2246948   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2246949   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2246950   +end;
MPRINT(EM_DIAGRAM):   end;
2246951   +else do;
MPRINT(EM_DIAGRAM):   else do;
2246952   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2246953   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2246954   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2246955   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2246956   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2246957   +   end;
MPRINT(EM_DIAGRAM):   end;
2246958   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2246959   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2246960   +   end;
MPRINT(EM_DIAGRAM):   end;
2246961   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2246962   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2246963   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2246964   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2246965   +   end;
MPRINT(EM_DIAGRAM):   end;
2246966   +end;
MPRINT(EM_DIAGRAM):   end;
2246967   +
2246968   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2246969   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2246970   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2246971   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2246972   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2246973   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2246974   +end;
MPRINT(EM_DIAGRAM):   end;
2246975   +else do;
MPRINT(EM_DIAGRAM):   else do;
2246976   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2246977   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2246978   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2246979   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2246980   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2246981   +   end;
MPRINT(EM_DIAGRAM):   end;
2246982   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2246983   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2246984   +   end;
MPRINT(EM_DIAGRAM):   end;
2246985   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2246986   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2246987   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2246988   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2246989   +   end;
MPRINT(EM_DIAGRAM):   end;
2246990   +end;
MPRINT(EM_DIAGRAM):   end;
2246991   +
2246992   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2246993   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2246994   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2246995   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2246996   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2246997   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2246998   +end;
MPRINT(EM_DIAGRAM):   end;
2246999   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247000   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2247001   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2247002   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247003   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2247004   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2247005   +   end;
MPRINT(EM_DIAGRAM):   end;
2247006   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2247007   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2247008   +   end;
MPRINT(EM_DIAGRAM):   end;
2247009   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247010   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2247011   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247012   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247013   +   end;
MPRINT(EM_DIAGRAM):   end;
2247014   +end;
MPRINT(EM_DIAGRAM):   end;
2247015   +
2247016   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2247017   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2247018   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2247019   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2247020   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2247021   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247022   +end;
MPRINT(EM_DIAGRAM):   end;
2247023   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247024   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2247025   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2247026   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247027   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2247028   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2247029   +   end;
MPRINT(EM_DIAGRAM):   end;
2247030   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2247031   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2247032   +   end;
MPRINT(EM_DIAGRAM):   end;
2247033   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247034   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2247035   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247036   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247037   +   end;
MPRINT(EM_DIAGRAM):   end;
2247038   +end;
MPRINT(EM_DIAGRAM):   end;
2247039   +
2247040   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2247041   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2247042   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2247043   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2247044   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2247045   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247046   +end;
MPRINT(EM_DIAGRAM):   end;
2247047   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247048   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2247049   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2247050   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247051   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2247052   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2247053   +   end;
MPRINT(EM_DIAGRAM):   end;
2247054   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2247055   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2247056   +   end;
MPRINT(EM_DIAGRAM):   end;
2247057   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247058   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2247059   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247060   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247061   +   end;
MPRINT(EM_DIAGRAM):   end;
2247062   +end;
MPRINT(EM_DIAGRAM):   end;
2247063   +
2247064   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2247065   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2247066   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2247067   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2247068   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2247069   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247070   +end;
MPRINT(EM_DIAGRAM):   end;
2247071   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247072   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2247073   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2247074   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247075   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2247076   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2247077   +   end;
MPRINT(EM_DIAGRAM):   end;
2247078   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2247079   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2247080   +   end;
MPRINT(EM_DIAGRAM):   end;
2247081   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247082   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2247083   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247084   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247085   +   end;
MPRINT(EM_DIAGRAM):   end;
2247086   +end;
MPRINT(EM_DIAGRAM):   end;
2247087   +
2247088   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2247089   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2247090   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2247091   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2247092   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2247093   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2247094   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2247095   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2247096   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2247097   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2247098   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2247099   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2247100   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2247101   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247102   +end;
MPRINT(EM_DIAGRAM):   end;
2247103   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247104   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2247105   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2247106   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247107   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2247108   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2247109   +   end;
MPRINT(EM_DIAGRAM):   end;
2247110   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2247111   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2247112   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2247113   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2247114   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2247115   +   end;
MPRINT(EM_DIAGRAM):   end;
2247116   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2247117   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2247118   +   end;
MPRINT(EM_DIAGRAM):   end;
2247119   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2247120   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2247121   +   end;
MPRINT(EM_DIAGRAM):   end;
2247122   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2247123   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2247124   +   end;
MPRINT(EM_DIAGRAM):   end;
2247125   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247126   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2247127   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2247128   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2247129   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2247130   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247131   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247132   +   end;
MPRINT(EM_DIAGRAM):   end;
2247133   +end;
MPRINT(EM_DIAGRAM):   end;
2247134   +
2247135   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2247136   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2247137   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2247138   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2247139   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2247140   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2247141   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2247142   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2247143   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2247144   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2247145   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2247146   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2247147   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2247148   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2247149   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247150   +end;
MPRINT(EM_DIAGRAM):   end;
2247151   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247152   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2247153   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2247154   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247155   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2247156   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2247157   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2247158   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2247159   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2247160   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2247161   +         end;
MPRINT(EM_DIAGRAM):   end;
2247162   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2247163   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2247164   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2247165   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2247166   +            end;
MPRINT(EM_DIAGRAM):   end;
2247167   +         end;
MPRINT(EM_DIAGRAM):   end;
2247168   +      end;
MPRINT(EM_DIAGRAM):   end;
2247169   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2247170   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2247171   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2247172   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2247173   +         end;
MPRINT(EM_DIAGRAM):   end;
2247174   +      end;
MPRINT(EM_DIAGRAM):   end;
2247175   +   end;
MPRINT(EM_DIAGRAM):   end;
2247176   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247177   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2247178   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2247179   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2247180   +      end;
MPRINT(EM_DIAGRAM):   end;
2247181   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2247182   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2247183   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2247184   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2247185   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2247186   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2247187   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2247188   +         end;
MPRINT(EM_DIAGRAM):   end;
2247189   +      end;
MPRINT(EM_DIAGRAM):   end;
2247190   +   end;
MPRINT(EM_DIAGRAM):   end;
2247191   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2247192   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2247193   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2247194   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2247195   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2247196   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247197   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247198   +   end;
MPRINT(EM_DIAGRAM):   end;
2247199   +end;
MPRINT(EM_DIAGRAM):   end;
2247200   +
2247201   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247202   +*** Checking missing input Interval
2247203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2247204   +
2247205   +IF NMISS(
2247206   +   AcceptedCmpTotal ,
2247207   +   Age ,
2247208   +   Frq ,
2247209   +   Income ,
2247210   +   Kidhome ,
2247211   +   Mnt ,
2247212   +   MntFishProducts ,
2247213   +   MntFruits ,
2247214   +   MntGoldProds ,
2247215   +   MntMeatProducts ,
2247216   +   MntSweetProducts ,
2247217   +   MntWines ,
2247218   +   MonthsAsCustomer ,
2247219   +   NumCatalogPurchases ,
2247220   +   NumDealsPurchases ,
2247221   +   NumDistPurchases ,
2247222   +   NumStorePurchases ,
2247223   +   NumWebPurchases ,
2247224   +   NumWebVisitsMonth ,
2247225   +   RFMstat ,
2247226   +   RMntFrq ,
2247227   +   Recency ,
2247228   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2247229   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2247230   +
2247231   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247232   +END;
MPRINT(EM_DIAGRAM):   END;
2247233   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247234   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2247235   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247236   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2247237   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2247238   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2247239   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2247240   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2247241   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2247242   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2247243   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2247244   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2247245   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2247246   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2247247   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2247248   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2247249   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2247250   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2247251   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2247252   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2247253   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2247254   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2247255   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2247256   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2247257   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2247258   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2247259   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2247260   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2247261   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2247262   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2247263   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2247264   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2247265   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2247266   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2247267   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2247268   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2247269   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2247270   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2247271   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2247272   +END;
MPRINT(EM_DIAGRAM):   END;
2247273   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2247274   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2247275   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2247276   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2247277   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2247278   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2247279   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2247280   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2247281   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2247282   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2247283   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2247284   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2247285   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2247286   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2247287   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2247288   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2247289   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2247290   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2247291   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2247292   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2247293   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2247294   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2247295   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2247296   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2247297   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2247298   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2247299   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2247300   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2247301   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2247302   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2247303   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2247304   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2247305   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2247306   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2247307   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2247308   +   ELSE S_NumCatalogPurchases
2247309   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2247310   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2247311   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2247312   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2247313   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2247314   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2247315   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2247316   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2247317   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2247318   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2247319   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2247320   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2247321   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2247322   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2247323   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2247324   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2247325   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2247326   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2247327   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2247328   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2247329   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2247330   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2247331   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2247332   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2247333   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2247334   +END;
MPRINT(EM_DIAGRAM):   END;
2247335   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247336   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2247337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247339   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2247340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247342   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2247343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247344   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2247345   +   H1x1_1  =    -0.00800383076247 * S_AcceptedCmpTotal
2247346   +          +     0.02761302021586 * S_Age  +     0.10595191274027 * S_Frq
2247347   +          +    -0.15720275096991 * S_Income  +     0.14522420813528 *
2247348   +        S_Kidhome  +    -0.14485367197729 * S_Mnt  +     0.10029542464177 *
2247349   +        S_MntFishProducts  +      0.0126489883955 * S_MntFruits
2247350   +          +    -0.01721251339827 * S_MntGoldProds  +    -0.69008250574088 *
2247351   +        S_MntMeatProducts  +     0.01018204164797 * S_MntSweetProducts
2247352   +          +     0.22039448854688 * S_MntWines  +     0.01531819489128 *
2247353   +        S_MonthsAsCustomer  +    -0.23161250514854 * S_NumCatalogPurchases
2247354   +          +    -0.20127545393212 * S_NumDealsPurchases
2247355   +          +     0.04506333103933 * S_NumDistPurchases
2247356   +          +     0.35249458492371 * S_NumStorePurchases
2247357   +          +     0.25004284340707 * S_NumWebPurchases
2247358   +          +    -0.53727251220752 * S_NumWebVisitsMonth
2247359   +          +    -0.05439428653958 * S_RFMstat  +     0.36751560031492 *
2247360   +        S_RMntFrq  +      0.5373510847225 * S_Recency
2247361   +          +     0.08757258535387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.00800383076247 * S_AcceptedCmpTotal + 0.02761302021586 * 
S_Age + 0.10595191274027 * S_Frq + -0.15720275096991 * S_Income + 0.14522420813528 * S_Kidhome 
+ -0.14485367197729 * S_Mnt + 0.10029542464177 * S_MntFishProducts + 0.0126489883955 * 
S_MntFruits + -0.01721251339827 * S_MntGoldProds + -0.69008250574088 * S_MntMeatProducts + 
0.01018204164797 * S_MntSweetProducts + 0.22039448854688 * S_MntWines + 0.01531819489128 * 
S_MonthsAsCustomer + -0.23161250514854 * S_NumCatalogPurchases + -0.20127545393212 * 
S_NumDealsPurchases + 0.04506333103933 * S_NumDistPurchases + 0.35249458492371 * 
S_NumStorePurchases + 0.25004284340707 * S_NumWebPurchases + -0.53727251220752 * 
S_NumWebVisitsMonth + -0.05439428653958 * S_RFMstat + 0.36751560031492 * S_RMntFrq + 
0.5373510847225 * S_Recency + 0.08757258535387 * S_Teenhome ;
2247362   +   H1x1_1  = H1x1_1  +     0.21204360154837 * AcceptedCmp10
2247363   +          +     0.20766091429217 * AcceptedCmp20  +     0.20201307074488 *
2247364   +        AcceptedCmp30  +     0.26898383850722 * AcceptedCmp40
2247365   +          +     0.55154220854739 * AcceptedCmp50  +     0.13147328871299 *
2247366   +        Complain0  +    -0.02797177954188 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21204360154837 * AcceptedCmp10 + 0.20766091429217 * 
AcceptedCmp20 + 0.20201307074488 * AcceptedCmp30 + 0.26898383850722 * AcceptedCmp40 + 
0.55154220854739 * AcceptedCmp50 + 0.13147328871299 * Complain0 + -0.02797177954188 * 
HigherEducationBinary0 ;
2247367   +   H1x1_1  = H1x1_1  +    -0.00959805163736 * Education2n_Cycle
2247368   +          +     0.37192717803938 * EducationBasic  +    -0.10342362068485 *
2247369   +        EducationGraduation  +    -0.13377682721092 * EducationMaster
2247370   +          +    -0.19452359839974 * Marital_StatusDivorced
2247371   +          +     0.32327870805716 * Marital_StatusMarried
2247372   +          +    -0.20770545592268 * Marital_StatusSingle
2247373   +          +     0.35618773017298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00959805163736 * Education2n_Cycle + 
0.37192717803938 * EducationBasic + -0.10342362068485 * EducationGraduation + 
-0.13377682721092 * EducationMaster + -0.19452359839974 * Marital_StatusDivorced + 
0.32327870805716 * Marital_StatusMarried + -0.20770545592268 * Marital_StatusSingle + 
0.35618773017298 * Marital_StatusTogether ;
2247374   +   H1x1_1  =     0.87012150629431 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87012150629431 + H1x1_1 ;
2247375   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2247376   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2247377   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2247378   +END;
MPRINT(EM_DIAGRAM):   END;
2247379   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2247380   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2247381   +END;
MPRINT(EM_DIAGRAM):   END;
2247382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247383   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2247384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247385   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2247386   +   H1x2_1  =     0.92357456692651 * S_AcceptedCmpTotal
2247387   +          +    -0.00516549264504 * S_Age  +    -1.03043789382359 * S_Frq
2247388   +          +     0.78555631441048 * S_Income  +    -1.36329797235747 *
2247389   +        S_Kidhome  +    -0.77229288487872 * S_Mnt  +     1.27281095482218 *
2247390   +        S_MntFishProducts  +     0.04568599055132 * S_MntFruits
2247391   +          +    -0.13434867195633 * S_MntGoldProds  +    -1.95682488683295 *
2247392   +        S_MntMeatProducts  +     -0.0253141337078 * S_MntSweetProducts
2247393   +          +     0.67857436596482 * S_MntWines  +    -0.07247572940845 *
2247394   +        S_MonthsAsCustomer  +    -1.02814758425435 * S_NumCatalogPurchases
2247395   +          +    -0.02120959778153 * S_NumDealsPurchases
2247396   +          +     1.49013956394863 * S_NumDistPurchases
2247397   +          +    -0.96806240220463 * S_NumStorePurchases
2247398   +          +    -1.68330472453558 * S_NumWebPurchases
2247399   +          +     3.42976128164256 * S_NumWebVisitsMonth
2247400   +          +    -0.38912520446503 * S_RFMstat  +    -2.57487899031042 *
2247401   +        S_RMntFrq  +    -3.14923215912621 * S_Recency
2247402   +          +    -0.67635091810974 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.92357456692651 * S_AcceptedCmpTotal + -0.00516549264504 * 
S_Age + -1.03043789382359 * S_Frq + 0.78555631441048 * S_Income + -1.36329797235747 * 
S_Kidhome + -0.77229288487872 * S_Mnt + 1.27281095482218 * S_MntFishProducts + 
0.04568599055132 * S_MntFruits + -0.13434867195633 * S_MntGoldProds + -1.95682488683295 * 
S_MntMeatProducts + -0.0253141337078 * S_MntSweetProducts + 0.67857436596482 * S_MntWines + 
-0.07247572940845 * S_MonthsAsCustomer + -1.02814758425435 * S_NumCatalogPurchases + 
-0.02120959778153 * S_NumDealsPurchases + 1.49013956394863 * S_NumDistPurchases + 
-0.96806240220463 * S_NumStorePurchases + -1.68330472453558 * S_NumWebPurchases + 
3.42976128164256 * S_NumWebVisitsMonth + -0.38912520446503 * S_RFMstat + -2.57487899031042 * 
S_RMntFrq + -3.14923215912621 * S_Recency + -0.67635091810974 * S_Teenhome ;
2247403   +   H1x2_1  = H1x2_1  +    -0.18835638765595 * AcceptedCmp10
2247404   +          +     1.28752081945681 * AcceptedCmp20  +     -0.5515893923669 *
2247405   +        AcceptedCmp30  +    -0.82440763600043 * AcceptedCmp40
2247406   +          +     1.94503109075872 * AcceptedCmp50  +    -0.75977722298402 *
2247407   +        Complain0  +    -1.11349075129464 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.18835638765595 * AcceptedCmp10 + 1.28752081945681 * 
AcceptedCmp20 + -0.5515893923669 * AcceptedCmp30 + -0.82440763600043 * AcceptedCmp40 + 
1.94503109075872 * AcceptedCmp50 + -0.75977722298402 * Complain0 + -1.11349075129464 * 
HigherEducationBinary0 ;
2247408   +   H1x2_1  = H1x2_1  +     1.79843117215153 * Education2n_Cycle
2247409   +          +    -1.50428649925314 * EducationBasic  +    -0.32238897768725 *
2247410   +        EducationGraduation  +    -0.16909007224958 * EducationMaster
2247411   +          +      1.9815992681602 * Marital_StatusDivorced
2247412   +          +    -3.07893181570848 * Marital_StatusMarried
2247413   +          +     1.72965298244219 * Marital_StatusSingle
2247414   +          +    -3.17208781997524 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.79843117215153 * Education2n_Cycle + 
-1.50428649925314 * EducationBasic + -0.32238897768725 * EducationGraduation + 
-0.16909007224958 * EducationMaster + 1.9815992681602 * Marital_StatusDivorced + 
-3.07893181570848 * Marital_StatusMarried + 1.72965298244219 * Marital_StatusSingle + 
-3.17208781997524 * Marital_StatusTogether ;
2247415   +   H1x2_1  =     0.54729406730223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.54729406730223 + H1x2_1 ;
2247416   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2247417   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2247418   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2247419   +   IF H1x2_1  < _REC_EPS AND H1x2_1  > - _REC_EPS THEN
2247420   +   H1x2_1  = H1x2_1  * H1x2_1 ;
MPRINT(EM_DIAGRAM):   IF H1x2_1 < _REC_EPS AND H1x2_1 > - _REC_EPS THEN H1x2_1 = H1x2_1 * 
H1x2_1 ;
2247421   +   ELSE H1x2_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x2_1 = _REC_EPS ;
2247422   +END;
MPRINT(EM_DIAGRAM):   END;
2247423   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2247424   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2247425   +END;
MPRINT(EM_DIAGRAM):   END;
2247426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247427   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2247428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247429   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2247430   +   H1x3_1  =     0.90092602642364 * S_AcceptedCmpTotal
2247431   +          +    -0.16291307307626 * S_Age  +    -0.40132431666712 * S_Frq
2247432   +          +    -0.77251140598484 * S_Income  +     0.02215214313934 *
2247433   +        S_Kidhome  +     0.13123074182657 * S_Mnt  +    -0.43664076061176 *
2247434   +        S_MntFishProducts  +    -1.64192761266072 * S_MntFruits
2247435   +          +    -1.54189230184745 * S_MntGoldProds  +     -0.4138869968665 *
2247436   +        S_MntMeatProducts  +      0.5773885392047 * S_MntSweetProducts
2247437   +          +     1.45077769194851 * S_MntWines  +      0.5855746168529 *
2247438   +        S_MonthsAsCustomer  +     0.10198319985004 * S_NumCatalogPurchases
2247439   +          +     -0.5334151509863 * S_NumDealsPurchases
2247440   +          +     0.40600458912114 * S_NumDistPurchases
2247441   +          +    -0.30674653528261 * S_NumStorePurchases
2247442   +          +     0.10785037433743 * S_NumWebPurchases
2247443   +          +     0.99701680073452 * S_NumWebVisitsMonth
2247444   +          +    -0.25371895811899 * S_RFMstat  +     2.19406614746442 *
2247445   +        S_RMntFrq  +      1.0786726340694 * S_Recency
2247446   +          +     0.64406049150007 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.90092602642364 * S_AcceptedCmpTotal + -0.16291307307626 * 
S_Age + -0.40132431666712 * S_Frq + -0.77251140598484 * S_Income + 0.02215214313934 * 
S_Kidhome + 0.13123074182657 * S_Mnt + -0.43664076061176 * S_MntFishProducts + 
-1.64192761266072 * S_MntFruits + -1.54189230184745 * S_MntGoldProds + -0.4138869968665 * 
S_MntMeatProducts + 0.5773885392047 * S_MntSweetProducts + 1.45077769194851 * S_MntWines + 
0.5855746168529 * S_MonthsAsCustomer + 0.10198319985004 * S_NumCatalogPurchases + 
-0.5334151509863 * S_NumDealsPurchases + 0.40600458912114 * S_NumDistPurchases + 
-0.30674653528261 * S_NumStorePurchases + 0.10785037433743 * S_NumWebPurchases + 
0.99701680073452 * S_NumWebVisitsMonth + -0.25371895811899 * S_RFMstat + 2.19406614746442 * 
S_RMntFrq + 1.0786726340694 * S_Recency + 0.64406049150007 * S_Teenhome ;
2247447   +   H1x3_1  = H1x3_1  +    -0.58424742605644 * AcceptedCmp10
2247448   +          +     -0.7436165858459 * AcceptedCmp20  +    -0.33959137246457 *
2247449   +        AcceptedCmp30  +     0.42726020731333 * AcceptedCmp40
2247450   +          +     2.23707409189181 * AcceptedCmp50  +     0.98135772482722 *
2247451   +        Complain0  +    -0.85818399669867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.58424742605644 * AcceptedCmp10 + -0.7436165858459 * 
AcceptedCmp20 + -0.33959137246457 * AcceptedCmp30 + 0.42726020731333 * AcceptedCmp40 + 
2.23707409189181 * AcceptedCmp50 + 0.98135772482722 * Complain0 + -0.85818399669867 * 
HigherEducationBinary0 ;
2247452   +   H1x3_1  = H1x3_1  +    -0.89540752048995 * Education2n_Cycle
2247453   +          +     1.29513448243349 * EducationBasic  +    -1.47068621785539 *
2247454   +        EducationGraduation  +    -1.63362973413899 * EducationMaster
2247455   +          +    -0.72494401881341 * Marital_StatusDivorced
2247456   +          +    -0.82332231639631 * Marital_StatusMarried
2247457   +          +     -0.8863559011195 * Marital_StatusSingle
2247458   +          +     0.97129982315045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.89540752048995 * Education2n_Cycle + 
1.29513448243349 * EducationBasic + -1.47068621785539 * EducationGraduation + 
-1.63362973413899 * EducationMaster + -0.72494401881341 * Marital_StatusDivorced + 
-0.82332231639631 * Marital_StatusMarried + -0.8863559011195 * Marital_StatusSingle + 
0.97129982315045 * Marital_StatusTogether ;
2247459   +   H1x3_1  =     0.55234573720932 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.55234573720932 + H1x3_1 ;
2247460   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2247461   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2247462   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2247463   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2247464   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2247465   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2247466   +END;
MPRINT(EM_DIAGRAM):   END;
2247467   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2247468   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2247469   +END;
MPRINT(EM_DIAGRAM):   END;
2247470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247471   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2247472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247473   +
2247474   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2247475   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2247476   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2247477   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2247478   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2247479   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247480   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2247481   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2247482   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2247483   +end;
MPRINT(EM_DIAGRAM):   end;
2247484   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247485   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2247486   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2247487   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2247488   +   end;
MPRINT(EM_DIAGRAM):   end;
2247489   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2247490   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2247491   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2247492   +   end;
MPRINT(EM_DIAGRAM):   end;
2247493   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247494   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2247495   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2247496   +   end;
MPRINT(EM_DIAGRAM):   end;
2247497   +end;
MPRINT(EM_DIAGRAM):   end;
2247498   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2247499   +   P_DepVar1  =     35.4482526843154 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 35.4482526843154 * H1x1_1 ;
2247500   +   P_DepVar1  = P_DepVar1  +    -0.08810161142704 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.08810161142704 * H1x2_1 ;
2247501   +   P_DepVar1  = P_DepVar1  +     0.02248060710303 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 0.02248060710303 * H1x3_1 ;
2247502   +   P_DepVar1  =    -6.23004657634651 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.23004657634651 + P_DepVar1 ;
2247503   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2247504   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2247505   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2247506   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2247507   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2247508   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2247509   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2247510   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2247511   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2247512   +END;
MPRINT(EM_DIAGRAM):   END;
2247513   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2247514   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2247515   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2247516   +END;
MPRINT(EM_DIAGRAM):   END;
2247517   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2247518   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2247519   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2247520   +END;
MPRINT(EM_DIAGRAM):   END;
2247521   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2247522   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2247523   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2247524   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2247525   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2247526   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2247527   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2247528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247529   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2247530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247531   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2247532   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2247533   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2247534   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2247535   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2247536   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2247537   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2247538   +END;
MPRINT(EM_DIAGRAM):   END;
2247539   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2247540   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2247541   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2247542   +drop
2247543   +H1x1_1
2247544   +H1x2_1
2247545   +H1x3_1
2247546   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x2_1 H1x3_1 ;
2247547   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2247548   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
2247549   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2247550   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
2247551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2247552   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
2247553   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
2247554   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
2247555   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
2247556   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2247557   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
2247558   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2247559   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
2247560   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
2247561   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
2247562   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2247563   +* Ensmbl36: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 2 of 7;
2247564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2247565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2247566   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2247567   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2247568   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2247569   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2247570   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2247571   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2247572   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2247573   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2247574   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2247575   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2247576   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2247577   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2247578   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2247579   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2247580   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2247581   +LENGTH _WARN_ $4
2247582   +      F_DepVar  $ 12
2247583   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2247584   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2247585   +
2247586   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2247587   +
2247588   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2247589   +
2247590   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2247591   +
2247592   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2247593   +
2247594   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2247595   +
2247596   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2247597   +
2247598   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2247599   +
2247600   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2247601   +
2247602   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2247603   +
2247604   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2247605   +
2247606   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2247607   +
2247608   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2247609   +
2247610   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2247611   +
2247612   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2247613   +
2247614   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2247615   +
2247616   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2247617   +
2247618   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2247619   +
2247620   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2247621   +
2247622   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2247623   +
2247624   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2247625   +
2247626   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2247627   +
2247628   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2247629   +
2247630   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2247631   +
2247632   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2247633   +
2247634   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2247635   +
2247636   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2247637   +
2247638   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2247639   +
2247640   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2247641   +
2247642   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2247643   +
2247644   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2247645   +
2247646   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2247647   +
2247648   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2247649   +
2247650   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2247651   +
2247652   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2247653   +
2247654   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2247655   +
2247656   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2247657   +
2247658   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2247659   +
2247660   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2247661   +
2247662   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2247663   +
2247664   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2247665   +
2247666   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2247667   +
2247668   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2247669   +
2247670   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2247671   +
2247672   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2247673   +
2247674   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2247675   +
2247676   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2247677   +
2247678   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2247679   +
2247680   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2247681   +
2247682   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2247683   +
2247684   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2247685   +
2247686   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2247687   +
2247688   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2247689   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2247690   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2247691   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2247692   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2247693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247694   +end;
MPRINT(EM_DIAGRAM):   end;
2247695   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247696   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2247697   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2247698   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247699   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2247700   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2247701   +   end;
MPRINT(EM_DIAGRAM):   end;
2247702   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2247703   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2247704   +   end;
MPRINT(EM_DIAGRAM):   end;
2247705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247706   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2247707   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247708   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247709   +   end;
MPRINT(EM_DIAGRAM):   end;
2247710   +end;
MPRINT(EM_DIAGRAM):   end;
2247711   +
2247712   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2247713   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2247714   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2247715   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2247716   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2247717   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247718   +end;
MPRINT(EM_DIAGRAM):   end;
2247719   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247720   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2247721   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2247722   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247723   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2247724   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2247725   +   end;
MPRINT(EM_DIAGRAM):   end;
2247726   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2247727   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2247728   +   end;
MPRINT(EM_DIAGRAM):   end;
2247729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247730   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2247731   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247732   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247733   +   end;
MPRINT(EM_DIAGRAM):   end;
2247734   +end;
MPRINT(EM_DIAGRAM):   end;
2247735   +
2247736   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2247737   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2247738   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2247739   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2247740   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2247741   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247742   +end;
MPRINT(EM_DIAGRAM):   end;
2247743   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247744   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2247745   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2247746   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247747   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2247748   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2247749   +   end;
MPRINT(EM_DIAGRAM):   end;
2247750   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2247751   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2247752   +   end;
MPRINT(EM_DIAGRAM):   end;
2247753   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247754   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2247755   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247756   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247757   +   end;
MPRINT(EM_DIAGRAM):   end;
2247758   +end;
MPRINT(EM_DIAGRAM):   end;
2247759   +
2247760   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2247761   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2247762   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2247763   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2247764   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2247765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247766   +end;
MPRINT(EM_DIAGRAM):   end;
2247767   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247768   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2247769   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2247770   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247771   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2247772   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2247773   +   end;
MPRINT(EM_DIAGRAM):   end;
2247774   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2247775   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2247776   +   end;
MPRINT(EM_DIAGRAM):   end;
2247777   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247778   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2247779   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247780   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247781   +   end;
MPRINT(EM_DIAGRAM):   end;
2247782   +end;
MPRINT(EM_DIAGRAM):   end;
2247783   +
2247784   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2247785   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2247786   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2247787   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2247788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2247789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247790   +end;
MPRINT(EM_DIAGRAM):   end;
2247791   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247792   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2247793   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2247794   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247795   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2247796   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2247797   +   end;
MPRINT(EM_DIAGRAM):   end;
2247798   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2247799   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2247800   +   end;
MPRINT(EM_DIAGRAM):   end;
2247801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247802   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2247803   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247804   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247805   +   end;
MPRINT(EM_DIAGRAM):   end;
2247806   +end;
MPRINT(EM_DIAGRAM):   end;
2247807   +
2247808   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2247809   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2247810   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2247811   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2247812   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2247813   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247814   +end;
MPRINT(EM_DIAGRAM):   end;
2247815   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247816   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2247817   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2247818   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247819   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2247820   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2247821   +   end;
MPRINT(EM_DIAGRAM):   end;
2247822   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2247823   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2247824   +   end;
MPRINT(EM_DIAGRAM):   end;
2247825   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247826   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2247827   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247828   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247829   +   end;
MPRINT(EM_DIAGRAM):   end;
2247830   +end;
MPRINT(EM_DIAGRAM):   end;
2247831   +
2247832   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2247833   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2247834   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2247835   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2247836   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2247837   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247838   +end;
MPRINT(EM_DIAGRAM):   end;
2247839   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247840   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2247841   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2247842   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247843   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2247844   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2247845   +   end;
MPRINT(EM_DIAGRAM):   end;
2247846   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2247847   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2247848   +   end;
MPRINT(EM_DIAGRAM):   end;
2247849   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247850   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2247851   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247852   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247853   +   end;
MPRINT(EM_DIAGRAM):   end;
2247854   +end;
MPRINT(EM_DIAGRAM):   end;
2247855   +
2247856   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2247857   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2247858   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2247859   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2247860   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2247861   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2247862   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2247863   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2247864   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2247865   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2247866   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2247867   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2247868   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2247869   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247870   +end;
MPRINT(EM_DIAGRAM):   end;
2247871   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247872   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2247873   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2247874   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247875   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2247876   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2247877   +   end;
MPRINT(EM_DIAGRAM):   end;
2247878   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2247879   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2247880   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2247881   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2247882   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2247883   +   end;
MPRINT(EM_DIAGRAM):   end;
2247884   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2247885   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2247886   +   end;
MPRINT(EM_DIAGRAM):   end;
2247887   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2247888   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2247889   +   end;
MPRINT(EM_DIAGRAM):   end;
2247890   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2247891   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2247892   +   end;
MPRINT(EM_DIAGRAM):   end;
2247893   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247894   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2247895   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2247896   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2247897   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2247898   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247899   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247900   +   end;
MPRINT(EM_DIAGRAM):   end;
2247901   +end;
MPRINT(EM_DIAGRAM):   end;
2247902   +
2247903   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2247904   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2247905   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2247906   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2247907   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2247908   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2247909   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2247910   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2247911   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2247912   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2247913   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2247914   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2247915   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2247916   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2247917   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247918   +end;
MPRINT(EM_DIAGRAM):   end;
2247919   +else do;
MPRINT(EM_DIAGRAM):   else do;
2247920   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2247921   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2247922   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2247923   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2247924   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2247925   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2247926   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2247927   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2247928   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2247929   +         end;
MPRINT(EM_DIAGRAM):   end;
2247930   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2247931   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2247932   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2247933   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2247934   +            end;
MPRINT(EM_DIAGRAM):   end;
2247935   +         end;
MPRINT(EM_DIAGRAM):   end;
2247936   +      end;
MPRINT(EM_DIAGRAM):   end;
2247937   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2247938   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2247939   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2247940   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2247941   +         end;
MPRINT(EM_DIAGRAM):   end;
2247942   +      end;
MPRINT(EM_DIAGRAM):   end;
2247943   +   end;
MPRINT(EM_DIAGRAM):   end;
2247944   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2247945   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2247946   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2247947   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2247948   +      end;
MPRINT(EM_DIAGRAM):   end;
2247949   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2247950   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2247951   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2247952   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2247953   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2247954   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2247955   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2247956   +         end;
MPRINT(EM_DIAGRAM):   end;
2247957   +      end;
MPRINT(EM_DIAGRAM):   end;
2247958   +   end;
MPRINT(EM_DIAGRAM):   end;
2247959   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2247960   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2247961   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2247962   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2247963   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2247964   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2247965   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2247966   +   end;
MPRINT(EM_DIAGRAM):   end;
2247967   +end;
MPRINT(EM_DIAGRAM):   end;
2247968   +
2247969   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2247970   +*** Checking missing input Interval
2247971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2247972   +
2247973   +IF NMISS(
2247974   +   AcceptedCmpTotal ,
2247975   +   Age ,
2247976   +   Frq ,
2247977   +   Income ,
2247978   +   Kidhome ,
2247979   +   Mnt ,
2247980   +   MntFishProducts ,
2247981   +   MntFruits ,
2247982   +   MntGoldProds ,
2247983   +   MntMeatProducts ,
2247984   +   MntSweetProducts ,
2247985   +   MntWines ,
2247986   +   MonthsAsCustomer ,
2247987   +   NumCatalogPurchases ,
2247988   +   NumDealsPurchases ,
2247989   +   NumDistPurchases ,
2247990   +   NumStorePurchases ,
2247991   +   NumWebPurchases ,
2247992   +   NumWebVisitsMonth ,
2247993   +   RFMstat ,
2247994   +   RMntFrq ,
2247995   +   Recency ,
2247996   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2247997   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2247998   +
2247999   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248000   +END;
MPRINT(EM_DIAGRAM):   END;
2248001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248002   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2248003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248004   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2248005   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2248006   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2248007   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2248008   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2248009   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2248010   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2248011   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2248012   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2248013   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2248014   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2248015   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2248016   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2248017   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2248018   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2248019   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2248020   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2248021   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2248022   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2248023   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2248024   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2248025   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2248026   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2248027   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2248028   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2248029   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2248030   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2248031   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2248032   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2248033   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2248034   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2248035   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2248036   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2248037   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2248038   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2248039   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2248040   +END;
MPRINT(EM_DIAGRAM):   END;
2248041   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2248042   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2248043   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2248044   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2248045   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2248046   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2248047   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2248048   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2248049   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2248050   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2248051   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2248052   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2248053   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2248054   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2248055   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2248056   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2248057   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2248058   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2248059   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2248060   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2248061   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2248062   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2248063   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2248064   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2248065   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2248066   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2248067   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2248068   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2248069   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2248070   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2248071   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2248072   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2248073   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2248074   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2248075   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2248076   +   ELSE S_NumCatalogPurchases
2248077   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2248078   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2248079   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2248080   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2248081   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2248082   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2248083   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2248084   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2248085   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2248086   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2248087   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2248088   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2248089   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2248090   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2248091   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2248092   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2248093   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2248094   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2248095   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2248096   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2248097   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2248098   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2248099   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2248100   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2248101   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2248102   +END;
MPRINT(EM_DIAGRAM):   END;
2248103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248104   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2248105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248107   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2248108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248110   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2248111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248112   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2248113   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2248114   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2248115   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2248116   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2248117   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2248118   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2248119   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2248120   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2248121   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2248122   +          +     0.08390531145773 * S_NumDealsPurchases
2248123   +          +    -0.29505970645775 * S_NumDistPurchases
2248124   +          +    -0.13820571170194 * S_NumStorePurchases
2248125   +          +     0.11468011313368 * S_NumWebPurchases
2248126   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2248127   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2248128   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2248129   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 * 
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome 
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 * 
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts + 
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 * 
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 * 
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 * 
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 * 
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq + 
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2248130   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2248131   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2248132   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2248133   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2248134   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2248135   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2248136   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2248137   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2248138   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2248139   +          +     0.18009076035363 * S_NumDealsPurchases
2248140   +          +     0.03853861006587 * S_NumDistPurchases
2248141   +          +    -0.05118063952874 * S_NumStorePurchases
2248142   +          +    -0.03282286120473 * S_NumWebPurchases
2248143   +          +     0.31160900419026 * S_NumWebVisitsMonth
2248144   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2248145   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2248146   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age 
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome + 
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 * 
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts + 
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 * 
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 * 
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 * 
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 * 
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq + 
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2248147   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2248148   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2248149   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2248150   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2248151   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 * 
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 + 
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 * 
HigherEducationBinary0 ;
2248152   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2248153   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2248154   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2248155   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2248156   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 * 
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 + 
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 * 
HigherEducationBinary0 ;
2248157   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2248158   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2248159   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2248160   +          +    -0.04750981393889 * Marital_StatusDivorced
2248161   +          +     0.28216925676677 * Marital_StatusMarried
2248162   +          +    -0.20757827413964 * Marital_StatusSingle
2248163   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle + 
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127 
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 * 
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 * 
Marital_StatusTogether ;
2248164   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2248165   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2248166   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2248167   +          +     0.05981919620577 * Marital_StatusDivorced
2248168   +          +    -0.17161573846062 * Marital_StatusMarried
2248169   +          +     0.15869440681091 * Marital_StatusSingle
2248170   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle + 
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation + 
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced + 
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle + 
-0.13282372850158 * Marital_StatusTogether ;
2248171   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2248172   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2248173   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2248174   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2248175   +END;
MPRINT(EM_DIAGRAM):   END;
2248176   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2248177   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2248178   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2248179   +END;
MPRINT(EM_DIAGRAM):   END;
2248180   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248181   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2248182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248183   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2248184   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2248185   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2248186   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2248187   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2248188   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2248189   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2248190   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2248191   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2248192   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2248193   +          +     0.00741910846933 * S_NumDealsPurchases
2248194   +          +       1.334289252268 * S_NumDistPurchases
2248195   +          +    -0.29851567180932 * S_NumStorePurchases
2248196   +          +    -0.52115313259666 * S_NumWebPurchases
2248197   +          +     0.93907168501909 * S_NumWebVisitsMonth
2248198   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2248199   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2248200   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age 
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome + 
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 * 
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts + 
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 * 
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 * 
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 * 
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 * 
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq + 
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2248201   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2248202   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2248203   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2248204   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2248205   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2248206   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2248207   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2248208   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2248209   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2248210   +          +     1.60427001186844 * S_NumDealsPurchases
2248211   +          +    -0.18447618033353 * S_NumDistPurchases
2248212   +          +    -1.29966073003539 * S_NumStorePurchases
2248213   +          +    -1.12373457341536 * S_NumWebPurchases
2248214   +          +     1.46099221440494 * S_NumWebVisitsMonth
2248215   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2248216   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2248217   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 * 
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 * 
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts + 
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 * 
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines + 
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases + 
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases + 
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases + 
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 * 
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2248218   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2248219   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2248220   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2248221   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2248222   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 * 
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 + 
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 * 
HigherEducationBinary0 ;
2248223   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2248224   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2248225   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2248226   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2248227   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 * 
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 + 
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 * 
HigherEducationBinary0 ;
2248228   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2248229   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2248230   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2248231   +          +     0.59819559998538 * Marital_StatusDivorced
2248232   +          +     0.92957772553633 * Marital_StatusMarried
2248233   +          +    -1.11796266958894 * Marital_StatusSingle
2248234   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 * 
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster + 
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried + 
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2248235   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2248236   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2248237   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2248238   +          +      1.0870909562212 * Marital_StatusDivorced
2248239   +          +     1.50333961797515 * Marital_StatusMarried
2248240   +          +    -1.41407780765932 * Marital_StatusSingle
2248241   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle + 
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation + 
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced + 
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle + 
-0.52528072358697 * Marital_StatusTogether ;
2248242   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2248243   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2248244   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2248245   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2248246   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2248247   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2248248   +END;
MPRINT(EM_DIAGRAM):   END;
2248249   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2248250   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2248251   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2248252   +END;
MPRINT(EM_DIAGRAM):   END;
2248253   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248254   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2248255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248256   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2248257   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2248258   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2248259   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2248260   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2248261   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2248262   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2248263   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2248264   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2248265   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2248266   +          +     -1.1174504455343 * S_NumDealsPurchases
2248267   +          +    -0.18561253113498 * S_NumDistPurchases
2248268   +          +    -0.35231054612792 * S_NumStorePurchases
2248269   +          +      0.9249490354172 * S_NumWebPurchases
2248270   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2248271   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2248272   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2248273   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 * 
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 * 
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts + 
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 * 
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines + 
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases + 
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases + 
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases + 
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 * 
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2248274   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2248275   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2248276   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2248277   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2248278   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2248279   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2248280   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2248281   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2248282   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2248283   +          +     1.05434863590054 * S_NumDealsPurchases
2248284   +          +    -0.73255174632068 * S_NumDistPurchases
2248285   +          +     0.53949953455044 * S_NumStorePurchases
2248286   +          +    -0.61709467816649 * S_NumWebPurchases
2248287   +          +     1.36235282484348 * S_NumWebVisitsMonth
2248288   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2248289   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2248290   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 * 
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome 
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 * 
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts + 
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 * 
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 * 
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 * 
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 * 
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq + 
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2248291   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2248292   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2248293   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2248294   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2248295   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 * 
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 + 
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 * 
HigherEducationBinary0 ;
2248296   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2248297   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2248298   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2248299   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2248300   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833 
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 + 
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 * 
HigherEducationBinary0 ;
2248301   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2248302   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2248303   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2248304   +          +     0.22253248036322 * Marital_StatusDivorced
2248305   +          +    -1.72455332745001 * Marital_StatusMarried
2248306   +          +     0.57787272107232 * Marital_StatusSingle
2248307   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle + 
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation + 
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced + 
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle + 
0.16267074825086 * Marital_StatusTogether ;
2248308   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2248309   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2248310   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2248311   +          +     0.14637124403046 * Marital_StatusDivorced
2248312   +          +     0.18905186437528 * Marital_StatusMarried
2248313   +          +     0.00511958458521 * Marital_StatusSingle
2248314   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle + 
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation + 
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced + 
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle + 
-0.915980703129 * Marital_StatusTogether ;
2248315   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2248316   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2248317   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2248318   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2248319   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2248320   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2248321   +END;
MPRINT(EM_DIAGRAM):   END;
2248322   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2248323   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2248324   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2248325   +END;
MPRINT(EM_DIAGRAM):   END;
2248326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248327   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2248328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248329   +
2248330   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2248331   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2248332   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2248333   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2248334   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2248335   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2248336   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2248337   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2248338   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2248339   +end;
MPRINT(EM_DIAGRAM):   end;
2248340   +else do;
MPRINT(EM_DIAGRAM):   else do;
2248341   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2248342   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2248343   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2248344   +   end;
MPRINT(EM_DIAGRAM):   end;
2248345   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2248346   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2248347   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2248348   +   end;
MPRINT(EM_DIAGRAM):   end;
2248349   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2248350   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2248351   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2248352   +   end;
MPRINT(EM_DIAGRAM):   end;
2248353   +end;
MPRINT(EM_DIAGRAM):   end;
2248354   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2248355   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2248356   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2248357   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2248358   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 * 
H1x2_2 ;
2248359   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2248360   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 * 
H1x3_2 ;
2248361   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2248362   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2248363   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2248364   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2248365   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2248366   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2248367   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2248368   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2248369   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2248370   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2248371   +END;
MPRINT(EM_DIAGRAM):   END;
2248372   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2248373   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2248374   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2248375   +END;
MPRINT(EM_DIAGRAM):   END;
2248376   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2248377   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2248378   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2248379   +END;
MPRINT(EM_DIAGRAM):   END;
2248380   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2248381   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2248382   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2248383   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2248384   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2248385   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2248386   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2248387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248388   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2248389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248390   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2248391   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2248392   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2248393   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2248394   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2248395   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2248396   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2248397   +END;
MPRINT(EM_DIAGRAM):   END;
2248398   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2248399   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2248400   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2248401   +drop
2248402   +H1x1_1
2248403   +H1x1_2
2248404   +H1x2_1
2248405   +H1x2_2
2248406   +H1x3_1
2248407   +H1x3_2
2248408   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2248409   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2248410   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2248411   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2248412   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2248413   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2248414   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2248415   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2248416   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2248417   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2248418   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2248419   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2248420   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2248421   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2248422   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2248423   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2248424   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2248425   +* Ensmbl36: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 3 of 7;
2248426   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2248427   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2248428   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2248429   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2248430   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
2248431   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2248432   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2248433   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2248434   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2248435   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2248436   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2248437   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2248438   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2248439   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2248440   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2248441   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2248442   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2248443   +LENGTH _WARN_ $4
2248444   +      F_DepVar  $ 12
2248445   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2248446   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2248447   +
2248448   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2248449   +
2248450   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2248451   +
2248452   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2248453   +
2248454   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2248455   +
2248456   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2248457   +
2248458   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2248459   +
2248460   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2248461   +
2248462   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2248463   +
2248464   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2248465   +
2248466   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2248467   +
2248468   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2248469   +
2248470   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2248471   +
2248472   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2248473   +
2248474   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2248475   +
2248476   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2248477   +
2248478   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2248479   +
2248480   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2248481   +
2248482   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2248483   +
2248484   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2248485   +
2248486   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2248487   +
2248488   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2248489   +
2248490   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2248491   +
2248492   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2248493   +
2248494   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2248495   +
2248496   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2248497   +
2248498   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2248499   +
2248500   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2248501   +
2248502   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2248503   +
2248504   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2248505   +
2248506   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2248507   +
2248508   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2248509   +
2248510   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2248511   +
2248512   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2248513   +
2248514   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2248515   +
2248516   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2248517   +
2248518   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2248519   +
2248520   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2248521   +
2248522   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2248523   +
2248524   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2248525   +
2248526   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2248527   +
2248528   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2248529   +
2248530   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2248531   +
2248532   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2248533   +
2248534   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2248535   +
2248536   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2248537   +
2248538   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2248539   +
2248540   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2248541   +
2248542   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2248543   +
2248544   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2248545   +
2248546   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2248547   +
2248548   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2248549   +
2248550   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2248551   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2248552   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2248553   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2248554   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2248555   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248556   +end;
MPRINT(EM_DIAGRAM):   end;
2248557   +else do;
MPRINT(EM_DIAGRAM):   else do;
2248558   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2248559   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2248560   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2248561   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2248562   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2248563   +   end;
MPRINT(EM_DIAGRAM):   end;
2248564   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2248565   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2248566   +   end;
MPRINT(EM_DIAGRAM):   end;
2248567   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2248568   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2248569   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2248570   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248571   +   end;
MPRINT(EM_DIAGRAM):   end;
2248572   +end;
MPRINT(EM_DIAGRAM):   end;
2248573   +
2248574   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2248575   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2248576   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2248577   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2248578   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2248579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248580   +end;
MPRINT(EM_DIAGRAM):   end;
2248581   +else do;
MPRINT(EM_DIAGRAM):   else do;
2248582   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2248583   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2248584   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2248585   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2248586   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2248587   +   end;
MPRINT(EM_DIAGRAM):   end;
2248588   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2248589   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2248590   +   end;
MPRINT(EM_DIAGRAM):   end;
2248591   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2248592   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2248593   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2248594   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248595   +   end;
MPRINT(EM_DIAGRAM):   end;
2248596   +end;
MPRINT(EM_DIAGRAM):   end;
2248597   +
2248598   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2248599   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2248600   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2248601   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2248602   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2248603   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248604   +end;
MPRINT(EM_DIAGRAM):   end;
2248605   +else do;
MPRINT(EM_DIAGRAM):   else do;
2248606   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2248607   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2248608   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2248609   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2248610   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2248611   +   end;
MPRINT(EM_DIAGRAM):   end;
2248612   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2248613   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2248614   +   end;
MPRINT(EM_DIAGRAM):   end;
2248615   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2248616   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2248617   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2248618   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248619   +   end;
MPRINT(EM_DIAGRAM):   end;
2248620   +end;
MPRINT(EM_DIAGRAM):   end;
2248621   +
2248622   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2248623   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2248624   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2248625   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2248626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2248627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248628   +end;
MPRINT(EM_DIAGRAM):   end;
2248629   +else do;
MPRINT(EM_DIAGRAM):   else do;
2248630   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2248631   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2248632   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2248633   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2248634   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2248635   +   end;
MPRINT(EM_DIAGRAM):   end;
2248636   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2248637   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2248638   +   end;
MPRINT(EM_DIAGRAM):   end;
2248639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2248640   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2248641   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2248642   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248643   +   end;
MPRINT(EM_DIAGRAM):   end;
2248644   +end;
MPRINT(EM_DIAGRAM):   end;
2248645   +
2248646   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2248647   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2248648   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2248649   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2248650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2248651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248652   +end;
MPRINT(EM_DIAGRAM):   end;
2248653   +else do;
MPRINT(EM_DIAGRAM):   else do;
2248654   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2248655   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2248656   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2248657   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2248658   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2248659   +   end;
MPRINT(EM_DIAGRAM):   end;
2248660   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2248661   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2248662   +   end;
MPRINT(EM_DIAGRAM):   end;
2248663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2248664   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2248665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2248666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248667   +   end;
MPRINT(EM_DIAGRAM):   end;
2248668   +end;
MPRINT(EM_DIAGRAM):   end;
2248669   +
2248670   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2248671   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2248672   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2248673   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2248674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2248675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248676   +end;
MPRINT(EM_DIAGRAM):   end;
2248677   +else do;
MPRINT(EM_DIAGRAM):   else do;
2248678   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2248679   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2248680   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2248681   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2248682   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2248683   +   end;
MPRINT(EM_DIAGRAM):   end;
2248684   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2248685   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2248686   +   end;
MPRINT(EM_DIAGRAM):   end;
2248687   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2248688   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2248689   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2248690   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248691   +   end;
MPRINT(EM_DIAGRAM):   end;
2248692   +end;
MPRINT(EM_DIAGRAM):   end;
2248693   +
2248694   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2248695   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2248696   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2248697   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2248698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2248699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248700   +end;
MPRINT(EM_DIAGRAM):   end;
2248701   +else do;
MPRINT(EM_DIAGRAM):   else do;
2248702   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2248703   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2248704   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2248705   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2248706   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2248707   +   end;
MPRINT(EM_DIAGRAM):   end;
2248708   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2248709   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2248710   +   end;
MPRINT(EM_DIAGRAM):   end;
2248711   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2248712   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2248713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2248714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248715   +   end;
MPRINT(EM_DIAGRAM):   end;
2248716   +end;
MPRINT(EM_DIAGRAM):   end;
2248717   +
2248718   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2248719   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2248720   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2248721   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2248722   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2248723   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2248724   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2248725   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2248726   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2248727   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2248728   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2248729   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2248730   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2248731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248732   +end;
MPRINT(EM_DIAGRAM):   end;
2248733   +else do;
MPRINT(EM_DIAGRAM):   else do;
2248734   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2248735   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2248736   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2248737   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2248738   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2248739   +   end;
MPRINT(EM_DIAGRAM):   end;
2248740   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2248741   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2248742   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2248743   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2248744   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2248745   +   end;
MPRINT(EM_DIAGRAM):   end;
2248746   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2248747   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2248748   +   end;
MPRINT(EM_DIAGRAM):   end;
2248749   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2248750   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2248751   +   end;
MPRINT(EM_DIAGRAM):   end;
2248752   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2248753   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2248754   +   end;
MPRINT(EM_DIAGRAM):   end;
2248755   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2248756   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2248757   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2248758   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2248759   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2248760   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2248761   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248762   +   end;
MPRINT(EM_DIAGRAM):   end;
2248763   +end;
MPRINT(EM_DIAGRAM):   end;
2248764   +
2248765   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2248766   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2248767   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2248768   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2248769   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2248770   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2248771   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2248772   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2248773   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2248774   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2248775   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2248776   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2248777   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2248778   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2248779   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248780   +end;
MPRINT(EM_DIAGRAM):   end;
2248781   +else do;
MPRINT(EM_DIAGRAM):   else do;
2248782   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2248783   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2248784   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2248785   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2248786   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2248787   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2248788   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2248789   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2248790   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2248791   +         end;
MPRINT(EM_DIAGRAM):   end;
2248792   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2248793   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2248794   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2248795   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2248796   +            end;
MPRINT(EM_DIAGRAM):   end;
2248797   +         end;
MPRINT(EM_DIAGRAM):   end;
2248798   +      end;
MPRINT(EM_DIAGRAM):   end;
2248799   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2248800   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2248801   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2248802   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2248803   +         end;
MPRINT(EM_DIAGRAM):   end;
2248804   +      end;
MPRINT(EM_DIAGRAM):   end;
2248805   +   end;
MPRINT(EM_DIAGRAM):   end;
2248806   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2248807   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2248808   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2248809   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2248810   +      end;
MPRINT(EM_DIAGRAM):   end;
2248811   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2248812   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2248813   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2248814   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2248815   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2248816   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2248817   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2248818   +         end;
MPRINT(EM_DIAGRAM):   end;
2248819   +      end;
MPRINT(EM_DIAGRAM):   end;
2248820   +   end;
MPRINT(EM_DIAGRAM):   end;
2248821   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2248822   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2248823   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2248824   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2248825   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2248826   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2248827   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248828   +   end;
MPRINT(EM_DIAGRAM):   end;
2248829   +end;
MPRINT(EM_DIAGRAM):   end;
2248830   +
2248831   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248832   +*** Checking missing input Interval
2248833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2248834   +
2248835   +IF NMISS(
2248836   +   AcceptedCmpTotal ,
2248837   +   Age ,
2248838   +   Frq ,
2248839   +   Income ,
2248840   +   Kidhome ,
2248841   +   Mnt ,
2248842   +   MntFishProducts ,
2248843   +   MntFruits ,
2248844   +   MntGoldProds ,
2248845   +   MntMeatProducts ,
2248846   +   MntSweetProducts ,
2248847   +   MntWines ,
2248848   +   MonthsAsCustomer ,
2248849   +   NumCatalogPurchases ,
2248850   +   NumDealsPurchases ,
2248851   +   NumDistPurchases ,
2248852   +   NumStorePurchases ,
2248853   +   NumWebPurchases ,
2248854   +   NumWebVisitsMonth ,
2248855   +   RFMstat ,
2248856   +   RMntFrq ,
2248857   +   Recency ,
2248858   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2248859   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2248860   +
2248861   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2248862   +END;
MPRINT(EM_DIAGRAM):   END;
2248863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248864   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2248865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248866   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2248867   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2248868   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2248869   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2248870   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2248871   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2248872   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2248873   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2248874   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2248875   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2248876   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2248877   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2248878   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2248879   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2248880   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2248881   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2248882   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2248883   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2248884   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2248885   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2248886   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2248887   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2248888   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2248889   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2248890   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2248891   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2248892   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2248893   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2248894   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2248895   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2248896   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2248897   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2248898   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2248899   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2248900   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2248901   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2248902   +END;
MPRINT(EM_DIAGRAM):   END;
2248903   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2248904   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2248905   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2248906   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2248907   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2248908   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2248909   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2248910   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2248911   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2248912   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2248913   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2248914   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2248915   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2248916   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2248917   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2248918   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2248919   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2248920   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2248921   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2248922   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2248923   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2248924   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2248925   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2248926   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2248927   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2248928   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2248929   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2248930   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2248931   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2248932   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2248933   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2248934   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2248935   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2248936   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2248937   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2248938   +   ELSE S_NumCatalogPurchases
2248939   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2248940   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2248941   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2248942   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2248943   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2248944   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2248945   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2248946   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2248947   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2248948   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2248949   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2248950   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2248951   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2248952   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2248953   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2248954   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2248955   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2248956   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2248957   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2248958   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2248959   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2248960   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2248961   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2248962   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2248963   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2248964   +END;
MPRINT(EM_DIAGRAM):   END;
2248965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248966   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2248967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248969   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2248970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248972   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2248973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2248974   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2248975   +   H1x1_1  =      1.2726802048269 * S_AcceptedCmpTotal
2248976   +          +    -0.02889982967357 * S_Age  +    -0.26165770909003 * S_Frq
2248977   +          +     0.19140564299867 * S_Income  +     0.30244335152969 *
2248978   +        S_Kidhome  +    -0.03391217967468 * S_Mnt  +    -0.99943007809307 *
2248979   +        S_MntFishProducts  +    -0.04374917285968 * S_MntFruits
2248980   +          +    -0.13546758294455 * S_MntGoldProds  +     3.59922243619013 *
2248981   +        S_MntMeatProducts  +    -0.10424531322566 * S_MntSweetProducts
2248982   +          +    -1.98884071414703 * S_MntWines  +     0.05310540691138 *
2248983   +        S_MonthsAsCustomer  +     0.58072892654416 * S_NumCatalogPurchases
2248984   +          +     0.30381426454211 * S_NumDealsPurchases
2248985   +          +     0.39966076372974 * S_NumDistPurchases
2248986   +          +    -0.58875986801139 * S_NumStorePurchases
2248987   +          +    -0.78850031558536 * S_NumWebPurchases
2248988   +          +     0.35182997415921 * S_NumWebVisitsMonth
2248989   +          +     1.51048129701176 * S_RFMstat  +     1.13354085492775 *
2248990   +        S_RMntFrq  +     -0.2185811652116 * S_Recency
2248991   +          +     0.01153374704027 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.2726802048269 * S_AcceptedCmpTotal + -0.02889982967357 * 
S_Age + -0.26165770909003 * S_Frq + 0.19140564299867 * S_Income + 0.30244335152969 * S_Kidhome 
+ -0.03391217967468 * S_Mnt + -0.99943007809307 * S_MntFishProducts + -0.04374917285968 * 
S_MntFruits + -0.13546758294455 * S_MntGoldProds + 3.59922243619013 * S_MntMeatProducts + 
-0.10424531322566 * S_MntSweetProducts + -1.98884071414703 * S_MntWines + 0.05310540691138 * 
S_MonthsAsCustomer + 0.58072892654416 * S_NumCatalogPurchases + 0.30381426454211 * 
S_NumDealsPurchases + 0.39966076372974 * S_NumDistPurchases + -0.58875986801139 * 
S_NumStorePurchases + -0.78850031558536 * S_NumWebPurchases + 0.35182997415921 * 
S_NumWebVisitsMonth + 1.51048129701176 * S_RFMstat + 1.13354085492775 * S_RMntFrq + 
-0.2185811652116 * S_Recency + 0.01153374704027 * S_Teenhome ;
2248992   +   H1x1_2  =     0.18093166280015 * S_AcceptedCmpTotal
2248993   +          +    -0.00677564787839 * S_Age  +    -0.21510325598577 * S_Frq
2248994   +          +     0.26314356814214 * S_Income  +    -0.30016454601651 *
2248995   +        S_Kidhome  +     -0.1410547608427 * S_Mnt  +    -0.04272369939478 *
2248996   +        S_MntFishProducts  +    -0.05622578678457 * S_MntFruits
2248997   +          +     0.04457230545618 * S_MntGoldProds  +     0.40709024692944 *
2248998   +        S_MntMeatProducts  +    -0.02989090770621 * S_MntSweetProducts
2248999   +          +    -0.18818656503765 * S_MntWines  +    -0.06237311646922 *
2249000   +        S_MonthsAsCustomer  +     0.39737856936198 * S_NumCatalogPurchases
2249001   +          +     0.33734772994048 * S_NumDealsPurchases
2249002   +          +     0.06152222921422 * S_NumDistPurchases
2249003   +          +    -0.32068333792942 * S_NumStorePurchases
2249004   +          +    -0.26971366415104 * S_NumWebPurchases
2249005   +          +     0.57693239481071 * S_NumWebVisitsMonth
2249006   +          +     0.01161324864777 * S_RFMstat  +     0.00311083015445 *
2249007   +        S_RMntFrq  +    -0.67669007299893 * S_Recency
2249008   +          +     -0.2298426154616 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18093166280015 * S_AcceptedCmpTotal + -0.00677564787839 * 
S_Age + -0.21510325598577 * S_Frq + 0.26314356814214 * S_Income + -0.30016454601651 * 
S_Kidhome + -0.1410547608427 * S_Mnt + -0.04272369939478 * S_MntFishProducts + 
-0.05622578678457 * S_MntFruits + 0.04457230545618 * S_MntGoldProds + 0.40709024692944 * 
S_MntMeatProducts + -0.02989090770621 * S_MntSweetProducts + -0.18818656503765 * S_MntWines + 
-0.06237311646922 * S_MonthsAsCustomer + 0.39737856936198 * S_NumCatalogPurchases + 
0.33734772994048 * S_NumDealsPurchases + 0.06152222921422 * S_NumDistPurchases + 
-0.32068333792942 * S_NumStorePurchases + -0.26971366415104 * S_NumWebPurchases + 
0.57693239481071 * S_NumWebVisitsMonth + 0.01161324864777 * S_RFMstat + 0.00311083015445 * 
S_RMntFrq + -0.67669007299893 * S_Recency + -0.2298426154616 * S_Teenhome ;
2249009   +   H1x1_3  =    -0.09356212420726 * S_AcceptedCmpTotal
2249010   +          +    -0.01904617704654 * S_Age  +    -0.15700206132472 * S_Frq
2249011   +          +    -0.58483226627076 * S_Income  +     0.30001673574917 *
2249012   +        S_Kidhome  +    -0.19921492301896 * S_Mnt  +    -0.00125986769238 *
2249013   +        S_MntFishProducts  +     0.10195959942937 * S_MntFruits
2249014   +          +      0.0069592628978 * S_MntGoldProds  +     0.03606436199308 *
2249015   +        S_MntMeatProducts  +     0.11259135359155 * S_MntSweetProducts
2249016   +          +     0.05408818612126 * S_MntWines  +    -0.14024859528104 *
2249017   +        S_MonthsAsCustomer  +    -0.14071929240584 * S_NumCatalogPurchases
2249018   +          +     0.22142792900578 * S_NumDealsPurchases
2249019   +          +     -0.0291983445755 * S_NumDistPurchases
2249020   +          +     -0.1997372957954 * S_NumStorePurchases
2249021   +          +    -0.01286201468794 * S_NumWebPurchases
2249022   +          +    -0.35208468552742 * S_NumWebVisitsMonth
2249023   +          +     0.02982651364231 * S_RFMstat  +      0.0228316921695 *
2249024   +        S_RMntFrq  +      0.3930877517629 * S_Recency
2249025   +          +     0.28989829670594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.09356212420726 * S_AcceptedCmpTotal + -0.01904617704654 * 
S_Age + -0.15700206132472 * S_Frq + -0.58483226627076 * S_Income + 0.30001673574917 * 
S_Kidhome + -0.19921492301896 * S_Mnt + -0.00125986769238 * S_MntFishProducts + 
0.10195959942937 * S_MntFruits + 0.0069592628978 * S_MntGoldProds + 0.03606436199308 * 
S_MntMeatProducts + 0.11259135359155 * S_MntSweetProducts + 0.05408818612126 * S_MntWines + 
-0.14024859528104 * S_MonthsAsCustomer + -0.14071929240584 * S_NumCatalogPurchases + 
0.22142792900578 * S_NumDealsPurchases + -0.0291983445755 * S_NumDistPurchases + 
-0.1997372957954 * S_NumStorePurchases + -0.01286201468794 * S_NumWebPurchases + 
-0.35208468552742 * S_NumWebVisitsMonth + 0.02982651364231 * S_RFMstat + 0.0228316921695 * 
S_RMntFrq + 0.3930877517629 * S_Recency + 0.28989829670594 * S_Teenhome ;
2249026   +   H1x1_1  = H1x1_1  +     0.03659432989123 * AcceptedCmp10
2249027   +          +    -0.12552546530316 * AcceptedCmp20  +     0.57200428680255 *
2249028   +        AcceptedCmp30  +      0.4327465126256 * AcceptedCmp40
2249029   +          +    -1.24484170256212 * AcceptedCmp50  +     0.21604379838869 *
2249030   +        Complain0  +    -0.14986629245585 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.03659432989123 * AcceptedCmp10 + -0.12552546530316 * 
AcceptedCmp20 + 0.57200428680255 * AcceptedCmp30 + 0.4327465126256 * AcceptedCmp40 + 
-1.24484170256212 * AcceptedCmp50 + 0.21604379838869 * Complain0 + -0.14986629245585 * 
HigherEducationBinary0 ;
2249031   +   H1x1_2  = H1x1_2  +    -0.13542589174402 * AcceptedCmp10
2249032   +          +    -0.19116289400292 * AcceptedCmp20  +    -0.10302282473135 *
2249033   +        AcceptedCmp30  +    -0.08705955845916 * AcceptedCmp40
2249034   +          +    -0.17435407626698 * AcceptedCmp50  +    -0.09781790399225 *
2249035   +        Complain0  +     0.02006296587353 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13542589174402 * AcceptedCmp10 + -0.19116289400292 
* AcceptedCmp20 + -0.10302282473135 * AcceptedCmp30 + -0.08705955845916 * AcceptedCmp40 + 
-0.17435407626698 * AcceptedCmp50 + -0.09781790399225 * Complain0 + 0.02006296587353 * 
HigherEducationBinary0 ;
2249036   +   H1x1_3  = H1x1_3  +     0.08917557424765 * AcceptedCmp10
2249037   +          +    -0.00944366858806 * AcceptedCmp20  +     0.30527409248576 *
2249038   +        AcceptedCmp30  +     0.26823019920335 * AcceptedCmp40
2249039   +          +    -0.02131660897576 * AcceptedCmp50  +    -0.16243659451446 *
2249040   +        Complain0  +    -0.28227689084686 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.08917557424765 * AcceptedCmp10 + -0.00944366858806 * 
AcceptedCmp20 + 0.30527409248576 * AcceptedCmp30 + 0.26823019920335 * AcceptedCmp40 + 
-0.02131660897576 * AcceptedCmp50 + -0.16243659451446 * Complain0 + -0.28227689084686 * 
HigherEducationBinary0 ;
2249041   +   H1x1_1  = H1x1_1  +     0.12998959528304 * Education2n_Cycle
2249042   +          +     0.48334684246109 * EducationBasic  +    -0.07156918649895 *
2249043   +        EducationGraduation  +    -0.21017720550072 * EducationMaster
2249044   +          +    -0.22358326722482 * Marital_StatusDivorced
2249045   +          +     0.09394210085787 * Marital_StatusMarried
2249046   +          +    -0.10381546554982 * Marital_StatusSingle
2249047   +          +     0.05935260608375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12998959528304 * Education2n_Cycle + 
0.48334684246109 * EducationBasic + -0.07156918649895 * EducationGraduation + 
-0.21017720550072 * EducationMaster + -0.22358326722482 * Marital_StatusDivorced + 
0.09394210085787 * Marital_StatusMarried + -0.10381546554982 * Marital_StatusSingle + 
0.05935260608375 * Marital_StatusTogether ;
2249048   +   H1x1_2  = H1x1_2  +     0.02955854298839 * Education2n_Cycle
2249049   +          +    -0.13472200519398 * EducationBasic  +     0.01930622297518 *
2249050   +        EducationGraduation  +    -0.00188262361226 * EducationMaster
2249051   +          +     0.16606212232833 * Marital_StatusDivorced
2249052   +          +    -0.33252488631677 * Marital_StatusMarried
2249053   +          +     0.26735237322144 * Marital_StatusSingle
2249054   +          +    -0.37056611493683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.02955854298839 * Education2n_Cycle + 
-0.13472200519398 * EducationBasic + 0.01930622297518 * EducationGraduation + 
-0.00188262361226 * EducationMaster + 0.16606212232833 * Marital_StatusDivorced + 
-0.33252488631677 * Marital_StatusMarried + 0.26735237322144 * Marital_StatusSingle + 
-0.37056611493683 * Marital_StatusTogether ;
2249055   +   H1x1_3  = H1x1_3  +     0.29085314695378 * Education2n_Cycle
2249056   +          +     -0.2177077392676 * EducationBasic  +    -0.12975750226767 *
2249057   +        EducationGraduation  +     0.12920694427876 * EducationMaster
2249058   +          +    -0.30275479651076 * Marital_StatusDivorced
2249059   +          +     0.50273719874035 * Marital_StatusMarried
2249060   +          +    -0.39588303956293 * Marital_StatusSingle
2249061   +          +     0.42028863850572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29085314695378 * Education2n_Cycle + 
-0.2177077392676 * EducationBasic + -0.12975750226767 * EducationGraduation + 0.12920694427876 
* EducationMaster + -0.30275479651076 * Marital_StatusDivorced + 0.50273719874035 * 
Marital_StatusMarried + -0.39588303956293 * Marital_StatusSingle + 0.42028863850572 * 
Marital_StatusTogether ;
2249062   +   H1x1_1  =     1.91295924572895 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.91295924572895 + H1x1_1 ;
2249063   +   H1x1_2  =    -1.21245226681055 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.21245226681055 + H1x1_2 ;
2249064   +   H1x1_3  =    -0.01609140135594 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.01609140135594 + H1x1_3 ;
2249065   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2249066   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2249067   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2249068   +   H1x1_2  = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
2249069   +   H1x1_3  = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
2249070   +END;
MPRINT(EM_DIAGRAM):   END;
2249071   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2249072   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2249073   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2249074   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2249075   +END;
MPRINT(EM_DIAGRAM):   END;
2249076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249077   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2249078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249079   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2249080   +   H1x2_1  =     0.73632716677259 * S_AcceptedCmpTotal
2249081   +          +     -1.3452480925823 * S_Age  +    -0.77564767519981 * S_Frq
2249082   +          +    -0.06163854052357 * S_Income  +     1.82428003860444 *
2249083   +        S_Kidhome  +       0.661412748756 * S_Mnt  +      1.8826488743919 *
2249084   +        S_MntFishProducts  +    -0.21815276926728 * S_MntFruits
2249085   +          +     1.06597641654862 * S_MntGoldProds  +     0.13887400045643 *
2249086   +        S_MntMeatProducts  +    -0.62827157985225 * S_MntSweetProducts
2249087   +          +     1.70742231056065 * S_MntWines  +     0.52403167020638 *
2249088   +        S_MonthsAsCustomer  +    -2.99889150929209 * S_NumCatalogPurchases
2249089   +          +    -2.59470529821377 * S_NumDealsPurchases
2249090   +          +      0.7668756449818 * S_NumDistPurchases
2249091   +          +     0.61064641547208 * S_NumStorePurchases
2249092   +          +    -0.87106335660846 * S_NumWebPurchases
2249093   +          +      0.1188879348197 * S_NumWebVisitsMonth
2249094   +          +     0.89319669432194 * S_RFMstat  +       -0.45272285967 *
2249095   +        S_RMntFrq  +     -0.7210740986075 * S_Recency
2249096   +          +      0.7032117485114 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73632716677259 * S_AcceptedCmpTotal + -1.3452480925823 * 
S_Age + -0.77564767519981 * S_Frq + -0.06163854052357 * S_Income + 1.82428003860444 * 
S_Kidhome + 0.661412748756 * S_Mnt + 1.8826488743919 * S_MntFishProducts + -0.21815276926728 * 
S_MntFruits + 1.06597641654862 * S_MntGoldProds + 0.13887400045643 * S_MntMeatProducts + 
-0.62827157985225 * S_MntSweetProducts + 1.70742231056065 * S_MntWines + 0.52403167020638 * 
S_MonthsAsCustomer + -2.99889150929209 * S_NumCatalogPurchases + -2.59470529821377 * 
S_NumDealsPurchases + 0.7668756449818 * S_NumDistPurchases + 0.61064641547208 * 
S_NumStorePurchases + -0.87106335660846 * S_NumWebPurchases + 0.1188879348197 * 
S_NumWebVisitsMonth + 0.89319669432194 * S_RFMstat + -0.45272285967 * S_RMntFrq + 
-0.7210740986075 * S_Recency + 0.7032117485114 * S_Teenhome ;
2249097   +   H1x2_2  =      0.5405970783297 * S_AcceptedCmpTotal
2249098   +          +     0.34103648596436 * S_Age  +    -1.00413619660059 * S_Frq
2249099   +          +     0.40958797602392 * S_Income  +    -0.94731216445533 *
2249100   +        S_Kidhome  +    -0.17755265939769 * S_Mnt  +    -0.88926202859892 *
2249101   +        S_MntFishProducts  +      0.6791087530674 * S_MntFruits
2249102   +          +     1.10836805118307 * S_MntGoldProds  +    -0.29462180872033 *
2249103   +        S_MntMeatProducts  +     2.21935054370304 * S_MntSweetProducts
2249104   +          +     1.41379847080743 * S_MntWines  +    -0.66077297246309 *
2249105   +        S_MonthsAsCustomer  +     0.91491641336561 * S_NumCatalogPurchases
2249106   +          +    -0.41834528691349 * S_NumDealsPurchases
2249107   +          +    -0.07802605490227 * S_NumDistPurchases
2249108   +          +    -0.62261476153139 * S_NumStorePurchases
2249109   +          +    -0.84011953180231 * S_NumWebPurchases
2249110   +          +     0.95169092183885 * S_NumWebVisitsMonth
2249111   +          +      0.4036735448902 * S_RFMstat  +     0.44620057959954 *
2249112   +        S_RMntFrq  +    -0.54980566705324 * S_Recency
2249113   +          +    -0.48914926560129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.5405970783297 * S_AcceptedCmpTotal + 0.34103648596436 * S_Age 
+ -1.00413619660059 * S_Frq + 0.40958797602392 * S_Income + -0.94731216445533 * S_Kidhome + 
-0.17755265939769 * S_Mnt + -0.88926202859892 * S_MntFishProducts + 0.6791087530674 * 
S_MntFruits + 1.10836805118307 * S_MntGoldProds + -0.29462180872033 * S_MntMeatProducts + 
2.21935054370304 * S_MntSweetProducts + 1.41379847080743 * S_MntWines + -0.66077297246309 * 
S_MonthsAsCustomer + 0.91491641336561 * S_NumCatalogPurchases + -0.41834528691349 * 
S_NumDealsPurchases + -0.07802605490227 * S_NumDistPurchases + -0.62261476153139 * 
S_NumStorePurchases + -0.84011953180231 * S_NumWebPurchases + 0.95169092183885 * 
S_NumWebVisitsMonth + 0.4036735448902 * S_RFMstat + 0.44620057959954 * S_RMntFrq + 
-0.54980566705324 * S_Recency + -0.48914926560129 * S_Teenhome ;
2249114   +   H1x2_3  =    -0.10056833202616 * S_AcceptedCmpTotal
2249115   +          +    -3.35021911955911 * S_Age  +    -0.47433508394475 * S_Frq
2249116   +          +      0.2642483252057 * S_Income  +     0.20666167536737 *
2249117   +        S_Kidhome  +    -1.63711887449192 * S_Mnt  +    -0.02078521278323 *
2249118   +        S_MntFishProducts  +    -0.13356020799092 * S_MntFruits
2249119   +          +     0.03199170913357 * S_MntGoldProds  +     0.35859745927921 *
2249120   +        S_MntMeatProducts  +     1.28933517907056 * S_MntSweetProducts
2249121   +          +    -0.45266889039243 * S_MntWines  +    -0.03980312418999 *
2249122   +        S_MonthsAsCustomer  +     0.11407065408619 * S_NumCatalogPurchases
2249123   +          +     1.50811278700924 * S_NumDealsPurchases
2249124   +          +    -0.40025710583484 * S_NumDistPurchases
2249125   +          +     0.16539197954198 * S_NumStorePurchases
2249126   +          +    -1.50803186935431 * S_NumWebPurchases
2249127   +          +    -0.35788712697704 * S_NumWebVisitsMonth
2249128   +          +    -2.06761773527847 * S_RFMstat  +    -0.00353259675109 *
2249129   +        S_RMntFrq  +      0.4364156603095 * S_Recency
2249130   +          +    -0.44689366494665 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.10056833202616 * S_AcceptedCmpTotal + -3.35021911955911 * 
S_Age + -0.47433508394475 * S_Frq + 0.2642483252057 * S_Income + 0.20666167536737 * S_Kidhome 
+ -1.63711887449192 * S_Mnt + -0.02078521278323 * S_MntFishProducts + -0.13356020799092 * 
S_MntFruits + 0.03199170913357 * S_MntGoldProds + 0.35859745927921 * S_MntMeatProducts + 
1.28933517907056 * S_MntSweetProducts + -0.45266889039243 * S_MntWines + -0.03980312418999 * 
S_MonthsAsCustomer + 0.11407065408619 * S_NumCatalogPurchases + 1.50811278700924 * 
S_NumDealsPurchases + -0.40025710583484 * S_NumDistPurchases + 0.16539197954198 * 
S_NumStorePurchases + -1.50803186935431 * S_NumWebPurchases + -0.35788712697704 * 
S_NumWebVisitsMonth + -2.06761773527847 * S_RFMstat + -0.00353259675109 * S_RMntFrq + 
0.4364156603095 * S_Recency + -0.44689366494665 * S_Teenhome ;
2249131   +   H1x2_1  = H1x2_1  +     1.19862785990255 * AcceptedCmp10
2249132   +          +    -0.56777088839338 * AcceptedCmp20  +    -0.20982687937883 *
2249133   +        AcceptedCmp30  +     0.23051157512105 * AcceptedCmp40
2249134   +          +    -1.16625535461103 * AcceptedCmp50  +    -0.03987377830172 *
2249135   +        Complain0  +    -1.17553145310278 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.19862785990255 * AcceptedCmp10 + -0.56777088839338 * 
AcceptedCmp20 + -0.20982687937883 * AcceptedCmp30 + 0.23051157512105 * AcceptedCmp40 + 
-1.16625535461103 * AcceptedCmp50 + -0.03987377830172 * Complain0 + -1.17553145310278 * 
HigherEducationBinary0 ;
2249136   +   H1x2_2  = H1x2_2  +    -1.37553391657098 * AcceptedCmp10
2249137   +          +    -0.49489986415129 * AcceptedCmp20  +     0.84075258232812 *
2249138   +        AcceptedCmp30  +     0.31883526052436 * AcceptedCmp40
2249139   +          +    -0.41245383847025 * AcceptedCmp50  +     0.75603245683628 *
2249140   +        Complain0  +    -2.07732119239317 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37553391657098 * AcceptedCmp10 + -0.49489986415129 
* AcceptedCmp20 + 0.84075258232812 * AcceptedCmp30 + 0.31883526052436 * AcceptedCmp40 + 
-0.41245383847025 * AcceptedCmp50 + 0.75603245683628 * Complain0 + -2.07732119239317 * 
HigherEducationBinary0 ;
2249141   +   H1x2_3  = H1x2_3  +     0.94876862525586 * AcceptedCmp10
2249142   +          +     0.79245605062261 * AcceptedCmp20  +     1.18614024465163 *
2249143   +        AcceptedCmp30  +    -0.24348380736895 * AcceptedCmp40
2249144   +          +     0.63374252730038 * AcceptedCmp50  +     0.36777527794452 *
2249145   +        Complain0  +    -0.07746344015306 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.94876862525586 * AcceptedCmp10 + 0.79245605062261 * 
AcceptedCmp20 + 1.18614024465163 * AcceptedCmp30 + -0.24348380736895 * AcceptedCmp40 + 
0.63374252730038 * AcceptedCmp50 + 0.36777527794452 * Complain0 + -0.07746344015306 * 
HigherEducationBinary0 ;
2249146   +   H1x2_1  = H1x2_1  +     1.73012058377195 * Education2n_Cycle
2249147   +          +     2.12295803973544 * EducationBasic  +     0.36945596974292 *
2249148   +        EducationGraduation  +    -1.22675967760612 * EducationMaster
2249149   +          +    -0.48199299977856 * Marital_StatusDivorced
2249150   +          +    -1.61546983135535 * Marital_StatusMarried
2249151   +          +     1.25890289649165 * Marital_StatusSingle
2249152   +          +    -0.35805098686637 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.73012058377195 * Education2n_Cycle + 
2.12295803973544 * EducationBasic + 0.36945596974292 * EducationGraduation + -1.22675967760612 
* EducationMaster + -0.48199299977856 * Marital_StatusDivorced + -1.61546983135535 * 
Marital_StatusMarried + 1.25890289649165 * Marital_StatusSingle + -0.35805098686637 * 
Marital_StatusTogether ;
2249153   +   H1x2_2  = H1x2_2  +    -1.04319773106255 * Education2n_Cycle
2249154   +          +    -1.20017517243416 * EducationBasic  +    -0.21851017334559 *
2249155   +        EducationGraduation  +     0.54918303984069 * EducationMaster
2249156   +          +    -0.69719138781358 * Marital_StatusDivorced
2249157   +          +     0.26964883367384 * Marital_StatusMarried
2249158   +          +      0.4656663467381 * Marital_StatusSingle
2249159   +          +    -0.38324848670979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.04319773106255 * Education2n_Cycle + 
-1.20017517243416 * EducationBasic + -0.21851017334559 * EducationGraduation + 
0.54918303984069 * EducationMaster + -0.69719138781358 * Marital_StatusDivorced + 
0.26964883367384 * Marital_StatusMarried + 0.4656663467381 * Marital_StatusSingle + 
-0.38324848670979 * Marital_StatusTogether ;
2249160   +   H1x2_3  = H1x2_3  +     0.26572249637491 * Education2n_Cycle
2249161   +          +     1.36865822272368 * EducationBasic  +     0.26769702437041 *
2249162   +        EducationGraduation  +    -0.57748542336591 * EducationMaster
2249163   +          +     1.40407968804704 * Marital_StatusDivorced
2249164   +          +    -1.35468203106214 * Marital_StatusMarried
2249165   +          +      1.0644996414042 * Marital_StatusSingle
2249166   +          +    -0.68198832748724 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26572249637491 * Education2n_Cycle + 
1.36865822272368 * EducationBasic + 0.26769702437041 * EducationGraduation + -0.57748542336591 
* EducationMaster + 1.40407968804704 * Marital_StatusDivorced + -1.35468203106214 * 
Marital_StatusMarried + 1.0644996414042 * Marital_StatusSingle + -0.68198832748724 * 
Marital_StatusTogether ;
2249167   +   H1x2_1  =     1.72650566457008 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.72650566457008 + H1x2_1 ;
2249168   +   H1x2_2  =     -1.0113179577999 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.0113179577999 + H1x2_2 ;
2249169   +   H1x2_3  =     0.14003924400021 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.14003924400021 + H1x2_3 ;
2249170   +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
2249171   +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
2249172   +   H1x2_3  = SIN(H1x2_3 );
MPRINT(EM_DIAGRAM):   H1x2_3 = SIN(H1x2_3 );
2249173   +END;
MPRINT(EM_DIAGRAM):   END;
2249174   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2249175   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2249176   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2249177   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2249178   +END;
MPRINT(EM_DIAGRAM):   END;
2249179   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249180   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2249181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249182   +
2249183   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2249184   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2249185   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2249186   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2249187   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2249188   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2249189   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2249190   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2249191   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2249192   +end;
MPRINT(EM_DIAGRAM):   end;
2249193   +else do;
MPRINT(EM_DIAGRAM):   else do;
2249194   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2249195   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2249196   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2249197   +   end;
MPRINT(EM_DIAGRAM):   end;
2249198   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2249199   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2249200   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2249201   +   end;
MPRINT(EM_DIAGRAM):   end;
2249202   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2249203   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2249204   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2249205   +   end;
MPRINT(EM_DIAGRAM):   end;
2249206   +end;
MPRINT(EM_DIAGRAM):   end;
2249207   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2249208   +   P_DepVar1  =    -7.62079794803554 * H1x1_1  +     13.7007341613959 * H1x1_2
2249209   +          +    -6.77882452096978 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.62079794803554 * H1x1_1 + 13.7007341613959 * H1x1_2 + 
-6.77882452096978 * H1x1_3 ;
2249210   +   P_DepVar1  = P_DepVar1  +    -0.44850093089338 * H1x2_1
2249211   +          +    -1.24228597291063 * H1x2_2  +     1.00075465600952 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.44850093089338 * H1x2_1 + -1.24228597291063 * 
H1x2_2 + 1.00075465600952 * H1x2_3 ;
2249212   +   P_DepVar1  =    -2.26198805619545 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26198805619545 + P_DepVar1 ;
2249213   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2249214   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2249215   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2249216   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2249217   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2249218   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2249219   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2249220   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2249221   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2249222   +END;
MPRINT(EM_DIAGRAM):   END;
2249223   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2249224   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2249225   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2249226   +END;
MPRINT(EM_DIAGRAM):   END;
2249227   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2249228   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2249229   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2249230   +END;
MPRINT(EM_DIAGRAM):   END;
2249231   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2249232   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2249233   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2249234   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2249235   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2249236   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2249237   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2249238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249239   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2249240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249241   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2249242   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2249243   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2249244   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2249245   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2249246   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2249247   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2249248   +END;
MPRINT(EM_DIAGRAM):   END;
2249249   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2249250   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2249251   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2249252   +drop
2249253   +H1x1_1
2249254   +H1x1_2
2249255   +H1x1_3
2249256   +H1x2_1
2249257   +H1x2_2
2249258   +H1x2_3
2249259   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x2_1 H1x2_2 H1x2_3 ;
2249260   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2249261   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
2249262   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2249263   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
2249264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2249265   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
2249266   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
2249267   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
2249268   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
2249269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2249270   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
2249271   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2249272   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
2249273   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
2249274   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
2249275   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2249276   +* Ensmbl36: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 4 of 7;
2249277   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2249278   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2249279   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2249280   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2249281   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2249282   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2249283   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2249284   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2249285   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2249286   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2249287   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2249288   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2249289   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2249290   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2249291   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2249292   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2249293   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2249294   +LENGTH _WARN_ $4
2249295   +      F_DepVar  $ 12
2249296   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2249297   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2249298   +
2249299   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2249300   +
2249301   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2249302   +
2249303   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2249304   +
2249305   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2249306   +
2249307   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2249308   +
2249309   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2249310   +
2249311   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2249312   +
2249313   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2249314   +
2249315   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2249316   +
2249317   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2249318   +
2249319   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2249320   +
2249321   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2249322   +
2249323   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2249324   +
2249325   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2249326   +
2249327   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2249328   +
2249329   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2249330   +
2249331   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2249332   +
2249333   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2249334   +
2249335   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2249336   +
2249337   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2249338   +
2249339   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2249340   +
2249341   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2249342   +
2249343   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2249344   +
2249345   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2249346   +
2249347   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2249348   +
2249349   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2249350   +
2249351   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2249352   +
2249353   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2249354   +
2249355   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2249356   +
2249357   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2249358   +
2249359   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2249360   +
2249361   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2249362   +
2249363   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2249364   +
2249365   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2249366   +
2249367   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2249368   +
2249369   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2249370   +
2249371   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2249372   +
2249373   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2249374   +
2249375   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2249376   +
2249377   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2249378   +
2249379   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2249380   +
2249381   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2249382   +
2249383   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2249384   +
2249385   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2249386   +
2249387   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2249388   +
2249389   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2249390   +
2249391   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2249392   +
2249393   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2249394   +
2249395   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2249396   +
2249397   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2249398   +
2249399   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2249400   +
2249401   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2249402   +
2249403   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2249404   +
2249405   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2249406   +
2249407   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2249408   +
2249409   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2249410   +
2249411   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2249412   +
2249413   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2249414   +
2249415   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2249416   +
2249417   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2249418   +
2249419   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2249420   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2249421   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2249422   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2249423   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2249424   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249425   +end;
MPRINT(EM_DIAGRAM):   end;
2249426   +else do;
MPRINT(EM_DIAGRAM):   else do;
2249427   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2249428   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2249429   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2249430   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2249431   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2249432   +   end;
MPRINT(EM_DIAGRAM):   end;
2249433   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2249434   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2249435   +   end;
MPRINT(EM_DIAGRAM):   end;
2249436   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2249437   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2249438   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2249439   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249440   +   end;
MPRINT(EM_DIAGRAM):   end;
2249441   +end;
MPRINT(EM_DIAGRAM):   end;
2249442   +
2249443   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2249444   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2249445   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2249446   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2249447   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2249448   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249449   +end;
MPRINT(EM_DIAGRAM):   end;
2249450   +else do;
MPRINT(EM_DIAGRAM):   else do;
2249451   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2249452   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2249453   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2249454   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2249455   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2249456   +   end;
MPRINT(EM_DIAGRAM):   end;
2249457   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2249458   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2249459   +   end;
MPRINT(EM_DIAGRAM):   end;
2249460   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2249461   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2249462   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2249463   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249464   +   end;
MPRINT(EM_DIAGRAM):   end;
2249465   +end;
MPRINT(EM_DIAGRAM):   end;
2249466   +
2249467   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2249468   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2249469   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2249470   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2249471   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2249472   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249473   +end;
MPRINT(EM_DIAGRAM):   end;
2249474   +else do;
MPRINT(EM_DIAGRAM):   else do;
2249475   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2249476   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2249477   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2249478   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2249479   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2249480   +   end;
MPRINT(EM_DIAGRAM):   end;
2249481   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2249482   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2249483   +   end;
MPRINT(EM_DIAGRAM):   end;
2249484   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2249485   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2249486   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2249487   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249488   +   end;
MPRINT(EM_DIAGRAM):   end;
2249489   +end;
MPRINT(EM_DIAGRAM):   end;
2249490   +
2249491   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2249492   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2249493   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2249494   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2249495   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2249496   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249497   +end;
MPRINT(EM_DIAGRAM):   end;
2249498   +else do;
MPRINT(EM_DIAGRAM):   else do;
2249499   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2249500   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2249501   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2249502   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2249503   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2249504   +   end;
MPRINT(EM_DIAGRAM):   end;
2249505   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2249506   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2249507   +   end;
MPRINT(EM_DIAGRAM):   end;
2249508   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2249509   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2249510   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2249511   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249512   +   end;
MPRINT(EM_DIAGRAM):   end;
2249513   +end;
MPRINT(EM_DIAGRAM):   end;
2249514   +
2249515   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2249516   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2249517   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2249518   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2249519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2249520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249521   +end;
MPRINT(EM_DIAGRAM):   end;
2249522   +else do;
MPRINT(EM_DIAGRAM):   else do;
2249523   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2249524   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2249525   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2249526   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2249527   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2249528   +   end;
MPRINT(EM_DIAGRAM):   end;
2249529   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2249530   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2249531   +   end;
MPRINT(EM_DIAGRAM):   end;
2249532   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2249533   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2249534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2249535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249536   +   end;
MPRINT(EM_DIAGRAM):   end;
2249537   +end;
MPRINT(EM_DIAGRAM):   end;
2249538   +
2249539   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2249540   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2249541   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2249542   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2249543   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2249544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249545   +end;
MPRINT(EM_DIAGRAM):   end;
2249546   +else do;
MPRINT(EM_DIAGRAM):   else do;
2249547   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2249548   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2249549   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2249550   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2249551   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2249552   +   end;
MPRINT(EM_DIAGRAM):   end;
2249553   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2249554   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2249555   +   end;
MPRINT(EM_DIAGRAM):   end;
2249556   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2249557   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2249558   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2249559   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249560   +   end;
MPRINT(EM_DIAGRAM):   end;
2249561   +end;
MPRINT(EM_DIAGRAM):   end;
2249562   +
2249563   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2249564   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2249565   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2249566   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2249567   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2249568   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249569   +end;
MPRINT(EM_DIAGRAM):   end;
2249570   +else do;
MPRINT(EM_DIAGRAM):   else do;
2249571   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2249572   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2249573   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2249574   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2249575   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2249576   +   end;
MPRINT(EM_DIAGRAM):   end;
2249577   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2249578   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2249579   +   end;
MPRINT(EM_DIAGRAM):   end;
2249580   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2249581   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2249582   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2249583   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249584   +   end;
MPRINT(EM_DIAGRAM):   end;
2249585   +end;
MPRINT(EM_DIAGRAM):   end;
2249586   +
2249587   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2249588   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2249589   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2249590   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2249591   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2249592   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2249593   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2249594   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2249595   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2249596   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2249597   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2249598   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2249599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2249600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249601   +end;
MPRINT(EM_DIAGRAM):   end;
2249602   +else do;
MPRINT(EM_DIAGRAM):   else do;
2249603   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2249604   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2249605   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2249606   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2249607   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2249608   +   end;
MPRINT(EM_DIAGRAM):   end;
2249609   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2249610   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2249611   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2249612   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2249613   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2249614   +   end;
MPRINT(EM_DIAGRAM):   end;
2249615   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2249616   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2249617   +   end;
MPRINT(EM_DIAGRAM):   end;
2249618   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2249619   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2249620   +   end;
MPRINT(EM_DIAGRAM):   end;
2249621   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2249622   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2249623   +   end;
MPRINT(EM_DIAGRAM):   end;
2249624   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2249625   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2249626   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2249627   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2249628   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2249629   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2249630   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249631   +   end;
MPRINT(EM_DIAGRAM):   end;
2249632   +end;
MPRINT(EM_DIAGRAM):   end;
2249633   +
2249634   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2249635   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2249636   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2249637   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2249638   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2249639   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2249640   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2249641   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2249642   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2249643   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2249644   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2249645   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2249646   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2249647   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2249648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249649   +end;
MPRINT(EM_DIAGRAM):   end;
2249650   +else do;
MPRINT(EM_DIAGRAM):   else do;
2249651   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2249652   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2249653   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2249654   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2249655   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2249656   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2249657   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2249658   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2249659   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2249660   +         end;
MPRINT(EM_DIAGRAM):   end;
2249661   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2249662   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2249663   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2249664   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2249665   +            end;
MPRINT(EM_DIAGRAM):   end;
2249666   +         end;
MPRINT(EM_DIAGRAM):   end;
2249667   +      end;
MPRINT(EM_DIAGRAM):   end;
2249668   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2249669   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2249670   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2249671   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2249672   +         end;
MPRINT(EM_DIAGRAM):   end;
2249673   +      end;
MPRINT(EM_DIAGRAM):   end;
2249674   +   end;
MPRINT(EM_DIAGRAM):   end;
2249675   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2249676   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2249677   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2249678   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2249679   +      end;
MPRINT(EM_DIAGRAM):   end;
2249680   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2249681   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2249682   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2249683   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2249684   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2249685   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2249686   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2249687   +         end;
MPRINT(EM_DIAGRAM):   end;
2249688   +      end;
MPRINT(EM_DIAGRAM):   end;
2249689   +   end;
MPRINT(EM_DIAGRAM):   end;
2249690   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2249691   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2249692   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2249693   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2249694   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2249695   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2249696   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249697   +   end;
MPRINT(EM_DIAGRAM):   end;
2249698   +end;
MPRINT(EM_DIAGRAM):   end;
2249699   +
2249700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249701   +*** Checking missing input Interval
2249702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2249703   +
2249704   +IF NMISS(
2249705   +   AcceptedCmpTotal ,
2249706   +   Age ,
2249707   +   Frq ,
2249708   +   Income ,
2249709   +   Kidhome ,
2249710   +   Mnt ,
2249711   +   MntFishProducts ,
2249712   +   MntFruits ,
2249713   +   MntGoldProds ,
2249714   +   MntMeatProducts ,
2249715   +   MntSweetProducts ,
2249716   +   MntWines ,
2249717   +   MonthsAsCustomer ,
2249718   +   NumCatalogPurchases ,
2249719   +   NumDealsPurchases ,
2249720   +   NumDistPurchases ,
2249721   +   NumStorePurchases ,
2249722   +   NumWebPurchases ,
2249723   +   NumWebVisitsMonth ,
2249724   +   RFMstat ,
2249725   +   RMntFrq ,
2249726   +   Recency ,
2249727   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2249728   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2249729   +
2249730   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2249731   +END;
MPRINT(EM_DIAGRAM):   END;
2249732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249733   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2249734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249735   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2249736   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2249737   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2249738   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2249739   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2249740   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2249741   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2249742   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2249743   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2249744   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2249745   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2249746   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2249747   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2249748   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2249749   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2249750   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2249751   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2249752   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2249753   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2249754   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2249755   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2249756   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2249757   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2249758   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2249759   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2249760   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2249761   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2249762   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2249763   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2249764   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2249765   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2249766   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2249767   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2249768   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2249769   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2249770   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2249771   +END;
MPRINT(EM_DIAGRAM):   END;
2249772   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2249773   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2249774   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2249775   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2249776   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2249777   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2249778   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2249779   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2249780   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2249781   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2249782   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2249783   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2249784   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2249785   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2249786   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2249787   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2249788   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2249789   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2249790   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2249791   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2249792   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2249793   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2249794   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2249795   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2249796   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2249797   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2249798   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2249799   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2249800   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2249801   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2249802   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2249803   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2249804   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2249805   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2249806   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2249807   +   ELSE S_NumCatalogPurchases
2249808   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2249809   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2249810   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2249811   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2249812   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2249813   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2249814   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2249815   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2249816   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2249817   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2249818   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2249819   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2249820   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2249821   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2249822   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2249823   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2249824   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2249825   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2249826   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2249827   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2249828   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2249829   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2249830   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2249831   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2249832   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2249833   +END;
MPRINT(EM_DIAGRAM):   END;
2249834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249835   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2249836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249838   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2249839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249841   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2249842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2249843   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2249844   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2249845   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2249846   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2249847   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2249848   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2249849   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2249850   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2249851   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2249852   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2249853   +          +     3.21215425524619 * S_NumDealsPurchases
2249854   +          +     0.08695198777156 * S_NumDistPurchases
2249855   +          +    -2.58697971128295 * S_NumStorePurchases
2249856   +          +    -0.44431924796059 * S_NumWebPurchases
2249857   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2249858   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2249859   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2249860   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 * 
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 * 
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts + 
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 * 
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines + 
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases + 
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases + 
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases + 
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 * 
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2249861   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2249862   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2249863   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2249864   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2249865   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2249866   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2249867   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2249868   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2249869   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2249870   +          +    -0.83844506398484 * S_NumDealsPurchases
2249871   +          +     0.60831936516804 * S_NumDistPurchases
2249872   +          +     1.79084087761626 * S_NumStorePurchases
2249873   +          +     1.17119196356453 * S_NumWebPurchases
2249874   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2249875   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2249876   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2249877   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 * 
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome 
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 * 
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts + 
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 * 
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 * 
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 * 
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 * 
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq + 
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2249878   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2249879   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2249880   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2249881   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2249882   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2249883   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2249884   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2249885   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2249886   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2249887   +          +    -0.31484031572628 * S_NumDealsPurchases
2249888   +          +    -0.18273941035679 * S_NumDistPurchases
2249889   +          +     0.99501789733882 * S_NumStorePurchases
2249890   +          +     1.32014078829379 * S_NumWebPurchases
2249891   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2249892   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2249893   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2249894   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 * 
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 * 
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098 
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts + 
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 * 
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 * 
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 * 
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 * 
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq + 
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2249895   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2249896   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2249897   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2249898   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2249899   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2249900   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2249901   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2249902   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2249903   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2249904   +          +     1.19658719134196 * S_NumDealsPurchases
2249905   +          +     0.87478204472986 * S_NumDistPurchases
2249906   +          +    -0.20635856288784 * S_NumStorePurchases
2249907   +          +    -0.89927356974242 * S_NumWebPurchases
2249908   +          +     2.92285244132576 * S_NumWebVisitsMonth
2249909   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2249910   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2249911   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 * 
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome 
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 * 
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts + 
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 * 
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 * 
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 * 
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 * 
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq + 
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2249912   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2249913   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2249914   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2249915   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2249916   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2249917   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2249918   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2249919   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2249920   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2249921   +          +       -2.32617124568 * S_NumDealsPurchases
2249922   +          +    -0.56589187730672 * S_NumDistPurchases
2249923   +          +     1.07062299863482 * S_NumStorePurchases
2249924   +          +     0.30077273739578 * S_NumWebPurchases
2249925   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2249926   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2249927   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2249928   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 * 
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 * 
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661 
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts + 
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 * 
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 * 
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 * 
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 * 
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq + 
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2249929   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2249930   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2249931   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2249932   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2249933   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 * 
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 + 
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 * 
HigherEducationBinary0 ;
2249934   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2249935   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2249936   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2249937   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2249938   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 * 
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 + 
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 * 
HigherEducationBinary0 ;
2249939   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2249940   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2249941   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2249942   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2249943   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 * 
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 + 
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 * 
HigherEducationBinary0 ;
2249944   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2249945   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2249946   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2249947   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2249948   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234 
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 + 
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 * 
HigherEducationBinary0 ;
2249949   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2249950   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2249951   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2249952   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2249953   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 * 
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 + 
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 * 
HigherEducationBinary0 ;
2249954   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2249955   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2249956   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2249957   +          +    -0.27797737429678 * Marital_StatusDivorced
2249958   +          +    -0.08137635862327 * Marital_StatusMarried
2249959   +          +     0.06275411820495 * Marital_StatusSingle
2249960   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle + 
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588 
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 * 
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 * 
Marital_StatusTogether ;
2249961   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2249962   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2249963   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2249964   +          +     0.05151426841441 * Marital_StatusDivorced
2249965   +          +     1.19165082030442 * Marital_StatusMarried
2249966   +          +    -1.08257080662611 * Marital_StatusSingle
2249967   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle + 
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112 
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 * 
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 * 
Marital_StatusTogether ;
2249968   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2249969   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2249970   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2249971   +          +      0.0238206459022 * Marital_StatusDivorced
2249972   +          +     -0.4653244204261 * Marital_StatusMarried
2249973   +          +     0.13051613619882 * Marital_StatusSingle
2249974   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle + 
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation + 
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced + 
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle + 
-0.35951366919755 * Marital_StatusTogether ;
2249975   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2249976   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2249977   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2249978   +          +     -0.7449356409222 * Marital_StatusDivorced
2249979   +          +    -1.46604673521535 * Marital_StatusMarried
2249980   +          +     0.74484771688818 * Marital_StatusSingle
2249981   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle + 
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249 
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 * 
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 * 
Marital_StatusTogether ;
2249982   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2249983   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2249984   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2249985   +          +    -3.68044980584423 * Marital_StatusDivorced
2249986   +          +     3.14587407902338 * Marital_StatusMarried
2249987   +          +    -2.66118132753024 * Marital_StatusSingle
2249988   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle + 
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation + 
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced + 
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle + 
3.50991640149914 * Marital_StatusTogether ;
2249989   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2249990   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2249991   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2249992   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2249993   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2249994   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2249995   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2249996   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2249997   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2249998   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2249999   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2250000   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2250001   +END;
MPRINT(EM_DIAGRAM):   END;
2250002   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2250003   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2250004   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2250005   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2250006   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2250007   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2250008   +END;
MPRINT(EM_DIAGRAM):   END;
2250009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2250010   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2250011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2250012   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2250013   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2250014   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2250015   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2250016   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2250017   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2250018   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2250019   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2250020   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2250021   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2250022   +          +     0.89261880438741 * S_NumDealsPurchases
2250023   +          +    -1.61647413199892 * S_NumDistPurchases
2250024   +          +    -0.56304669045195 * S_NumStorePurchases
2250025   +          +      0.7766837080945 * S_NumWebPurchases
2250026   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2250027   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2250028   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2250029   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 * 
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 * 
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts + 
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 * 
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines + 
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases + 
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases + 
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases + 
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 * 
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2250030   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2250031   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2250032   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2250033   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2250034   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2250035   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2250036   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2250037   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2250038   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2250039   +          +     1.02431289724643 * S_NumDealsPurchases
2250040   +          +    -0.90960173637405 * S_NumDistPurchases
2250041   +          +     1.24283490404772 * S_NumStorePurchases
2250042   +          +     1.23072413154592 * S_NumWebPurchases
2250043   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2250044   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2250045   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2250046   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age 
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome + 
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 * 
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts + 
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 * 
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 * 
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 * 
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 * 
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq + 
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2250047   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2250048   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2250049   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2250050   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2250051   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2250052   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2250053   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2250054   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2250055   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2250056   +          +    -0.26249596122198 * S_NumDealsPurchases
2250057   +          +    -0.63328519804758 * S_NumDistPurchases
2250058   +          +    -0.88467503575886 * S_NumStorePurchases
2250059   +          +    -0.83120537310738 * S_NumWebPurchases
2250060   +          +     1.40072282351719 * S_NumWebVisitsMonth
2250061   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2250062   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2250063   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 * 
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 * 
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts + 
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 * 
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines + 
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases + 
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases + 
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases + 
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 * 
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2250064   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2250065   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2250066   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2250067   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2250068   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2250069   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2250070   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2250071   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2250072   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2250073   +          +     1.30167361451945 * S_NumDealsPurchases
2250074   +          +     1.45457613716235 * S_NumDistPurchases
2250075   +          +    -0.40226463685252 * S_NumStorePurchases
2250076   +          +     0.36369161683572 * S_NumWebPurchases
2250077   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2250078   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2250079   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2250080   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 * 
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome 
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 * 
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts + 
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 * 
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 * 
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 * 
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 * 
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq + 
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2250081   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2250082   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2250083   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2250084   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2250085   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2250086   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2250087   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2250088   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2250089   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2250090   +          +    -0.54572162665338 * S_NumDealsPurchases
2250091   +          +      0.9607390449318 * S_NumDistPurchases
2250092   +          +    -0.03259470545754 * S_NumStorePurchases
2250093   +          +     0.19202241423412 * S_NumWebPurchases
2250094   +          +     0.61085831658456 * S_NumWebVisitsMonth
2250095   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2250096   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2250097   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 * 
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 * 
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts + 
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 * 
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines + 
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases + 
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases + 
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases + 
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 * 
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2250098   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2250099   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2250100   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2250101   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2250102   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 * 
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 + 
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 * 
HigherEducationBinary0 ;
2250103   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2250104   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2250105   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2250106   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2250107   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 * 
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 + 
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 * 
HigherEducationBinary0 ;
2250108   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2250109   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2250110   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2250111   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2250112   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 * 
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 + 
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 * 
HigherEducationBinary0 ;
2250113   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2250114   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2250115   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2250116   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2250117   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 * 
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 + 
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 * 
HigherEducationBinary0 ;
2250118   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2250119   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2250120   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2250121   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2250122   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 * 
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 + 
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 * 
HigherEducationBinary0 ;
2250123   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2250124   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2250125   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2250126   +          +    -2.32430245081383 * Marital_StatusDivorced
2250127   +          +    -0.09815511356796 * Marital_StatusMarried
2250128   +          +     0.13075504294551 * Marital_StatusSingle
2250129   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle + 
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804 
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 * 
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 * 
Marital_StatusTogether ;
2250130   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2250131   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2250132   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2250133   +          +    -0.65574603869224 * Marital_StatusDivorced
2250134   +          +     1.54672472575294 * Marital_StatusMarried
2250135   +          +    -1.59817602340208 * Marital_StatusSingle
2250136   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle + 
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451 
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 * 
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 * 
Marital_StatusTogether ;
2250137   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2250138   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2250139   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2250140   +          +    -0.50911604604781 * Marital_StatusDivorced
2250141   +          +     0.30403066135719 * Marital_StatusMarried
2250142   +          +      0.1026950879545 * Marital_StatusSingle
2250143   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle + 
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444 
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 * 
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 * 
Marital_StatusTogether ;
2250144   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2250145   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2250146   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2250147   +          +     1.07371507133318 * Marital_StatusDivorced
2250148   +          +    -0.07097334129051 * Marital_StatusMarried
2250149   +          +    -0.48339718568621 * Marital_StatusSingle
2250150   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle + 
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566 
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 * 
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 * 
Marital_StatusTogether ;
2250151   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2250152   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2250153   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2250154   +          +     1.04342893515504 * Marital_StatusDivorced
2250155   +          +     1.16171312085032 * Marital_StatusMarried
2250156   +          +    -0.30201646939913 * Marital_StatusSingle
2250157   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle + 
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119 
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 * 
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 * 
Marital_StatusTogether ;
2250158   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2250159   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2250160   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2250161   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2250162   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2250163   +END;
MPRINT(EM_DIAGRAM):   END;
2250164   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2250165   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2250166   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2250167   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2250168   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2250169   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2250170   +END;
MPRINT(EM_DIAGRAM):   END;
2250171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2250172   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2250173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2250174   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2250175   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2250176   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2250177   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2250178   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2250179   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2250180   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2250181   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2250182   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2250183   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2250184   +          +     1.32256781010645 * S_NumDealsPurchases
2250185   +          +    -1.43015438973619 * S_NumDistPurchases
2250186   +          +    -0.63489289584421 * S_NumStorePurchases
2250187   +          +     0.90508699686841 * S_NumWebPurchases
2250188   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2250189   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2250190   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2250191   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 * 
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome 
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 * 
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts + 
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 * 
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 * 
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 * 
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 * 
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq + 
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2250192   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2250193   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2250194   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2250195   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2250196   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2250197   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2250198   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2250199   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2250200   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2250201   +          +     0.85965187264096 * S_NumDealsPurchases
2250202   +          +    -1.15239933286756 * S_NumDistPurchases
2250203   +          +     1.20800889102387 * S_NumStorePurchases
2250204   +          +     1.08790389130242 * S_NumWebPurchases
2250205   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2250206   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2250207   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2250208   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 * 
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 * 
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826 
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts + 
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 * 
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 * 
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 * 
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 * 
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq + 
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2250209   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2250210   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2250211   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2250212   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2250213   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2250214   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2250215   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2250216   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2250217   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2250218   +          +     -0.5767607129654 * S_NumDealsPurchases
2250219   +          +     -0.2643921429796 * S_NumDistPurchases
2250220   +          +    -0.67417489911206 * S_NumStorePurchases
2250221   +          +    -0.51423877684891 * S_NumWebPurchases
2250222   +          +     1.40328299605176 * S_NumWebVisitsMonth
2250223   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2250224   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2250225   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 * 
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome 
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 * 
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts + 
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 * 
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 * 
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 * 
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 * 
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq + 
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2250226   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2250227   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2250228   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2250229   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2250230   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2250231   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2250232   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2250233   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2250234   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2250235   +          +      1.2821617657076 * S_NumDealsPurchases
2250236   +          +     1.26584115202735 * S_NumDistPurchases
2250237   +          +    -0.46597664211833 * S_NumStorePurchases
2250238   +          +     0.45652363472866 * S_NumWebPurchases
2250239   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2250240   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2250241   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2250242   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 * 
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome 
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 * 
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts + 
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 * 
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 * 
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 * 
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 * 
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq + 
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2250243   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2250244   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2250245   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2250246   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2250247   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2250248   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2250249   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2250250   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2250251   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2250252   +          +    -0.85162564171681 * S_NumDealsPurchases
2250253   +          +     0.64631099667221 * S_NumDistPurchases
2250254   +          +    -0.03081963858636 * S_NumStorePurchases
2250255   +          +    -0.24124717624664 * S_NumWebPurchases
2250256   +          +     0.56425980772372 * S_NumWebVisitsMonth
2250257   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2250258   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2250259   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 * 
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 * 
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts + 
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 * 
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines + 
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases + 
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases + 
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases + 
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 * 
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2250260   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2250261   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2250262   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2250263   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2250264   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 * 
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 + 
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 * 
HigherEducationBinary0 ;
2250265   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2250266   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2250267   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2250268   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2250269   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 * 
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 + 
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 * 
HigherEducationBinary0 ;
2250270   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2250271   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2250272   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2250273   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2250274   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 * 
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 + 
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 * 
HigherEducationBinary0 ;
2250275   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2250276   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2250277   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2250278   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2250279   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938 
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 + 
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 * 
HigherEducationBinary0 ;
2250280   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2250281   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2250282   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2250283   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2250284   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 * 
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 + 
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 * 
HigherEducationBinary0 ;
2250285   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2250286   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2250287   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2250288   +          +    -2.49973437075558 * Marital_StatusDivorced
2250289   +          +    -0.18076948182574 * Marital_StatusMarried
2250290   +          +     0.13498525495231 * Marital_StatusSingle
2250291   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle + 
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868 
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 * 
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 * 
Marital_StatusTogether ;
2250292   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2250293   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2250294   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2250295   +          +       -0.59463732835 * Marital_StatusDivorced
2250296   +          +     1.37741332427598 * Marital_StatusMarried
2250297   +          +     -1.5833455713231 * Marital_StatusSingle
2250298   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle + 
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation + 
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced + 
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle + 
1.79205360628448 * Marital_StatusTogether ;
2250299   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2250300   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2250301   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2250302   +          +    -0.44569556289443 * Marital_StatusDivorced
2250303   +          +     0.29918053103557 * Marital_StatusMarried
2250304   +          +    -0.10337314064224 * Marital_StatusSingle
2250305   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle + 
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474 
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 * 
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 * 
Marital_StatusTogether ;
2250306   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2250307   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2250308   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2250309   +          +     1.13881957277462 * Marital_StatusDivorced
2250310   +          +    -0.35849807146313 * Marital_StatusMarried
2250311   +          +    -0.22168731316885 * Marital_StatusSingle
2250312   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle + 
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697 
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 * 
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 * 
Marital_StatusTogether ;
2250313   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2250314   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2250315   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2250316   +          +     1.10774969923269 * Marital_StatusDivorced
2250317   +          +     1.08409594073043 * Marital_StatusMarried
2250318   +          +    -0.33145048007894 * Marital_StatusSingle
2250319   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle + 
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249 
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 * 
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 * 
Marital_StatusTogether ;
2250320   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2250321   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2250322   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2250323   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2250324   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2250325   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2250326   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2250327   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2250328   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2250329   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2250330   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2250331   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2250332   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 * 
H1x3_2 ;
2250333   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2250334   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2250335   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 * 
H1x3_3 ;
2250336   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2250337   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2250338   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 * 
H1x3_4 ;
2250339   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2250340   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2250341   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 * 
H1x3_5 ;
2250342   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2250343   +END;
MPRINT(EM_DIAGRAM):   END;
2250344   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2250345   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2250346   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2250347   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2250348   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2250349   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2250350   +END;
MPRINT(EM_DIAGRAM):   END;
2250351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2250352   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2250353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2250354   +
2250355   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2250356   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2250357   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2250358   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2250359   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2250360   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2250361   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2250362   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2250363   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2250364   +end;
MPRINT(EM_DIAGRAM):   end;
2250365   +else do;
MPRINT(EM_DIAGRAM):   else do;
2250366   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2250367   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2250368   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2250369   +   end;
MPRINT(EM_DIAGRAM):   end;
2250370   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2250371   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2250372   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2250373   +   end;
MPRINT(EM_DIAGRAM):   end;
2250374   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2250375   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2250376   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2250377   +   end;
MPRINT(EM_DIAGRAM):   end;
2250378   +end;
MPRINT(EM_DIAGRAM):   end;
2250379   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2250380   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2250381   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2250382   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 + 
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2250383   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2250384   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2250385   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 * 
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2250386   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2250387   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2250388   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 * 
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2250389   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2250390   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2250391   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2250392   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2250393   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2250394   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2250395   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2250396   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2250397   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2250398   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2250399   +END;
MPRINT(EM_DIAGRAM):   END;
2250400   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2250401   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2250402   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2250403   +END;
MPRINT(EM_DIAGRAM):   END;
2250404   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2250405   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2250406   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2250407   +END;
MPRINT(EM_DIAGRAM):   END;
2250408   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2250409   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2250410   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2250411   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2250412   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2250413   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2250414   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2250415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2250416   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2250417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2250418   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2250419   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2250420   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2250421   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2250422   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2250423   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2250424   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2250425   +END;
MPRINT(EM_DIAGRAM):   END;
2250426   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2250427   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2250428   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2250429   +drop
2250430   +H1x1_1
2250431   +H1x1_2
2250432   +H1x1_3
2250433   +H1x1_4
2250434   +H1x1_5
2250435   +H1x2_1
2250436   +H1x2_2
2250437   +H1x2_3
2250438   +H1x2_4
2250439   +H1x2_5
2250440   +H1x3_1
2250441   +H1x3_2
2250442   +H1x3_3
2250443   +H1x3_4
2250444   +H1x3_5
2250445   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4 
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2250446   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2250447   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2250448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2250449   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2250450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2250451   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2250452   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2250453   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2250454   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2250455   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2250456   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2250457   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2250458   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2250459   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2250460   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2250461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2250462   +* Ensmbl36: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 5 of 7;
2250463   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2250464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2250465   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2250466   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2250467   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2250468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2250469   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2250470   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2250471   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2250472   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2250473   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2250474   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2250475   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2250476   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2250477   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2250478   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2250479   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2250480   +LENGTH _WARN_ $4
2250481   +      F_DepVar  $ 12
2250482   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2250483   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2250484   +
2250485   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2250486   +
2250487   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2250488   +
2250489   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2250490   +
2250491   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2250492   +
2250493   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2250494   +
2250495   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2250496   +
2250497   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2250498   +
2250499   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2250500   +
2250501   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2250502   +
2250503   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2250504   +
2250505   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2250506   +
2250507   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2250508   +
2250509   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2250510   +
2250511   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2250512   +
2250513   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2250514   +
2250515   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2250516   +
2250517   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2250518   +
2250519   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2250520   +
2250521   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2250522   +
2250523   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2250524   +
2250525   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2250526   +
2250527   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2250528   +
2250529   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2250530   +
2250531   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2250532   +
2250533   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2250534   +
2250535   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2250536   +
2250537   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2250538   +
2250539   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2250540   +
2250541   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2250542   +
2250543   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2250544   +
2250545   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2250546   +
2250547   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2250548   +
2250549   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2250550   +
2250551   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2250552   +
2250553   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2250554   +
2250555   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2250556   +
2250557   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2250558   +
2250559   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2250560   +
2250561   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2250562   +
2250563   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2250564   +
2250565   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2250566   +
2250567   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2250568   +
2250569   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2250570   +
2250571   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2250572   +
2250573   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2250574   +
2250575   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2250576   +
2250577   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2250578   +
2250579   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2250580   +
2250581   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2250582   +
2250583   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2250584   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2250585   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2250586   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2250587   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2250588   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250589   +end;
MPRINT(EM_DIAGRAM):   end;
2250590   +else do;
MPRINT(EM_DIAGRAM):   else do;
2250591   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2250592   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2250593   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2250594   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2250595   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2250596   +   end;
MPRINT(EM_DIAGRAM):   end;
2250597   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2250598   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2250599   +   end;
MPRINT(EM_DIAGRAM):   end;
2250600   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2250601   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2250602   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2250603   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250604   +   end;
MPRINT(EM_DIAGRAM):   end;
2250605   +end;
MPRINT(EM_DIAGRAM):   end;
2250606   +
2250607   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2250608   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2250609   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2250610   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2250611   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2250612   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250613   +end;
MPRINT(EM_DIAGRAM):   end;
2250614   +else do;
MPRINT(EM_DIAGRAM):   else do;
2250615   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2250616   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2250617   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2250618   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2250619   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2250620   +   end;
MPRINT(EM_DIAGRAM):   end;
2250621   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2250622   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2250623   +   end;
MPRINT(EM_DIAGRAM):   end;
2250624   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2250625   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2250626   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2250627   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250628   +   end;
MPRINT(EM_DIAGRAM):   end;
2250629   +end;
MPRINT(EM_DIAGRAM):   end;
2250630   +
2250631   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2250632   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2250633   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2250634   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2250635   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2250636   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250637   +end;
MPRINT(EM_DIAGRAM):   end;
2250638   +else do;
MPRINT(EM_DIAGRAM):   else do;
2250639   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2250640   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2250641   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2250642   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2250643   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2250644   +   end;
MPRINT(EM_DIAGRAM):   end;
2250645   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2250646   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2250647   +   end;
MPRINT(EM_DIAGRAM):   end;
2250648   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2250649   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2250650   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2250651   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250652   +   end;
MPRINT(EM_DIAGRAM):   end;
2250653   +end;
MPRINT(EM_DIAGRAM):   end;
2250654   +
2250655   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2250656   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2250657   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2250658   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2250659   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2250660   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250661   +end;
MPRINT(EM_DIAGRAM):   end;
2250662   +else do;
MPRINT(EM_DIAGRAM):   else do;
2250663   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2250664   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2250665   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2250666   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2250667   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2250668   +   end;
MPRINT(EM_DIAGRAM):   end;
2250669   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2250670   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2250671   +   end;
MPRINT(EM_DIAGRAM):   end;
2250672   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2250673   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2250674   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2250675   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250676   +   end;
MPRINT(EM_DIAGRAM):   end;
2250677   +end;
MPRINT(EM_DIAGRAM):   end;
2250678   +
2250679   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2250680   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2250681   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2250682   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2250683   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2250684   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250685   +end;
MPRINT(EM_DIAGRAM):   end;
2250686   +else do;
MPRINT(EM_DIAGRAM):   else do;
2250687   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2250688   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2250689   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2250690   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2250691   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2250692   +   end;
MPRINT(EM_DIAGRAM):   end;
2250693   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2250694   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2250695   +   end;
MPRINT(EM_DIAGRAM):   end;
2250696   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2250697   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2250698   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2250699   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250700   +   end;
MPRINT(EM_DIAGRAM):   end;
2250701   +end;
MPRINT(EM_DIAGRAM):   end;
2250702   +
2250703   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2250704   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2250705   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2250706   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2250707   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2250708   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250709   +end;
MPRINT(EM_DIAGRAM):   end;
2250710   +else do;
MPRINT(EM_DIAGRAM):   else do;
2250711   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2250712   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2250713   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2250714   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2250715   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2250716   +   end;
MPRINT(EM_DIAGRAM):   end;
2250717   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2250718   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2250719   +   end;
MPRINT(EM_DIAGRAM):   end;
2250720   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2250721   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2250722   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2250723   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250724   +   end;
MPRINT(EM_DIAGRAM):   end;
2250725   +end;
MPRINT(EM_DIAGRAM):   end;
2250726   +
2250727   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2250728   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2250729   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2250730   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2250731   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2250732   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250733   +end;
MPRINT(EM_DIAGRAM):   end;
2250734   +else do;
MPRINT(EM_DIAGRAM):   else do;
2250735   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2250736   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2250737   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2250738   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2250739   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2250740   +   end;
MPRINT(EM_DIAGRAM):   end;
2250741   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2250742   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2250743   +   end;
MPRINT(EM_DIAGRAM):   end;
2250744   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2250745   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2250746   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2250747   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250748   +   end;
MPRINT(EM_DIAGRAM):   end;
2250749   +end;
MPRINT(EM_DIAGRAM):   end;
2250750   +
2250751   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2250752   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2250753   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2250754   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2250755   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2250756   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2250757   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2250758   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2250759   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2250760   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2250761   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2250762   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2250763   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2250764   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250765   +end;
MPRINT(EM_DIAGRAM):   end;
2250766   +else do;
MPRINT(EM_DIAGRAM):   else do;
2250767   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2250768   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2250769   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2250770   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2250771   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2250772   +   end;
MPRINT(EM_DIAGRAM):   end;
2250773   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2250774   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2250775   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2250776   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2250777   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2250778   +   end;
MPRINT(EM_DIAGRAM):   end;
2250779   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2250780   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2250781   +   end;
MPRINT(EM_DIAGRAM):   end;
2250782   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2250783   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2250784   +   end;
MPRINT(EM_DIAGRAM):   end;
2250785   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2250786   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2250787   +   end;
MPRINT(EM_DIAGRAM):   end;
2250788   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2250789   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2250790   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2250791   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2250792   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2250793   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2250794   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250795   +   end;
MPRINT(EM_DIAGRAM):   end;
2250796   +end;
MPRINT(EM_DIAGRAM):   end;
2250797   +
2250798   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2250799   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2250800   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2250801   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2250802   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2250803   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2250804   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2250805   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2250806   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2250807   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2250808   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2250809   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2250810   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2250811   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2250812   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250813   +end;
MPRINT(EM_DIAGRAM):   end;
2250814   +else do;
MPRINT(EM_DIAGRAM):   else do;
2250815   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2250816   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2250817   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2250818   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2250819   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2250820   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2250821   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2250822   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2250823   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2250824   +         end;
MPRINT(EM_DIAGRAM):   end;
2250825   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2250826   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2250827   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2250828   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2250829   +            end;
MPRINT(EM_DIAGRAM):   end;
2250830   +         end;
MPRINT(EM_DIAGRAM):   end;
2250831   +      end;
MPRINT(EM_DIAGRAM):   end;
2250832   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2250833   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2250834   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2250835   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2250836   +         end;
MPRINT(EM_DIAGRAM):   end;
2250837   +      end;
MPRINT(EM_DIAGRAM):   end;
2250838   +   end;
MPRINT(EM_DIAGRAM):   end;
2250839   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2250840   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2250841   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2250842   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2250843   +      end;
MPRINT(EM_DIAGRAM):   end;
2250844   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2250845   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2250846   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2250847   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2250848   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2250849   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2250850   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2250851   +         end;
MPRINT(EM_DIAGRAM):   end;
2250852   +      end;
MPRINT(EM_DIAGRAM):   end;
2250853   +   end;
MPRINT(EM_DIAGRAM):   end;
2250854   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2250855   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2250856   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2250857   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2250858   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2250859   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2250860   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250861   +   end;
MPRINT(EM_DIAGRAM):   end;
2250862   +end;
MPRINT(EM_DIAGRAM):   end;
2250863   +
2250864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2250865   +*** Checking missing input Interval
2250866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2250867   +
2250868   +IF NMISS(
2250869   +   AcceptedCmpTotal ,
2250870   +   Age ,
2250871   +   Frq ,
2250872   +   Income ,
2250873   +   Kidhome ,
2250874   +   Mnt ,
2250875   +   MntFishProducts ,
2250876   +   MntFruits ,
2250877   +   MntGoldProds ,
2250878   +   MntMeatProducts ,
2250879   +   MntSweetProducts ,
2250880   +   MntWines ,
2250881   +   MonthsAsCustomer ,
2250882   +   NumCatalogPurchases ,
2250883   +   NumDealsPurchases ,
2250884   +   NumDistPurchases ,
2250885   +   NumStorePurchases ,
2250886   +   NumWebPurchases ,
2250887   +   NumWebVisitsMonth ,
2250888   +   RFMstat ,
2250889   +   RMntFrq ,
2250890   +   Recency ,
2250891   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2250892   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2250893   +
2250894   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2250895   +END;
MPRINT(EM_DIAGRAM):   END;
2250896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2250897   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2250898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2250899   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2250900   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2250901   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2250902   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2250903   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2250904   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2250905   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2250906   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2250907   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2250908   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2250909   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2250910   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2250911   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2250912   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2250913   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2250914   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2250915   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2250916   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2250917   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2250918   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2250919   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2250920   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2250921   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2250922   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2250923   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2250924   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2250925   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2250926   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2250927   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2250928   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2250929   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2250930   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2250931   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2250932   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2250933   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2250934   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2250935   +END;
MPRINT(EM_DIAGRAM):   END;
2250936   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2250937   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2250938   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2250939   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2250940   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2250941   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2250942   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2250943   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2250944   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2250945   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2250946   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2250947   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2250948   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2250949   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2250950   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2250951   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2250952   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2250953   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2250954   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2250955   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2250956   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2250957   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2250958   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2250959   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2250960   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2250961   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2250962   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2250963   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2250964   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2250965   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2250966   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2250967   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2250968   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2250969   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2250970   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2250971   +   ELSE S_NumCatalogPurchases
2250972   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2250973   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2250974   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2250975   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2250976   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2250977   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2250978   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2250979   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2250980   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2250981   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2250982   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2250983   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2250984   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2250985   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2250986   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2250987   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2250988   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2250989   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2250990   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2250991   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2250992   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2250993   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2250994   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2250995   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2250996   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2250997   +END;
MPRINT(EM_DIAGRAM):   END;
2250998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2250999   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2251000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251002   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2251003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251005   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2251006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251007   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2251008   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2251009   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2251010   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2251011   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2251012   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2251013   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2251014   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2251015   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2251016   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2251017   +          +    -1.09856598010056 * S_NumDealsPurchases
2251018   +          +    -0.10571850472514 * S_NumDistPurchases
2251019   +          +     0.11898210654227 * S_NumStorePurchases
2251020   +          +      0.5984912060231 * S_NumWebPurchases
2251021   +          +     0.78592531126942 * S_NumWebVisitsMonth
2251022   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2251023   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2251024   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2251025   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2251026   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2251027   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2251028   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2251029   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2251030   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2251031   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2251032   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2251033   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2251034   +          +    -0.84042044250624 * S_NumDealsPurchases
2251035   +          +    -0.10246261015488 * S_NumDistPurchases
2251036   +          +     0.06886149708824 * S_NumStorePurchases
2251037   +          +     0.63156910388199 * S_NumWebPurchases
2251038   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2251039   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2251040   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2251041   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2251042   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2251043   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2251044   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2251045   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2251046   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2251047   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2251048   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2251049   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2251050   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2251051   +          +     0.45393712455366 * S_NumDealsPurchases
2251052   +          +    -0.25292198053552 * S_NumDistPurchases
2251053   +          +    -1.35582215064749 * S_NumStorePurchases
2251054   +          +    -0.83132202302639 * S_NumWebPurchases
2251055   +          +     1.87116225272678 * S_NumWebVisitsMonth
2251056   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2251057   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2251058   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2251059   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2251060   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2251061   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2251062   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2251063   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2251064   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2251065   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2251066   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2251067   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2251068   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2251069   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2251070   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2251071   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2251072   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2251073   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2251074   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2251075   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2251076   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2251077   +          +      0.4695898100094 * Marital_StatusDivorced
2251078   +          +    -0.52137742289262 * Marital_StatusMarried
2251079   +          +    -0.32382086914936 * Marital_StatusSingle
2251080   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2251081   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2251082   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2251083   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2251084   +          +    -1.04858218653238 * Marital_StatusDivorced
2251085   +          +     2.41098335093061 * Marital_StatusMarried
2251086   +          +    -1.94696044861334 * Marital_StatusSingle
2251087   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2251088   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2251089   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2251090   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2251091   +          +     0.42964114177062 * Marital_StatusDivorced
2251092   +          +    -0.38607635605816 * Marital_StatusMarried
2251093   +          +    -0.02157405407852 * Marital_StatusSingle
2251094   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2251095   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2251096   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2251097   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2251098   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2251099   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2251100   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2251101   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2251102   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2251103   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2251104   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2251105   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2251106   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2251107   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2251108   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2251109   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2251110   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2251111   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2251112   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2251113   +END;
MPRINT(EM_DIAGRAM):   END;
2251114   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2251115   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2251116   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2251117   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2251118   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2251119   +END;
MPRINT(EM_DIAGRAM):   END;
2251120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251121   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2251122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251123   +
2251124   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2251125   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2251126   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2251127   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2251128   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2251129   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2251130   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2251131   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2251132   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2251133   +end;
MPRINT(EM_DIAGRAM):   end;
2251134   +else do;
MPRINT(EM_DIAGRAM):   else do;
2251135   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2251136   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2251137   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2251138   +   end;
MPRINT(EM_DIAGRAM):   end;
2251139   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2251140   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2251141   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2251142   +   end;
MPRINT(EM_DIAGRAM):   end;
2251143   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2251144   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2251145   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2251146   +   end;
MPRINT(EM_DIAGRAM):   end;
2251147   +end;
MPRINT(EM_DIAGRAM):   end;
2251148   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2251149   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2251150   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2251151   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2251152   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2251153   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2251154   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2251155   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2251156   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2251157   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2251158   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2251159   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2251160   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2251161   +END;
MPRINT(EM_DIAGRAM):   END;
2251162   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2251163   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2251164   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2251165   +END;
MPRINT(EM_DIAGRAM):   END;
2251166   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2251167   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2251168   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2251169   +END;
MPRINT(EM_DIAGRAM):   END;
2251170   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2251171   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2251172   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2251173   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2251174   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2251175   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2251176   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2251177   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251178   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2251179   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251180   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2251181   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2251182   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2251183   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2251184   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2251185   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2251186   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2251187   +END;
MPRINT(EM_DIAGRAM):   END;
2251188   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2251189   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2251190   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2251191   +drop
2251192   +H1x1_1
2251193   +H1x1_2
2251194   +H1x1_3
2251195   +H1x1_4
2251196   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2251197   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2251198   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2251199   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2251200   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2251201   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2251202   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2251203   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2251204   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2251205   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2251206   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2251207   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2251208   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2251209   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2251210   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2251211   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2251212   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2251213   +* Ensmbl36: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 6 of 7;
2251214   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2251215   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2251216   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2251217   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2251218   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2251219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2251220   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2251221   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2251222   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2251223   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2251224   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2251225   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2251226   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2251227   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2251228   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2251229   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2251230   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2251231   +LENGTH _WARN_ $4
2251232   +      F_DepVar  $ 12
2251233   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2251234   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2251235   +
2251236   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2251237   +
2251238   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2251239   +
2251240   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2251241   +
2251242   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2251243   +
2251244   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2251245   +
2251246   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2251247   +
2251248   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2251249   +
2251250   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2251251   +
2251252   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2251253   +
2251254   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2251255   +
2251256   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2251257   +
2251258   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2251259   +
2251260   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2251261   +
2251262   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2251263   +
2251264   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2251265   +
2251266   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2251267   +
2251268   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2251269   +
2251270   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2251271   +
2251272   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2251273   +
2251274   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2251275   +
2251276   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2251277   +
2251278   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2251279   +
2251280   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2251281   +
2251282   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2251283   +
2251284   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2251285   +
2251286   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2251287   +
2251288   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2251289   +
2251290   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2251291   +
2251292   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2251293   +
2251294   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2251295   +
2251296   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2251297   +
2251298   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2251299   +
2251300   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2251301   +
2251302   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2251303   +
2251304   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2251305   +
2251306   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2251307   +
2251308   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2251309   +
2251310   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2251311   +
2251312   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2251313   +
2251314   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2251315   +
2251316   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2251317   +
2251318   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2251319   +
2251320   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2251321   +
2251322   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2251323   +
2251324   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2251325   +
2251326   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2251327   +
2251328   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2251329   +
2251330   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2251331   +
2251332   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2251333   +
2251334   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2251335   +
2251336   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2251337   +
2251338   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2251339   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2251340   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2251341   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2251342   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2251343   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251344   +end;
MPRINT(EM_DIAGRAM):   end;
2251345   +else do;
MPRINT(EM_DIAGRAM):   else do;
2251346   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2251347   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2251348   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2251349   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2251350   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2251351   +   end;
MPRINT(EM_DIAGRAM):   end;
2251352   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2251353   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2251354   +   end;
MPRINT(EM_DIAGRAM):   end;
2251355   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2251356   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2251357   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2251358   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251359   +   end;
MPRINT(EM_DIAGRAM):   end;
2251360   +end;
MPRINT(EM_DIAGRAM):   end;
2251361   +
2251362   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2251363   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2251364   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2251365   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2251366   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2251367   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251368   +end;
MPRINT(EM_DIAGRAM):   end;
2251369   +else do;
MPRINT(EM_DIAGRAM):   else do;
2251370   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2251371   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2251372   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2251373   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2251374   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2251375   +   end;
MPRINT(EM_DIAGRAM):   end;
2251376   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2251377   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2251378   +   end;
MPRINT(EM_DIAGRAM):   end;
2251379   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2251380   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2251381   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2251382   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251383   +   end;
MPRINT(EM_DIAGRAM):   end;
2251384   +end;
MPRINT(EM_DIAGRAM):   end;
2251385   +
2251386   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2251387   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2251388   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2251389   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2251390   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2251391   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251392   +end;
MPRINT(EM_DIAGRAM):   end;
2251393   +else do;
MPRINT(EM_DIAGRAM):   else do;
2251394   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2251395   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2251396   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2251397   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2251398   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2251399   +   end;
MPRINT(EM_DIAGRAM):   end;
2251400   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2251401   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2251402   +   end;
MPRINT(EM_DIAGRAM):   end;
2251403   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2251404   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2251405   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2251406   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251407   +   end;
MPRINT(EM_DIAGRAM):   end;
2251408   +end;
MPRINT(EM_DIAGRAM):   end;
2251409   +
2251410   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2251411   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2251412   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2251413   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2251414   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2251415   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251416   +end;
MPRINT(EM_DIAGRAM):   end;
2251417   +else do;
MPRINT(EM_DIAGRAM):   else do;
2251418   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2251419   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2251420   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2251421   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2251422   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2251423   +   end;
MPRINT(EM_DIAGRAM):   end;
2251424   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2251425   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2251426   +   end;
MPRINT(EM_DIAGRAM):   end;
2251427   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2251428   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2251429   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2251430   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251431   +   end;
MPRINT(EM_DIAGRAM):   end;
2251432   +end;
MPRINT(EM_DIAGRAM):   end;
2251433   +
2251434   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2251435   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2251436   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2251437   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2251438   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2251439   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251440   +end;
MPRINT(EM_DIAGRAM):   end;
2251441   +else do;
MPRINT(EM_DIAGRAM):   else do;
2251442   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2251443   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2251444   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2251445   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2251446   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2251447   +   end;
MPRINT(EM_DIAGRAM):   end;
2251448   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2251449   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2251450   +   end;
MPRINT(EM_DIAGRAM):   end;
2251451   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2251452   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2251453   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2251454   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251455   +   end;
MPRINT(EM_DIAGRAM):   end;
2251456   +end;
MPRINT(EM_DIAGRAM):   end;
2251457   +
2251458   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2251459   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2251460   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2251461   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2251462   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2251463   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251464   +end;
MPRINT(EM_DIAGRAM):   end;
2251465   +else do;
MPRINT(EM_DIAGRAM):   else do;
2251466   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2251467   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2251468   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2251469   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2251470   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2251471   +   end;
MPRINT(EM_DIAGRAM):   end;
2251472   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2251473   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2251474   +   end;
MPRINT(EM_DIAGRAM):   end;
2251475   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2251476   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2251477   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2251478   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251479   +   end;
MPRINT(EM_DIAGRAM):   end;
2251480   +end;
MPRINT(EM_DIAGRAM):   end;
2251481   +
2251482   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2251483   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2251484   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2251485   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2251486   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2251487   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251488   +end;
MPRINT(EM_DIAGRAM):   end;
2251489   +else do;
MPRINT(EM_DIAGRAM):   else do;
2251490   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2251491   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2251492   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2251493   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2251494   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2251495   +   end;
MPRINT(EM_DIAGRAM):   end;
2251496   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2251497   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2251498   +   end;
MPRINT(EM_DIAGRAM):   end;
2251499   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2251500   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2251501   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2251502   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251503   +   end;
MPRINT(EM_DIAGRAM):   end;
2251504   +end;
MPRINT(EM_DIAGRAM):   end;
2251505   +
2251506   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2251507   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2251508   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2251509   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2251510   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2251511   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2251512   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2251513   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2251514   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2251515   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2251516   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2251517   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2251518   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2251519   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251520   +end;
MPRINT(EM_DIAGRAM):   end;
2251521   +else do;
MPRINT(EM_DIAGRAM):   else do;
2251522   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2251523   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2251524   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2251525   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2251526   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2251527   +   end;
MPRINT(EM_DIAGRAM):   end;
2251528   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2251529   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2251530   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2251531   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2251532   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2251533   +   end;
MPRINT(EM_DIAGRAM):   end;
2251534   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2251535   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2251536   +   end;
MPRINT(EM_DIAGRAM):   end;
2251537   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2251538   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2251539   +   end;
MPRINT(EM_DIAGRAM):   end;
2251540   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2251541   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2251542   +   end;
MPRINT(EM_DIAGRAM):   end;
2251543   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2251544   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2251545   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2251546   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2251547   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2251548   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2251549   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251550   +   end;
MPRINT(EM_DIAGRAM):   end;
2251551   +end;
MPRINT(EM_DIAGRAM):   end;
2251552   +
2251553   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2251554   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2251555   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2251556   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2251557   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2251558   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2251559   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2251560   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2251561   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2251562   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2251563   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2251564   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2251565   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2251566   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2251567   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251568   +end;
MPRINT(EM_DIAGRAM):   end;
2251569   +else do;
MPRINT(EM_DIAGRAM):   else do;
2251570   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2251571   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2251572   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2251573   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2251574   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2251575   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2251576   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2251577   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2251578   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2251579   +         end;
MPRINT(EM_DIAGRAM):   end;
2251580   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2251581   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2251582   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2251583   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2251584   +            end;
MPRINT(EM_DIAGRAM):   end;
2251585   +         end;
MPRINT(EM_DIAGRAM):   end;
2251586   +      end;
MPRINT(EM_DIAGRAM):   end;
2251587   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2251588   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2251589   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2251590   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2251591   +         end;
MPRINT(EM_DIAGRAM):   end;
2251592   +      end;
MPRINT(EM_DIAGRAM):   end;
2251593   +   end;
MPRINT(EM_DIAGRAM):   end;
2251594   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2251595   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2251596   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2251597   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2251598   +      end;
MPRINT(EM_DIAGRAM):   end;
2251599   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2251600   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2251601   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2251602   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2251603   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2251604   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2251605   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2251606   +         end;
MPRINT(EM_DIAGRAM):   end;
2251607   +      end;
MPRINT(EM_DIAGRAM):   end;
2251608   +   end;
MPRINT(EM_DIAGRAM):   end;
2251609   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2251610   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2251611   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2251612   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2251613   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2251614   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2251615   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251616   +   end;
MPRINT(EM_DIAGRAM):   end;
2251617   +end;
MPRINT(EM_DIAGRAM):   end;
2251618   +
2251619   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251620   +*** Checking missing input Interval
2251621   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2251622   +
2251623   +IF NMISS(
2251624   +   AcceptedCmpTotal ,
2251625   +   Age ,
2251626   +   Frq ,
2251627   +   Income ,
2251628   +   Kidhome ,
2251629   +   Mnt ,
2251630   +   MntFishProducts ,
2251631   +   MntFruits ,
2251632   +   MntGoldProds ,
2251633   +   MntMeatProducts ,
2251634   +   MntSweetProducts ,
2251635   +   MntWines ,
2251636   +   MonthsAsCustomer ,
2251637   +   NumCatalogPurchases ,
2251638   +   NumDealsPurchases ,
2251639   +   NumDistPurchases ,
2251640   +   NumStorePurchases ,
2251641   +   NumWebPurchases ,
2251642   +   NumWebVisitsMonth ,
2251643   +   RFMstat ,
2251644   +   RMntFrq ,
2251645   +   Recency ,
2251646   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2251647   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2251648   +
2251649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2251650   +END;
MPRINT(EM_DIAGRAM):   END;
2251651   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251652   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2251653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251654   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2251655   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2251656   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2251657   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2251658   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2251659   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2251660   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2251661   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2251662   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2251663   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2251664   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2251665   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2251666   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2251667   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2251668   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2251669   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2251670   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2251671   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2251672   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2251673   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2251674   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2251675   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2251676   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2251677   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2251678   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2251679   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2251680   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2251681   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2251682   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2251683   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2251684   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2251685   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2251686   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2251687   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2251688   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2251689   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2251690   +END;
MPRINT(EM_DIAGRAM):   END;
2251691   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2251692   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2251693   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2251694   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2251695   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2251696   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2251697   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2251698   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2251699   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2251700   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2251701   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2251702   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2251703   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2251704   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2251705   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2251706   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2251707   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2251708   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2251709   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2251710   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2251711   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2251712   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2251713   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2251714   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2251715   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2251716   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2251717   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2251718   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2251719   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2251720   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2251721   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2251722   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2251723   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2251724   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2251725   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2251726   +   ELSE S_NumCatalogPurchases
2251727   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2251728   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2251729   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2251730   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2251731   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2251732   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2251733   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2251734   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2251735   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2251736   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2251737   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2251738   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2251739   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2251740   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2251741   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2251742   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2251743   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2251744   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2251745   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2251746   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2251747   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2251748   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2251749   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2251750   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2251751   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2251752   +END;
MPRINT(EM_DIAGRAM):   END;
2251753   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251754   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2251755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251756   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251757   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2251758   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251759   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251760   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2251761   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251762   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2251763   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2251764   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2251765   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2251766   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2251767   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2251768   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2251769   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2251770   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2251771   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2251772   +          +     0.19770934886328 * S_NumDealsPurchases
2251773   +          +      0.0515215988111 * S_NumDistPurchases
2251774   +          +    -0.34569346346089 * S_NumStorePurchases
2251775   +          +    -0.27122293596124 * S_NumWebPurchases
2251776   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2251777   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2251778   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2251779   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2251780   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2251781   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2251782   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2251783   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2251784   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2251785   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2251786   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2251787   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2251788   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2251789   +          +     0.54308887602031 * S_NumDealsPurchases
2251790   +          +    -0.22507315320192 * S_NumDistPurchases
2251791   +          +    -0.79861387328361 * S_NumStorePurchases
2251792   +          +    -0.45467494002747 * S_NumWebPurchases
2251793   +          +      0.2119048824613 * S_NumWebVisitsMonth
2251794   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2251795   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2251796   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2251797   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2251798   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2251799   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2251800   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2251801   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2251802   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2251803   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2251804   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2251805   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2251806   +          +     -0.0771083149302 * S_NumDealsPurchases
2251807   +          +     0.03403621221162 * S_NumDistPurchases
2251808   +          +     0.61303946422025 * S_NumStorePurchases
2251809   +          +     0.27126793634053 * S_NumWebPurchases
2251810   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2251811   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2251812   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2251813   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2251814   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2251815   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2251816   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2251817   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2251818   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2251819   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2251820   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2251821   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2251822   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2251823   +          +     0.29894603062327 * S_NumDealsPurchases
2251824   +          +     0.07614620530875 * S_NumDistPurchases
2251825   +          +     0.15402335009896 * S_NumStorePurchases
2251826   +          +     0.10615749096863 * S_NumWebPurchases
2251827   +          +     0.41962286816879 * S_NumWebVisitsMonth
2251828   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2251829   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2251830   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2251831   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2251832   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2251833   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2251834   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2251835   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2251836   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2251837   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2251838   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2251839   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2251840   +          +     0.14392502416642 * S_NumDealsPurchases
2251841   +          +    -0.10026304978633 * S_NumDistPurchases
2251842   +          +     -0.0588453022746 * S_NumStorePurchases
2251843   +          +     0.24799398610395 * S_NumWebPurchases
2251844   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2251845   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2251846   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2251847   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2251848   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2251849   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2251850   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2251851   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2251852   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2251853   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2251854   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2251855   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2251856   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2251857   +          +     0.08149600854964 * S_NumDealsPurchases
2251858   +          +     0.16873541613513 * S_NumDistPurchases
2251859   +          +    -0.20437343413446 * S_NumStorePurchases
2251860   +          +     -0.1671107527288 * S_NumWebPurchases
2251861   +          +     0.03677043100993 * S_NumWebVisitsMonth
2251862   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2251863   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2251864   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2251865   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2251866   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2251867   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2251868   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2251869   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2251870   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2251871   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2251872   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2251873   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2251874   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2251875   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2251876   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2251877   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2251878   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2251879   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2251880   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2251881   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2251882   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2251883   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2251884   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2251885   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2251886   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2251887   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2251888   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2251889   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2251890   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2251891   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2251892   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2251893   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2251894   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2251895   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2251896   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2251897   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2251898   +          +    -0.31045295887604 * Marital_StatusDivorced
2251899   +          +    -0.01109401001539 * Marital_StatusMarried
2251900   +          +     0.01325135981025 * Marital_StatusSingle
2251901   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2251902   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2251903   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2251904   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2251905   +          +     0.02275101861599 * Marital_StatusDivorced
2251906   +          +     0.20271548664903 * Marital_StatusMarried
2251907   +          +    -0.12132069210718 * Marital_StatusSingle
2251908   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2251909   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2251910   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2251911   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2251912   +          +     -0.4992959703281 * Marital_StatusDivorced
2251913   +          +     0.62071659624138 * Marital_StatusMarried
2251914   +          +    -0.21776202274494 * Marital_StatusSingle
2251915   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2251916   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2251917   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2251918   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2251919   +          +     0.05626212670587 * Marital_StatusDivorced
2251920   +          +     0.14353891364597 * Marital_StatusMarried
2251921   +          +    -0.29006765622997 * Marital_StatusSingle
2251922   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2251923   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2251924   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2251925   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2251926   +          +    -0.21206913700604 * Marital_StatusDivorced
2251927   +          +     0.58790643614629 * Marital_StatusMarried
2251928   +          +    -0.65995982578062 * Marital_StatusSingle
2251929   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2251930   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2251931   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2251932   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2251933   +          +    -0.05047370516008 * Marital_StatusDivorced
2251934   +          +    -0.23139090963669 * Marital_StatusMarried
2251935   +          +     0.04816197463249 * Marital_StatusSingle
2251936   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2251937   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2251938   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2251939   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2251940   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2251941   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2251942   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2251943   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2251944   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2251945   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2251946   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2251947   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2251948   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2251949   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2251950   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2251951   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2251952   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2251953   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2251954   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2251955   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2251956   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2251957   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2251958   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2251959   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2251960   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2251961   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2251962   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2251963   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2251964   +END;
MPRINT(EM_DIAGRAM):   END;
2251965   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2251966   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2251967   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2251968   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2251969   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2251970   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2251971   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2251972   +END;
MPRINT(EM_DIAGRAM):   END;
2251973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251974   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2251975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2251976   +
2251977   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2251978   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2251979   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2251980   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2251981   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2251982   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2251983   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2251984   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2251985   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2251986   +end;
MPRINT(EM_DIAGRAM):   end;
2251987   +else do;
MPRINT(EM_DIAGRAM):   else do;
2251988   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2251989   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2251990   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2251991   +   end;
MPRINT(EM_DIAGRAM):   end;
2251992   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2251993   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2251994   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2251995   +   end;
MPRINT(EM_DIAGRAM):   end;
2251996   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2251997   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2251998   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2251999   +   end;
MPRINT(EM_DIAGRAM):   end;
2252000   +end;
MPRINT(EM_DIAGRAM):   end;
2252001   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2252002   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2252003   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2252004   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2252005   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2252006   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2252007   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2252008   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2252009   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2252010   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2252011   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2252012   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2252013   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2252014   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2252015   +END;
MPRINT(EM_DIAGRAM):   END;
2252016   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2252017   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2252018   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2252019   +END;
MPRINT(EM_DIAGRAM):   END;
2252020   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2252021   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2252022   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2252023   +END;
MPRINT(EM_DIAGRAM):   END;
2252024   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2252025   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2252026   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2252027   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2252028   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2252029   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2252030   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2252031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2252032   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2252033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2252034   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2252035   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2252036   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2252037   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2252038   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2252039   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2252040   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2252041   +END;
MPRINT(EM_DIAGRAM):   END;
2252042   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2252043   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2252044   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2252045   +drop
2252046   +H1x1_1
2252047   +H1x1_2
2252048   +H1x1_3
2252049   +H1x1_4
2252050   +H1x1_5
2252051   +H1x1_6
2252052   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2252053   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2252054   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2252055   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2252056   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2252057   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2252058   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2252059   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2252060   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2252061   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2252062   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2252063   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2252064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2252065   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2252066   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2252067   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2252068   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2252069   +* Ensmbl36: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 7 of 7;
2252070   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2252071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2252072   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2252073   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2252074   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2252075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2252076   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2252077   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2252078   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2252079   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2252080   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2252081   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2252082   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2252083   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2252084   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2252085   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2252086   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2252087   +LENGTH _WARN_ $4
2252088   +      F_DepVar  $ 12
2252089   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2252090   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2252091   +
2252092   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2252093   +
2252094   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2252095   +
2252096   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2252097   +
2252098   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2252099   +
2252100   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2252101   +
2252102   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2252103   +
2252104   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2252105   +
2252106   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2252107   +
2252108   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2252109   +
2252110   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2252111   +
2252112   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2252113   +
2252114   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2252115   +
2252116   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2252117   +
2252118   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2252119   +
2252120   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2252121   +
2252122   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2252123   +
2252124   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2252125   +
2252126   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2252127   +
2252128   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2252129   +
2252130   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2252131   +
2252132   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2252133   +
2252134   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2252135   +
2252136   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2252137   +
2252138   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2252139   +
2252140   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2252141   +
2252142   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2252143   +
2252144   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2252145   +
2252146   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2252147   +
2252148   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2252149   +
2252150   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2252151   +
2252152   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2252153   +
2252154   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2252155   +
2252156   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2252157   +
2252158   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2252159   +
2252160   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2252161   +
2252162   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2252163   +
2252164   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2252165   +
2252166   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2252167   +
2252168   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2252169   +
2252170   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2252171   +
2252172   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2252173   +
2252174   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2252175   +
2252176   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2252177   +
2252178   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2252179   +
2252180   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2252181   +
2252182   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2252183   +
2252184   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2252185   +
2252186   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2252187   +
2252188   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2252189   +
2252190   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2252191   +
2252192   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2252193   +
2252194   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2252195   +
2252196   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2252197   +
2252198   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2252199   +
2252200   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2252201   +
2252202   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2252203   +
2252204   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2252205   +
2252206   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2252207   +
2252208   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2252209   +
2252210   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2252211   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2252212   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2252213   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2252214   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2252215   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252216   +end;
MPRINT(EM_DIAGRAM):   end;
2252217   +else do;
MPRINT(EM_DIAGRAM):   else do;
2252218   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2252219   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2252220   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2252221   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2252222   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2252223   +   end;
MPRINT(EM_DIAGRAM):   end;
2252224   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2252225   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2252226   +   end;
MPRINT(EM_DIAGRAM):   end;
2252227   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2252228   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2252229   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2252230   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252231   +   end;
MPRINT(EM_DIAGRAM):   end;
2252232   +end;
The SAS System

MPRINT(EM_DIAGRAM):   end;
2252233   +
2252234   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2252235   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2252236   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2252237   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2252238   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2252239   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252240   +end;
MPRINT(EM_DIAGRAM):   end;
2252241   +else do;
MPRINT(EM_DIAGRAM):   else do;
2252242   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2252243   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2252244   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2252245   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2252246   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2252247   +   end;
MPRINT(EM_DIAGRAM):   end;
2252248   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2252249   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2252250   +   end;
MPRINT(EM_DIAGRAM):   end;
2252251   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2252252   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2252253   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2252254   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252255   +   end;
MPRINT(EM_DIAGRAM):   end;
2252256   +end;
MPRINT(EM_DIAGRAM):   end;
2252257   +
2252258   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2252259   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2252260   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2252261   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2252262   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2252263   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252264   +end;
MPRINT(EM_DIAGRAM):   end;
2252265   +else do;
MPRINT(EM_DIAGRAM):   else do;
2252266   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2252267   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2252268   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2252269   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2252270   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2252271   +   end;
MPRINT(EM_DIAGRAM):   end;
2252272   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2252273   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2252274   +   end;
MPRINT(EM_DIAGRAM):   end;
2252275   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2252276   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2252277   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2252278   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252279   +   end;
MPRINT(EM_DIAGRAM):   end;
2252280   +end;
MPRINT(EM_DIAGRAM):   end;
2252281   +
2252282   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2252283   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2252284   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2252285   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2252286   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2252287   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252288   +end;
MPRINT(EM_DIAGRAM):   end;
2252289   +else do;
MPRINT(EM_DIAGRAM):   else do;
2252290   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2252291   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2252292   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2252293   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2252294   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2252295   +   end;
MPRINT(EM_DIAGRAM):   end;
2252296   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2252297   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2252298   +   end;
MPRINT(EM_DIAGRAM):   end;
2252299   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2252300   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2252301   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2252302   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252303   +   end;
MPRINT(EM_DIAGRAM):   end;
2252304   +end;
MPRINT(EM_DIAGRAM):   end;
2252305   +
2252306   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2252307   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2252308   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2252309   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2252310   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2252311   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252312   +end;
MPRINT(EM_DIAGRAM):   end;
2252313   +else do;
MPRINT(EM_DIAGRAM):   else do;
2252314   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2252315   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2252316   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2252317   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2252318   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2252319   +   end;
MPRINT(EM_DIAGRAM):   end;
2252320   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2252321   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2252322   +   end;
MPRINT(EM_DIAGRAM):   end;
2252323   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2252324   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2252325   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2252326   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252327   +   end;
MPRINT(EM_DIAGRAM):   end;
2252328   +end;
MPRINT(EM_DIAGRAM):   end;
2252329   +
2252330   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2252331   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2252332   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2252333   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2252334   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2252335   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252336   +end;
MPRINT(EM_DIAGRAM):   end;
2252337   +else do;
MPRINT(EM_DIAGRAM):   else do;
2252338   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2252339   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2252340   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2252341   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2252342   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2252343   +   end;
MPRINT(EM_DIAGRAM):   end;
2252344   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2252345   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2252346   +   end;
MPRINT(EM_DIAGRAM):   end;
2252347   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2252348   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2252349   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2252350   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252351   +   end;
MPRINT(EM_DIAGRAM):   end;
2252352   +end;
MPRINT(EM_DIAGRAM):   end;
2252353   +
2252354   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2252355   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2252356   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2252357   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2252358   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2252359   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252360   +end;
MPRINT(EM_DIAGRAM):   end;
2252361   +else do;
MPRINT(EM_DIAGRAM):   else do;
2252362   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2252363   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2252364   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2252365   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2252366   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2252367   +   end;
MPRINT(EM_DIAGRAM):   end;
2252368   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2252369   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2252370   +   end;
MPRINT(EM_DIAGRAM):   end;
2252371   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2252372   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2252373   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2252374   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252375   +   end;
MPRINT(EM_DIAGRAM):   end;
2252376   +end;
MPRINT(EM_DIAGRAM):   end;
2252377   +
2252378   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2252379   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2252380   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2252381   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2252382   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2252383   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2252384   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2252385   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2252386   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2252387   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2252388   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2252389   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2252390   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2252391   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252392   +end;
MPRINT(EM_DIAGRAM):   end;
2252393   +else do;
MPRINT(EM_DIAGRAM):   else do;
2252394   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2252395   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2252396   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2252397   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2252398   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2252399   +   end;
MPRINT(EM_DIAGRAM):   end;
2252400   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2252401   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2252402   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2252403   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2252404   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2252405   +   end;
MPRINT(EM_DIAGRAM):   end;
2252406   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2252407   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2252408   +   end;
MPRINT(EM_DIAGRAM):   end;
2252409   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2252410   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2252411   +   end;
MPRINT(EM_DIAGRAM):   end;
2252412   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2252413   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2252414   +   end;
MPRINT(EM_DIAGRAM):   end;
2252415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2252416   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2252417   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2252418   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2252419   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2252420   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2252421   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252422   +   end;
MPRINT(EM_DIAGRAM):   end;
2252423   +end;
MPRINT(EM_DIAGRAM):   end;
2252424   +
2252425   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2252426   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2252427   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2252428   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2252429   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2252430   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2252431   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2252432   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2252433   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2252434   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2252435   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2252436   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2252437   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2252438   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2252439   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252440   +end;
MPRINT(EM_DIAGRAM):   end;
2252441   +else do;
MPRINT(EM_DIAGRAM):   else do;
2252442   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2252443   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2252444   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2252445   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2252446   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2252447   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2252448   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2252449   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2252450   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2252451   +         end;
MPRINT(EM_DIAGRAM):   end;
2252452   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2252453   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2252454   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2252455   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2252456   +            end;
MPRINT(EM_DIAGRAM):   end;
2252457   +         end;
MPRINT(EM_DIAGRAM):   end;
2252458   +      end;
MPRINT(EM_DIAGRAM):   end;
2252459   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2252460   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2252461   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2252462   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2252463   +         end;
MPRINT(EM_DIAGRAM):   end;
2252464   +      end;
MPRINT(EM_DIAGRAM):   end;
2252465   +   end;
MPRINT(EM_DIAGRAM):   end;
2252466   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2252467   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2252468   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2252469   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2252470   +      end;
MPRINT(EM_DIAGRAM):   end;
2252471   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2252472   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2252473   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2252474   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2252475   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2252476   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2252477   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2252478   +         end;
MPRINT(EM_DIAGRAM):   end;
2252479   +      end;
MPRINT(EM_DIAGRAM):   end;
2252480   +   end;
MPRINT(EM_DIAGRAM):   end;
2252481   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2252482   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2252483   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2252484   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2252485   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2252486   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2252487   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252488   +   end;
MPRINT(EM_DIAGRAM):   end;
2252489   +end;
MPRINT(EM_DIAGRAM):   end;
2252490   +
2252491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2252492   +*** Checking missing input Interval
2252493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2252494   +
2252495   +IF NMISS(
2252496   +   AcceptedCmpTotal ,
2252497   +   Age ,
2252498   +   Frq ,
2252499   +   Income ,
2252500   +   Kidhome ,
2252501   +   Mnt ,
2252502   +   MntFishProducts ,
2252503   +   MntFruits ,
2252504   +   MntGoldProds ,
2252505   +   MntMeatProducts ,
2252506   +   MntSweetProducts ,
2252507   +   MntWines ,
2252508   +   MonthsAsCustomer ,
2252509   +   NumCatalogPurchases ,
2252510   +   NumDealsPurchases ,
2252511   +   NumDistPurchases ,
2252512   +   NumStorePurchases ,
2252513   +   NumWebPurchases ,
2252514   +   NumWebVisitsMonth ,
2252515   +   RFMstat ,
2252516   +   RMntFrq ,
2252517   +   Recency ,
2252518   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2252519   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2252520   +
2252521   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2252522   +END;
MPRINT(EM_DIAGRAM):   END;
2252523   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2252524   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2252525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2252526   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2252527   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2252528   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2252529   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2252530   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2252531   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2252532   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2252533   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2252534   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2252535   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2252536   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2252537   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2252538   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2252539   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2252540   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2252541   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2252542   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2252543   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2252544   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2252545   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2252546   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2252547   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2252548   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2252549   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2252550   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2252551   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2252552   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2252553   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2252554   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2252555   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2252556   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2252557   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2252558   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2252559   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2252560   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2252561   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2252562   +END;
MPRINT(EM_DIAGRAM):   END;
2252563   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2252564   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2252565   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2252566   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2252567   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2252568   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2252569   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2252570   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2252571   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2252572   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2252573   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2252574   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2252575   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2252576   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2252577   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2252578   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2252579   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2252580   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2252581   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2252582   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2252583   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2252584   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2252585   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2252586   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2252587   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2252588   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2252589   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2252590   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2252591   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2252592   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2252593   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2252594   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2252595   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2252596   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2252597   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2252598   +   ELSE S_NumCatalogPurchases
2252599   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2252600   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2252601   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2252602   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2252603   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2252604   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2252605   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2252606   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2252607   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2252608   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2252609   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2252610   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2252611   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2252612   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2252613   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2252614   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2252615   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2252616   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2252617   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2252618   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2252619   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2252620   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2252621   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2252622   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2252623   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2252624   +END;
MPRINT(EM_DIAGRAM):   END;
2252625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2252626   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2252627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2252628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2252629   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2252630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2252631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2252632   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2252633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2252634   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2252635   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2252636   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2252637   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2252638   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2252639   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2252640   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2252641   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2252642   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2252643   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2252644   +          +      0.1112677116841 * S_NumDealsPurchases
2252645   +          +     0.01563584187072 * S_NumDistPurchases
2252646   +          +     0.19193969522995 * S_NumStorePurchases
2252647   +          +      0.3133556199984 * S_NumWebPurchases
2252648   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2252649   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2252650   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2252651   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2252652   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2252653   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2252654   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2252655   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2252656   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2252657   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2252658   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2252659   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2252660   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2252661   +          +     0.30225032753275 * S_NumDealsPurchases
2252662   +          +     0.33833359923595 * S_NumDistPurchases
2252663   +          +    -0.20255599575849 * S_NumStorePurchases
2252664   +          +    -0.12040071168942 * S_NumWebPurchases
2252665   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2252666   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2252667   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2252668   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2252669   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2252670   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2252671   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2252672   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2252673   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2252674   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2252675   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2252676   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2252677   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2252678   +          +     0.16792903091627 * S_NumDealsPurchases
2252679   +          +    -0.37408945626745 * S_NumDistPurchases
2252680   +          +    -0.18067262995566 * S_NumStorePurchases
2252681   +          +     0.21192146789881 * S_NumWebPurchases
2252682   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2252683   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2252684   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2252685   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2252686   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2252687   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2252688   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2252689   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2252690   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2252691   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2252692   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2252693   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2252694   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2252695   +          +     0.29407429399136 * S_NumDealsPurchases
2252696   +          +     0.01610745252195 * S_NumDistPurchases
2252697   +          +    -0.17767939085628 * S_NumStorePurchases
2252698   +          +    -0.15168958538637 * S_NumWebPurchases
2252699   +          +     0.17433622143988 * S_NumWebVisitsMonth
2252700   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2252701   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2252702   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2252703   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2252704   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2252705   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2252706   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2252707   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2252708   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2252709   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2252710   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2252711   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2252712   +          +    -0.37976451362108 * S_NumDealsPurchases
2252713   +          +    -0.17027731520801 * S_NumDistPurchases
2252714   +          +     0.59849493667087 * S_NumStorePurchases
2252715   +          +     0.65481480560301 * S_NumWebPurchases
2252716   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2252717   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2252718   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2252719   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2252720   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2252721   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2252722   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2252723   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2252724   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2252725   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2252726   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2252727   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2252728   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2252729   +          +    -0.07686699131623 * S_NumDealsPurchases
2252730   +          +    -0.07220460738926 * S_NumDistPurchases
2252731   +          +    -0.06554027468389 * S_NumStorePurchases
2252732   +          +     0.10422838158001 * S_NumWebPurchases
2252733   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2252734   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2252735   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2252736   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2252737   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2252738   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2252739   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2252740   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2252741   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2252742   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2252743   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2252744   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2252745   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2252746   +          +    -0.07920122387563 * S_NumDealsPurchases
2252747   +          +      0.3649244061347 * S_NumDistPurchases
2252748   +          +     0.36475853688403 * S_NumStorePurchases
2252749   +          +     0.02153991404063 * S_NumWebPurchases
2252750   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2252751   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2252752   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2252753   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2252754   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2252755   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2252756   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2252757   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2252758   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2252759   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2252760   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2252761   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2252762   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2252763   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2252764   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2252765   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2252766   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2252767   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2252768   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2252769   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2252770   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2252771   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2252772   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2252773   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2252774   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2252775   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2252776   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2252777   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2252778   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2252779   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2252780   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2252781   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2252782   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2252783   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2252784   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2252785   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2252786   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2252787   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2252788   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2252789   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2252790   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2252791   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2252792   +          +     0.07744097241553 * Marital_StatusDivorced
2252793   +          +     -0.0247463100385 * Marital_StatusMarried
2252794   +          +     0.05804915234573 * Marital_StatusSingle
2252795   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2252796   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2252797   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2252798   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2252799   +          +     0.01390668926269 * Marital_StatusDivorced
2252800   +          +     0.01136282152074 * Marital_StatusMarried
2252801   +          +     0.12450246418789 * Marital_StatusSingle
2252802   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2252803   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2252804   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2252805   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2252806   +          +    -0.19133456931879 * Marital_StatusDivorced
2252807   +          +     0.56263566654996 * Marital_StatusMarried
2252808   +          +    -0.42172822038882 * Marital_StatusSingle
2252809   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2252810   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2252811   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2252812   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2252813   +          +    -0.19871205065609 * Marital_StatusDivorced
2252814   +          +    -0.14730795681603 * Marital_StatusMarried
2252815   +          +     0.05055432510362 * Marital_StatusSingle
2252816   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2252817   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2252818   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2252819   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2252820   +          +    -0.35623807358995 * Marital_StatusDivorced
2252821   +          +     0.30324726283965 * Marital_StatusMarried
2252822   +          +    -0.18561093467927 * Marital_StatusSingle
2252823   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2252824   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2252825   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2252826   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2252827   +          +     0.11581014663368 * Marital_StatusDivorced
2252828   +          +    -0.31070638037659 * Marital_StatusMarried
2252829   +          +     0.17131747253949 * Marital_StatusSingle
2252830   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2252831   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2252832   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2252833   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2252834   +          +    -0.42450599871892 * Marital_StatusDivorced
2252835   +          +     0.48162905075885 * Marital_StatusMarried
2252836   +          +    -0.26618507749283 * Marital_StatusSingle
2252837   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2252838   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2252839   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2252840   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2252841   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2252842   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2252843   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2252844   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2252845   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2252846   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2252847   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2252848   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2252849   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2252850   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2252851   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2252852   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2252853   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2252854   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2252855   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2252856   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2252857   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2252858   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2252859   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2252860   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2252861   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2252862   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2252863   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2252864   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2252865   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2252866   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2252867   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2252868   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2252869   +END;
MPRINT(EM_DIAGRAM):   END;
2252870   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2252871   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2252872   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2252873   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2252874   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2252875   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2252876   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2252877   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2252878   +END;
MPRINT(EM_DIAGRAM):   END;
2252879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2252880   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2252881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2252882   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2252883   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2252884   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2252885   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2252886   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2252887   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2252888   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2252889   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2252890   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2252891   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2252892   +          +     1.96719021971894 * S_NumDealsPurchases
2252893   +          +    -0.44535354794671 * S_NumDistPurchases
2252894   +          +    -0.54827762736866 * S_NumStorePurchases
2252895   +          +     1.02703310241897 * S_NumWebPurchases
2252896   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2252897   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2252898   +        S_RMntFrq  +       0.651688575044 * S_Recency
2252899   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2252900   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2252901   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2252902   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2252903   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2252904   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2252905   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2252906   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2252907   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2252908   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2252909   +          +     1.34659447971131 * S_NumDealsPurchases
2252910   +          +    -0.51624251310423 * S_NumDistPurchases
2252911   +          +      -1.283121574848 * S_NumStorePurchases
2252912   +          +    -1.83517806228926 * S_NumWebPurchases
2252913   +          +     0.51321339475285 * S_NumWebVisitsMonth
2252914   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2252915   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2252916   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2252917   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2252918   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2252919   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2252920   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2252921   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2252922   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2252923   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2252924   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2252925   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2252926   +          +     0.67492297345004 * S_NumDealsPurchases
2252927   +          +    -0.40437875375926 * S_NumDistPurchases
2252928   +          +     0.36322603681545 * S_NumStorePurchases
2252929   +          +    -1.15315070635524 * S_NumWebPurchases
2252930   +          +     1.20707272201156 * S_NumWebVisitsMonth
2252931   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2252932   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2252933   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2252934   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2252935   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2252936   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2252937   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2252938   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2252939   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2252940   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2252941   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2252942   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2252943   +          +    -0.41427983342148 * S_NumDealsPurchases
2252944   +          +    -0.22714305629205 * S_NumDistPurchases
2252945   +          +    -0.78763182048862 * S_NumStorePurchases
2252946   +          +    -0.26669253451501 * S_NumWebPurchases
2252947   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2252948   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2252949   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2252950   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2252951   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2252952   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2252953   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2252954   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2252955   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2252956   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2252957   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2252958   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2252959   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2252960   +          +      0.7697882092212 * S_NumDealsPurchases
2252961   +          +     0.51864835453056 * S_NumDistPurchases
2252962   +          +    -1.18320366630444 * S_NumStorePurchases
2252963   +          +     -0.6608394639529 * S_NumWebPurchases
2252964   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2252965   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2252966   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2252967   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2252968   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2252969   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2252970   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2252971   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2252972   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2252973   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2252974   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2252975   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2252976   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2252977   +          +     1.45707983202269 * S_NumDealsPurchases
2252978   +          +     0.83341887728641 * S_NumDistPurchases
2252979   +          +    -0.36664450469423 * S_NumStorePurchases
2252980   +          +     0.63911579043339 * S_NumWebPurchases
2252981   +          +     0.67144790303554 * S_NumWebVisitsMonth
2252982   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2252983   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2252984   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2252985   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2252986   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2252987   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2252988   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2252989   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2252990   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2252991   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2252992   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2252993   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2252994   +          +     0.68491896063662 * S_NumDealsPurchases
2252995   +          +      0.5386312048592 * S_NumDistPurchases
2252996   +          +     1.28108942503912 * S_NumStorePurchases
2252997   +          +    -0.88282270505969 * S_NumWebPurchases
2252998   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2252999   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2253000   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2253001   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2253002   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2253003   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2253004   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2253005   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2253006   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2253007   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2253008   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2253009   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2253010   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2253011   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2253012   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2253013   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2253014   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2253015   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2253016   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2253017   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2253018   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2253019   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2253020   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2253021   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2253022   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2253023   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2253024   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2253025   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2253026   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2253027   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2253028   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2253029   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2253030   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2253031   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2253032   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2253033   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2253034   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2253035   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2253036   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2253037   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2253038   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2253039   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2253040   +          +    -3.97961426831865 * Marital_StatusDivorced
2253041   +          +     0.00932639813867 * Marital_StatusMarried
2253042   +          +     1.29310186574718 * Marital_StatusSingle
2253043   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2253044   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2253045   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2253046   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2253047   +          +    -0.30358516578188 * Marital_StatusDivorced
2253048   +          +    -0.96176709360703 * Marital_StatusMarried
2253049   +          +     1.26977690921649 * Marital_StatusSingle
2253050   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2253051   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2253052   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2253053   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2253054   +          +     0.55272671490757 * Marital_StatusDivorced
2253055   +          +      0.1499239288334 * Marital_StatusMarried
2253056   +          +    -0.46840941760604 * Marital_StatusSingle
2253057   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2253058   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2253059   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2253060   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2253061   +          +      -1.240735370138 * Marital_StatusDivorced
2253062   +          +    -1.20089294883599 * Marital_StatusMarried
2253063   +          +     0.57492674426149 * Marital_StatusSingle
2253064   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2253065   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2253066   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2253067   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2253068   +          +     1.05435442049802 * Marital_StatusDivorced
2253069   +          +      0.3571256349717 * Marital_StatusMarried
2253070   +          +    -0.44741267266578 * Marital_StatusSingle
2253071   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2253072   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2253073   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2253074   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2253075   +          +     2.06026721980778 * Marital_StatusDivorced
2253076   +          +    -0.49583258645166 * Marital_StatusMarried
2253077   +          +    -1.14824900824474 * Marital_StatusSingle
2253078   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2253079   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2253080   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2253081   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2253082   +          +     -1.1890908607447 * Marital_StatusDivorced
2253083   +          +    -0.46668809907123 * Marital_StatusMarried
2253084   +          +     1.20342564763422 * Marital_StatusSingle
2253085   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2253086   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2253087   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2253088   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2253089   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2253090   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2253091   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2253092   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2253093   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2253094   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2253095   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2253096   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2253097   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2253098   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2253099   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2253100   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2253101   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2253102   +END;
MPRINT(EM_DIAGRAM):   END;
2253103   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2253104   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2253105   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2253106   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2253107   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2253108   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2253109   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2253110   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2253111   +END;
MPRINT(EM_DIAGRAM):   END;
2253112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253113   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2253114   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253115   +
2253116   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2253117   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2253118   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2253119   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2253120   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2253121   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2253122   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2253123   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2253124   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2253125   +end;
MPRINT(EM_DIAGRAM):   end;
2253126   +else do;
MPRINT(EM_DIAGRAM):   else do;
2253127   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2253128   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2253129   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2253130   +   end;
MPRINT(EM_DIAGRAM):   end;
2253131   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2253132   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2253133   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2253134   +   end;
MPRINT(EM_DIAGRAM):   end;
2253135   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2253136   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2253137   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2253138   +   end;
MPRINT(EM_DIAGRAM):   end;
2253139   +end;
MPRINT(EM_DIAGRAM):   end;
2253140   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2253141   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2253142   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2253143   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2253144   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2253145   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2253146   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2253147   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2253148   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2253149   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2253150   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2253151   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2253152   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2253153   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2253154   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2253155   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2253156   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2253157   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2253158   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2253159   +END;
MPRINT(EM_DIAGRAM):   END;
2253160   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2253161   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2253162   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2253163   +END;
MPRINT(EM_DIAGRAM):   END;
2253164   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2253165   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2253166   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2253167   +END;
MPRINT(EM_DIAGRAM):   END;
2253168   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2253169   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2253170   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2253171   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2253172   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2253173   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2253174   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2253175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253176   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2253177   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253178   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2253179   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2253180   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2253181   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2253182   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2253183   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2253184   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2253185   +END;
MPRINT(EM_DIAGRAM):   END;
2253186   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2253187   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2253188   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2253189   +drop
2253190   +H1x1_1
2253191   +H1x1_2
2253192   +H1x1_3
2253193   +H1x1_4
2253194   +H1x1_5
2253195   +H1x1_6
2253196   +H1x1_7
2253197   +H1x2_1
2253198   +H1x2_2
2253199   +H1x2_3
2253200   +H1x2_4
2253201   +H1x2_5
2253202   +H1x2_6
2253203   +H1x2_7
2253204   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2253205   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2253206   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2253207   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253208   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2253209   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253210   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2253211   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2253212   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2253213   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2253214   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253215   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2253216   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253217   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2253218   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2253219   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2253220   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253221   +* Ensmbl36: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Average Posteriors of 7 models;
2253222   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253223   +P_DepVar1 = (
2253224   +AutoNeural6_P_DepVar1 +
2253225   +AutoNeural7_P_DepVar1 +
2253226   +AutoNeural8_P_DepVar1 +
2253227   +AutoNeural10_P_DepVar1 +
2253228   +AutoNeural9_P_DepVar1 +
2253229   +AutoNeural11_P_DepVar1 +
2253230   +AutoNeural12_P_DepVar1
2253231   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural6_P_DepVar1 + AutoNeural7_P_DepVar1 + 
AutoNeural8_P_DepVar1 + AutoNeural10_P_DepVar1 + AutoNeural9_P_DepVar1 + 
AutoNeural11_P_DepVar1 + AutoNeural12_P_DepVar1 )/7;
2253232   +P_DepVar0 = (
2253233   +AutoNeural6_P_DepVar0 +
2253234   +AutoNeural7_P_DepVar0 +
2253235   +AutoNeural8_P_DepVar0 +
2253236   +AutoNeural10_P_DepVar0 +
2253237   +AutoNeural9_P_DepVar0 +
2253238   +AutoNeural11_P_DepVar0 +
2253239   +AutoNeural12_P_DepVar0
2253240   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural6_P_DepVar0 + AutoNeural7_P_DepVar0 + 
AutoNeural8_P_DepVar0 + AutoNeural10_P_DepVar0 + AutoNeural9_P_DepVar0 + 
AutoNeural11_P_DepVar0 + AutoNeural12_P_DepVar0 )/7;
2253241   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253242   +* Ensmbl36: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Classification Vars;
2253243   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253244   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2253245   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2253246   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2253247   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2253248   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2253249   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2253250   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2253251   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2253252   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2253253   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2253254   +end;
MPRINT(EM_DIAGRAM):   end;
2253255   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2253256   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2253257   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2253258   +end;
MPRINT(EM_DIAGRAM):   end;
2253259   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2253260   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253261   +* Ensmbl36: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Producing Unformatted variable;
2253262   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253263   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2253264   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2253265   +else
2253266   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2253267   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253268   +* Ensmbl36: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing _WARN_ Variable;
2253269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253270   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2253271   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2253272   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2253273   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2253273  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2253274   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2253274  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2253275   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2253275  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2253276   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2253276  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2253277   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2253277  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2253278   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2253278  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2253279   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2253279  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2253280   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2253280  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2253281   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2253281  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2253282   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2253282  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2253283   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2253283  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2253284   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2253284  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2253285   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2253285  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2253286   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2253286  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2253287   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2253287  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2253288   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2253288  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2253289   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2253289  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2253290   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2253290  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2253291   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2253291  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2253292   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2253292  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2253293   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2253293  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2253294   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2253294  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2253295   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2253295  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2253296   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2253296  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2253297   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2253297  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2253298   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2253298  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2253299   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2253299  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2253300   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2253300  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2253301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253302   +* Ensmbl36: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Residual Vars;
2253303   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253304   +if
2253305   +F_DepVar NE '1'
2253306   +AND F_DepVar NE '0'
2253307   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2253308   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2253309   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2253310   +end;
MPRINT(EM_DIAGRAM):   end;
2253311   +else do;
MPRINT(EM_DIAGRAM):   else do;
2253312   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2253313   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2253314   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2253315   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2253316   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2253317   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2253318   +END;
MPRINT(EM_DIAGRAM):   END;
2253319   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2253320    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL36_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.21 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2253321    quit;
2253322    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2253323    filename emflow
2253323  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring AUTONEURAL6_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253324    *------------------------------------------------------------*;
2253325    * Ensmbl36: Scoring AUTONEURAL6_VALIDATE data;
2253326    *------------------------------------------------------------*;
2253327    data EMWS8.Ensmbl36_VALIDATE
2253328    / view=EMWS8.Ensmbl36_VALIDATE
2253329    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_VALIDATE / view=EMWS8.Ensmbl36_VALIDATE ;
2253330    set EMWS8.AutoNeural6_VALIDATE
2253331    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_VALIDATE ;
2253332    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMFLOWSCORE.sas.
2253333   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253334   +* Ensmbl36: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Combine model for DepVar;
2253335   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253336   +* Ensmbl36: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 1 of 7;
2253337   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253338   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253339   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2253340   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2253341   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2253342   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253343   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253344   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2253345   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2253346   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2253347   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253348   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253349   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2253350   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2253351   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2253352   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253353   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253354   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2253355   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2253356   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2253357   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253358   +
2253359   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2253360   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2253360  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2253361   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2253362   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2253363   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2253364   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2253365   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2253366   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253367   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2253368   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2253369   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2253370   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253371   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253372   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2253373   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253374   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2253375   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2253376   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2253377   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253378   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2253379   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2253380   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2253381   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253382   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253383   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2253384   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2253385   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2253386   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253387   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253388   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2253389   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2253390   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
2253391   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2253392   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2253393   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2253394   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2253395   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2253396   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2253397   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2253398   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2253399   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2253400   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2253401   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2253402   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2253403   +LENGTH _WARN_ $4
2253404   +      F_DepVar  $ 12
2253405   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2253406   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2253407   +
2253408   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2253409   +
2253410   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2253411   +
2253412   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2253413   +
2253414   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2253415   +
2253416   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2253417   +
2253418   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2253419   +
2253420   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2253421   +
2253422   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2253423   +
2253424   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2253425   +
2253426   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2253427   +
2253428   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2253429   +
2253430   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2253431   +
2253432   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2253433   +
2253434   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2253435   +
2253436   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2253437   +
2253438   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2253439   +
2253440   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2253441   +
2253442   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2253443   +
2253444   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2253445   +
2253446   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2253447   +
2253448   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2253449   +
2253450   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2253451   +
2253452   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2253453   +
2253454   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2253455   +
2253456   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2253457   +
2253458   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2253459   +
2253460   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2253461   +
2253462   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2253463   +
2253464   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2253465   +
2253466   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2253467   +
2253468   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2253469   +
2253470   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2253471   +
2253472   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2253473   +
2253474   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2253475   +
2253476   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2253477   +
2253478   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2253479   +
2253480   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2253481   +
2253482   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2253483   +
2253484   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2253485   +
2253486   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2253487   +
2253488   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2253489   +
2253490   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2253491   +
2253492   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2253493   +
2253494   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2253495   +
2253496   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2253497   +
2253498   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2253499   +
2253500   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2253501   +
2253502   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2253503   +
2253504   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2253505   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2253506   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2253507   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2253508   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2253509   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253510   +end;
MPRINT(EM_DIAGRAM):   end;
2253511   +else do;
MPRINT(EM_DIAGRAM):   else do;
2253512   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2253513   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2253514   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2253515   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2253516   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2253517   +   end;
MPRINT(EM_DIAGRAM):   end;
2253518   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2253519   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2253520   +   end;
MPRINT(EM_DIAGRAM):   end;
2253521   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2253522   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2253523   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2253524   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253525   +   end;
MPRINT(EM_DIAGRAM):   end;
2253526   +end;
MPRINT(EM_DIAGRAM):   end;
2253527   +
2253528   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2253529   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2253530   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2253531   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2253532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2253533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253534   +end;
MPRINT(EM_DIAGRAM):   end;
2253535   +else do;
MPRINT(EM_DIAGRAM):   else do;
2253536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2253537   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2253538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2253539   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2253540   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2253541   +   end;
MPRINT(EM_DIAGRAM):   end;
2253542   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2253543   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2253544   +   end;
MPRINT(EM_DIAGRAM):   end;
2253545   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2253546   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2253547   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2253548   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253549   +   end;
MPRINT(EM_DIAGRAM):   end;
2253550   +end;
MPRINT(EM_DIAGRAM):   end;
2253551   +
2253552   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2253553   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2253554   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2253555   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2253556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2253557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253558   +end;
MPRINT(EM_DIAGRAM):   end;
2253559   +else do;
MPRINT(EM_DIAGRAM):   else do;
2253560   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2253561   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2253562   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2253563   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2253564   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2253565   +   end;
MPRINT(EM_DIAGRAM):   end;
2253566   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2253567   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2253568   +   end;
MPRINT(EM_DIAGRAM):   end;
2253569   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2253570   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2253571   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2253572   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253573   +   end;
MPRINT(EM_DIAGRAM):   end;
2253574   +end;
MPRINT(EM_DIAGRAM):   end;
2253575   +
2253576   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2253577   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2253578   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2253579   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2253580   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2253581   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253582   +end;
MPRINT(EM_DIAGRAM):   end;
2253583   +else do;
MPRINT(EM_DIAGRAM):   else do;
2253584   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2253585   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2253586   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2253587   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2253588   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2253589   +   end;
MPRINT(EM_DIAGRAM):   end;
2253590   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2253591   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2253592   +   end;
MPRINT(EM_DIAGRAM):   end;
2253593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2253594   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2253595   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2253596   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253597   +   end;
MPRINT(EM_DIAGRAM):   end;
2253598   +end;
MPRINT(EM_DIAGRAM):   end;
2253599   +
2253600   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2253601   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2253602   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2253603   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2253604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2253605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253606   +end;
MPRINT(EM_DIAGRAM):   end;
2253607   +else do;
MPRINT(EM_DIAGRAM):   else do;
2253608   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2253609   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2253610   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2253611   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2253612   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2253613   +   end;
MPRINT(EM_DIAGRAM):   end;
2253614   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2253615   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2253616   +   end;
MPRINT(EM_DIAGRAM):   end;
2253617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2253618   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2253619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2253620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253621   +   end;
MPRINT(EM_DIAGRAM):   end;
2253622   +end;
MPRINT(EM_DIAGRAM):   end;
2253623   +
2253624   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2253625   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2253626   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2253627   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2253628   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2253629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253630   +end;
MPRINT(EM_DIAGRAM):   end;
2253631   +else do;
MPRINT(EM_DIAGRAM):   else do;
2253632   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2253633   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2253634   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2253635   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2253636   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2253637   +   end;
MPRINT(EM_DIAGRAM):   end;
2253638   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2253639   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2253640   +   end;
MPRINT(EM_DIAGRAM):   end;
2253641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2253642   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2253643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2253644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253645   +   end;
MPRINT(EM_DIAGRAM):   end;
2253646   +end;
MPRINT(EM_DIAGRAM):   end;
2253647   +
2253648   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2253649   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2253650   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2253651   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2253652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2253653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253654   +end;
MPRINT(EM_DIAGRAM):   end;
2253655   +else do;
MPRINT(EM_DIAGRAM):   else do;
2253656   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2253657   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2253658   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2253659   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2253660   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2253661   +   end;
MPRINT(EM_DIAGRAM):   end;
2253662   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2253663   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2253664   +   end;
MPRINT(EM_DIAGRAM):   end;
2253665   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2253666   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2253667   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2253668   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253669   +   end;
MPRINT(EM_DIAGRAM):   end;
2253670   +end;
MPRINT(EM_DIAGRAM):   end;
2253671   +
2253672   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2253673   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2253674   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2253675   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2253676   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2253677   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2253678   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2253679   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2253680   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2253681   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2253682   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2253683   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2253684   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2253685   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253686   +end;
MPRINT(EM_DIAGRAM):   end;
2253687   +else do;
MPRINT(EM_DIAGRAM):   else do;
2253688   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2253689   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2253690   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2253691   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2253692   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2253693   +   end;
MPRINT(EM_DIAGRAM):   end;
2253694   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2253695   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2253696   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2253697   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2253698   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2253699   +   end;
MPRINT(EM_DIAGRAM):   end;
2253700   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2253701   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2253702   +   end;
MPRINT(EM_DIAGRAM):   end;
2253703   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2253704   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2253705   +   end;
MPRINT(EM_DIAGRAM):   end;
2253706   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2253707   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2253708   +   end;
MPRINT(EM_DIAGRAM):   end;
2253709   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2253710   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2253711   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2253712   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2253713   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2253714   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2253715   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253716   +   end;
MPRINT(EM_DIAGRAM):   end;
2253717   +end;
MPRINT(EM_DIAGRAM):   end;
2253718   +
2253719   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2253720   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2253721   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2253722   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2253723   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2253724   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2253725   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2253726   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2253727   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2253728   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2253729   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2253730   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2253731   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2253732   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2253733   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253734   +end;
MPRINT(EM_DIAGRAM):   end;
2253735   +else do;
MPRINT(EM_DIAGRAM):   else do;
2253736   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2253737   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2253738   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2253739   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2253740   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2253741   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2253742   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2253743   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2253744   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2253745   +         end;
MPRINT(EM_DIAGRAM):   end;
2253746   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2253747   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2253748   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2253749   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2253750   +            end;
MPRINT(EM_DIAGRAM):   end;
2253751   +         end;
MPRINT(EM_DIAGRAM):   end;
2253752   +      end;
MPRINT(EM_DIAGRAM):   end;
2253753   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2253754   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2253755   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2253756   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2253757   +         end;
MPRINT(EM_DIAGRAM):   end;
2253758   +      end;
MPRINT(EM_DIAGRAM):   end;
2253759   +   end;
MPRINT(EM_DIAGRAM):   end;
2253760   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2253761   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2253762   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2253763   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2253764   +      end;
MPRINT(EM_DIAGRAM):   end;
2253765   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2253766   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2253767   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2253768   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2253769   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2253770   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2253771   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2253772   +         end;
MPRINT(EM_DIAGRAM):   end;
2253773   +      end;
MPRINT(EM_DIAGRAM):   end;
2253774   +   end;
MPRINT(EM_DIAGRAM):   end;
2253775   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2253776   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2253777   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2253778   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2253779   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2253780   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2253781   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253782   +   end;
MPRINT(EM_DIAGRAM):   end;
2253783   +end;
MPRINT(EM_DIAGRAM):   end;
2253784   +
2253785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253786   +*** Checking missing input Interval
2253787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2253788   +
2253789   +IF NMISS(
2253790   +   AcceptedCmpTotal ,
2253791   +   Age ,
2253792   +   Frq ,
2253793   +   Income ,
2253794   +   Kidhome ,
2253795   +   Mnt ,
2253796   +   MntFishProducts ,
2253797   +   MntFruits ,
2253798   +   MntGoldProds ,
2253799   +   MntMeatProducts ,
2253800   +   MntSweetProducts ,
2253801   +   MntWines ,
2253802   +   MonthsAsCustomer ,
2253803   +   NumCatalogPurchases ,
2253804   +   NumDealsPurchases ,
2253805   +   NumDistPurchases ,
2253806   +   NumStorePurchases ,
2253807   +   NumWebPurchases ,
2253808   +   NumWebVisitsMonth ,
2253809   +   RFMstat ,
2253810   +   RMntFrq ,
2253811   +   Recency ,
2253812   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2253813   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2253814   +
2253815   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2253816   +END;
MPRINT(EM_DIAGRAM):   END;
2253817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253818   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2253819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253820   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2253821   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2253822   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2253823   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2253824   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2253825   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2253826   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2253827   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2253828   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2253829   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2253830   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2253831   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2253832   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2253833   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2253834   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2253835   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2253836   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2253837   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2253838   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2253839   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2253840   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2253841   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2253842   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2253843   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2253844   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2253845   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2253846   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2253847   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2253848   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2253849   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2253850   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2253851   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2253852   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2253853   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2253854   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2253855   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2253856   +END;
MPRINT(EM_DIAGRAM):   END;
2253857   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2253858   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2253859   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2253860   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2253861   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2253862   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2253863   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2253864   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2253865   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2253866   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2253867   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2253868   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2253869   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2253870   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2253871   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2253872   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2253873   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2253874   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2253875   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2253876   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2253877   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2253878   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2253879   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2253880   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2253881   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2253882   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2253883   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2253884   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2253885   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2253886   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2253887   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2253888   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2253889   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2253890   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2253891   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2253892   +   ELSE S_NumCatalogPurchases
2253893   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2253894   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2253895   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2253896   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2253897   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2253898   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2253899   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2253900   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2253901   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2253902   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2253903   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2253904   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2253905   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2253906   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2253907   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2253908   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2253909   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2253910   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2253911   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2253912   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2253913   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2253914   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2253915   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2253916   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2253917   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2253918   +END;
MPRINT(EM_DIAGRAM):   END;
2253919   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253920   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2253921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253922   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253923   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2253924   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253925   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253926   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2253927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253928   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2253929   +   H1x1_1  =    -0.00800383076247 * S_AcceptedCmpTotal
2253930   +          +     0.02761302021586 * S_Age  +     0.10595191274027 * S_Frq
2253931   +          +    -0.15720275096991 * S_Income  +     0.14522420813528 *
2253932   +        S_Kidhome  +    -0.14485367197729 * S_Mnt  +     0.10029542464177 *
2253933   +        S_MntFishProducts  +      0.0126489883955 * S_MntFruits
2253934   +          +    -0.01721251339827 * S_MntGoldProds  +    -0.69008250574088 *
2253935   +        S_MntMeatProducts  +     0.01018204164797 * S_MntSweetProducts
2253936   +          +     0.22039448854688 * S_MntWines  +     0.01531819489128 *
2253937   +        S_MonthsAsCustomer  +    -0.23161250514854 * S_NumCatalogPurchases
2253938   +          +    -0.20127545393212 * S_NumDealsPurchases
2253939   +          +     0.04506333103933 * S_NumDistPurchases
2253940   +          +     0.35249458492371 * S_NumStorePurchases
2253941   +          +     0.25004284340707 * S_NumWebPurchases
2253942   +          +    -0.53727251220752 * S_NumWebVisitsMonth
2253943   +          +    -0.05439428653958 * S_RFMstat  +     0.36751560031492 *
2253944   +        S_RMntFrq  +      0.5373510847225 * S_Recency
2253945   +          +     0.08757258535387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.00800383076247 * S_AcceptedCmpTotal + 0.02761302021586 * 
S_Age + 0.10595191274027 * S_Frq + -0.15720275096991 * S_Income + 0.14522420813528 * S_Kidhome 
+ -0.14485367197729 * S_Mnt + 0.10029542464177 * S_MntFishProducts + 0.0126489883955 * 
S_MntFruits + -0.01721251339827 * S_MntGoldProds + -0.69008250574088 * S_MntMeatProducts + 
0.01018204164797 * S_MntSweetProducts + 0.22039448854688 * S_MntWines + 0.01531819489128 * 
S_MonthsAsCustomer + -0.23161250514854 * S_NumCatalogPurchases + -0.20127545393212 * 
S_NumDealsPurchases + 0.04506333103933 * S_NumDistPurchases + 0.35249458492371 * 
S_NumStorePurchases + 0.25004284340707 * S_NumWebPurchases + -0.53727251220752 * 
S_NumWebVisitsMonth + -0.05439428653958 * S_RFMstat + 0.36751560031492 * S_RMntFrq + 
0.5373510847225 * S_Recency + 0.08757258535387 * S_Teenhome ;
2253946   +   H1x1_1  = H1x1_1  +     0.21204360154837 * AcceptedCmp10
2253947   +          +     0.20766091429217 * AcceptedCmp20  +     0.20201307074488 *
2253948   +        AcceptedCmp30  +     0.26898383850722 * AcceptedCmp40
2253949   +          +     0.55154220854739 * AcceptedCmp50  +     0.13147328871299 *
2253950   +        Complain0  +    -0.02797177954188 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21204360154837 * AcceptedCmp10 + 0.20766091429217 * 
AcceptedCmp20 + 0.20201307074488 * AcceptedCmp30 + 0.26898383850722 * AcceptedCmp40 + 
0.55154220854739 * AcceptedCmp50 + 0.13147328871299 * Complain0 + -0.02797177954188 * 
HigherEducationBinary0 ;
2253951   +   H1x1_1  = H1x1_1  +    -0.00959805163736 * Education2n_Cycle
2253952   +          +     0.37192717803938 * EducationBasic  +    -0.10342362068485 *
2253953   +        EducationGraduation  +    -0.13377682721092 * EducationMaster
2253954   +          +    -0.19452359839974 * Marital_StatusDivorced
2253955   +          +     0.32327870805716 * Marital_StatusMarried
2253956   +          +    -0.20770545592268 * Marital_StatusSingle
2253957   +          +     0.35618773017298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00959805163736 * Education2n_Cycle + 
0.37192717803938 * EducationBasic + -0.10342362068485 * EducationGraduation + 
-0.13377682721092 * EducationMaster + -0.19452359839974 * Marital_StatusDivorced + 
0.32327870805716 * Marital_StatusMarried + -0.20770545592268 * Marital_StatusSingle + 
0.35618773017298 * Marital_StatusTogether ;
2253958   +   H1x1_1  =     0.87012150629431 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87012150629431 + H1x1_1 ;
2253959   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2253960   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2253961   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2253962   +END;
MPRINT(EM_DIAGRAM):   END;
2253963   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2253964   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2253965   +END;
MPRINT(EM_DIAGRAM):   END;
2253966   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253967   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2253968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2253969   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2253970   +   H1x2_1  =     0.92357456692651 * S_AcceptedCmpTotal
2253971   +          +    -0.00516549264504 * S_Age  +    -1.03043789382359 * S_Frq
2253972   +          +     0.78555631441048 * S_Income  +    -1.36329797235747 *
2253973   +        S_Kidhome  +    -0.77229288487872 * S_Mnt  +     1.27281095482218 *
2253974   +        S_MntFishProducts  +     0.04568599055132 * S_MntFruits
2253975   +          +    -0.13434867195633 * S_MntGoldProds  +    -1.95682488683295 *
2253976   +        S_MntMeatProducts  +     -0.0253141337078 * S_MntSweetProducts
2253977   +          +     0.67857436596482 * S_MntWines  +    -0.07247572940845 *
2253978   +        S_MonthsAsCustomer  +    -1.02814758425435 * S_NumCatalogPurchases
2253979   +          +    -0.02120959778153 * S_NumDealsPurchases
2253980   +          +     1.49013956394863 * S_NumDistPurchases
2253981   +          +    -0.96806240220463 * S_NumStorePurchases
2253982   +          +    -1.68330472453558 * S_NumWebPurchases
2253983   +          +     3.42976128164256 * S_NumWebVisitsMonth
2253984   +          +    -0.38912520446503 * S_RFMstat  +    -2.57487899031042 *
2253985   +        S_RMntFrq  +    -3.14923215912621 * S_Recency
2253986   +          +    -0.67635091810974 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.92357456692651 * S_AcceptedCmpTotal + -0.00516549264504 * 
S_Age + -1.03043789382359 * S_Frq + 0.78555631441048 * S_Income + -1.36329797235747 * 
S_Kidhome + -0.77229288487872 * S_Mnt + 1.27281095482218 * S_MntFishProducts + 
0.04568599055132 * S_MntFruits + -0.13434867195633 * S_MntGoldProds + -1.95682488683295 * 
S_MntMeatProducts + -0.0253141337078 * S_MntSweetProducts + 0.67857436596482 * S_MntWines + 
-0.07247572940845 * S_MonthsAsCustomer + -1.02814758425435 * S_NumCatalogPurchases + 
-0.02120959778153 * S_NumDealsPurchases + 1.49013956394863 * S_NumDistPurchases + 
-0.96806240220463 * S_NumStorePurchases + -1.68330472453558 * S_NumWebPurchases + 
3.42976128164256 * S_NumWebVisitsMonth + -0.38912520446503 * S_RFMstat + -2.57487899031042 * 
S_RMntFrq + -3.14923215912621 * S_Recency + -0.67635091810974 * S_Teenhome ;
2253987   +   H1x2_1  = H1x2_1  +    -0.18835638765595 * AcceptedCmp10
2253988   +          +     1.28752081945681 * AcceptedCmp20  +     -0.5515893923669 *
2253989   +        AcceptedCmp30  +    -0.82440763600043 * AcceptedCmp40
2253990   +          +     1.94503109075872 * AcceptedCmp50  +    -0.75977722298402 *
2253991   +        Complain0  +    -1.11349075129464 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.18835638765595 * AcceptedCmp10 + 1.28752081945681 * 
AcceptedCmp20 + -0.5515893923669 * AcceptedCmp30 + -0.82440763600043 * AcceptedCmp40 + 
1.94503109075872 * AcceptedCmp50 + -0.75977722298402 * Complain0 + -1.11349075129464 * 
HigherEducationBinary0 ;
2253992   +   H1x2_1  = H1x2_1  +     1.79843117215153 * Education2n_Cycle
2253993   +          +    -1.50428649925314 * EducationBasic  +    -0.32238897768725 *
2253994   +        EducationGraduation  +    -0.16909007224958 * EducationMaster
2253995   +          +      1.9815992681602 * Marital_StatusDivorced
2253996   +          +    -3.07893181570848 * Marital_StatusMarried
2253997   +          +     1.72965298244219 * Marital_StatusSingle
2253998   +          +    -3.17208781997524 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.79843117215153 * Education2n_Cycle + 
-1.50428649925314 * EducationBasic + -0.32238897768725 * EducationGraduation + 
-0.16909007224958 * EducationMaster + 1.9815992681602 * Marital_StatusDivorced + 
-3.07893181570848 * Marital_StatusMarried + 1.72965298244219 * Marital_StatusSingle + 
-3.17208781997524 * Marital_StatusTogether ;
2253999   +   H1x2_1  =     0.54729406730223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.54729406730223 + H1x2_1 ;
2254000   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2254001   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2254002   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2254003   +   IF H1x2_1  < _REC_EPS AND H1x2_1  > - _REC_EPS THEN
2254004   +   H1x2_1  = H1x2_1  * H1x2_1 ;
MPRINT(EM_DIAGRAM):   IF H1x2_1 < _REC_EPS AND H1x2_1 > - _REC_EPS THEN H1x2_1 = H1x2_1 * 
H1x2_1 ;
2254005   +   ELSE H1x2_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x2_1 = _REC_EPS ;
2254006   +END;
MPRINT(EM_DIAGRAM):   END;
2254007   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2254008   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2254009   +END;
MPRINT(EM_DIAGRAM):   END;
2254010   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254011   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2254012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254013   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2254014   +   H1x3_1  =     0.90092602642364 * S_AcceptedCmpTotal
2254015   +          +    -0.16291307307626 * S_Age  +    -0.40132431666712 * S_Frq
2254016   +          +    -0.77251140598484 * S_Income  +     0.02215214313934 *
2254017   +        S_Kidhome  +     0.13123074182657 * S_Mnt  +    -0.43664076061176 *
2254018   +        S_MntFishProducts  +    -1.64192761266072 * S_MntFruits
2254019   +          +    -1.54189230184745 * S_MntGoldProds  +     -0.4138869968665 *
2254020   +        S_MntMeatProducts  +      0.5773885392047 * S_MntSweetProducts
2254021   +          +     1.45077769194851 * S_MntWines  +      0.5855746168529 *
2254022   +        S_MonthsAsCustomer  +     0.10198319985004 * S_NumCatalogPurchases
2254023   +          +     -0.5334151509863 * S_NumDealsPurchases
2254024   +          +     0.40600458912114 * S_NumDistPurchases
2254025   +          +    -0.30674653528261 * S_NumStorePurchases
2254026   +          +     0.10785037433743 * S_NumWebPurchases
2254027   +          +     0.99701680073452 * S_NumWebVisitsMonth
2254028   +          +    -0.25371895811899 * S_RFMstat  +     2.19406614746442 *
2254029   +        S_RMntFrq  +      1.0786726340694 * S_Recency
2254030   +          +     0.64406049150007 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.90092602642364 * S_AcceptedCmpTotal + -0.16291307307626 * 
S_Age + -0.40132431666712 * S_Frq + -0.77251140598484 * S_Income + 0.02215214313934 * 
S_Kidhome + 0.13123074182657 * S_Mnt + -0.43664076061176 * S_MntFishProducts + 
-1.64192761266072 * S_MntFruits + -1.54189230184745 * S_MntGoldProds + -0.4138869968665 * 
S_MntMeatProducts + 0.5773885392047 * S_MntSweetProducts + 1.45077769194851 * S_MntWines + 
0.5855746168529 * S_MonthsAsCustomer + 0.10198319985004 * S_NumCatalogPurchases + 
-0.5334151509863 * S_NumDealsPurchases + 0.40600458912114 * S_NumDistPurchases + 
-0.30674653528261 * S_NumStorePurchases + 0.10785037433743 * S_NumWebPurchases + 
0.99701680073452 * S_NumWebVisitsMonth + -0.25371895811899 * S_RFMstat + 2.19406614746442 * 
S_RMntFrq + 1.0786726340694 * S_Recency + 0.64406049150007 * S_Teenhome ;
2254031   +   H1x3_1  = H1x3_1  +    -0.58424742605644 * AcceptedCmp10
2254032   +          +     -0.7436165858459 * AcceptedCmp20  +    -0.33959137246457 *
2254033   +        AcceptedCmp30  +     0.42726020731333 * AcceptedCmp40
2254034   +          +     2.23707409189181 * AcceptedCmp50  +     0.98135772482722 *
2254035   +        Complain0  +    -0.85818399669867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.58424742605644 * AcceptedCmp10 + -0.7436165858459 * 
AcceptedCmp20 + -0.33959137246457 * AcceptedCmp30 + 0.42726020731333 * AcceptedCmp40 + 
2.23707409189181 * AcceptedCmp50 + 0.98135772482722 * Complain0 + -0.85818399669867 * 
HigherEducationBinary0 ;
2254036   +   H1x3_1  = H1x3_1  +    -0.89540752048995 * Education2n_Cycle
2254037   +          +     1.29513448243349 * EducationBasic  +    -1.47068621785539 *
2254038   +        EducationGraduation  +    -1.63362973413899 * EducationMaster
2254039   +          +    -0.72494401881341 * Marital_StatusDivorced
2254040   +          +    -0.82332231639631 * Marital_StatusMarried
2254041   +          +     -0.8863559011195 * Marital_StatusSingle
2254042   +          +     0.97129982315045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.89540752048995 * Education2n_Cycle + 
1.29513448243349 * EducationBasic + -1.47068621785539 * EducationGraduation + 
-1.63362973413899 * EducationMaster + -0.72494401881341 * Marital_StatusDivorced + 
-0.82332231639631 * Marital_StatusMarried + -0.8863559011195 * Marital_StatusSingle + 
0.97129982315045 * Marital_StatusTogether ;
2254043   +   H1x3_1  =     0.55234573720932 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.55234573720932 + H1x3_1 ;
2254044   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2254045   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2254046   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2254047   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2254048   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2254049   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2254050   +END;
MPRINT(EM_DIAGRAM):   END;
2254051   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2254052   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2254053   +END;
MPRINT(EM_DIAGRAM):   END;
2254054   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254055   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2254056   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254057   +
2254058   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2254059   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2254060   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2254061   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2254062   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2254063   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2254064   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2254065   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2254066   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2254067   +end;
MPRINT(EM_DIAGRAM):   end;
2254068   +else do;
MPRINT(EM_DIAGRAM):   else do;
2254069   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2254070   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2254071   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2254072   +   end;
MPRINT(EM_DIAGRAM):   end;
2254073   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2254074   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2254075   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2254076   +   end;
MPRINT(EM_DIAGRAM):   end;
2254077   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2254078   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2254079   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2254080   +   end;
MPRINT(EM_DIAGRAM):   end;
2254081   +end;
MPRINT(EM_DIAGRAM):   end;
2254082   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2254083   +   P_DepVar1  =     35.4482526843154 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 35.4482526843154 * H1x1_1 ;
2254084   +   P_DepVar1  = P_DepVar1  +    -0.08810161142704 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.08810161142704 * H1x2_1 ;
2254085   +   P_DepVar1  = P_DepVar1  +     0.02248060710303 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 0.02248060710303 * H1x3_1 ;
2254086   +   P_DepVar1  =    -6.23004657634651 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.23004657634651 + P_DepVar1 ;
2254087   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2254088   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2254089   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2254090   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2254091   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2254092   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2254093   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2254094   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2254095   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2254096   +END;
MPRINT(EM_DIAGRAM):   END;
2254097   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2254098   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2254099   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2254100   +END;
MPRINT(EM_DIAGRAM):   END;
2254101   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2254102   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2254103   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2254104   +END;
MPRINT(EM_DIAGRAM):   END;
2254105   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2254106   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2254107   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2254108   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2254109   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2254110   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2254111   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2254112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254113   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2254114   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254115   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2254116   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2254117   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2254118   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2254119   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2254120   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2254121   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2254122   +END;
MPRINT(EM_DIAGRAM):   END;
2254123   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2254124   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2254125   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2254126   +drop
2254127   +H1x1_1
2254128   +H1x2_1
2254129   +H1x3_1
2254130   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x2_1 H1x3_1 ;
2254131   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2254132   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
2254133   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2254134   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
2254135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2254136   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
2254137   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
2254138   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
2254139   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
2254140   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2254141   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
2254142   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2254143   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
2254144   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
2254145   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
2254146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2254147   +* Ensmbl36: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 2 of 7;
2254148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2254149   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2254150   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2254151   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2254152   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2254153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2254154   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2254155   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2254156   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2254157   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2254158   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2254159   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2254160   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2254161   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2254162   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2254163   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2254164   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2254165   +LENGTH _WARN_ $4
2254166   +      F_DepVar  $ 12
2254167   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2254168   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2254169   +
2254170   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2254171   +
2254172   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2254173   +
2254174   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2254175   +
2254176   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2254177   +
2254178   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2254179   +
2254180   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2254181   +
2254182   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2254183   +
2254184   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2254185   +
2254186   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2254187   +
2254188   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2254189   +
2254190   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2254191   +
2254192   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2254193   +
2254194   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2254195   +
2254196   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2254197   +
2254198   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2254199   +
2254200   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2254201   +
2254202   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2254203   +
2254204   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2254205   +
2254206   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2254207   +
2254208   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2254209   +
2254210   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2254211   +
2254212   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2254213   +
2254214   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2254215   +
2254216   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2254217   +
2254218   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2254219   +
2254220   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2254221   +
2254222   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2254223   +
2254224   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2254225   +
2254226   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2254227   +
2254228   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2254229   +
2254230   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2254231   +
2254232   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2254233   +
2254234   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2254235   +
2254236   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2254237   +
2254238   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2254239   +
2254240   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2254241   +
2254242   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2254243   +
2254244   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2254245   +
2254246   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2254247   +
2254248   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2254249   +
2254250   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2254251   +
2254252   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2254253   +
2254254   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2254255   +
2254256   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2254257   +
2254258   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2254259   +
2254260   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2254261   +
2254262   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2254263   +
2254264   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2254265   +
2254266   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2254267   +
2254268   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2254269   +
2254270   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2254271   +
2254272   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2254273   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2254274   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2254275   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2254276   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2254277   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254278   +end;
MPRINT(EM_DIAGRAM):   end;
2254279   +else do;
MPRINT(EM_DIAGRAM):   else do;
2254280   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2254281   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2254282   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2254283   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2254284   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2254285   +   end;
MPRINT(EM_DIAGRAM):   end;
2254286   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2254287   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2254288   +   end;
MPRINT(EM_DIAGRAM):   end;
2254289   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2254290   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2254291   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2254292   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254293   +   end;
MPRINT(EM_DIAGRAM):   end;
2254294   +end;
MPRINT(EM_DIAGRAM):   end;
2254295   +
2254296   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2254297   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2254298   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2254299   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2254300   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2254301   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254302   +end;
MPRINT(EM_DIAGRAM):   end;
2254303   +else do;
MPRINT(EM_DIAGRAM):   else do;
2254304   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2254305   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2254306   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2254307   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2254308   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2254309   +   end;
MPRINT(EM_DIAGRAM):   end;
2254310   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2254311   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2254312   +   end;
MPRINT(EM_DIAGRAM):   end;
2254313   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2254314   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2254315   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2254316   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254317   +   end;
MPRINT(EM_DIAGRAM):   end;
2254318   +end;
MPRINT(EM_DIAGRAM):   end;
2254319   +
2254320   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2254321   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2254322   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2254323   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2254324   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2254325   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254326   +end;
MPRINT(EM_DIAGRAM):   end;
2254327   +else do;
MPRINT(EM_DIAGRAM):   else do;
2254328   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2254329   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2254330   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2254331   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2254332   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2254333   +   end;
MPRINT(EM_DIAGRAM):   end;
2254334   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2254335   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2254336   +   end;
MPRINT(EM_DIAGRAM):   end;
2254337   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2254338   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2254339   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2254340   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254341   +   end;
MPRINT(EM_DIAGRAM):   end;
2254342   +end;
MPRINT(EM_DIAGRAM):   end;
2254343   +
2254344   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2254345   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2254346   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2254347   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2254348   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2254349   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254350   +end;
MPRINT(EM_DIAGRAM):   end;
2254351   +else do;
MPRINT(EM_DIAGRAM):   else do;
2254352   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2254353   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2254354   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2254355   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2254356   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2254357   +   end;
MPRINT(EM_DIAGRAM):   end;
2254358   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2254359   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2254360   +   end;
MPRINT(EM_DIAGRAM):   end;
2254361   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2254362   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2254363   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2254364   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254365   +   end;
MPRINT(EM_DIAGRAM):   end;
2254366   +end;
MPRINT(EM_DIAGRAM):   end;
2254367   +
2254368   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2254369   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2254370   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2254371   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2254372   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2254373   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254374   +end;
MPRINT(EM_DIAGRAM):   end;
2254375   +else do;
MPRINT(EM_DIAGRAM):   else do;
2254376   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2254377   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2254378   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2254379   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2254380   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2254381   +   end;
MPRINT(EM_DIAGRAM):   end;
2254382   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2254383   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2254384   +   end;
MPRINT(EM_DIAGRAM):   end;
2254385   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2254386   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2254387   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2254388   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254389   +   end;
MPRINT(EM_DIAGRAM):   end;
2254390   +end;
MPRINT(EM_DIAGRAM):   end;
2254391   +
2254392   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2254393   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2254394   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2254395   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2254396   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2254397   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254398   +end;
MPRINT(EM_DIAGRAM):   end;
2254399   +else do;
MPRINT(EM_DIAGRAM):   else do;
2254400   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2254401   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2254402   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2254403   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2254404   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2254405   +   end;
MPRINT(EM_DIAGRAM):   end;
2254406   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2254407   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2254408   +   end;
MPRINT(EM_DIAGRAM):   end;
2254409   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2254410   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2254411   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2254412   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254413   +   end;
MPRINT(EM_DIAGRAM):   end;
2254414   +end;
MPRINT(EM_DIAGRAM):   end;
2254415   +
2254416   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2254417   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2254418   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2254419   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2254420   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2254421   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254422   +end;
MPRINT(EM_DIAGRAM):   end;
2254423   +else do;
MPRINT(EM_DIAGRAM):   else do;
2254424   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2254425   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2254426   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2254427   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2254428   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2254429   +   end;
MPRINT(EM_DIAGRAM):   end;
2254430   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2254431   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2254432   +   end;
MPRINT(EM_DIAGRAM):   end;
2254433   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2254434   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2254435   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2254436   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254437   +   end;
MPRINT(EM_DIAGRAM):   end;
2254438   +end;
MPRINT(EM_DIAGRAM):   end;
2254439   +
2254440   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2254441   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2254442   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2254443   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2254444   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2254445   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2254446   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2254447   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2254448   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2254449   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2254450   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2254451   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2254452   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2254453   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254454   +end;
MPRINT(EM_DIAGRAM):   end;
2254455   +else do;
MPRINT(EM_DIAGRAM):   else do;
2254456   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2254457   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2254458   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2254459   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2254460   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2254461   +   end;
MPRINT(EM_DIAGRAM):   end;
2254462   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2254463   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2254464   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2254465   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2254466   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2254467   +   end;
MPRINT(EM_DIAGRAM):   end;
2254468   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2254469   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2254470   +   end;
MPRINT(EM_DIAGRAM):   end;
2254471   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2254472   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2254473   +   end;
MPRINT(EM_DIAGRAM):   end;
2254474   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2254475   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2254476   +   end;
MPRINT(EM_DIAGRAM):   end;
2254477   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2254478   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2254479   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2254480   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2254481   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2254482   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2254483   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254484   +   end;
MPRINT(EM_DIAGRAM):   end;
2254485   +end;
MPRINT(EM_DIAGRAM):   end;
2254486   +
2254487   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2254488   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2254489   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2254490   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2254491   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2254492   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2254493   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2254494   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2254495   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2254496   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2254497   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2254498   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2254499   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2254500   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2254501   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254502   +end;
MPRINT(EM_DIAGRAM):   end;
2254503   +else do;
MPRINT(EM_DIAGRAM):   else do;
2254504   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2254505   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2254506   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2254507   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2254508   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2254509   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2254510   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2254511   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2254512   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2254513   +         end;
MPRINT(EM_DIAGRAM):   end;
2254514   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2254515   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2254516   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2254517   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2254518   +            end;
MPRINT(EM_DIAGRAM):   end;
2254519   +         end;
MPRINT(EM_DIAGRAM):   end;
2254520   +      end;
MPRINT(EM_DIAGRAM):   end;
2254521   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2254522   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2254523   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2254524   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2254525   +         end;
MPRINT(EM_DIAGRAM):   end;
2254526   +      end;
MPRINT(EM_DIAGRAM):   end;
2254527   +   end;
MPRINT(EM_DIAGRAM):   end;
2254528   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2254529   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2254530   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2254531   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2254532   +      end;
MPRINT(EM_DIAGRAM):   end;
2254533   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2254534   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2254535   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2254536   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2254537   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2254538   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2254539   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2254540   +         end;
MPRINT(EM_DIAGRAM):   end;
2254541   +      end;
MPRINT(EM_DIAGRAM):   end;
2254542   +   end;
MPRINT(EM_DIAGRAM):   end;
2254543   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2254544   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2254545   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2254546   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2254547   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2254548   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2254549   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254550   +   end;
MPRINT(EM_DIAGRAM):   end;
2254551   +end;
MPRINT(EM_DIAGRAM):   end;
2254552   +
2254553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254554   +*** Checking missing input Interval
2254555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2254556   +
2254557   +IF NMISS(
2254558   +   AcceptedCmpTotal ,
2254559   +   Age ,
2254560   +   Frq ,
2254561   +   Income ,
2254562   +   Kidhome ,
2254563   +   Mnt ,
2254564   +   MntFishProducts ,
2254565   +   MntFruits ,
2254566   +   MntGoldProds ,
2254567   +   MntMeatProducts ,
2254568   +   MntSweetProducts ,
2254569   +   MntWines ,
2254570   +   MonthsAsCustomer ,
2254571   +   NumCatalogPurchases ,
2254572   +   NumDealsPurchases ,
2254573   +   NumDistPurchases ,
2254574   +   NumStorePurchases ,
2254575   +   NumWebPurchases ,
2254576   +   NumWebVisitsMonth ,
2254577   +   RFMstat ,
2254578   +   RMntFrq ,
2254579   +   Recency ,
2254580   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2254581   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2254582   +
2254583   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2254584   +END;
MPRINT(EM_DIAGRAM):   END;
2254585   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254586   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2254587   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254588   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2254589   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2254590   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2254591   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2254592   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2254593   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2254594   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2254595   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2254596   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2254597   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2254598   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2254599   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2254600   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2254601   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2254602   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2254603   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2254604   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2254605   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2254606   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2254607   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2254608   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2254609   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2254610   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2254611   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2254612   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2254613   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2254614   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2254615   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2254616   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2254617   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2254618   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2254619   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2254620   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2254621   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2254622   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2254623   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2254624   +END;
MPRINT(EM_DIAGRAM):   END;
2254625   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2254626   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2254627   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2254628   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2254629   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2254630   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2254631   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2254632   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2254633   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2254634   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2254635   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2254636   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2254637   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2254638   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2254639   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2254640   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2254641   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2254642   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2254643   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2254644   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2254645   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2254646   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2254647   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2254648   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2254649   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2254650   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2254651   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2254652   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2254653   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2254654   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2254655   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2254656   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2254657   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2254658   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2254659   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2254660   +   ELSE S_NumCatalogPurchases
2254661   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2254662   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2254663   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2254664   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2254665   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2254666   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2254667   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2254668   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2254669   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2254670   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2254671   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2254672   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2254673   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2254674   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2254675   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2254676   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2254677   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2254678   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2254679   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2254680   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2254681   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2254682   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2254683   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2254684   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2254685   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2254686   +END;
MPRINT(EM_DIAGRAM):   END;
2254687   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254688   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2254689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254691   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2254692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254694   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2254695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254696   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2254697   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2254698   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2254699   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2254700   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2254701   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2254702   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2254703   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2254704   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2254705   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2254706   +          +     0.08390531145773 * S_NumDealsPurchases
2254707   +          +    -0.29505970645775 * S_NumDistPurchases
2254708   +          +    -0.13820571170194 * S_NumStorePurchases
2254709   +          +     0.11468011313368 * S_NumWebPurchases
2254710   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2254711   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2254712   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2254713   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 * 
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome 
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 * 
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts + 
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 * 
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 * 
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 * 
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 * 
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq + 
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2254714   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2254715   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2254716   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2254717   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2254718   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2254719   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2254720   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2254721   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2254722   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2254723   +          +     0.18009076035363 * S_NumDealsPurchases
2254724   +          +     0.03853861006587 * S_NumDistPurchases
2254725   +          +    -0.05118063952874 * S_NumStorePurchases
2254726   +          +    -0.03282286120473 * S_NumWebPurchases
2254727   +          +     0.31160900419026 * S_NumWebVisitsMonth
2254728   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2254729   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2254730   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age 
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome + 
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 * 
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts + 
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 * 
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 * 
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 * 
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 * 
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq + 
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2254731   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2254732   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2254733   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2254734   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2254735   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 * 
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 + 
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 * 
HigherEducationBinary0 ;
2254736   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2254737   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2254738   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2254739   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2254740   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 * 
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 + 
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 * 
HigherEducationBinary0 ;
2254741   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2254742   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2254743   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2254744   +          +    -0.04750981393889 * Marital_StatusDivorced
2254745   +          +     0.28216925676677 * Marital_StatusMarried
2254746   +          +    -0.20757827413964 * Marital_StatusSingle
2254747   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle + 
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127 
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 * 
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 * 
Marital_StatusTogether ;
2254748   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2254749   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2254750   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2254751   +          +     0.05981919620577 * Marital_StatusDivorced
2254752   +          +    -0.17161573846062 * Marital_StatusMarried
2254753   +          +     0.15869440681091 * Marital_StatusSingle
2254754   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle + 
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation + 
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced + 
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle + 
-0.13282372850158 * Marital_StatusTogether ;
2254755   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2254756   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2254757   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2254758   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2254759   +END;
MPRINT(EM_DIAGRAM):   END;
2254760   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2254761   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2254762   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2254763   +END;
MPRINT(EM_DIAGRAM):   END;
2254764   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254765   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2254766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254767   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2254768   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2254769   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2254770   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2254771   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2254772   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2254773   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2254774   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2254775   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2254776   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2254777   +          +     0.00741910846933 * S_NumDealsPurchases
2254778   +          +       1.334289252268 * S_NumDistPurchases
2254779   +          +    -0.29851567180932 * S_NumStorePurchases
2254780   +          +    -0.52115313259666 * S_NumWebPurchases
2254781   +          +     0.93907168501909 * S_NumWebVisitsMonth
2254782   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2254783   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2254784   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age 
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome + 
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 * 
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts + 
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 * 
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 * 
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 * 
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 * 
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq + 
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2254785   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2254786   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2254787   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2254788   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2254789   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2254790   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2254791   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2254792   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2254793   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2254794   +          +     1.60427001186844 * S_NumDealsPurchases
2254795   +          +    -0.18447618033353 * S_NumDistPurchases
2254796   +          +    -1.29966073003539 * S_NumStorePurchases
2254797   +          +    -1.12373457341536 * S_NumWebPurchases
2254798   +          +     1.46099221440494 * S_NumWebVisitsMonth
2254799   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2254800   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2254801   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 * 
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 * 
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts + 
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 * 
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines + 
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases + 
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases + 
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases + 
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 * 
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2254802   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2254803   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2254804   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2254805   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2254806   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 * 
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 + 
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 * 
HigherEducationBinary0 ;
2254807   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2254808   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2254809   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2254810   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2254811   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 * 
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 + 
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 * 
HigherEducationBinary0 ;
2254812   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2254813   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2254814   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2254815   +          +     0.59819559998538 * Marital_StatusDivorced
2254816   +          +     0.92957772553633 * Marital_StatusMarried
2254817   +          +    -1.11796266958894 * Marital_StatusSingle
2254818   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 * 
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster + 
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried + 
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2254819   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2254820   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2254821   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2254822   +          +      1.0870909562212 * Marital_StatusDivorced
2254823   +          +     1.50333961797515 * Marital_StatusMarried
2254824   +          +    -1.41407780765932 * Marital_StatusSingle
2254825   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle + 
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation + 
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced + 
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle + 
-0.52528072358697 * Marital_StatusTogether ;
2254826   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2254827   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2254828   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2254829   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2254830   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2254831   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2254832   +END;
MPRINT(EM_DIAGRAM):   END;
2254833   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2254834   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2254835   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2254836   +END;
MPRINT(EM_DIAGRAM):   END;
2254837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254838   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2254839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254840   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2254841   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2254842   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2254843   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2254844   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2254845   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2254846   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2254847   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2254848   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2254849   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2254850   +          +     -1.1174504455343 * S_NumDealsPurchases
2254851   +          +    -0.18561253113498 * S_NumDistPurchases
2254852   +          +    -0.35231054612792 * S_NumStorePurchases
2254853   +          +      0.9249490354172 * S_NumWebPurchases
2254854   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2254855   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2254856   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2254857   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 * 
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 * 
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts + 
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 * 
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines + 
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases + 
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases + 
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases + 
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 * 
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2254858   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2254859   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2254860   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2254861   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2254862   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2254863   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2254864   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2254865   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2254866   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2254867   +          +     1.05434863590054 * S_NumDealsPurchases
2254868   +          +    -0.73255174632068 * S_NumDistPurchases
2254869   +          +     0.53949953455044 * S_NumStorePurchases
2254870   +          +    -0.61709467816649 * S_NumWebPurchases
2254871   +          +     1.36235282484348 * S_NumWebVisitsMonth
2254872   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2254873   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2254874   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 * 
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome 
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 * 
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts + 
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 * 
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 * 
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 * 
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 * 
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq + 
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2254875   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2254876   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2254877   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2254878   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2254879   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 * 
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 + 
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 * 
HigherEducationBinary0 ;
2254880   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2254881   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2254882   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2254883   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2254884   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833 
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 + 
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 * 
HigherEducationBinary0 ;
2254885   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2254886   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2254887   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2254888   +          +     0.22253248036322 * Marital_StatusDivorced
2254889   +          +    -1.72455332745001 * Marital_StatusMarried
2254890   +          +     0.57787272107232 * Marital_StatusSingle
2254891   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle + 
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation + 
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced + 
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle + 
0.16267074825086 * Marital_StatusTogether ;
2254892   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2254893   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2254894   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2254895   +          +     0.14637124403046 * Marital_StatusDivorced
2254896   +          +     0.18905186437528 * Marital_StatusMarried
2254897   +          +     0.00511958458521 * Marital_StatusSingle
2254898   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle + 
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation + 
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced + 
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle + 
-0.915980703129 * Marital_StatusTogether ;
2254899   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2254900   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2254901   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2254902   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2254903   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2254904   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2254905   +END;
MPRINT(EM_DIAGRAM):   END;
2254906   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2254907   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2254908   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2254909   +END;
MPRINT(EM_DIAGRAM):   END;
2254910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254911   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2254912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254913   +
2254914   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2254915   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2254916   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2254917   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2254918   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2254919   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2254920   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2254921   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2254922   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2254923   +end;
MPRINT(EM_DIAGRAM):   end;
2254924   +else do;
MPRINT(EM_DIAGRAM):   else do;
2254925   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2254926   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2254927   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2254928   +   end;
MPRINT(EM_DIAGRAM):   end;
2254929   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2254930   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2254931   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2254932   +   end;
MPRINT(EM_DIAGRAM):   end;
2254933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2254934   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2254935   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2254936   +   end;
MPRINT(EM_DIAGRAM):   end;
2254937   +end;
MPRINT(EM_DIAGRAM):   end;
2254938   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2254939   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2254940   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2254941   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2254942   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 * 
H1x2_2 ;
2254943   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2254944   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 * 
H1x3_2 ;
2254945   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2254946   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2254947   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2254948   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2254949   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2254950   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2254951   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2254952   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2254953   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2254954   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2254955   +END;
MPRINT(EM_DIAGRAM):   END;
2254956   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2254957   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2254958   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2254959   +END;
MPRINT(EM_DIAGRAM):   END;
2254960   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2254961   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2254962   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2254963   +END;
MPRINT(EM_DIAGRAM):   END;
2254964   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2254965   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2254966   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2254967   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2254968   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2254969   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2254970   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2254971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254972   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2254973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2254974   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2254975   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2254976   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2254977   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2254978   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2254979   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2254980   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2254981   +END;
MPRINT(EM_DIAGRAM):   END;
2254982   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2254983   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2254984   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2254985   +drop
2254986   +H1x1_1
2254987   +H1x1_2
2254988   +H1x2_1
2254989   +H1x2_2
2254990   +H1x3_1
2254991   +H1x3_2
2254992   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2254993   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2254994   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2254995   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2254996   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2254997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2254998   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2254999   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2255000   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2255001   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2255002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2255003   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2255004   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2255005   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2255006   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2255007   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2255008   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2255009   +* Ensmbl36: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 3 of 7;
2255010   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2255011   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2255012   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2255013   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2255014   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
2255015   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2255016   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2255017   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2255018   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2255019   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2255020   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2255021   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2255022   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2255023   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2255024   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2255025   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2255026   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2255027   +LENGTH _WARN_ $4
2255028   +      F_DepVar  $ 12
2255029   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2255030   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2255031   +
2255032   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2255033   +
2255034   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2255035   +
2255036   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2255037   +
2255038   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2255039   +
2255040   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2255041   +
2255042   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2255043   +
2255044   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2255045   +
2255046   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2255047   +
2255048   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2255049   +
2255050   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2255051   +
2255052   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2255053   +
2255054   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2255055   +
2255056   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2255057   +
2255058   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2255059   +
2255060   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2255061   +
2255062   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2255063   +
2255064   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2255065   +
2255066   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2255067   +
2255068   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2255069   +
2255070   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2255071   +
2255072   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2255073   +
2255074   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2255075   +
2255076   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2255077   +
2255078   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2255079   +
2255080   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2255081   +
2255082   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2255083   +
2255084   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2255085   +
2255086   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2255087   +
2255088   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2255089   +
2255090   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2255091   +
2255092   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2255093   +
2255094   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2255095   +
2255096   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2255097   +
2255098   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2255099   +
2255100   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2255101   +
2255102   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2255103   +
2255104   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2255105   +
2255106   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2255107   +
2255108   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2255109   +
2255110   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2255111   +
2255112   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2255113   +
2255114   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2255115   +
2255116   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2255117   +
2255118   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2255119   +
2255120   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2255121   +
2255122   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2255123   +
2255124   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2255125   +
2255126   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2255127   +
2255128   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2255129   +
2255130   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2255131   +
2255132   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2255133   +
2255134   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2255135   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2255136   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2255137   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2255138   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2255139   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255140   +end;
MPRINT(EM_DIAGRAM):   end;
2255141   +else do;
MPRINT(EM_DIAGRAM):   else do;
2255142   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2255143   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2255144   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2255145   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2255146   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2255147   +   end;
MPRINT(EM_DIAGRAM):   end;
2255148   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2255149   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2255150   +   end;
MPRINT(EM_DIAGRAM):   end;
2255151   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2255152   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2255153   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2255154   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255155   +   end;
MPRINT(EM_DIAGRAM):   end;
2255156   +end;
MPRINT(EM_DIAGRAM):   end;
2255157   +
2255158   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2255159   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2255160   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2255161   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2255162   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2255163   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255164   +end;
MPRINT(EM_DIAGRAM):   end;
2255165   +else do;
MPRINT(EM_DIAGRAM):   else do;
2255166   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2255167   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2255168   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2255169   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2255170   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2255171   +   end;
MPRINT(EM_DIAGRAM):   end;
2255172   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2255173   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2255174   +   end;
MPRINT(EM_DIAGRAM):   end;
2255175   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2255176   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2255177   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2255178   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255179   +   end;
MPRINT(EM_DIAGRAM):   end;
2255180   +end;
MPRINT(EM_DIAGRAM):   end;
2255181   +
2255182   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2255183   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2255184   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2255185   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2255186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2255187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255188   +end;
MPRINT(EM_DIAGRAM):   end;
2255189   +else do;
MPRINT(EM_DIAGRAM):   else do;
2255190   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2255191   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2255192   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2255193   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2255194   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2255195   +   end;
MPRINT(EM_DIAGRAM):   end;
2255196   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2255197   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2255198   +   end;
MPRINT(EM_DIAGRAM):   end;
2255199   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2255200   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2255201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2255202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255203   +   end;
MPRINT(EM_DIAGRAM):   end;
2255204   +end;
MPRINT(EM_DIAGRAM):   end;
2255205   +
2255206   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2255207   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2255208   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2255209   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2255210   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2255211   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255212   +end;
MPRINT(EM_DIAGRAM):   end;
2255213   +else do;
MPRINT(EM_DIAGRAM):   else do;
2255214   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2255215   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2255216   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2255217   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2255218   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2255219   +   end;
MPRINT(EM_DIAGRAM):   end;
2255220   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2255221   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2255222   +   end;
MPRINT(EM_DIAGRAM):   end;
2255223   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2255224   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2255225   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2255226   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255227   +   end;
MPRINT(EM_DIAGRAM):   end;
2255228   +end;
MPRINT(EM_DIAGRAM):   end;
2255229   +
2255230   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2255231   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2255232   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2255233   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2255234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2255235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255236   +end;
MPRINT(EM_DIAGRAM):   end;
2255237   +else do;
MPRINT(EM_DIAGRAM):   else do;
2255238   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2255239   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2255240   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2255241   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2255242   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2255243   +   end;
MPRINT(EM_DIAGRAM):   end;
2255244   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2255245   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2255246   +   end;
MPRINT(EM_DIAGRAM):   end;
2255247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2255248   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2255249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2255250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255251   +   end;
MPRINT(EM_DIAGRAM):   end;
2255252   +end;
MPRINT(EM_DIAGRAM):   end;
2255253   +
2255254   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2255255   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2255256   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2255257   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2255258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2255259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255260   +end;
MPRINT(EM_DIAGRAM):   end;
2255261   +else do;
MPRINT(EM_DIAGRAM):   else do;
2255262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2255263   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2255264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2255265   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2255266   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2255267   +   end;
MPRINT(EM_DIAGRAM):   end;
2255268   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2255269   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2255270   +   end;
MPRINT(EM_DIAGRAM):   end;
2255271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2255272   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2255273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2255274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255275   +   end;
MPRINT(EM_DIAGRAM):   end;
2255276   +end;
MPRINT(EM_DIAGRAM):   end;
2255277   +
2255278   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2255279   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2255280   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2255281   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2255282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2255283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255284   +end;
MPRINT(EM_DIAGRAM):   end;
2255285   +else do;
MPRINT(EM_DIAGRAM):   else do;
2255286   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2255287   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2255288   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2255289   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2255290   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2255291   +   end;
MPRINT(EM_DIAGRAM):   end;
2255292   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2255293   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2255294   +   end;
MPRINT(EM_DIAGRAM):   end;
2255295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2255296   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2255297   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2255298   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255299   +   end;
MPRINT(EM_DIAGRAM):   end;
2255300   +end;
MPRINT(EM_DIAGRAM):   end;
2255301   +
2255302   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2255303   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2255304   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2255305   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2255306   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2255307   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2255308   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2255309   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2255310   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2255311   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2255312   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2255313   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2255314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2255315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255316   +end;
MPRINT(EM_DIAGRAM):   end;
2255317   +else do;
MPRINT(EM_DIAGRAM):   else do;
2255318   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2255319   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2255320   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2255321   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2255322   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2255323   +   end;
MPRINT(EM_DIAGRAM):   end;
2255324   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2255325   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2255326   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2255327   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2255328   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2255329   +   end;
MPRINT(EM_DIAGRAM):   end;
2255330   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2255331   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2255332   +   end;
MPRINT(EM_DIAGRAM):   end;
2255333   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2255334   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2255335   +   end;
MPRINT(EM_DIAGRAM):   end;
2255336   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2255337   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2255338   +   end;
MPRINT(EM_DIAGRAM):   end;
2255339   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2255340   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2255341   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2255342   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2255343   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2255344   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2255345   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255346   +   end;
MPRINT(EM_DIAGRAM):   end;
2255347   +end;
MPRINT(EM_DIAGRAM):   end;
2255348   +
2255349   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2255350   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2255351   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2255352   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2255353   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2255354   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2255355   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2255356   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2255357   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2255358   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2255359   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2255360   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2255361   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2255362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2255363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255364   +end;
MPRINT(EM_DIAGRAM):   end;
2255365   +else do;
MPRINT(EM_DIAGRAM):   else do;
2255366   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2255367   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2255368   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2255369   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2255370   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2255371   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2255372   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2255373   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2255374   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2255375   +         end;
MPRINT(EM_DIAGRAM):   end;
2255376   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2255377   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2255378   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2255379   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2255380   +            end;
MPRINT(EM_DIAGRAM):   end;
2255381   +         end;
MPRINT(EM_DIAGRAM):   end;
2255382   +      end;
MPRINT(EM_DIAGRAM):   end;
2255383   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2255384   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2255385   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2255386   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2255387   +         end;
MPRINT(EM_DIAGRAM):   end;
2255388   +      end;
MPRINT(EM_DIAGRAM):   end;
2255389   +   end;
MPRINT(EM_DIAGRAM):   end;
2255390   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2255391   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2255392   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2255393   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2255394   +      end;
MPRINT(EM_DIAGRAM):   end;
2255395   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2255396   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2255397   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2255398   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2255399   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2255400   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2255401   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2255402   +         end;
MPRINT(EM_DIAGRAM):   end;
2255403   +      end;
MPRINT(EM_DIAGRAM):   end;
2255404   +   end;
MPRINT(EM_DIAGRAM):   end;
2255405   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2255406   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2255407   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2255408   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2255409   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2255410   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2255411   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255412   +   end;
MPRINT(EM_DIAGRAM):   end;
2255413   +end;
MPRINT(EM_DIAGRAM):   end;
2255414   +
2255415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255416   +*** Checking missing input Interval
2255417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2255418   +
2255419   +IF NMISS(
2255420   +   AcceptedCmpTotal ,
2255421   +   Age ,
2255422   +   Frq ,
2255423   +   Income ,
2255424   +   Kidhome ,
2255425   +   Mnt ,
2255426   +   MntFishProducts ,
2255427   +   MntFruits ,
2255428   +   MntGoldProds ,
2255429   +   MntMeatProducts ,
2255430   +   MntSweetProducts ,
2255431   +   MntWines ,
2255432   +   MonthsAsCustomer ,
2255433   +   NumCatalogPurchases ,
2255434   +   NumDealsPurchases ,
2255435   +   NumDistPurchases ,
2255436   +   NumStorePurchases ,
2255437   +   NumWebPurchases ,
2255438   +   NumWebVisitsMonth ,
2255439   +   RFMstat ,
2255440   +   RMntFrq ,
2255441   +   Recency ,
2255442   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2255443   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2255444   +
2255445   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2255446   +END;
MPRINT(EM_DIAGRAM):   END;
2255447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255448   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2255449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255450   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2255451   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2255452   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2255453   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2255454   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2255455   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2255456   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2255457   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2255458   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2255459   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2255460   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2255461   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2255462   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2255463   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2255464   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2255465   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2255466   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2255467   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2255468   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2255469   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2255470   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2255471   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2255472   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2255473   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2255474   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2255475   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2255476   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2255477   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2255478   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2255479   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2255480   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2255481   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2255482   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2255483   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2255484   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2255485   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2255486   +END;
MPRINT(EM_DIAGRAM):   END;
2255487   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2255488   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2255489   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2255490   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2255491   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2255492   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2255493   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2255494   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2255495   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2255496   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2255497   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2255498   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2255499   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2255500   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2255501   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2255502   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2255503   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2255504   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2255505   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2255506   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2255507   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2255508   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2255509   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2255510   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2255511   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2255512   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2255513   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2255514   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2255515   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2255516   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2255517   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2255518   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2255519   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2255520   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2255521   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2255522   +   ELSE S_NumCatalogPurchases
2255523   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2255524   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2255525   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2255526   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2255527   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2255528   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2255529   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2255530   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2255531   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2255532   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2255533   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2255534   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2255535   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2255536   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2255537   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2255538   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2255539   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2255540   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2255541   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2255542   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2255543   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2255544   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2255545   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2255546   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2255547   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2255548   +END;
MPRINT(EM_DIAGRAM):   END;
2255549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255550   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2255551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255553   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2255554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255556   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2255557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255558   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2255559   +   H1x1_1  =      1.2726802048269 * S_AcceptedCmpTotal
2255560   +          +    -0.02889982967357 * S_Age  +    -0.26165770909003 * S_Frq
2255561   +          +     0.19140564299867 * S_Income  +     0.30244335152969 *
2255562   +        S_Kidhome  +    -0.03391217967468 * S_Mnt  +    -0.99943007809307 *
2255563   +        S_MntFishProducts  +    -0.04374917285968 * S_MntFruits
2255564   +          +    -0.13546758294455 * S_MntGoldProds  +     3.59922243619013 *
2255565   +        S_MntMeatProducts  +    -0.10424531322566 * S_MntSweetProducts
2255566   +          +    -1.98884071414703 * S_MntWines  +     0.05310540691138 *
2255567   +        S_MonthsAsCustomer  +     0.58072892654416 * S_NumCatalogPurchases
2255568   +          +     0.30381426454211 * S_NumDealsPurchases
2255569   +          +     0.39966076372974 * S_NumDistPurchases
2255570   +          +    -0.58875986801139 * S_NumStorePurchases
2255571   +          +    -0.78850031558536 * S_NumWebPurchases
2255572   +          +     0.35182997415921 * S_NumWebVisitsMonth
2255573   +          +     1.51048129701176 * S_RFMstat  +     1.13354085492775 *
2255574   +        S_RMntFrq  +     -0.2185811652116 * S_Recency
2255575   +          +     0.01153374704027 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.2726802048269 * S_AcceptedCmpTotal + -0.02889982967357 * 
S_Age + -0.26165770909003 * S_Frq + 0.19140564299867 * S_Income + 0.30244335152969 * S_Kidhome 
+ -0.03391217967468 * S_Mnt + -0.99943007809307 * S_MntFishProducts + -0.04374917285968 * 
S_MntFruits + -0.13546758294455 * S_MntGoldProds + 3.59922243619013 * S_MntMeatProducts + 
-0.10424531322566 * S_MntSweetProducts + -1.98884071414703 * S_MntWines + 0.05310540691138 * 
S_MonthsAsCustomer + 0.58072892654416 * S_NumCatalogPurchases + 0.30381426454211 * 
S_NumDealsPurchases + 0.39966076372974 * S_NumDistPurchases + -0.58875986801139 * 
S_NumStorePurchases + -0.78850031558536 * S_NumWebPurchases + 0.35182997415921 * 
S_NumWebVisitsMonth + 1.51048129701176 * S_RFMstat + 1.13354085492775 * S_RMntFrq + 
-0.2185811652116 * S_Recency + 0.01153374704027 * S_Teenhome ;
2255576   +   H1x1_2  =     0.18093166280015 * S_AcceptedCmpTotal
2255577   +          +    -0.00677564787839 * S_Age  +    -0.21510325598577 * S_Frq
2255578   +          +     0.26314356814214 * S_Income  +    -0.30016454601651 *
2255579   +        S_Kidhome  +     -0.1410547608427 * S_Mnt  +    -0.04272369939478 *
2255580   +        S_MntFishProducts  +    -0.05622578678457 * S_MntFruits
2255581   +          +     0.04457230545618 * S_MntGoldProds  +     0.40709024692944 *
2255582   +        S_MntMeatProducts  +    -0.02989090770621 * S_MntSweetProducts
2255583   +          +    -0.18818656503765 * S_MntWines  +    -0.06237311646922 *
2255584   +        S_MonthsAsCustomer  +     0.39737856936198 * S_NumCatalogPurchases
2255585   +          +     0.33734772994048 * S_NumDealsPurchases
2255586   +          +     0.06152222921422 * S_NumDistPurchases
2255587   +          +    -0.32068333792942 * S_NumStorePurchases
2255588   +          +    -0.26971366415104 * S_NumWebPurchases
2255589   +          +     0.57693239481071 * S_NumWebVisitsMonth
2255590   +          +     0.01161324864777 * S_RFMstat  +     0.00311083015445 *
2255591   +        S_RMntFrq  +    -0.67669007299893 * S_Recency
2255592   +          +     -0.2298426154616 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18093166280015 * S_AcceptedCmpTotal + -0.00677564787839 * 
S_Age + -0.21510325598577 * S_Frq + 0.26314356814214 * S_Income + -0.30016454601651 * 
S_Kidhome + -0.1410547608427 * S_Mnt + -0.04272369939478 * S_MntFishProducts + 
-0.05622578678457 * S_MntFruits + 0.04457230545618 * S_MntGoldProds + 0.40709024692944 * 
S_MntMeatProducts + -0.02989090770621 * S_MntSweetProducts + -0.18818656503765 * S_MntWines + 
-0.06237311646922 * S_MonthsAsCustomer + 0.39737856936198 * S_NumCatalogPurchases + 
0.33734772994048 * S_NumDealsPurchases + 0.06152222921422 * S_NumDistPurchases + 
-0.32068333792942 * S_NumStorePurchases + -0.26971366415104 * S_NumWebPurchases + 
0.57693239481071 * S_NumWebVisitsMonth + 0.01161324864777 * S_RFMstat + 0.00311083015445 * 
S_RMntFrq + -0.67669007299893 * S_Recency + -0.2298426154616 * S_Teenhome ;
2255593   +   H1x1_3  =    -0.09356212420726 * S_AcceptedCmpTotal
2255594   +          +    -0.01904617704654 * S_Age  +    -0.15700206132472 * S_Frq
2255595   +          +    -0.58483226627076 * S_Income  +     0.30001673574917 *
2255596   +        S_Kidhome  +    -0.19921492301896 * S_Mnt  +    -0.00125986769238 *
2255597   +        S_MntFishProducts  +     0.10195959942937 * S_MntFruits
2255598   +          +      0.0069592628978 * S_MntGoldProds  +     0.03606436199308 *
2255599   +        S_MntMeatProducts  +     0.11259135359155 * S_MntSweetProducts
2255600   +          +     0.05408818612126 * S_MntWines  +    -0.14024859528104 *
2255601   +        S_MonthsAsCustomer  +    -0.14071929240584 * S_NumCatalogPurchases
2255602   +          +     0.22142792900578 * S_NumDealsPurchases
2255603   +          +     -0.0291983445755 * S_NumDistPurchases
2255604   +          +     -0.1997372957954 * S_NumStorePurchases
2255605   +          +    -0.01286201468794 * S_NumWebPurchases
2255606   +          +    -0.35208468552742 * S_NumWebVisitsMonth
2255607   +          +     0.02982651364231 * S_RFMstat  +      0.0228316921695 *
2255608   +        S_RMntFrq  +      0.3930877517629 * S_Recency
2255609   +          +     0.28989829670594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.09356212420726 * S_AcceptedCmpTotal + -0.01904617704654 * 
S_Age + -0.15700206132472 * S_Frq + -0.58483226627076 * S_Income + 0.30001673574917 * 
S_Kidhome + -0.19921492301896 * S_Mnt + -0.00125986769238 * S_MntFishProducts + 
0.10195959942937 * S_MntFruits + 0.0069592628978 * S_MntGoldProds + 0.03606436199308 * 
S_MntMeatProducts + 0.11259135359155 * S_MntSweetProducts + 0.05408818612126 * S_MntWines + 
-0.14024859528104 * S_MonthsAsCustomer + -0.14071929240584 * S_NumCatalogPurchases + 
0.22142792900578 * S_NumDealsPurchases + -0.0291983445755 * S_NumDistPurchases + 
-0.1997372957954 * S_NumStorePurchases + -0.01286201468794 * S_NumWebPurchases + 
-0.35208468552742 * S_NumWebVisitsMonth + 0.02982651364231 * S_RFMstat + 0.0228316921695 * 
S_RMntFrq + 0.3930877517629 * S_Recency + 0.28989829670594 * S_Teenhome ;
2255610   +   H1x1_1  = H1x1_1  +     0.03659432989123 * AcceptedCmp10
2255611   +          +    -0.12552546530316 * AcceptedCmp20  +     0.57200428680255 *
2255612   +        AcceptedCmp30  +      0.4327465126256 * AcceptedCmp40
2255613   +          +    -1.24484170256212 * AcceptedCmp50  +     0.21604379838869 *
2255614   +        Complain0  +    -0.14986629245585 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.03659432989123 * AcceptedCmp10 + -0.12552546530316 * 
AcceptedCmp20 + 0.57200428680255 * AcceptedCmp30 + 0.4327465126256 * AcceptedCmp40 + 
-1.24484170256212 * AcceptedCmp50 + 0.21604379838869 * Complain0 + -0.14986629245585 * 
HigherEducationBinary0 ;
2255615   +   H1x1_2  = H1x1_2  +    -0.13542589174402 * AcceptedCmp10
2255616   +          +    -0.19116289400292 * AcceptedCmp20  +    -0.10302282473135 *
2255617   +        AcceptedCmp30  +    -0.08705955845916 * AcceptedCmp40
2255618   +          +    -0.17435407626698 * AcceptedCmp50  +    -0.09781790399225 *
2255619   +        Complain0  +     0.02006296587353 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13542589174402 * AcceptedCmp10 + -0.19116289400292 
* AcceptedCmp20 + -0.10302282473135 * AcceptedCmp30 + -0.08705955845916 * AcceptedCmp40 + 
-0.17435407626698 * AcceptedCmp50 + -0.09781790399225 * Complain0 + 0.02006296587353 * 
HigherEducationBinary0 ;
2255620   +   H1x1_3  = H1x1_3  +     0.08917557424765 * AcceptedCmp10
2255621   +          +    -0.00944366858806 * AcceptedCmp20  +     0.30527409248576 *
2255622   +        AcceptedCmp30  +     0.26823019920335 * AcceptedCmp40
2255623   +          +    -0.02131660897576 * AcceptedCmp50  +    -0.16243659451446 *
2255624   +        Complain0  +    -0.28227689084686 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.08917557424765 * AcceptedCmp10 + -0.00944366858806 * 
AcceptedCmp20 + 0.30527409248576 * AcceptedCmp30 + 0.26823019920335 * AcceptedCmp40 + 
-0.02131660897576 * AcceptedCmp50 + -0.16243659451446 * Complain0 + -0.28227689084686 * 
HigherEducationBinary0 ;
2255625   +   H1x1_1  = H1x1_1  +     0.12998959528304 * Education2n_Cycle
2255626   +          +     0.48334684246109 * EducationBasic  +    -0.07156918649895 *
2255627   +        EducationGraduation  +    -0.21017720550072 * EducationMaster
2255628   +          +    -0.22358326722482 * Marital_StatusDivorced
2255629   +          +     0.09394210085787 * Marital_StatusMarried
2255630   +          +    -0.10381546554982 * Marital_StatusSingle
2255631   +          +     0.05935260608375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12998959528304 * Education2n_Cycle + 
0.48334684246109 * EducationBasic + -0.07156918649895 * EducationGraduation + 
-0.21017720550072 * EducationMaster + -0.22358326722482 * Marital_StatusDivorced + 
0.09394210085787 * Marital_StatusMarried + -0.10381546554982 * Marital_StatusSingle + 
0.05935260608375 * Marital_StatusTogether ;
2255632   +   H1x1_2  = H1x1_2  +     0.02955854298839 * Education2n_Cycle
2255633   +          +    -0.13472200519398 * EducationBasic  +     0.01930622297518 *
2255634   +        EducationGraduation  +    -0.00188262361226 * EducationMaster
2255635   +          +     0.16606212232833 * Marital_StatusDivorced
2255636   +          +    -0.33252488631677 * Marital_StatusMarried
2255637   +          +     0.26735237322144 * Marital_StatusSingle
2255638   +          +    -0.37056611493683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.02955854298839 * Education2n_Cycle + 
-0.13472200519398 * EducationBasic + 0.01930622297518 * EducationGraduation + 
-0.00188262361226 * EducationMaster + 0.16606212232833 * Marital_StatusDivorced + 
-0.33252488631677 * Marital_StatusMarried + 0.26735237322144 * Marital_StatusSingle + 
-0.37056611493683 * Marital_StatusTogether ;
2255639   +   H1x1_3  = H1x1_3  +     0.29085314695378 * Education2n_Cycle
2255640   +          +     -0.2177077392676 * EducationBasic  +    -0.12975750226767 *
2255641   +        EducationGraduation  +     0.12920694427876 * EducationMaster
2255642   +          +    -0.30275479651076 * Marital_StatusDivorced
2255643   +          +     0.50273719874035 * Marital_StatusMarried
2255644   +          +    -0.39588303956293 * Marital_StatusSingle
2255645   +          +     0.42028863850572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29085314695378 * Education2n_Cycle + 
-0.2177077392676 * EducationBasic + -0.12975750226767 * EducationGraduation + 0.12920694427876 
* EducationMaster + -0.30275479651076 * Marital_StatusDivorced + 0.50273719874035 * 
Marital_StatusMarried + -0.39588303956293 * Marital_StatusSingle + 0.42028863850572 * 
Marital_StatusTogether ;
2255646   +   H1x1_1  =     1.91295924572895 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.91295924572895 + H1x1_1 ;
2255647   +   H1x1_2  =    -1.21245226681055 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.21245226681055 + H1x1_2 ;
2255648   +   H1x1_3  =    -0.01609140135594 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.01609140135594 + H1x1_3 ;
2255649   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2255650   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2255651   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2255652   +   H1x1_2  = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
2255653   +   H1x1_3  = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
2255654   +END;
MPRINT(EM_DIAGRAM):   END;
2255655   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2255656   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2255657   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2255658   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2255659   +END;
MPRINT(EM_DIAGRAM):   END;
2255660   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255661   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2255662   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255663   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2255664   +   H1x2_1  =     0.73632716677259 * S_AcceptedCmpTotal
2255665   +          +     -1.3452480925823 * S_Age  +    -0.77564767519981 * S_Frq
2255666   +          +    -0.06163854052357 * S_Income  +     1.82428003860444 *
2255667   +        S_Kidhome  +       0.661412748756 * S_Mnt  +      1.8826488743919 *
2255668   +        S_MntFishProducts  +    -0.21815276926728 * S_MntFruits
2255669   +          +     1.06597641654862 * S_MntGoldProds  +     0.13887400045643 *
2255670   +        S_MntMeatProducts  +    -0.62827157985225 * S_MntSweetProducts
2255671   +          +     1.70742231056065 * S_MntWines  +     0.52403167020638 *
2255672   +        S_MonthsAsCustomer  +    -2.99889150929209 * S_NumCatalogPurchases
2255673   +          +    -2.59470529821377 * S_NumDealsPurchases
2255674   +          +      0.7668756449818 * S_NumDistPurchases
2255675   +          +     0.61064641547208 * S_NumStorePurchases
2255676   +          +    -0.87106335660846 * S_NumWebPurchases
2255677   +          +      0.1188879348197 * S_NumWebVisitsMonth
2255678   +          +     0.89319669432194 * S_RFMstat  +       -0.45272285967 *
2255679   +        S_RMntFrq  +     -0.7210740986075 * S_Recency
2255680   +          +      0.7032117485114 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73632716677259 * S_AcceptedCmpTotal + -1.3452480925823 * 
S_Age + -0.77564767519981 * S_Frq + -0.06163854052357 * S_Income + 1.82428003860444 * 
S_Kidhome + 0.661412748756 * S_Mnt + 1.8826488743919 * S_MntFishProducts + -0.21815276926728 * 
S_MntFruits + 1.06597641654862 * S_MntGoldProds + 0.13887400045643 * S_MntMeatProducts + 
-0.62827157985225 * S_MntSweetProducts + 1.70742231056065 * S_MntWines + 0.52403167020638 * 
S_MonthsAsCustomer + -2.99889150929209 * S_NumCatalogPurchases + -2.59470529821377 * 
S_NumDealsPurchases + 0.7668756449818 * S_NumDistPurchases + 0.61064641547208 * 
S_NumStorePurchases + -0.87106335660846 * S_NumWebPurchases + 0.1188879348197 * 
S_NumWebVisitsMonth + 0.89319669432194 * S_RFMstat + -0.45272285967 * S_RMntFrq + 
-0.7210740986075 * S_Recency + 0.7032117485114 * S_Teenhome ;
2255681   +   H1x2_2  =      0.5405970783297 * S_AcceptedCmpTotal
2255682   +          +     0.34103648596436 * S_Age  +    -1.00413619660059 * S_Frq
2255683   +          +     0.40958797602392 * S_Income  +    -0.94731216445533 *
2255684   +        S_Kidhome  +    -0.17755265939769 * S_Mnt  +    -0.88926202859892 *
2255685   +        S_MntFishProducts  +      0.6791087530674 * S_MntFruits
2255686   +          +     1.10836805118307 * S_MntGoldProds  +    -0.29462180872033 *
2255687   +        S_MntMeatProducts  +     2.21935054370304 * S_MntSweetProducts
2255688   +          +     1.41379847080743 * S_MntWines  +    -0.66077297246309 *
2255689   +        S_MonthsAsCustomer  +     0.91491641336561 * S_NumCatalogPurchases
2255690   +          +    -0.41834528691349 * S_NumDealsPurchases
2255691   +          +    -0.07802605490227 * S_NumDistPurchases
2255692   +          +    -0.62261476153139 * S_NumStorePurchases
2255693   +          +    -0.84011953180231 * S_NumWebPurchases
2255694   +          +     0.95169092183885 * S_NumWebVisitsMonth
2255695   +          +      0.4036735448902 * S_RFMstat  +     0.44620057959954 *
2255696   +        S_RMntFrq  +    -0.54980566705324 * S_Recency
2255697   +          +    -0.48914926560129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.5405970783297 * S_AcceptedCmpTotal + 0.34103648596436 * S_Age 
+ -1.00413619660059 * S_Frq + 0.40958797602392 * S_Income + -0.94731216445533 * S_Kidhome + 
-0.17755265939769 * S_Mnt + -0.88926202859892 * S_MntFishProducts + 0.6791087530674 * 
S_MntFruits + 1.10836805118307 * S_MntGoldProds + -0.29462180872033 * S_MntMeatProducts + 
2.21935054370304 * S_MntSweetProducts + 1.41379847080743 * S_MntWines + -0.66077297246309 * 
S_MonthsAsCustomer + 0.91491641336561 * S_NumCatalogPurchases + -0.41834528691349 * 
S_NumDealsPurchases + -0.07802605490227 * S_NumDistPurchases + -0.62261476153139 * 
S_NumStorePurchases + -0.84011953180231 * S_NumWebPurchases + 0.95169092183885 * 
S_NumWebVisitsMonth + 0.4036735448902 * S_RFMstat + 0.44620057959954 * S_RMntFrq + 
-0.54980566705324 * S_Recency + -0.48914926560129 * S_Teenhome ;
2255698   +   H1x2_3  =    -0.10056833202616 * S_AcceptedCmpTotal
2255699   +          +    -3.35021911955911 * S_Age  +    -0.47433508394475 * S_Frq
2255700   +          +      0.2642483252057 * S_Income  +     0.20666167536737 *
2255701   +        S_Kidhome  +    -1.63711887449192 * S_Mnt  +    -0.02078521278323 *
2255702   +        S_MntFishProducts  +    -0.13356020799092 * S_MntFruits
2255703   +          +     0.03199170913357 * S_MntGoldProds  +     0.35859745927921 *
2255704   +        S_MntMeatProducts  +     1.28933517907056 * S_MntSweetProducts
2255705   +          +    -0.45266889039243 * S_MntWines  +    -0.03980312418999 *
2255706   +        S_MonthsAsCustomer  +     0.11407065408619 * S_NumCatalogPurchases
2255707   +          +     1.50811278700924 * S_NumDealsPurchases
2255708   +          +    -0.40025710583484 * S_NumDistPurchases
2255709   +          +     0.16539197954198 * S_NumStorePurchases
2255710   +          +    -1.50803186935431 * S_NumWebPurchases
2255711   +          +    -0.35788712697704 * S_NumWebVisitsMonth
2255712   +          +    -2.06761773527847 * S_RFMstat  +    -0.00353259675109 *
2255713   +        S_RMntFrq  +      0.4364156603095 * S_Recency
2255714   +          +    -0.44689366494665 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.10056833202616 * S_AcceptedCmpTotal + -3.35021911955911 * 
S_Age + -0.47433508394475 * S_Frq + 0.2642483252057 * S_Income + 0.20666167536737 * S_Kidhome 
+ -1.63711887449192 * S_Mnt + -0.02078521278323 * S_MntFishProducts + -0.13356020799092 * 
S_MntFruits + 0.03199170913357 * S_MntGoldProds + 0.35859745927921 * S_MntMeatProducts + 
1.28933517907056 * S_MntSweetProducts + -0.45266889039243 * S_MntWines + -0.03980312418999 * 
S_MonthsAsCustomer + 0.11407065408619 * S_NumCatalogPurchases + 1.50811278700924 * 
S_NumDealsPurchases + -0.40025710583484 * S_NumDistPurchases + 0.16539197954198 * 
S_NumStorePurchases + -1.50803186935431 * S_NumWebPurchases + -0.35788712697704 * 
S_NumWebVisitsMonth + -2.06761773527847 * S_RFMstat + -0.00353259675109 * S_RMntFrq + 
0.4364156603095 * S_Recency + -0.44689366494665 * S_Teenhome ;
2255715   +   H1x2_1  = H1x2_1  +     1.19862785990255 * AcceptedCmp10
2255716   +          +    -0.56777088839338 * AcceptedCmp20  +    -0.20982687937883 *
2255717   +        AcceptedCmp30  +     0.23051157512105 * AcceptedCmp40
2255718   +          +    -1.16625535461103 * AcceptedCmp50  +    -0.03987377830172 *
2255719   +        Complain0  +    -1.17553145310278 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.19862785990255 * AcceptedCmp10 + -0.56777088839338 * 
AcceptedCmp20 + -0.20982687937883 * AcceptedCmp30 + 0.23051157512105 * AcceptedCmp40 + 
-1.16625535461103 * AcceptedCmp50 + -0.03987377830172 * Complain0 + -1.17553145310278 * 
HigherEducationBinary0 ;
2255720   +   H1x2_2  = H1x2_2  +    -1.37553391657098 * AcceptedCmp10
2255721   +          +    -0.49489986415129 * AcceptedCmp20  +     0.84075258232812 *
2255722   +        AcceptedCmp30  +     0.31883526052436 * AcceptedCmp40
2255723   +          +    -0.41245383847025 * AcceptedCmp50  +     0.75603245683628 *
2255724   +        Complain0  +    -2.07732119239317 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37553391657098 * AcceptedCmp10 + -0.49489986415129 
* AcceptedCmp20 + 0.84075258232812 * AcceptedCmp30 + 0.31883526052436 * AcceptedCmp40 + 
-0.41245383847025 * AcceptedCmp50 + 0.75603245683628 * Complain0 + -2.07732119239317 * 
HigherEducationBinary0 ;
2255725   +   H1x2_3  = H1x2_3  +     0.94876862525586 * AcceptedCmp10
2255726   +          +     0.79245605062261 * AcceptedCmp20  +     1.18614024465163 *
2255727   +        AcceptedCmp30  +    -0.24348380736895 * AcceptedCmp40
2255728   +          +     0.63374252730038 * AcceptedCmp50  +     0.36777527794452 *
2255729   +        Complain0  +    -0.07746344015306 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.94876862525586 * AcceptedCmp10 + 0.79245605062261 * 
AcceptedCmp20 + 1.18614024465163 * AcceptedCmp30 + -0.24348380736895 * AcceptedCmp40 + 
0.63374252730038 * AcceptedCmp50 + 0.36777527794452 * Complain0 + -0.07746344015306 * 
HigherEducationBinary0 ;
2255730   +   H1x2_1  = H1x2_1  +     1.73012058377195 * Education2n_Cycle
2255731   +          +     2.12295803973544 * EducationBasic  +     0.36945596974292 *
2255732   +        EducationGraduation  +    -1.22675967760612 * EducationMaster
2255733   +          +    -0.48199299977856 * Marital_StatusDivorced
2255734   +          +    -1.61546983135535 * Marital_StatusMarried
2255735   +          +     1.25890289649165 * Marital_StatusSingle
2255736   +          +    -0.35805098686637 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.73012058377195 * Education2n_Cycle + 
2.12295803973544 * EducationBasic + 0.36945596974292 * EducationGraduation + -1.22675967760612 
* EducationMaster + -0.48199299977856 * Marital_StatusDivorced + -1.61546983135535 * 
Marital_StatusMarried + 1.25890289649165 * Marital_StatusSingle + -0.35805098686637 * 
Marital_StatusTogether ;
2255737   +   H1x2_2  = H1x2_2  +    -1.04319773106255 * Education2n_Cycle
2255738   +          +    -1.20017517243416 * EducationBasic  +    -0.21851017334559 *
2255739   +        EducationGraduation  +     0.54918303984069 * EducationMaster
2255740   +          +    -0.69719138781358 * Marital_StatusDivorced
2255741   +          +     0.26964883367384 * Marital_StatusMarried
2255742   +          +      0.4656663467381 * Marital_StatusSingle
2255743   +          +    -0.38324848670979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.04319773106255 * Education2n_Cycle + 
-1.20017517243416 * EducationBasic + -0.21851017334559 * EducationGraduation + 
0.54918303984069 * EducationMaster + -0.69719138781358 * Marital_StatusDivorced + 
0.26964883367384 * Marital_StatusMarried + 0.4656663467381 * Marital_StatusSingle + 
-0.38324848670979 * Marital_StatusTogether ;
2255744   +   H1x2_3  = H1x2_3  +     0.26572249637491 * Education2n_Cycle
2255745   +          +     1.36865822272368 * EducationBasic  +     0.26769702437041 *
2255746   +        EducationGraduation  +    -0.57748542336591 * EducationMaster
2255747   +          +     1.40407968804704 * Marital_StatusDivorced
2255748   +          +    -1.35468203106214 * Marital_StatusMarried
2255749   +          +      1.0644996414042 * Marital_StatusSingle
2255750   +          +    -0.68198832748724 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26572249637491 * Education2n_Cycle + 
1.36865822272368 * EducationBasic + 0.26769702437041 * EducationGraduation + -0.57748542336591 
* EducationMaster + 1.40407968804704 * Marital_StatusDivorced + -1.35468203106214 * 
Marital_StatusMarried + 1.0644996414042 * Marital_StatusSingle + -0.68198832748724 * 
Marital_StatusTogether ;
2255751   +   H1x2_1  =     1.72650566457008 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.72650566457008 + H1x2_1 ;
2255752   +   H1x2_2  =     -1.0113179577999 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.0113179577999 + H1x2_2 ;
2255753   +   H1x2_3  =     0.14003924400021 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.14003924400021 + H1x2_3 ;
2255754   +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
2255755   +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
2255756   +   H1x2_3  = SIN(H1x2_3 );
MPRINT(EM_DIAGRAM):   H1x2_3 = SIN(H1x2_3 );
2255757   +END;
MPRINT(EM_DIAGRAM):   END;
2255758   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2255759   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2255760   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2255761   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2255762   +END;
MPRINT(EM_DIAGRAM):   END;
2255763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255764   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2255765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255766   +
2255767   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2255768   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2255769   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2255770   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2255771   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2255772   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2255773   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2255774   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2255775   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2255776   +end;
MPRINT(EM_DIAGRAM):   end;
2255777   +else do;
MPRINT(EM_DIAGRAM):   else do;
2255778   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2255779   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2255780   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2255781   +   end;
MPRINT(EM_DIAGRAM):   end;
2255782   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2255783   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2255784   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2255785   +   end;
MPRINT(EM_DIAGRAM):   end;
2255786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2255787   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2255788   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2255789   +   end;
MPRINT(EM_DIAGRAM):   end;
2255790   +end;
MPRINT(EM_DIAGRAM):   end;
2255791   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2255792   +   P_DepVar1  =    -7.62079794803554 * H1x1_1  +     13.7007341613959 * H1x1_2
2255793   +          +    -6.77882452096978 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.62079794803554 * H1x1_1 + 13.7007341613959 * H1x1_2 + 
-6.77882452096978 * H1x1_3 ;
2255794   +   P_DepVar1  = P_DepVar1  +    -0.44850093089338 * H1x2_1
2255795   +          +    -1.24228597291063 * H1x2_2  +     1.00075465600952 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.44850093089338 * H1x2_1 + -1.24228597291063 * 
H1x2_2 + 1.00075465600952 * H1x2_3 ;
2255796   +   P_DepVar1  =    -2.26198805619545 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26198805619545 + P_DepVar1 ;
2255797   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2255798   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2255799   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2255800   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2255801   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2255802   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2255803   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2255804   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2255805   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2255806   +END;
MPRINT(EM_DIAGRAM):   END;
2255807   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2255808   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2255809   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2255810   +END;
MPRINT(EM_DIAGRAM):   END;
2255811   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2255812   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2255813   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2255814   +END;
MPRINT(EM_DIAGRAM):   END;
2255815   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2255816   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2255817   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2255818   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2255819   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2255820   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2255821   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2255822   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255823   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2255824   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2255825   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2255826   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2255827   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2255828   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2255829   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2255830   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2255831   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2255832   +END;
MPRINT(EM_DIAGRAM):   END;
2255833   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2255834   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2255835   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2255836   +drop
2255837   +H1x1_1
2255838   +H1x1_2
2255839   +H1x1_3
2255840   +H1x2_1
2255841   +H1x2_2
2255842   +H1x2_3
2255843   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x2_1 H1x2_2 H1x2_3 ;
2255844   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2255845   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
2255846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2255847   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
2255848   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2255849   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
2255850   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
2255851   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
2255852   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
2255853   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2255854   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
2255855   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2255856   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
2255857   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
2255858   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
2255859   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2255860   +* Ensmbl36: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 4 of 7;
2255861   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2255862   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2255863   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2255864   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2255865   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2255866   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2255867   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2255868   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2255869   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2255870   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2255871   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2255872   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2255873   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2255874   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2255875   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2255876   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2255877   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2255878   +LENGTH _WARN_ $4
2255879   +      F_DepVar  $ 12
2255880   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2255881   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2255882   +
2255883   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2255884   +
2255885   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2255886   +
2255887   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2255888   +
2255889   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2255890   +
2255891   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2255892   +
2255893   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2255894   +
2255895   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2255896   +
2255897   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2255898   +
2255899   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2255900   +
2255901   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2255902   +
2255903   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2255904   +
2255905   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2255906   +
2255907   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2255908   +
2255909   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2255910   +
2255911   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2255912   +
2255913   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2255914   +
2255915   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2255916   +
2255917   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2255918   +
2255919   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2255920   +
2255921   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2255922   +
2255923   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2255924   +
2255925   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2255926   +
2255927   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2255928   +
2255929   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2255930   +
2255931   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2255932   +
2255933   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2255934   +
2255935   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2255936   +
2255937   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2255938   +
2255939   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2255940   +
2255941   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2255942   +
2255943   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2255944   +
2255945   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2255946   +
2255947   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2255948   +
2255949   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2255950   +
2255951   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2255952   +
2255953   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2255954   +
2255955   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2255956   +
2255957   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2255958   +
2255959   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2255960   +
2255961   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2255962   +
2255963   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2255964   +
2255965   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2255966   +
2255967   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2255968   +
2255969   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2255970   +
2255971   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2255972   +
2255973   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2255974   +
2255975   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2255976   +
2255977   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2255978   +
2255979   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2255980   +
2255981   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2255982   +
2255983   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2255984   +
2255985   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2255986   +
2255987   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2255988   +
2255989   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2255990   +
2255991   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2255992   +
2255993   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2255994   +
2255995   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2255996   +
2255997   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2255998   +
2255999   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2256000   +
2256001   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2256002   +
2256003   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2256004   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2256005   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2256006   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2256007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2256008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256009   +end;
MPRINT(EM_DIAGRAM):   end;
2256010   +else do;
MPRINT(EM_DIAGRAM):   else do;
2256011   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2256012   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2256013   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2256014   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2256015   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2256016   +   end;
MPRINT(EM_DIAGRAM):   end;
2256017   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2256018   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2256019   +   end;
MPRINT(EM_DIAGRAM):   end;
2256020   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2256021   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2256022   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2256023   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256024   +   end;
MPRINT(EM_DIAGRAM):   end;
2256025   +end;
MPRINT(EM_DIAGRAM):   end;
2256026   +
2256027   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2256028   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2256029   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2256030   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2256031   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2256032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256033   +end;
MPRINT(EM_DIAGRAM):   end;
2256034   +else do;
MPRINT(EM_DIAGRAM):   else do;
2256035   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2256036   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2256037   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2256038   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2256039   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2256040   +   end;
MPRINT(EM_DIAGRAM):   end;
2256041   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2256042   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2256043   +   end;
MPRINT(EM_DIAGRAM):   end;
2256044   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2256045   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2256046   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2256047   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256048   +   end;
MPRINT(EM_DIAGRAM):   end;
2256049   +end;
MPRINT(EM_DIAGRAM):   end;
2256050   +
2256051   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2256052   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2256053   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2256054   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2256055   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2256056   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256057   +end;
MPRINT(EM_DIAGRAM):   end;
2256058   +else do;
MPRINT(EM_DIAGRAM):   else do;
2256059   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2256060   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2256061   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2256062   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2256063   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2256064   +   end;
MPRINT(EM_DIAGRAM):   end;
2256065   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2256066   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2256067   +   end;
MPRINT(EM_DIAGRAM):   end;
2256068   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2256069   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2256070   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2256071   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256072   +   end;
MPRINT(EM_DIAGRAM):   end;
2256073   +end;
MPRINT(EM_DIAGRAM):   end;
2256074   +
2256075   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2256076   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2256077   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2256078   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2256079   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2256080   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256081   +end;
MPRINT(EM_DIAGRAM):   end;
2256082   +else do;
MPRINT(EM_DIAGRAM):   else do;
2256083   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2256084   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2256085   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2256086   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2256087   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2256088   +   end;
MPRINT(EM_DIAGRAM):   end;
2256089   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2256090   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2256091   +   end;
MPRINT(EM_DIAGRAM):   end;
2256092   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2256093   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2256094   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2256095   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256096   +   end;
MPRINT(EM_DIAGRAM):   end;
2256097   +end;
MPRINT(EM_DIAGRAM):   end;
2256098   +
2256099   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2256100   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2256101   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2256102   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2256103   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2256104   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256105   +end;
MPRINT(EM_DIAGRAM):   end;
2256106   +else do;
MPRINT(EM_DIAGRAM):   else do;
2256107   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2256108   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2256109   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2256110   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2256111   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2256112   +   end;
MPRINT(EM_DIAGRAM):   end;
2256113   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2256114   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2256115   +   end;
MPRINT(EM_DIAGRAM):   end;
2256116   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2256117   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2256118   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2256119   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256120   +   end;
MPRINT(EM_DIAGRAM):   end;
2256121   +end;
MPRINT(EM_DIAGRAM):   end;
2256122   +
2256123   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2256124   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2256125   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2256126   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2256127   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2256128   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256129   +end;
MPRINT(EM_DIAGRAM):   end;
2256130   +else do;
MPRINT(EM_DIAGRAM):   else do;
2256131   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2256132   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2256133   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2256134   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2256135   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2256136   +   end;
MPRINT(EM_DIAGRAM):   end;
2256137   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2256138   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2256139   +   end;
MPRINT(EM_DIAGRAM):   end;
2256140   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2256141   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2256142   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2256143   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256144   +   end;
MPRINT(EM_DIAGRAM):   end;
2256145   +end;
MPRINT(EM_DIAGRAM):   end;
2256146   +
2256147   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2256148   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2256149   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2256150   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2256151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2256152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256153   +end;
MPRINT(EM_DIAGRAM):   end;
2256154   +else do;
MPRINT(EM_DIAGRAM):   else do;
2256155   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2256156   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2256157   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2256158   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2256159   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2256160   +   end;
MPRINT(EM_DIAGRAM):   end;
2256161   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2256162   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2256163   +   end;
MPRINT(EM_DIAGRAM):   end;
2256164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2256165   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2256166   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2256167   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256168   +   end;
MPRINT(EM_DIAGRAM):   end;
2256169   +end;
MPRINT(EM_DIAGRAM):   end;
2256170   +
2256171   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2256172   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2256173   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2256174   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2256175   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2256176   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2256177   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2256178   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2256179   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2256180   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2256181   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2256182   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2256183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2256184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256185   +end;
MPRINT(EM_DIAGRAM):   end;
2256186   +else do;
MPRINT(EM_DIAGRAM):   else do;
2256187   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2256188   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2256189   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2256190   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2256191   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2256192   +   end;
MPRINT(EM_DIAGRAM):   end;
2256193   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2256194   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2256195   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2256196   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2256197   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2256198   +   end;
MPRINT(EM_DIAGRAM):   end;
2256199   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2256200   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2256201   +   end;
MPRINT(EM_DIAGRAM):   end;
2256202   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2256203   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2256204   +   end;
MPRINT(EM_DIAGRAM):   end;
2256205   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2256206   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2256207   +   end;
MPRINT(EM_DIAGRAM):   end;
2256208   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2256209   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2256210   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2256211   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2256212   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2256213   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2256214   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256215   +   end;
MPRINT(EM_DIAGRAM):   end;
2256216   +end;
MPRINT(EM_DIAGRAM):   end;
2256217   +
2256218   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2256219   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2256220   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2256221   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2256222   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2256223   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2256224   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2256225   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2256226   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2256227   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2256228   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2256229   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2256230   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2256231   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2256232   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256233   +end;
MPRINT(EM_DIAGRAM):   end;
2256234   +else do;
MPRINT(EM_DIAGRAM):   else do;
2256235   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2256236   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2256237   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2256238   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2256239   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2256240   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2256241   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2256242   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2256243   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2256244   +         end;
MPRINT(EM_DIAGRAM):   end;
2256245   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2256246   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2256247   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2256248   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2256249   +            end;
MPRINT(EM_DIAGRAM):   end;
2256250   +         end;
MPRINT(EM_DIAGRAM):   end;
2256251   +      end;
MPRINT(EM_DIAGRAM):   end;
2256252   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2256253   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2256254   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2256255   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2256256   +         end;
MPRINT(EM_DIAGRAM):   end;
2256257   +      end;
MPRINT(EM_DIAGRAM):   end;
2256258   +   end;
MPRINT(EM_DIAGRAM):   end;
2256259   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2256260   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2256261   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2256262   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2256263   +      end;
MPRINT(EM_DIAGRAM):   end;
2256264   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2256265   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2256266   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2256267   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2256268   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2256269   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2256270   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2256271   +         end;
MPRINT(EM_DIAGRAM):   end;
2256272   +      end;
MPRINT(EM_DIAGRAM):   end;
2256273   +   end;
MPRINT(EM_DIAGRAM):   end;
2256274   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2256275   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2256276   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2256277   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2256278   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2256279   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2256280   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256281   +   end;
MPRINT(EM_DIAGRAM):   end;
2256282   +end;
MPRINT(EM_DIAGRAM):   end;
2256283   +
2256284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256285   +*** Checking missing input Interval
2256286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2256287   +
2256288   +IF NMISS(
2256289   +   AcceptedCmpTotal ,
2256290   +   Age ,
2256291   +   Frq ,
2256292   +   Income ,
2256293   +   Kidhome ,
2256294   +   Mnt ,
2256295   +   MntFishProducts ,
2256296   +   MntFruits ,
2256297   +   MntGoldProds ,
2256298   +   MntMeatProducts ,
2256299   +   MntSweetProducts ,
2256300   +   MntWines ,
2256301   +   MonthsAsCustomer ,
2256302   +   NumCatalogPurchases ,
2256303   +   NumDealsPurchases ,
2256304   +   NumDistPurchases ,
2256305   +   NumStorePurchases ,
2256306   +   NumWebPurchases ,
2256307   +   NumWebVisitsMonth ,
2256308   +   RFMstat ,
2256309   +   RMntFrq ,
2256310   +   Recency ,
2256311   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2256312   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2256313   +
2256314   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2256315   +END;
MPRINT(EM_DIAGRAM):   END;
2256316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256317   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2256318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256319   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2256320   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2256321   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2256322   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2256323   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2256324   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2256325   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2256326   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2256327   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2256328   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2256329   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2256330   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2256331   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2256332   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2256333   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2256334   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2256335   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2256336   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2256337   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2256338   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2256339   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2256340   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2256341   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2256342   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2256343   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2256344   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2256345   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2256346   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2256347   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2256348   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2256349   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2256350   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2256351   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2256352   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2256353   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2256354   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2256355   +END;
MPRINT(EM_DIAGRAM):   END;
2256356   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2256357   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2256358   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2256359   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2256360   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2256361   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2256362   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2256363   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2256364   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2256365   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2256366   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2256367   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2256368   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2256369   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2256370   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2256371   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2256372   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2256373   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2256374   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2256375   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2256376   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2256377   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2256378   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2256379   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2256380   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2256381   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2256382   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2256383   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2256384   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2256385   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2256386   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2256387   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2256388   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2256389   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2256390   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2256391   +   ELSE S_NumCatalogPurchases
2256392   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2256393   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2256394   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2256395   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2256396   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2256397   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2256398   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2256399   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2256400   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2256401   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2256402   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2256403   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2256404   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2256405   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2256406   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2256407   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2256408   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2256409   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2256410   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2256411   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2256412   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2256413   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2256414   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2256415   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2256416   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2256417   +END;
MPRINT(EM_DIAGRAM):   END;
2256418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256419   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2256420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256422   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2256423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256425   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2256426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256427   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2256428   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2256429   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2256430   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2256431   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2256432   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2256433   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2256434   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2256435   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2256436   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2256437   +          +     3.21215425524619 * S_NumDealsPurchases
2256438   +          +     0.08695198777156 * S_NumDistPurchases
2256439   +          +    -2.58697971128295 * S_NumStorePurchases
2256440   +          +    -0.44431924796059 * S_NumWebPurchases
2256441   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2256442   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2256443   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2256444   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 * 
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 * 
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts + 
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 * 
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines + 
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases + 
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases + 
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases + 
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 * 
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2256445   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2256446   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2256447   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2256448   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2256449   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2256450   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2256451   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2256452   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2256453   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2256454   +          +    -0.83844506398484 * S_NumDealsPurchases
2256455   +          +     0.60831936516804 * S_NumDistPurchases
2256456   +          +     1.79084087761626 * S_NumStorePurchases
2256457   +          +     1.17119196356453 * S_NumWebPurchases
2256458   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2256459   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2256460   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2256461   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 * 
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome 
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 * 
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts + 
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 * 
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 * 
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 * 
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 * 
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq + 
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2256462   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2256463   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2256464   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2256465   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2256466   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2256467   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2256468   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2256469   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2256470   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2256471   +          +    -0.31484031572628 * S_NumDealsPurchases
2256472   +          +    -0.18273941035679 * S_NumDistPurchases
2256473   +          +     0.99501789733882 * S_NumStorePurchases
2256474   +          +     1.32014078829379 * S_NumWebPurchases
2256475   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2256476   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2256477   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2256478   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 * 
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 * 
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098 
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts + 
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 * 
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 * 
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 * 
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 * 
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq + 
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2256479   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2256480   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2256481   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2256482   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2256483   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2256484   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2256485   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2256486   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2256487   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2256488   +          +     1.19658719134196 * S_NumDealsPurchases
2256489   +          +     0.87478204472986 * S_NumDistPurchases
2256490   +          +    -0.20635856288784 * S_NumStorePurchases
2256491   +          +    -0.89927356974242 * S_NumWebPurchases
2256492   +          +     2.92285244132576 * S_NumWebVisitsMonth
2256493   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2256494   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2256495   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 * 
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome 
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 * 
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts + 
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 * 
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 * 
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 * 
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 * 
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq + 
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2256496   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2256497   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2256498   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2256499   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2256500   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2256501   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2256502   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2256503   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2256504   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2256505   +          +       -2.32617124568 * S_NumDealsPurchases
2256506   +          +    -0.56589187730672 * S_NumDistPurchases
2256507   +          +     1.07062299863482 * S_NumStorePurchases
2256508   +          +     0.30077273739578 * S_NumWebPurchases
2256509   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2256510   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2256511   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2256512   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 * 
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 * 
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661 
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts + 
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 * 
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 * 
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 * 
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 * 
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq + 
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2256513   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2256514   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2256515   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2256516   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2256517   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 * 
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 + 
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 * 
HigherEducationBinary0 ;
2256518   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2256519   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2256520   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2256521   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2256522   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 * 
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 + 
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 * 
HigherEducationBinary0 ;
2256523   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2256524   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2256525   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2256526   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2256527   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 * 
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 + 
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 * 
HigherEducationBinary0 ;
2256528   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2256529   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2256530   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2256531   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2256532   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234 
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 + 
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 * 
HigherEducationBinary0 ;
2256533   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2256534   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2256535   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2256536   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2256537   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 * 
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 + 
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 * 
HigherEducationBinary0 ;
2256538   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2256539   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2256540   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2256541   +          +    -0.27797737429678 * Marital_StatusDivorced
2256542   +          +    -0.08137635862327 * Marital_StatusMarried
2256543   +          +     0.06275411820495 * Marital_StatusSingle
2256544   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle + 
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588 
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 * 
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 * 
Marital_StatusTogether ;
2256545   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2256546   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2256547   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2256548   +          +     0.05151426841441 * Marital_StatusDivorced
2256549   +          +     1.19165082030442 * Marital_StatusMarried
2256550   +          +    -1.08257080662611 * Marital_StatusSingle
2256551   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle + 
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112 
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 * 
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 * 
Marital_StatusTogether ;
2256552   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2256553   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2256554   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2256555   +          +      0.0238206459022 * Marital_StatusDivorced
2256556   +          +     -0.4653244204261 * Marital_StatusMarried
2256557   +          +     0.13051613619882 * Marital_StatusSingle
2256558   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle + 
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation + 
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced + 
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle + 
-0.35951366919755 * Marital_StatusTogether ;
2256559   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2256560   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2256561   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2256562   +          +     -0.7449356409222 * Marital_StatusDivorced
2256563   +          +    -1.46604673521535 * Marital_StatusMarried
2256564   +          +     0.74484771688818 * Marital_StatusSingle
2256565   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle + 
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249 
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 * 
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 * 
Marital_StatusTogether ;
2256566   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2256567   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2256568   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2256569   +          +    -3.68044980584423 * Marital_StatusDivorced
2256570   +          +     3.14587407902338 * Marital_StatusMarried
2256571   +          +    -2.66118132753024 * Marital_StatusSingle
2256572   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle + 
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation + 
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced + 
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle + 
3.50991640149914 * Marital_StatusTogether ;
2256573   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2256574   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2256575   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2256576   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2256577   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2256578   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2256579   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2256580   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2256581   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2256582   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2256583   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2256584   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2256585   +END;
MPRINT(EM_DIAGRAM):   END;
2256586   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2256587   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2256588   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2256589   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2256590   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2256591   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2256592   +END;
MPRINT(EM_DIAGRAM):   END;
2256593   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256594   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2256595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256596   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2256597   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2256598   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2256599   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2256600   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2256601   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2256602   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2256603   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2256604   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2256605   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2256606   +          +     0.89261880438741 * S_NumDealsPurchases
2256607   +          +    -1.61647413199892 * S_NumDistPurchases
2256608   +          +    -0.56304669045195 * S_NumStorePurchases
2256609   +          +      0.7766837080945 * S_NumWebPurchases
2256610   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2256611   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2256612   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2256613   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 * 
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 * 
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts + 
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 * 
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines + 
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases + 
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases + 
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases + 
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 * 
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2256614   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2256615   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2256616   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2256617   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2256618   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2256619   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2256620   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2256621   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2256622   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2256623   +          +     1.02431289724643 * S_NumDealsPurchases
2256624   +          +    -0.90960173637405 * S_NumDistPurchases
2256625   +          +     1.24283490404772 * S_NumStorePurchases
2256626   +          +     1.23072413154592 * S_NumWebPurchases
2256627   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2256628   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2256629   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2256630   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age 
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome + 
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 * 
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts + 
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 * 
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 * 
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 * 
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 * 
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq + 
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2256631   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2256632   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2256633   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2256634   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2256635   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2256636   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2256637   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2256638   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2256639   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2256640   +          +    -0.26249596122198 * S_NumDealsPurchases
2256641   +          +    -0.63328519804758 * S_NumDistPurchases
2256642   +          +    -0.88467503575886 * S_NumStorePurchases
2256643   +          +    -0.83120537310738 * S_NumWebPurchases
2256644   +          +     1.40072282351719 * S_NumWebVisitsMonth
2256645   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2256646   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2256647   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 * 
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 * 
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts + 
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 * 
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines + 
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases + 
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases + 
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases + 
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 * 
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2256648   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2256649   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2256650   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2256651   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2256652   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2256653   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2256654   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2256655   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2256656   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2256657   +          +     1.30167361451945 * S_NumDealsPurchases
2256658   +          +     1.45457613716235 * S_NumDistPurchases
2256659   +          +    -0.40226463685252 * S_NumStorePurchases
2256660   +          +     0.36369161683572 * S_NumWebPurchases
2256661   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2256662   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2256663   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2256664   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 * 
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome 
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 * 
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts + 
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 * 
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 * 
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 * 
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 * 
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq + 
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2256665   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2256666   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2256667   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2256668   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2256669   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2256670   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2256671   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2256672   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2256673   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2256674   +          +    -0.54572162665338 * S_NumDealsPurchases
2256675   +          +      0.9607390449318 * S_NumDistPurchases
2256676   +          +    -0.03259470545754 * S_NumStorePurchases
2256677   +          +     0.19202241423412 * S_NumWebPurchases
2256678   +          +     0.61085831658456 * S_NumWebVisitsMonth
2256679   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2256680   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2256681   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 * 
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 * 
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts + 
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 * 
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines + 
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases + 
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases + 
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases + 
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 * 
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2256682   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2256683   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2256684   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2256685   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2256686   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 * 
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 + 
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 * 
HigherEducationBinary0 ;
2256687   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2256688   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2256689   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2256690   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2256691   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 * 
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 + 
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 * 
HigherEducationBinary0 ;
2256692   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2256693   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2256694   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2256695   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2256696   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 * 
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 + 
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 * 
HigherEducationBinary0 ;
2256697   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2256698   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2256699   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2256700   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2256701   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 * 
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 + 
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 * 
HigherEducationBinary0 ;
2256702   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2256703   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2256704   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2256705   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2256706   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 * 
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 + 
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 * 
HigherEducationBinary0 ;
2256707   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2256708   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2256709   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2256710   +          +    -2.32430245081383 * Marital_StatusDivorced
2256711   +          +    -0.09815511356796 * Marital_StatusMarried
2256712   +          +     0.13075504294551 * Marital_StatusSingle
2256713   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle + 
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804 
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 * 
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 * 
Marital_StatusTogether ;
2256714   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2256715   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2256716   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2256717   +          +    -0.65574603869224 * Marital_StatusDivorced
2256718   +          +     1.54672472575294 * Marital_StatusMarried
2256719   +          +    -1.59817602340208 * Marital_StatusSingle
2256720   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle + 
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451 
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 * 
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 * 
Marital_StatusTogether ;
2256721   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2256722   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2256723   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2256724   +          +    -0.50911604604781 * Marital_StatusDivorced
2256725   +          +     0.30403066135719 * Marital_StatusMarried
2256726   +          +      0.1026950879545 * Marital_StatusSingle
2256727   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle + 
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444 
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 * 
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 * 
Marital_StatusTogether ;
2256728   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2256729   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2256730   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2256731   +          +     1.07371507133318 * Marital_StatusDivorced
2256732   +          +    -0.07097334129051 * Marital_StatusMarried
2256733   +          +    -0.48339718568621 * Marital_StatusSingle
2256734   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle + 
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566 
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 * 
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 * 
Marital_StatusTogether ;
2256735   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2256736   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2256737   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2256738   +          +     1.04342893515504 * Marital_StatusDivorced
2256739   +          +     1.16171312085032 * Marital_StatusMarried
2256740   +          +    -0.30201646939913 * Marital_StatusSingle
2256741   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle + 
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119 
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 * 
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 * 
Marital_StatusTogether ;
2256742   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2256743   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2256744   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2256745   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2256746   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2256747   +END;
MPRINT(EM_DIAGRAM):   END;
2256748   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2256749   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2256750   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2256751   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2256752   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2256753   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2256754   +END;
MPRINT(EM_DIAGRAM):   END;
2256755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256756   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2256757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256758   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2256759   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2256760   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2256761   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2256762   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2256763   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2256764   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2256765   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2256766   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2256767   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2256768   +          +     1.32256781010645 * S_NumDealsPurchases
2256769   +          +    -1.43015438973619 * S_NumDistPurchases
2256770   +          +    -0.63489289584421 * S_NumStorePurchases
2256771   +          +     0.90508699686841 * S_NumWebPurchases
2256772   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2256773   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2256774   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2256775   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 * 
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome 
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 * 
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts + 
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 * 
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 * 
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 * 
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 * 
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq + 
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2256776   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2256777   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2256778   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2256779   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2256780   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2256781   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2256782   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2256783   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2256784   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2256785   +          +     0.85965187264096 * S_NumDealsPurchases
2256786   +          +    -1.15239933286756 * S_NumDistPurchases
2256787   +          +     1.20800889102387 * S_NumStorePurchases
2256788   +          +     1.08790389130242 * S_NumWebPurchases
2256789   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2256790   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2256791   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2256792   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 * 
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 * 
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826 
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts + 
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 * 
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 * 
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 * 
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 * 
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq + 
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2256793   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2256794   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2256795   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2256796   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2256797   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2256798   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2256799   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2256800   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2256801   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2256802   +          +     -0.5767607129654 * S_NumDealsPurchases
2256803   +          +     -0.2643921429796 * S_NumDistPurchases
2256804   +          +    -0.67417489911206 * S_NumStorePurchases
2256805   +          +    -0.51423877684891 * S_NumWebPurchases
2256806   +          +     1.40328299605176 * S_NumWebVisitsMonth
2256807   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2256808   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2256809   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 * 
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome 
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 * 
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts + 
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 * 
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 * 
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 * 
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 * 
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq + 
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2256810   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2256811   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2256812   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2256813   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2256814   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2256815   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2256816   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2256817   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2256818   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2256819   +          +      1.2821617657076 * S_NumDealsPurchases
2256820   +          +     1.26584115202735 * S_NumDistPurchases
2256821   +          +    -0.46597664211833 * S_NumStorePurchases
2256822   +          +     0.45652363472866 * S_NumWebPurchases
2256823   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2256824   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2256825   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2256826   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 * 
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome 
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 * 
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts + 
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 * 
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 * 
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 * 
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 * 
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq + 
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2256827   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2256828   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2256829   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2256830   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2256831   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2256832   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2256833   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2256834   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2256835   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2256836   +          +    -0.85162564171681 * S_NumDealsPurchases
2256837   +          +     0.64631099667221 * S_NumDistPurchases
2256838   +          +    -0.03081963858636 * S_NumStorePurchases
2256839   +          +    -0.24124717624664 * S_NumWebPurchases
2256840   +          +     0.56425980772372 * S_NumWebVisitsMonth
2256841   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2256842   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2256843   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 * 
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 * 
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts + 
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 * 
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines + 
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases + 
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases + 
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases + 
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 * 
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2256844   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2256845   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2256846   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2256847   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2256848   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 * 
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 + 
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 * 
HigherEducationBinary0 ;
2256849   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2256850   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2256851   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2256852   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2256853   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 * 
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 + 
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 * 
HigherEducationBinary0 ;
2256854   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2256855   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2256856   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2256857   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2256858   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 * 
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 + 
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 * 
HigherEducationBinary0 ;
2256859   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2256860   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2256861   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2256862   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2256863   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938 
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 + 
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 * 
HigherEducationBinary0 ;
2256864   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2256865   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2256866   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2256867   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2256868   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 * 
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 + 
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 * 
HigherEducationBinary0 ;
2256869   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2256870   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2256871   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2256872   +          +    -2.49973437075558 * Marital_StatusDivorced
2256873   +          +    -0.18076948182574 * Marital_StatusMarried
2256874   +          +     0.13498525495231 * Marital_StatusSingle
2256875   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle + 
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868 
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 * 
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 * 
Marital_StatusTogether ;
2256876   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2256877   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2256878   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2256879   +          +       -0.59463732835 * Marital_StatusDivorced
2256880   +          +     1.37741332427598 * Marital_StatusMarried
2256881   +          +     -1.5833455713231 * Marital_StatusSingle
2256882   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle + 
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation + 
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced + 
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle + 
1.79205360628448 * Marital_StatusTogether ;
2256883   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2256884   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2256885   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2256886   +          +    -0.44569556289443 * Marital_StatusDivorced
2256887   +          +     0.29918053103557 * Marital_StatusMarried
2256888   +          +    -0.10337314064224 * Marital_StatusSingle
2256889   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle + 
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474 
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 * 
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 * 
Marital_StatusTogether ;
2256890   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2256891   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2256892   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2256893   +          +     1.13881957277462 * Marital_StatusDivorced
2256894   +          +    -0.35849807146313 * Marital_StatusMarried
2256895   +          +    -0.22168731316885 * Marital_StatusSingle
2256896   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle + 
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697 
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 * 
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 * 
Marital_StatusTogether ;
2256897   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2256898   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2256899   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2256900   +          +     1.10774969923269 * Marital_StatusDivorced
2256901   +          +     1.08409594073043 * Marital_StatusMarried
2256902   +          +    -0.33145048007894 * Marital_StatusSingle
2256903   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle + 
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249 
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 * 
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 * 
Marital_StatusTogether ;
2256904   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2256905   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2256906   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2256907   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2256908   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2256909   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2256910   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2256911   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2256912   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2256913   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2256914   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2256915   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2256916   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 * 
H1x3_2 ;
2256917   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2256918   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2256919   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 * 
H1x3_3 ;
2256920   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2256921   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2256922   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 * 
H1x3_4 ;
2256923   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2256924   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2256925   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 * 
H1x3_5 ;
2256926   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2256927   +END;
MPRINT(EM_DIAGRAM):   END;
2256928   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2256929   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2256930   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2256931   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2256932   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2256933   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2256934   +END;
MPRINT(EM_DIAGRAM):   END;
2256935   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256936   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2256937   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2256938   +
2256939   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2256940   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2256941   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2256942   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2256943   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2256944   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2256945   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2256946   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2256947   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2256948   +end;
MPRINT(EM_DIAGRAM):   end;
2256949   +else do;
MPRINT(EM_DIAGRAM):   else do;
2256950   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2256951   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2256952   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2256953   +   end;
MPRINT(EM_DIAGRAM):   end;
2256954   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2256955   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2256956   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2256957   +   end;
MPRINT(EM_DIAGRAM):   end;
2256958   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2256959   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2256960   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2256961   +   end;
MPRINT(EM_DIAGRAM):   end;
2256962   +end;
MPRINT(EM_DIAGRAM):   end;
2256963   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2256964   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2256965   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2256966   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 + 
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2256967   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2256968   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2256969   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 * 
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2256970   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2256971   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2256972   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 * 
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2256973   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2256974   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2256975   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2256976   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2256977   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2256978   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2256979   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2256980   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2256981   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2256982   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2256983   +END;
MPRINT(EM_DIAGRAM):   END;
2256984   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2256985   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2256986   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2256987   +END;
MPRINT(EM_DIAGRAM):   END;
2256988   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2256989   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2256990   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2256991   +END;
MPRINT(EM_DIAGRAM):   END;
2256992   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2256993   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2256994   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2256995   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2256996   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2256997   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2256998   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2256999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257000   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2257001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257002   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2257003   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2257004   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2257005   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2257006   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2257007   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2257008   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2257009   +END;
MPRINT(EM_DIAGRAM):   END;
2257010   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2257011   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2257012   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2257013   +drop
2257014   +H1x1_1
2257015   +H1x1_2
2257016   +H1x1_3
2257017   +H1x1_4
2257018   +H1x1_5
2257019   +H1x2_1
2257020   +H1x2_2
2257021   +H1x2_3
2257022   +H1x2_4
2257023   +H1x2_5
2257024   +H1x3_1
2257025   +H1x3_2
2257026   +H1x3_3
2257027   +H1x3_4
2257028   +H1x3_5
2257029   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4 
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2257030   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2257031   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2257032   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257033   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2257034   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257035   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2257036   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2257037   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2257038   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2257039   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257040   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2257041   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257042   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2257043   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2257044   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2257045   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257046   +* Ensmbl36: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 5 of 7;
2257047   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257048   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257049   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2257050   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2257051   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2257052   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257053   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2257054   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2257055   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2257056   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2257057   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2257058   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2257059   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2257060   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2257061   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2257062   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2257063   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2257064   +LENGTH _WARN_ $4
2257065   +      F_DepVar  $ 12
2257066   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2257067   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2257068   +
2257069   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2257070   +
2257071   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2257072   +
2257073   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2257074   +
2257075   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2257076   +
2257077   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2257078   +
2257079   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2257080   +
2257081   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2257082   +
2257083   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2257084   +
2257085   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2257086   +
2257087   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2257088   +
2257089   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2257090   +
2257091   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2257092   +
2257093   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2257094   +
2257095   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2257096   +
2257097   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2257098   +
2257099   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2257100   +
2257101   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2257102   +
2257103   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2257104   +
2257105   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2257106   +
2257107   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2257108   +
2257109   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2257110   +
2257111   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2257112   +
2257113   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2257114   +
2257115   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2257116   +
2257117   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2257118   +
2257119   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2257120   +
2257121   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2257122   +
2257123   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2257124   +
2257125   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2257126   +
2257127   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2257128   +
2257129   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2257130   +
2257131   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2257132   +
2257133   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2257134   +
2257135   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2257136   +
2257137   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2257138   +
2257139   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2257140   +
2257141   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2257142   +
2257143   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2257144   +
2257145   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2257146   +
2257147   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2257148   +
2257149   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2257150   +
2257151   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2257152   +
2257153   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2257154   +
2257155   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2257156   +
2257157   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2257158   +
2257159   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2257160   +
2257161   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2257162   +
2257163   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2257164   +
2257165   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2257166   +
2257167   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2257168   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2257169   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2257170   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2257171   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2257172   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257173   +end;
MPRINT(EM_DIAGRAM):   end;
2257174   +else do;
MPRINT(EM_DIAGRAM):   else do;
2257175   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2257176   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2257177   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2257178   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2257179   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2257180   +   end;
MPRINT(EM_DIAGRAM):   end;
2257181   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2257182   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2257183   +   end;
MPRINT(EM_DIAGRAM):   end;
2257184   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2257185   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2257186   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2257187   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257188   +   end;
MPRINT(EM_DIAGRAM):   end;
2257189   +end;
MPRINT(EM_DIAGRAM):   end;
2257190   +
2257191   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2257192   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2257193   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2257194   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2257195   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2257196   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257197   +end;
MPRINT(EM_DIAGRAM):   end;
2257198   +else do;
MPRINT(EM_DIAGRAM):   else do;
2257199   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2257200   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2257201   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2257202   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2257203   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2257204   +   end;
MPRINT(EM_DIAGRAM):   end;
2257205   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2257206   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2257207   +   end;
MPRINT(EM_DIAGRAM):   end;
2257208   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2257209   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2257210   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2257211   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257212   +   end;
MPRINT(EM_DIAGRAM):   end;
2257213   +end;
MPRINT(EM_DIAGRAM):   end;
2257214   +
2257215   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2257216   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2257217   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2257218   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2257219   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2257220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257221   +end;
MPRINT(EM_DIAGRAM):   end;
2257222   +else do;
MPRINT(EM_DIAGRAM):   else do;
2257223   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2257224   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2257225   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2257226   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2257227   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2257228   +   end;
MPRINT(EM_DIAGRAM):   end;
2257229   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2257230   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2257231   +   end;
MPRINT(EM_DIAGRAM):   end;
2257232   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2257233   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2257234   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2257235   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257236   +   end;
MPRINT(EM_DIAGRAM):   end;
2257237   +end;
MPRINT(EM_DIAGRAM):   end;
2257238   +
2257239   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2257240   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2257241   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2257242   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2257243   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2257244   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257245   +end;
MPRINT(EM_DIAGRAM):   end;
2257246   +else do;
MPRINT(EM_DIAGRAM):   else do;
2257247   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2257248   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2257249   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2257250   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2257251   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2257252   +   end;
MPRINT(EM_DIAGRAM):   end;
2257253   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2257254   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2257255   +   end;
MPRINT(EM_DIAGRAM):   end;
2257256   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2257257   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2257258   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2257259   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257260   +   end;
MPRINT(EM_DIAGRAM):   end;
2257261   +end;
MPRINT(EM_DIAGRAM):   end;
2257262   +
2257263   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2257264   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2257265   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2257266   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2257267   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2257268   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257269   +end;
MPRINT(EM_DIAGRAM):   end;
2257270   +else do;
MPRINT(EM_DIAGRAM):   else do;
2257271   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2257272   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2257273   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2257274   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2257275   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2257276   +   end;
MPRINT(EM_DIAGRAM):   end;
2257277   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2257278   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2257279   +   end;
MPRINT(EM_DIAGRAM):   end;
2257280   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2257281   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2257282   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2257283   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257284   +   end;
MPRINT(EM_DIAGRAM):   end;
2257285   +end;
MPRINT(EM_DIAGRAM):   end;
2257286   +
2257287   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2257288   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2257289   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2257290   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2257291   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2257292   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257293   +end;
MPRINT(EM_DIAGRAM):   end;
2257294   +else do;
MPRINT(EM_DIAGRAM):   else do;
2257295   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2257296   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2257297   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2257298   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2257299   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2257300   +   end;
MPRINT(EM_DIAGRAM):   end;
2257301   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2257302   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2257303   +   end;
MPRINT(EM_DIAGRAM):   end;
2257304   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2257305   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2257306   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2257307   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257308   +   end;
MPRINT(EM_DIAGRAM):   end;
2257309   +end;
MPRINT(EM_DIAGRAM):   end;
2257310   +
2257311   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2257312   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2257313   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2257314   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2257315   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2257316   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257317   +end;
MPRINT(EM_DIAGRAM):   end;
2257318   +else do;
MPRINT(EM_DIAGRAM):   else do;
2257319   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2257320   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2257321   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2257322   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2257323   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2257324   +   end;
MPRINT(EM_DIAGRAM):   end;
2257325   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2257326   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2257327   +   end;
MPRINT(EM_DIAGRAM):   end;
2257328   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2257329   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2257330   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2257331   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257332   +   end;
MPRINT(EM_DIAGRAM):   end;
2257333   +end;
MPRINT(EM_DIAGRAM):   end;
2257334   +
2257335   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2257336   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2257337   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2257338   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2257339   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2257340   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2257341   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2257342   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2257343   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2257344   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2257345   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2257346   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2257347   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2257348   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257349   +end;
MPRINT(EM_DIAGRAM):   end;
2257350   +else do;
MPRINT(EM_DIAGRAM):   else do;
2257351   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2257352   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2257353   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2257354   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2257355   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2257356   +   end;
MPRINT(EM_DIAGRAM):   end;
2257357   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2257358   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2257359   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2257360   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2257361   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2257362   +   end;
MPRINT(EM_DIAGRAM):   end;
2257363   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2257364   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2257365   +   end;
MPRINT(EM_DIAGRAM):   end;
2257366   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2257367   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2257368   +   end;
MPRINT(EM_DIAGRAM):   end;
2257369   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2257370   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2257371   +   end;
MPRINT(EM_DIAGRAM):   end;
2257372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2257373   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2257374   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2257375   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2257376   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2257377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2257378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257379   +   end;
MPRINT(EM_DIAGRAM):   end;
2257380   +end;
MPRINT(EM_DIAGRAM):   end;
2257381   +
2257382   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2257383   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2257384   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2257385   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2257386   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2257387   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2257388   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2257389   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2257390   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2257391   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2257392   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2257393   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2257394   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2257395   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2257396   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257397   +end;
MPRINT(EM_DIAGRAM):   end;
2257398   +else do;
MPRINT(EM_DIAGRAM):   else do;
2257399   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2257400   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2257401   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2257402   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2257403   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2257404   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2257405   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2257406   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2257407   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2257408   +         end;
MPRINT(EM_DIAGRAM):   end;
2257409   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2257410   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2257411   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2257412   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2257413   +            end;
MPRINT(EM_DIAGRAM):   end;
2257414   +         end;
MPRINT(EM_DIAGRAM):   end;
2257415   +      end;
MPRINT(EM_DIAGRAM):   end;
2257416   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2257417   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2257418   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2257419   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2257420   +         end;
MPRINT(EM_DIAGRAM):   end;
2257421   +      end;
MPRINT(EM_DIAGRAM):   end;
2257422   +   end;
MPRINT(EM_DIAGRAM):   end;
2257423   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2257424   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2257425   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2257426   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2257427   +      end;
MPRINT(EM_DIAGRAM):   end;
2257428   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2257429   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2257430   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2257431   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2257432   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2257433   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2257434   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2257435   +         end;
MPRINT(EM_DIAGRAM):   end;
2257436   +      end;
MPRINT(EM_DIAGRAM):   end;
2257437   +   end;
MPRINT(EM_DIAGRAM):   end;
2257438   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2257439   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2257440   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2257441   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2257442   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2257443   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2257444   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257445   +   end;
MPRINT(EM_DIAGRAM):   end;
2257446   +end;
MPRINT(EM_DIAGRAM):   end;
2257447   +
2257448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257449   +*** Checking missing input Interval
2257450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2257451   +
2257452   +IF NMISS(
2257453   +   AcceptedCmpTotal ,
2257454   +   Age ,
2257455   +   Frq ,
2257456   +   Income ,
2257457   +   Kidhome ,
2257458   +   Mnt ,
2257459   +   MntFishProducts ,
2257460   +   MntFruits ,
2257461   +   MntGoldProds ,
2257462   +   MntMeatProducts ,
2257463   +   MntSweetProducts ,
2257464   +   MntWines ,
2257465   +   MonthsAsCustomer ,
2257466   +   NumCatalogPurchases ,
2257467   +   NumDealsPurchases ,
2257468   +   NumDistPurchases ,
2257469   +   NumStorePurchases ,
2257470   +   NumWebPurchases ,
2257471   +   NumWebVisitsMonth ,
2257472   +   RFMstat ,
2257473   +   RMntFrq ,
2257474   +   Recency ,
2257475   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2257476   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2257477   +
2257478   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257479   +END;
MPRINT(EM_DIAGRAM):   END;
2257480   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257481   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2257482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257483   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2257484   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2257485   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2257486   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2257487   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2257488   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2257489   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2257490   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2257491   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2257492   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2257493   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2257494   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2257495   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2257496   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2257497   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2257498   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2257499   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2257500   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2257501   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2257502   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2257503   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2257504   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2257505   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2257506   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2257507   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2257508   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2257509   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2257510   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2257511   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2257512   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2257513   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2257514   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2257515   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2257516   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2257517   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2257518   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2257519   +END;
MPRINT(EM_DIAGRAM):   END;
2257520   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2257521   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2257522   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2257523   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2257524   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2257525   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2257526   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2257527   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2257528   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2257529   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2257530   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2257531   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2257532   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2257533   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2257534   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2257535   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2257536   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2257537   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2257538   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2257539   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2257540   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2257541   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2257542   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2257543   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2257544   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2257545   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2257546   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2257547   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2257548   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2257549   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2257550   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2257551   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2257552   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2257553   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2257554   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2257555   +   ELSE S_NumCatalogPurchases
2257556   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2257557   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2257558   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2257559   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2257560   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2257561   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2257562   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2257563   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2257564   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2257565   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2257566   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2257567   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2257568   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2257569   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2257570   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2257571   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2257572   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2257573   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2257574   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2257575   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2257576   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2257577   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2257578   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2257579   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2257580   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2257581   +END;
MPRINT(EM_DIAGRAM):   END;
2257582   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257583   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2257584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257585   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257586   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2257587   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257589   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2257590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257591   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2257592   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2257593   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2257594   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2257595   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2257596   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2257597   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2257598   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2257599   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2257600   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2257601   +          +    -1.09856598010056 * S_NumDealsPurchases
2257602   +          +    -0.10571850472514 * S_NumDistPurchases
2257603   +          +     0.11898210654227 * S_NumStorePurchases
2257604   +          +      0.5984912060231 * S_NumWebPurchases
The SAS System

2257605   +          +     0.78592531126942 * S_NumWebVisitsMonth
2257606   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2257607   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2257608   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2257609   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2257610   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2257611   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2257612   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2257613   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2257614   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2257615   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2257616   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2257617   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2257618   +          +    -0.84042044250624 * S_NumDealsPurchases
2257619   +          +    -0.10246261015488 * S_NumDistPurchases
2257620   +          +     0.06886149708824 * S_NumStorePurchases
2257621   +          +     0.63156910388199 * S_NumWebPurchases
2257622   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2257623   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2257624   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2257625   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2257626   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2257627   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2257628   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2257629   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2257630   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2257631   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2257632   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2257633   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2257634   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2257635   +          +     0.45393712455366 * S_NumDealsPurchases
2257636   +          +    -0.25292198053552 * S_NumDistPurchases
2257637   +          +    -1.35582215064749 * S_NumStorePurchases
2257638   +          +    -0.83132202302639 * S_NumWebPurchases
2257639   +          +     1.87116225272678 * S_NumWebVisitsMonth
2257640   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2257641   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2257642   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2257643   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2257644   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2257645   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2257646   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2257647   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2257648   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2257649   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2257650   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2257651   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2257652   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2257653   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2257654   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2257655   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2257656   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2257657   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2257658   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2257659   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2257660   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2257661   +          +      0.4695898100094 * Marital_StatusDivorced
2257662   +          +    -0.52137742289262 * Marital_StatusMarried
2257663   +          +    -0.32382086914936 * Marital_StatusSingle
2257664   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2257665   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2257666   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2257667   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2257668   +          +    -1.04858218653238 * Marital_StatusDivorced
2257669   +          +     2.41098335093061 * Marital_StatusMarried
2257670   +          +    -1.94696044861334 * Marital_StatusSingle
2257671   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2257672   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2257673   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2257674   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2257675   +          +     0.42964114177062 * Marital_StatusDivorced
2257676   +          +    -0.38607635605816 * Marital_StatusMarried
2257677   +          +    -0.02157405407852 * Marital_StatusSingle
2257678   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2257679   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2257680   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2257681   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2257682   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2257683   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2257684   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2257685   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2257686   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2257687   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2257688   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2257689   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2257690   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2257691   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2257692   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2257693   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2257694   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2257695   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2257696   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2257697   +END;
MPRINT(EM_DIAGRAM):   END;
2257698   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2257699   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2257700   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2257701   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2257702   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2257703   +END;
MPRINT(EM_DIAGRAM):   END;
2257704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257705   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2257706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257707   +
2257708   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2257709   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2257710   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2257711   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2257712   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2257713   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2257714   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2257715   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2257716   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2257717   +end;
MPRINT(EM_DIAGRAM):   end;
2257718   +else do;
MPRINT(EM_DIAGRAM):   else do;
2257719   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2257720   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2257721   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2257722   +   end;
MPRINT(EM_DIAGRAM):   end;
2257723   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2257724   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2257725   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2257726   +   end;
MPRINT(EM_DIAGRAM):   end;
2257727   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2257728   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2257729   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2257730   +   end;
MPRINT(EM_DIAGRAM):   end;
2257731   +end;
MPRINT(EM_DIAGRAM):   end;
2257732   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2257733   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2257734   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2257735   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2257736   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2257737   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2257738   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2257739   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2257740   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2257741   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2257742   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2257743   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2257744   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2257745   +END;
MPRINT(EM_DIAGRAM):   END;
2257746   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2257747   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2257748   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2257749   +END;
MPRINT(EM_DIAGRAM):   END;
2257750   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2257751   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2257752   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2257753   +END;
MPRINT(EM_DIAGRAM):   END;
2257754   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2257755   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2257756   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2257757   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2257758   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2257759   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2257760   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2257761   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257762   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2257763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2257764   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2257765   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2257766   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2257767   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2257768   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2257769   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2257770   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2257771   +END;
MPRINT(EM_DIAGRAM):   END;
2257772   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2257773   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2257774   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2257775   +drop
2257776   +H1x1_1
2257777   +H1x1_2
2257778   +H1x1_3
2257779   +H1x1_4
2257780   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2257781   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2257782   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2257783   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257784   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2257785   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257786   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2257787   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2257788   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2257789   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2257790   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257791   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2257792   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257793   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2257794   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2257795   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2257796   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257797   +* Ensmbl36: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 6 of 7;
2257798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257800   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2257801   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2257802   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2257803   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2257804   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2257805   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2257806   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2257807   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2257808   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2257809   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2257810   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2257811   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2257812   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2257813   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2257814   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2257815   +LENGTH _WARN_ $4
2257816   +      F_DepVar  $ 12
2257817   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2257818   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2257819   +
2257820   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2257821   +
2257822   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2257823   +
2257824   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2257825   +
2257826   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2257827   +
2257828   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2257829   +
2257830   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2257831   +
2257832   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2257833   +
2257834   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2257835   +
2257836   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2257837   +
2257838   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2257839   +
2257840   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2257841   +
2257842   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2257843   +
2257844   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2257845   +
2257846   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2257847   +
2257848   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2257849   +
2257850   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2257851   +
2257852   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2257853   +
2257854   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2257855   +
2257856   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2257857   +
2257858   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2257859   +
2257860   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2257861   +
2257862   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2257863   +
2257864   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2257865   +
2257866   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2257867   +
2257868   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2257869   +
2257870   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2257871   +
2257872   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2257873   +
2257874   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2257875   +
2257876   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2257877   +
2257878   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2257879   +
2257880   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2257881   +
2257882   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2257883   +
2257884   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2257885   +
2257886   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2257887   +
2257888   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2257889   +
2257890   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2257891   +
2257892   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2257893   +
2257894   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2257895   +
2257896   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2257897   +
2257898   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2257899   +
2257900   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2257901   +
2257902   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2257903   +
2257904   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2257905   +
2257906   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2257907   +
2257908   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2257909   +
2257910   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2257911   +
2257912   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2257913   +
2257914   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2257915   +
2257916   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2257917   +
2257918   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2257919   +
2257920   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2257921   +
2257922   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2257923   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2257924   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2257925   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2257926   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2257927   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257928   +end;
MPRINT(EM_DIAGRAM):   end;
2257929   +else do;
MPRINT(EM_DIAGRAM):   else do;
2257930   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2257931   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2257932   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2257933   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2257934   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2257935   +   end;
MPRINT(EM_DIAGRAM):   end;
2257936   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2257937   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2257938   +   end;
MPRINT(EM_DIAGRAM):   end;
2257939   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2257940   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2257941   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2257942   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257943   +   end;
MPRINT(EM_DIAGRAM):   end;
2257944   +end;
MPRINT(EM_DIAGRAM):   end;
2257945   +
2257946   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2257947   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2257948   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2257949   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2257950   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2257951   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257952   +end;
MPRINT(EM_DIAGRAM):   end;
2257953   +else do;
MPRINT(EM_DIAGRAM):   else do;
2257954   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2257955   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2257956   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2257957   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2257958   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2257959   +   end;
MPRINT(EM_DIAGRAM):   end;
2257960   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2257961   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2257962   +   end;
MPRINT(EM_DIAGRAM):   end;
2257963   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2257964   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2257965   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2257966   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257967   +   end;
MPRINT(EM_DIAGRAM):   end;
2257968   +end;
MPRINT(EM_DIAGRAM):   end;
2257969   +
2257970   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2257971   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2257972   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2257973   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2257974   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2257975   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257976   +end;
MPRINT(EM_DIAGRAM):   end;
2257977   +else do;
MPRINT(EM_DIAGRAM):   else do;
2257978   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2257979   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2257980   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2257981   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2257982   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2257983   +   end;
MPRINT(EM_DIAGRAM):   end;
2257984   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2257985   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2257986   +   end;
MPRINT(EM_DIAGRAM):   end;
2257987   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2257988   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2257989   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2257990   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2257991   +   end;
MPRINT(EM_DIAGRAM):   end;
2257992   +end;
MPRINT(EM_DIAGRAM):   end;
2257993   +
2257994   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2257995   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2257996   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2257997   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2257998   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2257999   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258000   +end;
MPRINT(EM_DIAGRAM):   end;
2258001   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258002   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2258003   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2258004   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258005   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2258006   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2258007   +   end;
MPRINT(EM_DIAGRAM):   end;
2258008   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2258009   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2258010   +   end;
MPRINT(EM_DIAGRAM):   end;
2258011   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2258012   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2258013   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2258014   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258015   +   end;
MPRINT(EM_DIAGRAM):   end;
2258016   +end;
MPRINT(EM_DIAGRAM):   end;
2258017   +
2258018   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2258019   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2258020   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2258021   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2258022   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2258023   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258024   +end;
MPRINT(EM_DIAGRAM):   end;
2258025   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258026   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2258027   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2258028   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258029   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2258030   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2258031   +   end;
MPRINT(EM_DIAGRAM):   end;
2258032   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2258033   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2258034   +   end;
MPRINT(EM_DIAGRAM):   end;
2258035   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2258036   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2258037   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2258038   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258039   +   end;
MPRINT(EM_DIAGRAM):   end;
2258040   +end;
MPRINT(EM_DIAGRAM):   end;
2258041   +
2258042   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2258043   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2258044   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2258045   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2258046   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2258047   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258048   +end;
MPRINT(EM_DIAGRAM):   end;
2258049   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258050   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2258051   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2258052   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258053   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2258054   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2258055   +   end;
MPRINT(EM_DIAGRAM):   end;
2258056   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2258057   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2258058   +   end;
MPRINT(EM_DIAGRAM):   end;
2258059   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2258060   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2258061   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2258062   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258063   +   end;
MPRINT(EM_DIAGRAM):   end;
2258064   +end;
MPRINT(EM_DIAGRAM):   end;
2258065   +
2258066   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2258067   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2258068   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2258069   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2258070   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2258071   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258072   +end;
MPRINT(EM_DIAGRAM):   end;
2258073   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258074   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2258075   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2258076   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258077   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2258078   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2258079   +   end;
MPRINT(EM_DIAGRAM):   end;
2258080   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2258081   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2258082   +   end;
MPRINT(EM_DIAGRAM):   end;
2258083   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2258084   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2258085   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2258086   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258087   +   end;
MPRINT(EM_DIAGRAM):   end;
2258088   +end;
MPRINT(EM_DIAGRAM):   end;
2258089   +
2258090   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2258091   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2258092   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2258093   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2258094   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2258095   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2258096   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2258097   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2258098   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2258099   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2258100   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2258101   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2258102   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2258103   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258104   +end;
MPRINT(EM_DIAGRAM):   end;
2258105   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258106   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2258107   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2258108   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258109   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2258110   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2258111   +   end;
MPRINT(EM_DIAGRAM):   end;
2258112   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2258113   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2258114   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2258115   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2258116   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2258117   +   end;
MPRINT(EM_DIAGRAM):   end;
2258118   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2258119   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2258120   +   end;
MPRINT(EM_DIAGRAM):   end;
2258121   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2258122   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2258123   +   end;
MPRINT(EM_DIAGRAM):   end;
2258124   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2258125   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2258126   +   end;
MPRINT(EM_DIAGRAM):   end;
2258127   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2258128   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2258129   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2258130   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2258131   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2258132   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2258133   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258134   +   end;
MPRINT(EM_DIAGRAM):   end;
2258135   +end;
MPRINT(EM_DIAGRAM):   end;
2258136   +
2258137   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2258138   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2258139   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2258140   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2258141   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2258142   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2258143   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2258144   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2258145   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2258146   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2258147   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2258148   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2258149   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2258150   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2258151   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258152   +end;
MPRINT(EM_DIAGRAM):   end;
2258153   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258154   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2258155   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2258156   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258157   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2258158   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2258159   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2258160   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2258161   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2258162   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2258163   +         end;
MPRINT(EM_DIAGRAM):   end;
2258164   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2258165   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2258166   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2258167   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2258168   +            end;
MPRINT(EM_DIAGRAM):   end;
2258169   +         end;
MPRINT(EM_DIAGRAM):   end;
2258170   +      end;
MPRINT(EM_DIAGRAM):   end;
2258171   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2258172   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2258173   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2258174   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2258175   +         end;
MPRINT(EM_DIAGRAM):   end;
2258176   +      end;
MPRINT(EM_DIAGRAM):   end;
2258177   +   end;
MPRINT(EM_DIAGRAM):   end;
2258178   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2258179   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2258180   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2258181   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2258182   +      end;
MPRINT(EM_DIAGRAM):   end;
2258183   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2258184   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2258185   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2258186   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2258187   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2258188   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2258189   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2258190   +         end;
MPRINT(EM_DIAGRAM):   end;
2258191   +      end;
MPRINT(EM_DIAGRAM):   end;
2258192   +   end;
MPRINT(EM_DIAGRAM):   end;
2258193   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2258194   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2258195   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2258196   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2258197   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2258198   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2258199   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258200   +   end;
MPRINT(EM_DIAGRAM):   end;
2258201   +end;
MPRINT(EM_DIAGRAM):   end;
2258202   +
2258203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2258204   +*** Checking missing input Interval
2258205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2258206   +
2258207   +IF NMISS(
2258208   +   AcceptedCmpTotal ,
2258209   +   Age ,
2258210   +   Frq ,
2258211   +   Income ,
2258212   +   Kidhome ,
2258213   +   Mnt ,
2258214   +   MntFishProducts ,
2258215   +   MntFruits ,
2258216   +   MntGoldProds ,
2258217   +   MntMeatProducts ,
2258218   +   MntSweetProducts ,
2258219   +   MntWines ,
2258220   +   MonthsAsCustomer ,
2258221   +   NumCatalogPurchases ,
2258222   +   NumDealsPurchases ,
2258223   +   NumDistPurchases ,
2258224   +   NumStorePurchases ,
2258225   +   NumWebPurchases ,
2258226   +   NumWebVisitsMonth ,
2258227   +   RFMstat ,
2258228   +   RMntFrq ,
2258229   +   Recency ,
2258230   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2258231   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2258232   +
2258233   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258234   +END;
MPRINT(EM_DIAGRAM):   END;
2258235   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2258236   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2258237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2258238   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2258239   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2258240   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2258241   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2258242   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2258243   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2258244   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2258245   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2258246   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2258247   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2258248   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2258249   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2258250   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2258251   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2258252   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2258253   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2258254   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2258255   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2258256   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2258257   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2258258   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2258259   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2258260   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2258261   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2258262   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2258263   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2258264   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2258265   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2258266   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2258267   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2258268   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2258269   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2258270   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2258271   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2258272   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2258273   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2258274   +END;
MPRINT(EM_DIAGRAM):   END;
2258275   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2258276   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2258277   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2258278   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2258279   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2258280   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2258281   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2258282   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2258283   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2258284   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2258285   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2258286   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2258287   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2258288   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2258289   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2258290   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2258291   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2258292   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2258293   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2258294   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2258295   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2258296   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2258297   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2258298   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2258299   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2258300   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2258301   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2258302   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2258303   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2258304   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2258305   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2258306   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2258307   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2258308   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2258309   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2258310   +   ELSE S_NumCatalogPurchases
2258311   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2258312   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2258313   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2258314   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2258315   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2258316   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2258317   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2258318   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2258319   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2258320   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2258321   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2258322   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2258323   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2258324   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2258325   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2258326   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2258327   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2258328   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2258329   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2258330   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2258331   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2258332   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2258333   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2258334   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2258335   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2258336   +END;
MPRINT(EM_DIAGRAM):   END;
2258337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2258338   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2258339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2258340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2258341   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2258342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2258343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2258344   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2258345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2258346   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2258347   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2258348   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2258349   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2258350   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2258351   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2258352   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2258353   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2258354   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2258355   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2258356   +          +     0.19770934886328 * S_NumDealsPurchases
2258357   +          +      0.0515215988111 * S_NumDistPurchases
2258358   +          +    -0.34569346346089 * S_NumStorePurchases
2258359   +          +    -0.27122293596124 * S_NumWebPurchases
2258360   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2258361   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2258362   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2258363   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2258364   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2258365   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2258366   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2258367   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2258368   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2258369   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2258370   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2258371   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2258372   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2258373   +          +     0.54308887602031 * S_NumDealsPurchases
2258374   +          +    -0.22507315320192 * S_NumDistPurchases
2258375   +          +    -0.79861387328361 * S_NumStorePurchases
2258376   +          +    -0.45467494002747 * S_NumWebPurchases
2258377   +          +      0.2119048824613 * S_NumWebVisitsMonth
2258378   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2258379   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2258380   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2258381   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2258382   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2258383   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2258384   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2258385   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2258386   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2258387   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2258388   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2258389   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2258390   +          +     -0.0771083149302 * S_NumDealsPurchases
2258391   +          +     0.03403621221162 * S_NumDistPurchases
2258392   +          +     0.61303946422025 * S_NumStorePurchases
2258393   +          +     0.27126793634053 * S_NumWebPurchases
2258394   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2258395   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2258396   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2258397   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2258398   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2258399   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2258400   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2258401   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2258402   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2258403   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2258404   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2258405   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2258406   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2258407   +          +     0.29894603062327 * S_NumDealsPurchases
2258408   +          +     0.07614620530875 * S_NumDistPurchases
2258409   +          +     0.15402335009896 * S_NumStorePurchases
2258410   +          +     0.10615749096863 * S_NumWebPurchases
2258411   +          +     0.41962286816879 * S_NumWebVisitsMonth
2258412   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2258413   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2258414   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2258415   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2258416   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2258417   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2258418   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2258419   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2258420   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2258421   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2258422   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2258423   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2258424   +          +     0.14392502416642 * S_NumDealsPurchases
2258425   +          +    -0.10026304978633 * S_NumDistPurchases
2258426   +          +     -0.0588453022746 * S_NumStorePurchases
2258427   +          +     0.24799398610395 * S_NumWebPurchases
2258428   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2258429   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2258430   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2258431   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2258432   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2258433   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2258434   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2258435   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2258436   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2258437   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2258438   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2258439   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2258440   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2258441   +          +     0.08149600854964 * S_NumDealsPurchases
2258442   +          +     0.16873541613513 * S_NumDistPurchases
2258443   +          +    -0.20437343413446 * S_NumStorePurchases
2258444   +          +     -0.1671107527288 * S_NumWebPurchases
2258445   +          +     0.03677043100993 * S_NumWebVisitsMonth
2258446   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2258447   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2258448   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2258449   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2258450   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2258451   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2258452   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2258453   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2258454   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2258455   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2258456   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2258457   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2258458   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2258459   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2258460   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2258461   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2258462   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2258463   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2258464   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2258465   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2258466   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2258467   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2258468   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2258469   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2258470   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2258471   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2258472   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2258473   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2258474   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2258475   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2258476   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2258477   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2258478   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2258479   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2258480   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2258481   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2258482   +          +    -0.31045295887604 * Marital_StatusDivorced
2258483   +          +    -0.01109401001539 * Marital_StatusMarried
2258484   +          +     0.01325135981025 * Marital_StatusSingle
2258485   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2258486   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2258487   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2258488   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2258489   +          +     0.02275101861599 * Marital_StatusDivorced
2258490   +          +     0.20271548664903 * Marital_StatusMarried
2258491   +          +    -0.12132069210718 * Marital_StatusSingle
2258492   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2258493   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2258494   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2258495   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2258496   +          +     -0.4992959703281 * Marital_StatusDivorced
2258497   +          +     0.62071659624138 * Marital_StatusMarried
2258498   +          +    -0.21776202274494 * Marital_StatusSingle
2258499   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2258500   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2258501   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2258502   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2258503   +          +     0.05626212670587 * Marital_StatusDivorced
2258504   +          +     0.14353891364597 * Marital_StatusMarried
2258505   +          +    -0.29006765622997 * Marital_StatusSingle
2258506   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2258507   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2258508   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2258509   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2258510   +          +    -0.21206913700604 * Marital_StatusDivorced
2258511   +          +     0.58790643614629 * Marital_StatusMarried
2258512   +          +    -0.65995982578062 * Marital_StatusSingle
2258513   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2258514   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2258515   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2258516   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2258517   +          +    -0.05047370516008 * Marital_StatusDivorced
2258518   +          +    -0.23139090963669 * Marital_StatusMarried
2258519   +          +     0.04816197463249 * Marital_StatusSingle
2258520   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2258521   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2258522   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2258523   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2258524   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2258525   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2258526   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2258527   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2258528   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2258529   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2258530   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2258531   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2258532   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2258533   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2258534   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2258535   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2258536   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2258537   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2258538   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2258539   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2258540   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2258541   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2258542   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2258543   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2258544   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2258545   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2258546   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2258547   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2258548   +END;
MPRINT(EM_DIAGRAM):   END;
2258549   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2258550   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2258551   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2258552   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2258553   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2258554   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2258555   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2258556   +END;
MPRINT(EM_DIAGRAM):   END;
2258557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2258558   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2258559   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2258560   +
2258561   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2258562   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2258563   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2258564   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2258565   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2258566   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258567   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2258568   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2258569   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2258570   +end;
MPRINT(EM_DIAGRAM):   end;
2258571   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258572   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2258573   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2258574   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2258575   +   end;
MPRINT(EM_DIAGRAM):   end;
2258576   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2258577   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2258578   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2258579   +   end;
MPRINT(EM_DIAGRAM):   end;
2258580   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2258581   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2258582   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2258583   +   end;
MPRINT(EM_DIAGRAM):   end;
2258584   +end;
MPRINT(EM_DIAGRAM):   end;
2258585   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2258586   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2258587   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2258588   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2258589   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2258590   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2258591   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2258592   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2258593   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2258594   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2258595   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2258596   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2258597   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2258598   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2258599   +END;
MPRINT(EM_DIAGRAM):   END;
2258600   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2258601   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2258602   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2258603   +END;
MPRINT(EM_DIAGRAM):   END;
2258604   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2258605   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2258606   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2258607   +END;
MPRINT(EM_DIAGRAM):   END;
2258608   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2258609   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2258610   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2258611   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2258612   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2258613   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2258614   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2258615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2258616   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2258617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2258618   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2258619   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2258620   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2258621   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2258622   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2258623   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2258624   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2258625   +END;
MPRINT(EM_DIAGRAM):   END;
2258626   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2258627   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2258628   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2258629   +drop
2258630   +H1x1_1
2258631   +H1x1_2
2258632   +H1x1_3
2258633   +H1x1_4
2258634   +H1x1_5
2258635   +H1x1_6
2258636   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2258637   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2258638   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2258639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2258640   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2258641   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2258642   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2258643   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2258644   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2258645   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2258646   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2258647   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2258648   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2258649   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2258650   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2258651   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2258652   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2258653   +* Ensmbl36: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 7 of 7;
2258654   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2258655   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2258656   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2258657   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2258658   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2258659   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2258660   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2258661   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2258662   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2258663   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2258664   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2258665   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2258666   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2258667   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2258668   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2258669   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2258670   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2258671   +LENGTH _WARN_ $4
2258672   +      F_DepVar  $ 12
2258673   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2258674   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2258675   +
2258676   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2258677   +
2258678   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2258679   +
2258680   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2258681   +
2258682   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2258683   +
2258684   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2258685   +
2258686   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2258687   +
2258688   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2258689   +
2258690   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2258691   +
2258692   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2258693   +
2258694   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2258695   +
2258696   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2258697   +
2258698   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2258699   +
2258700   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2258701   +
2258702   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2258703   +
2258704   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2258705   +
2258706   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2258707   +
2258708   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2258709   +
2258710   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2258711   +
2258712   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2258713   +
2258714   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2258715   +
2258716   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2258717   +
2258718   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2258719   +
2258720   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2258721   +
2258722   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2258723   +
2258724   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2258725   +
2258726   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2258727   +
2258728   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2258729   +
2258730   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2258731   +
2258732   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2258733   +
2258734   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2258735   +
2258736   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2258737   +
2258738   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2258739   +
2258740   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2258741   +
2258742   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2258743   +
2258744   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2258745   +
2258746   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2258747   +
2258748   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2258749   +
2258750   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2258751   +
2258752   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2258753   +
2258754   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2258755   +
2258756   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2258757   +
2258758   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2258759   +
2258760   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2258761   +
2258762   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2258763   +
2258764   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2258765   +
2258766   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2258767   +
2258768   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2258769   +
2258770   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2258771   +
2258772   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2258773   +
2258774   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2258775   +
2258776   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2258777   +
2258778   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2258779   +
2258780   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2258781   +
2258782   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2258783   +
2258784   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2258785   +
2258786   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2258787   +
2258788   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2258789   +
2258790   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2258791   +
2258792   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2258793   +
2258794   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2258795   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2258796   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2258797   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2258798   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2258799   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258800   +end;
MPRINT(EM_DIAGRAM):   end;
2258801   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258802   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2258803   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2258804   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258805   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2258806   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2258807   +   end;
MPRINT(EM_DIAGRAM):   end;
2258808   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2258809   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2258810   +   end;
MPRINT(EM_DIAGRAM):   end;
2258811   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2258812   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2258813   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2258814   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258815   +   end;
MPRINT(EM_DIAGRAM):   end;
2258816   +end;
MPRINT(EM_DIAGRAM):   end;
2258817   +
2258818   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2258819   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2258820   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2258821   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2258822   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2258823   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258824   +end;
MPRINT(EM_DIAGRAM):   end;
2258825   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258826   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2258827   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2258828   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258829   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2258830   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2258831   +   end;
MPRINT(EM_DIAGRAM):   end;
2258832   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2258833   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2258834   +   end;
MPRINT(EM_DIAGRAM):   end;
2258835   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2258836   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2258837   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2258838   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258839   +   end;
MPRINT(EM_DIAGRAM):   end;
2258840   +end;
MPRINT(EM_DIAGRAM):   end;
2258841   +
2258842   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2258843   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2258844   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2258845   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2258846   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2258847   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258848   +end;
MPRINT(EM_DIAGRAM):   end;
2258849   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258850   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2258851   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2258852   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258853   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2258854   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2258855   +   end;
MPRINT(EM_DIAGRAM):   end;
2258856   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2258857   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2258858   +   end;
MPRINT(EM_DIAGRAM):   end;
2258859   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2258860   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2258861   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2258862   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258863   +   end;
MPRINT(EM_DIAGRAM):   end;
2258864   +end;
MPRINT(EM_DIAGRAM):   end;
2258865   +
2258866   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2258867   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2258868   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2258869   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2258870   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2258871   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258872   +end;
MPRINT(EM_DIAGRAM):   end;
2258873   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258874   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2258875   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2258876   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258877   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2258878   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2258879   +   end;
MPRINT(EM_DIAGRAM):   end;
2258880   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2258881   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2258882   +   end;
MPRINT(EM_DIAGRAM):   end;
2258883   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2258884   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2258885   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2258886   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258887   +   end;
MPRINT(EM_DIAGRAM):   end;
2258888   +end;
MPRINT(EM_DIAGRAM):   end;
2258889   +
2258890   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2258891   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2258892   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2258893   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2258894   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2258895   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258896   +end;
MPRINT(EM_DIAGRAM):   end;
2258897   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258898   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2258899   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2258900   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258901   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2258902   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2258903   +   end;
MPRINT(EM_DIAGRAM):   end;
2258904   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2258905   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2258906   +   end;
MPRINT(EM_DIAGRAM):   end;
2258907   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2258908   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2258909   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2258910   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258911   +   end;
MPRINT(EM_DIAGRAM):   end;
2258912   +end;
MPRINT(EM_DIAGRAM):   end;
2258913   +
2258914   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2258915   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2258916   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2258917   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2258918   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2258919   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258920   +end;
MPRINT(EM_DIAGRAM):   end;
2258921   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258922   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2258923   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2258924   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258925   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2258926   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2258927   +   end;
MPRINT(EM_DIAGRAM):   end;
2258928   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2258929   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2258930   +   end;
MPRINT(EM_DIAGRAM):   end;
2258931   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2258932   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2258933   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2258934   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258935   +   end;
MPRINT(EM_DIAGRAM):   end;
2258936   +end;
MPRINT(EM_DIAGRAM):   end;
2258937   +
2258938   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2258939   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2258940   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2258941   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2258942   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2258943   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258944   +end;
MPRINT(EM_DIAGRAM):   end;
2258945   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258946   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2258947   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2258948   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258949   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2258950   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2258951   +   end;
MPRINT(EM_DIAGRAM):   end;
2258952   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2258953   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2258954   +   end;
MPRINT(EM_DIAGRAM):   end;
2258955   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2258956   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2258957   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2258958   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258959   +   end;
MPRINT(EM_DIAGRAM):   end;
2258960   +end;
MPRINT(EM_DIAGRAM):   end;
2258961   +
2258962   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2258963   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2258964   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2258965   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2258966   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2258967   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2258968   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2258969   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2258970   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2258971   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2258972   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2258973   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2258974   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2258975   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2258976   +end;
MPRINT(EM_DIAGRAM):   end;
2258977   +else do;
MPRINT(EM_DIAGRAM):   else do;
2258978   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2258979   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2258980   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2258981   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2258982   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2258983   +   end;
MPRINT(EM_DIAGRAM):   end;
2258984   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2258985   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2258986   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2258987   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2258988   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2258989   +   end;
MPRINT(EM_DIAGRAM):   end;
2258990   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2258991   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2258992   +   end;
MPRINT(EM_DIAGRAM):   end;
2258993   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2258994   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2258995   +   end;
MPRINT(EM_DIAGRAM):   end;
2258996   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2258997   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2258998   +   end;
MPRINT(EM_DIAGRAM):   end;
2258999   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2259000   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2259001   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2259002   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2259003   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2259004   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2259005   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2259006   +   end;
MPRINT(EM_DIAGRAM):   end;
2259007   +end;
MPRINT(EM_DIAGRAM):   end;
2259008   +
2259009   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2259010   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2259011   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2259012   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2259013   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2259014   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2259015   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2259016   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2259017   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2259018   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2259019   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2259020   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2259021   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2259022   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2259023   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2259024   +end;
MPRINT(EM_DIAGRAM):   end;
2259025   +else do;
MPRINT(EM_DIAGRAM):   else do;
2259026   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2259027   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2259028   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2259029   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2259030   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2259031   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2259032   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2259033   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2259034   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2259035   +         end;
MPRINT(EM_DIAGRAM):   end;
2259036   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2259037   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2259038   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2259039   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2259040   +            end;
MPRINT(EM_DIAGRAM):   end;
2259041   +         end;
MPRINT(EM_DIAGRAM):   end;
2259042   +      end;
MPRINT(EM_DIAGRAM):   end;
2259043   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2259044   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2259045   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2259046   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2259047   +         end;
MPRINT(EM_DIAGRAM):   end;
2259048   +      end;
MPRINT(EM_DIAGRAM):   end;
2259049   +   end;
MPRINT(EM_DIAGRAM):   end;
2259050   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2259051   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2259052   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2259053   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2259054   +      end;
MPRINT(EM_DIAGRAM):   end;
2259055   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2259056   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2259057   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2259058   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2259059   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2259060   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2259061   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2259062   +         end;
MPRINT(EM_DIAGRAM):   end;
2259063   +      end;
MPRINT(EM_DIAGRAM):   end;
2259064   +   end;
MPRINT(EM_DIAGRAM):   end;
2259065   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2259066   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2259067   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2259068   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2259069   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2259070   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2259071   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2259072   +   end;
MPRINT(EM_DIAGRAM):   end;
2259073   +end;
MPRINT(EM_DIAGRAM):   end;
2259074   +
2259075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259076   +*** Checking missing input Interval
2259077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2259078   +
2259079   +IF NMISS(
2259080   +   AcceptedCmpTotal ,
2259081   +   Age ,
2259082   +   Frq ,
2259083   +   Income ,
2259084   +   Kidhome ,
2259085   +   Mnt ,
2259086   +   MntFishProducts ,
2259087   +   MntFruits ,
2259088   +   MntGoldProds ,
2259089   +   MntMeatProducts ,
2259090   +   MntSweetProducts ,
2259091   +   MntWines ,
2259092   +   MonthsAsCustomer ,
2259093   +   NumCatalogPurchases ,
2259094   +   NumDealsPurchases ,
2259095   +   NumDistPurchases ,
2259096   +   NumStorePurchases ,
2259097   +   NumWebPurchases ,
2259098   +   NumWebVisitsMonth ,
2259099   +   RFMstat ,
2259100   +   RMntFrq ,
2259101   +   Recency ,
2259102   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2259103   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2259104   +
2259105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2259106   +END;
MPRINT(EM_DIAGRAM):   END;
2259107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259108   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2259109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259110   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2259111   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2259112   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2259113   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2259114   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2259115   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2259116   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2259117   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2259118   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2259119   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2259120   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2259121   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2259122   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2259123   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2259124   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2259125   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2259126   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2259127   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2259128   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2259129   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2259130   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2259131   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2259132   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2259133   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2259134   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2259135   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2259136   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2259137   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2259138   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2259139   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2259140   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2259141   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2259142   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2259143   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2259144   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2259145   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2259146   +END;
MPRINT(EM_DIAGRAM):   END;
2259147   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2259148   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2259149   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2259150   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2259151   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2259152   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2259153   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2259154   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2259155   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2259156   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2259157   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2259158   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2259159   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2259160   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2259161   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2259162   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2259163   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2259164   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2259165   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2259166   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2259167   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2259168   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2259169   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2259170   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2259171   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2259172   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2259173   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2259174   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2259175   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2259176   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2259177   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2259178   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2259179   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2259180   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2259181   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2259182   +   ELSE S_NumCatalogPurchases
2259183   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2259184   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2259185   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2259186   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2259187   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2259188   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2259189   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2259190   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2259191   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2259192   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2259193   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2259194   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2259195   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2259196   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2259197   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2259198   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2259199   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2259200   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2259201   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2259202   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2259203   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2259204   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2259205   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2259206   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2259207   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2259208   +END;
MPRINT(EM_DIAGRAM):   END;
2259209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259210   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2259211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259212   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259213   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2259214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259216   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2259217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259218   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2259219   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2259220   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2259221   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2259222   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2259223   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2259224   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2259225   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2259226   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2259227   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2259228   +          +      0.1112677116841 * S_NumDealsPurchases
2259229   +          +     0.01563584187072 * S_NumDistPurchases
2259230   +          +     0.19193969522995 * S_NumStorePurchases
2259231   +          +      0.3133556199984 * S_NumWebPurchases
2259232   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2259233   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2259234   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2259235   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2259236   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2259237   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2259238   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2259239   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2259240   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2259241   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2259242   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2259243   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2259244   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2259245   +          +     0.30225032753275 * S_NumDealsPurchases
2259246   +          +     0.33833359923595 * S_NumDistPurchases
2259247   +          +    -0.20255599575849 * S_NumStorePurchases
2259248   +          +    -0.12040071168942 * S_NumWebPurchases
2259249   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2259250   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2259251   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2259252   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2259253   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2259254   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2259255   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2259256   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2259257   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2259258   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2259259   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2259260   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2259261   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2259262   +          +     0.16792903091627 * S_NumDealsPurchases
2259263   +          +    -0.37408945626745 * S_NumDistPurchases
2259264   +          +    -0.18067262995566 * S_NumStorePurchases
2259265   +          +     0.21192146789881 * S_NumWebPurchases
2259266   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2259267   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2259268   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2259269   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2259270   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2259271   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2259272   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2259273   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2259274   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2259275   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2259276   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2259277   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2259278   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2259279   +          +     0.29407429399136 * S_NumDealsPurchases
2259280   +          +     0.01610745252195 * S_NumDistPurchases
2259281   +          +    -0.17767939085628 * S_NumStorePurchases
2259282   +          +    -0.15168958538637 * S_NumWebPurchases
2259283   +          +     0.17433622143988 * S_NumWebVisitsMonth
2259284   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2259285   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2259286   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2259287   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2259288   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2259289   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2259290   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2259291   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2259292   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2259293   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2259294   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2259295   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2259296   +          +    -0.37976451362108 * S_NumDealsPurchases
2259297   +          +    -0.17027731520801 * S_NumDistPurchases
2259298   +          +     0.59849493667087 * S_NumStorePurchases
2259299   +          +     0.65481480560301 * S_NumWebPurchases
2259300   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2259301   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2259302   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2259303   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2259304   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2259305   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2259306   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2259307   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2259308   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2259309   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2259310   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2259311   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2259312   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2259313   +          +    -0.07686699131623 * S_NumDealsPurchases
2259314   +          +    -0.07220460738926 * S_NumDistPurchases
2259315   +          +    -0.06554027468389 * S_NumStorePurchases
2259316   +          +     0.10422838158001 * S_NumWebPurchases
2259317   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2259318   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2259319   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2259320   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2259321   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2259322   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2259323   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2259324   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2259325   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2259326   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2259327   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2259328   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2259329   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2259330   +          +    -0.07920122387563 * S_NumDealsPurchases
2259331   +          +      0.3649244061347 * S_NumDistPurchases
2259332   +          +     0.36475853688403 * S_NumStorePurchases
2259333   +          +     0.02153991404063 * S_NumWebPurchases
2259334   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2259335   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2259336   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2259337   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2259338   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2259339   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2259340   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2259341   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2259342   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2259343   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2259344   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2259345   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2259346   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2259347   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2259348   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2259349   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2259350   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2259351   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2259352   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2259353   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2259354   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2259355   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2259356   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2259357   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2259358   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2259359   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2259360   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2259361   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2259362   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2259363   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2259364   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2259365   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2259366   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2259367   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2259368   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2259369   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2259370   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2259371   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2259372   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2259373   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2259374   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2259375   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2259376   +          +     0.07744097241553 * Marital_StatusDivorced
2259377   +          +     -0.0247463100385 * Marital_StatusMarried
2259378   +          +     0.05804915234573 * Marital_StatusSingle
2259379   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2259380   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2259381   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2259382   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2259383   +          +     0.01390668926269 * Marital_StatusDivorced
2259384   +          +     0.01136282152074 * Marital_StatusMarried
2259385   +          +     0.12450246418789 * Marital_StatusSingle
2259386   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2259387   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2259388   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2259389   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2259390   +          +    -0.19133456931879 * Marital_StatusDivorced
2259391   +          +     0.56263566654996 * Marital_StatusMarried
2259392   +          +    -0.42172822038882 * Marital_StatusSingle
2259393   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2259394   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2259395   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2259396   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2259397   +          +    -0.19871205065609 * Marital_StatusDivorced
2259398   +          +    -0.14730795681603 * Marital_StatusMarried
2259399   +          +     0.05055432510362 * Marital_StatusSingle
2259400   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2259401   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2259402   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2259403   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2259404   +          +    -0.35623807358995 * Marital_StatusDivorced
2259405   +          +     0.30324726283965 * Marital_StatusMarried
2259406   +          +    -0.18561093467927 * Marital_StatusSingle
2259407   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2259408   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2259409   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2259410   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2259411   +          +     0.11581014663368 * Marital_StatusDivorced
2259412   +          +    -0.31070638037659 * Marital_StatusMarried
2259413   +          +     0.17131747253949 * Marital_StatusSingle
2259414   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2259415   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2259416   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2259417   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2259418   +          +    -0.42450599871892 * Marital_StatusDivorced
2259419   +          +     0.48162905075885 * Marital_StatusMarried
2259420   +          +    -0.26618507749283 * Marital_StatusSingle
2259421   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2259422   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2259423   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2259424   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2259425   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2259426   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2259427   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2259428   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2259429   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2259430   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2259431   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2259432   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2259433   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2259434   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2259435   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2259436   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2259437   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2259438   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2259439   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2259440   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2259441   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2259442   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2259443   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2259444   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2259445   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2259446   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2259447   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2259448   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2259449   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2259450   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2259451   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2259452   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2259453   +END;
MPRINT(EM_DIAGRAM):   END;
2259454   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2259455   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2259456   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2259457   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2259458   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2259459   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2259460   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2259461   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2259462   +END;
MPRINT(EM_DIAGRAM):   END;
2259463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259464   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2259465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259466   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2259467   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2259468   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2259469   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2259470   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2259471   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2259472   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2259473   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2259474   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2259475   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2259476   +          +     1.96719021971894 * S_NumDealsPurchases
2259477   +          +    -0.44535354794671 * S_NumDistPurchases
2259478   +          +    -0.54827762736866 * S_NumStorePurchases
2259479   +          +     1.02703310241897 * S_NumWebPurchases
2259480   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2259481   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2259482   +        S_RMntFrq  +       0.651688575044 * S_Recency
2259483   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2259484   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2259485   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2259486   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2259487   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2259488   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2259489   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2259490   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2259491   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2259492   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2259493   +          +     1.34659447971131 * S_NumDealsPurchases
2259494   +          +    -0.51624251310423 * S_NumDistPurchases
2259495   +          +      -1.283121574848 * S_NumStorePurchases
2259496   +          +    -1.83517806228926 * S_NumWebPurchases
2259497   +          +     0.51321339475285 * S_NumWebVisitsMonth
2259498   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2259499   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2259500   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2259501   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2259502   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2259503   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2259504   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2259505   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2259506   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2259507   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2259508   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2259509   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2259510   +          +     0.67492297345004 * S_NumDealsPurchases
2259511   +          +    -0.40437875375926 * S_NumDistPurchases
2259512   +          +     0.36322603681545 * S_NumStorePurchases
2259513   +          +    -1.15315070635524 * S_NumWebPurchases
2259514   +          +     1.20707272201156 * S_NumWebVisitsMonth
2259515   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2259516   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2259517   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2259518   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2259519   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2259520   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2259521   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2259522   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2259523   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2259524   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2259525   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2259526   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2259527   +          +    -0.41427983342148 * S_NumDealsPurchases
2259528   +          +    -0.22714305629205 * S_NumDistPurchases
2259529   +          +    -0.78763182048862 * S_NumStorePurchases
2259530   +          +    -0.26669253451501 * S_NumWebPurchases
2259531   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2259532   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2259533   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2259534   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2259535   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2259536   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2259537   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2259538   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2259539   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2259540   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2259541   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2259542   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2259543   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2259544   +          +      0.7697882092212 * S_NumDealsPurchases
2259545   +          +     0.51864835453056 * S_NumDistPurchases
2259546   +          +    -1.18320366630444 * S_NumStorePurchases
2259547   +          +     -0.6608394639529 * S_NumWebPurchases
2259548   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2259549   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2259550   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2259551   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2259552   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2259553   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2259554   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2259555   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2259556   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2259557   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2259558   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2259559   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2259560   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2259561   +          +     1.45707983202269 * S_NumDealsPurchases
2259562   +          +     0.83341887728641 * S_NumDistPurchases
2259563   +          +    -0.36664450469423 * S_NumStorePurchases
2259564   +          +     0.63911579043339 * S_NumWebPurchases
2259565   +          +     0.67144790303554 * S_NumWebVisitsMonth
2259566   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2259567   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2259568   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2259569   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2259570   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2259571   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2259572   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2259573   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2259574   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2259575   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2259576   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2259577   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2259578   +          +     0.68491896063662 * S_NumDealsPurchases
2259579   +          +      0.5386312048592 * S_NumDistPurchases
2259580   +          +     1.28108942503912 * S_NumStorePurchases
2259581   +          +    -0.88282270505969 * S_NumWebPurchases
2259582   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2259583   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2259584   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2259585   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2259586   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2259587   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2259588   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2259589   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2259590   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2259591   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2259592   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2259593   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2259594   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2259595   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2259596   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2259597   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2259598   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2259599   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2259600   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2259601   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2259602   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2259603   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2259604   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2259605   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2259606   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2259607   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2259608   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2259609   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2259610   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2259611   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2259612   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2259613   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2259614   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2259615   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2259616   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2259617   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2259618   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2259619   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2259620   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2259621   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2259622   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2259623   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2259624   +          +    -3.97961426831865 * Marital_StatusDivorced
2259625   +          +     0.00932639813867 * Marital_StatusMarried
2259626   +          +     1.29310186574718 * Marital_StatusSingle
2259627   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2259628   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2259629   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2259630   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2259631   +          +    -0.30358516578188 * Marital_StatusDivorced
2259632   +          +    -0.96176709360703 * Marital_StatusMarried
2259633   +          +     1.26977690921649 * Marital_StatusSingle
2259634   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2259635   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2259636   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2259637   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2259638   +          +     0.55272671490757 * Marital_StatusDivorced
2259639   +          +      0.1499239288334 * Marital_StatusMarried
2259640   +          +    -0.46840941760604 * Marital_StatusSingle
2259641   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2259642   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2259643   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2259644   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2259645   +          +      -1.240735370138 * Marital_StatusDivorced
2259646   +          +    -1.20089294883599 * Marital_StatusMarried
2259647   +          +     0.57492674426149 * Marital_StatusSingle
2259648   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2259649   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2259650   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2259651   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2259652   +          +     1.05435442049802 * Marital_StatusDivorced
2259653   +          +      0.3571256349717 * Marital_StatusMarried
2259654   +          +    -0.44741267266578 * Marital_StatusSingle
2259655   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2259656   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2259657   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2259658   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2259659   +          +     2.06026721980778 * Marital_StatusDivorced
2259660   +          +    -0.49583258645166 * Marital_StatusMarried
2259661   +          +    -1.14824900824474 * Marital_StatusSingle
2259662   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2259663   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2259664   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2259665   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2259666   +          +     -1.1890908607447 * Marital_StatusDivorced
2259667   +          +    -0.46668809907123 * Marital_StatusMarried
2259668   +          +     1.20342564763422 * Marital_StatusSingle
2259669   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2259670   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2259671   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2259672   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2259673   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2259674   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2259675   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2259676   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2259677   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2259678   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2259679   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2259680   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2259681   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2259682   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2259683   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2259684   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2259685   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2259686   +END;
MPRINT(EM_DIAGRAM):   END;
2259687   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2259688   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2259689   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2259690   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2259691   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2259692   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2259693   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2259694   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2259695   +END;
MPRINT(EM_DIAGRAM):   END;
2259696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259697   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2259698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259699   +
2259700   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2259701   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2259702   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2259703   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2259704   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2259705   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2259706   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2259707   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2259708   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2259709   +end;
MPRINT(EM_DIAGRAM):   end;
2259710   +else do;
MPRINT(EM_DIAGRAM):   else do;
2259711   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2259712   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2259713   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2259714   +   end;
MPRINT(EM_DIAGRAM):   end;
2259715   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2259716   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2259717   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2259718   +   end;
MPRINT(EM_DIAGRAM):   end;
2259719   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2259720   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2259721   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2259722   +   end;
MPRINT(EM_DIAGRAM):   end;
2259723   +end;
MPRINT(EM_DIAGRAM):   end;
2259724   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2259725   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2259726   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2259727   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2259728   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2259729   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2259730   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2259731   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2259732   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2259733   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2259734   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2259735   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2259736   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2259737   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2259738   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2259739   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2259740   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2259741   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2259742   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2259743   +END;
MPRINT(EM_DIAGRAM):   END;
2259744   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2259745   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2259746   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2259747   +END;
MPRINT(EM_DIAGRAM):   END;
2259748   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2259749   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2259750   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2259751   +END;
MPRINT(EM_DIAGRAM):   END;
2259752   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2259753   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2259754   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2259755   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2259756   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2259757   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2259758   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2259759   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259760   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2259761   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2259762   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2259763   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2259764   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2259765   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2259766   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2259767   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2259768   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2259769   +END;
MPRINT(EM_DIAGRAM):   END;
2259770   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2259771   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2259772   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2259773   +drop
2259774   +H1x1_1
2259775   +H1x1_2
2259776   +H1x1_3
2259777   +H1x1_4
2259778   +H1x1_5
2259779   +H1x1_6
2259780   +H1x1_7
2259781   +H1x2_1
2259782   +H1x2_2
2259783   +H1x2_3
2259784   +H1x2_4
2259785   +H1x2_5
2259786   +H1x2_6
2259787   +H1x2_7
2259788   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2259789   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2259790   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2259791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2259792   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2259793   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2259794   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2259795   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2259796   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2259797   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2259798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2259799   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2259800   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2259801   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2259802   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2259803   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2259804   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2259805   +* Ensmbl36: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Average Posteriors of 7 models;
2259806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2259807   +P_DepVar1 = (
2259808   +AutoNeural6_P_DepVar1 +
2259809   +AutoNeural7_P_DepVar1 +
2259810   +AutoNeural8_P_DepVar1 +
2259811   +AutoNeural10_P_DepVar1 +
2259812   +AutoNeural9_P_DepVar1 +
2259813   +AutoNeural11_P_DepVar1 +
2259814   +AutoNeural12_P_DepVar1
2259815   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural6_P_DepVar1 + AutoNeural7_P_DepVar1 + 
AutoNeural8_P_DepVar1 + AutoNeural10_P_DepVar1 + AutoNeural9_P_DepVar1 + 
AutoNeural11_P_DepVar1 + AutoNeural12_P_DepVar1 )/7;
2259816   +P_DepVar0 = (
2259817   +AutoNeural6_P_DepVar0 +
2259818   +AutoNeural7_P_DepVar0 +
2259819   +AutoNeural8_P_DepVar0 +
2259820   +AutoNeural10_P_DepVar0 +
2259821   +AutoNeural9_P_DepVar0 +
2259822   +AutoNeural11_P_DepVar0 +
2259823   +AutoNeural12_P_DepVar0
2259824   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural6_P_DepVar0 + AutoNeural7_P_DepVar0 + 
AutoNeural8_P_DepVar0 + AutoNeural10_P_DepVar0 + AutoNeural9_P_DepVar0 + 
AutoNeural11_P_DepVar0 + AutoNeural12_P_DepVar0 )/7;
2259825   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2259826   +* Ensmbl36: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Classification Vars;
2259827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2259828   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2259829   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2259830   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2259831   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2259832   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2259833   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2259834   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2259835   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2259836   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2259837   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2259838   +end;
MPRINT(EM_DIAGRAM):   end;
2259839   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2259840   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2259841   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2259842   +end;
MPRINT(EM_DIAGRAM):   end;
2259843   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2259844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2259845   +* Ensmbl36: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Producing Unformatted variable;
2259846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2259847   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2259848   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2259849   +else
2259850   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2259851   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2259852   +* Ensmbl36: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing _WARN_ Variable;
2259853   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2259854   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2259855   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2259856   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2259857   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2259857  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2259858   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2259858  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2259859   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2259859  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2259860   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2259860  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2259861   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2259861  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2259862   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2259862  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2259863   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2259863  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2259864   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2259864  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2259865   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2259865  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2259866   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2259866  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2259867   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2259867  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2259868   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2259868  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2259869   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2259869  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2259870   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2259870  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2259871   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2259871  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2259872   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2259872  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2259873   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2259873  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2259874   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2259874  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2259875   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2259875  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2259876   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2259876  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2259877   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2259877  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2259878   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2259878  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2259879   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2259879  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2259880   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2259880  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2259881   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2259881  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2259882   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2259882  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2259883   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2259883  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2259884   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2259884  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2259885   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2259886   +* Ensmbl36: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Residual Vars;
2259887   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2259888   +if
2259889   +F_DepVar NE '1'
2259890   +AND F_DepVar NE '0'
2259891   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2259892   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2259893   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2259894   +end;
MPRINT(EM_DIAGRAM):   end;
2259895   +else do;
MPRINT(EM_DIAGRAM):   else do;
2259896   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2259897   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2259898   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2259899   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2259900   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2259901   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2259902   +END;
MPRINT(EM_DIAGRAM):   END;
2259903   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2259904    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL36_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.21 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2259905    quit;
2259906    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl36_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl36_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl36_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2259966    filename _pref
2259966  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
2259967    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2259968    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas.
2259969   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2259970   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2259971   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2259972   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2259973   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2259974   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2259975   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2259976   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2259977   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2259978   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2259979   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2259980   +LENGTH _WARN_ $4
2259981   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2259982   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2259983   +
2259984   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2259985   +
2259986   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2259987   +
2259988   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2259989   +
2259990   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2259991   +
2259992   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2259993   +
2259994   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2259995   +
2259996   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2259997   +
2259998   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2259999   +
2260000   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2260001   +
2260002   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2260003   +
2260004   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2260005   +
2260006   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2260007   +
2260008   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2260009   +
2260010   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2260011   +
2260012   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2260013   +
2260014   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2260015   +
2260016   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2260017   +
2260018   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2260019   +
2260020   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2260021   +
2260022   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2260023   +
2260024   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2260025   +
2260026   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2260027   +
2260028   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2260029   +
2260030   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2260031   +
2260032   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2260033   +
2260034   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2260035   +
2260036   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2260037   +
2260038   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2260039   +
2260040   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2260041   +
2260042   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2260043   +
2260044   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2260045   +
2260046   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2260047   +
2260048   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2260049   +
2260050   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2260051   +
2260052   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2260053   +
2260054   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2260055   +
2260056   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2260057   +
2260058   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2260059   +
2260060   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2260061   +
2260062   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2260063   +
2260064   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2260065   +
2260066   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2260067   +
2260068   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2260069   +
2260070   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2260071   +
2260072   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2260073   +
2260074   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2260075   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2260076   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2260077   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2260078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2260079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260080   +end;
MPRINT(EM_DIAGRAM):   end;
2260081   +else do;
MPRINT(EM_DIAGRAM):   else do;
2260082   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2260083   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2260084   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2260085   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2260086   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2260087   +   end;
MPRINT(EM_DIAGRAM):   end;
2260088   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2260089   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2260090   +   end;
MPRINT(EM_DIAGRAM):   end;
2260091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2260092   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2260093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2260094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260095   +   end;
MPRINT(EM_DIAGRAM):   end;
2260096   +end;
MPRINT(EM_DIAGRAM):   end;
2260097   +
2260098   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2260099   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2260100   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2260101   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2260102   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2260103   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260104   +end;
MPRINT(EM_DIAGRAM):   end;
2260105   +else do;
MPRINT(EM_DIAGRAM):   else do;
2260106   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2260107   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2260108   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2260109   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2260110   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2260111   +   end;
MPRINT(EM_DIAGRAM):   end;
2260112   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2260113   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2260114   +   end;
MPRINT(EM_DIAGRAM):   end;
2260115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2260116   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2260117   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2260118   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260119   +   end;
MPRINT(EM_DIAGRAM):   end;
2260120   +end;
MPRINT(EM_DIAGRAM):   end;
2260121   +
2260122   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2260123   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2260124   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2260125   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2260126   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2260127   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260128   +end;
MPRINT(EM_DIAGRAM):   end;
2260129   +else do;
MPRINT(EM_DIAGRAM):   else do;
2260130   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2260131   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2260132   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2260133   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2260134   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2260135   +   end;
MPRINT(EM_DIAGRAM):   end;
2260136   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2260137   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2260138   +   end;
MPRINT(EM_DIAGRAM):   end;
2260139   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2260140   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2260141   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2260142   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260143   +   end;
MPRINT(EM_DIAGRAM):   end;
2260144   +end;
MPRINT(EM_DIAGRAM):   end;
2260145   +
2260146   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2260147   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2260148   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2260149   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2260150   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2260151   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260152   +end;
MPRINT(EM_DIAGRAM):   end;
2260153   +else do;
MPRINT(EM_DIAGRAM):   else do;
2260154   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2260155   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2260156   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2260157   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2260158   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2260159   +   end;
MPRINT(EM_DIAGRAM):   end;
2260160   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2260161   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2260162   +   end;
MPRINT(EM_DIAGRAM):   end;
2260163   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2260164   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2260165   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2260166   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260167   +   end;
MPRINT(EM_DIAGRAM):   end;
2260168   +end;
MPRINT(EM_DIAGRAM):   end;
2260169   +
2260170   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2260171   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2260172   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2260173   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2260174   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2260175   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260176   +end;
MPRINT(EM_DIAGRAM):   end;
2260177   +else do;
MPRINT(EM_DIAGRAM):   else do;
2260178   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2260179   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2260180   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2260181   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2260182   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2260183   +   end;
MPRINT(EM_DIAGRAM):   end;
2260184   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2260185   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2260186   +   end;
MPRINT(EM_DIAGRAM):   end;
2260187   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2260188   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2260189   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2260190   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260191   +   end;
MPRINT(EM_DIAGRAM):   end;
2260192   +end;
MPRINT(EM_DIAGRAM):   end;
2260193   +
2260194   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2260195   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2260196   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2260197   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2260198   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2260199   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260200   +end;
MPRINT(EM_DIAGRAM):   end;
2260201   +else do;
MPRINT(EM_DIAGRAM):   else do;
2260202   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2260203   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2260204   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2260205   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2260206   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2260207   +   end;
MPRINT(EM_DIAGRAM):   end;
2260208   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2260209   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2260210   +   end;
MPRINT(EM_DIAGRAM):   end;
2260211   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2260212   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2260213   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2260214   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260215   +   end;
MPRINT(EM_DIAGRAM):   end;
2260216   +end;
MPRINT(EM_DIAGRAM):   end;
2260217   +
2260218   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2260219   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2260220   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2260221   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2260222   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2260223   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260224   +end;
MPRINT(EM_DIAGRAM):   end;
2260225   +else do;
MPRINT(EM_DIAGRAM):   else do;
2260226   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2260227   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2260228   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2260229   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2260230   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2260231   +   end;
MPRINT(EM_DIAGRAM):   end;
2260232   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2260233   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2260234   +   end;
MPRINT(EM_DIAGRAM):   end;
2260235   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2260236   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2260237   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2260238   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260239   +   end;
MPRINT(EM_DIAGRAM):   end;
2260240   +end;
MPRINT(EM_DIAGRAM):   end;
2260241   +
2260242   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2260243   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2260244   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2260245   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2260246   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2260247   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2260248   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2260249   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2260250   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2260251   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2260252   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2260253   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2260254   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2260255   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260256   +end;
MPRINT(EM_DIAGRAM):   end;
2260257   +else do;
MPRINT(EM_DIAGRAM):   else do;
2260258   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2260259   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2260260   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2260261   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2260262   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2260263   +   end;
MPRINT(EM_DIAGRAM):   end;
2260264   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2260265   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2260266   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2260267   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2260268   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2260269   +   end;
MPRINT(EM_DIAGRAM):   end;
2260270   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2260271   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2260272   +   end;
MPRINT(EM_DIAGRAM):   end;
2260273   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2260274   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2260275   +   end;
MPRINT(EM_DIAGRAM):   end;
2260276   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2260277   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2260278   +   end;
MPRINT(EM_DIAGRAM):   end;
2260279   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2260280   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2260281   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2260282   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2260283   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2260284   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2260285   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260286   +   end;
MPRINT(EM_DIAGRAM):   end;
2260287   +end;
MPRINT(EM_DIAGRAM):   end;
2260288   +
2260289   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2260290   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2260291   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2260292   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2260293   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2260294   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2260295   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2260296   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2260297   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2260298   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2260299   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2260300   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2260301   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2260302   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2260303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260304   +end;
MPRINT(EM_DIAGRAM):   end;
2260305   +else do;
MPRINT(EM_DIAGRAM):   else do;
2260306   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2260307   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2260308   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2260309   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2260310   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2260311   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2260312   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2260313   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2260314   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2260315   +         end;
MPRINT(EM_DIAGRAM):   end;
2260316   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2260317   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2260318   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2260319   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2260320   +            end;
MPRINT(EM_DIAGRAM):   end;
2260321   +         end;
MPRINT(EM_DIAGRAM):   end;
2260322   +      end;
MPRINT(EM_DIAGRAM):   end;
2260323   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2260324   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2260325   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2260326   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2260327   +         end;
MPRINT(EM_DIAGRAM):   end;
2260328   +      end;
MPRINT(EM_DIAGRAM):   end;
2260329   +   end;
MPRINT(EM_DIAGRAM):   end;
2260330   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2260331   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2260332   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2260333   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2260334   +      end;
MPRINT(EM_DIAGRAM):   end;
2260335   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2260336   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2260337   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2260338   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2260339   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2260340   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2260341   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2260342   +         end;
MPRINT(EM_DIAGRAM):   end;
2260343   +      end;
MPRINT(EM_DIAGRAM):   end;
2260344   +   end;
MPRINT(EM_DIAGRAM):   end;
2260345   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2260346   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2260347   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2260348   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2260349   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2260350   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2260351   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260352   +   end;
MPRINT(EM_DIAGRAM):   end;
2260353   +end;
MPRINT(EM_DIAGRAM):   end;
2260354   +
2260355   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260356   +*** Checking missing input Interval
2260357   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2260358   +
2260359   +IF NMISS(
2260360   +   AcceptedCmpTotal ,
2260361   +   Age ,
2260362   +   Frq ,
2260363   +   Income ,
2260364   +   Kidhome ,
2260365   +   Mnt ,
2260366   +   MntFishProducts ,
2260367   +   MntFruits ,
2260368   +   MntGoldProds ,
2260369   +   MntMeatProducts ,
2260370   +   MntSweetProducts ,
2260371   +   MntWines ,
2260372   +   MonthsAsCustomer ,
2260373   +   NumCatalogPurchases ,
2260374   +   NumDealsPurchases ,
2260375   +   NumDistPurchases ,
2260376   +   NumStorePurchases ,
2260377   +   NumWebPurchases ,
2260378   +   NumWebVisitsMonth ,
2260379   +   RFMstat ,
2260380   +   RMntFrq ,
2260381   +   Recency ,
2260382   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2260383   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2260384   +
2260385   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2260386   +END;
MPRINT(EM_DIAGRAM):   END;
2260387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260388   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2260389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260390   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2260391   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2260392   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2260393   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2260394   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2260395   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2260396   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2260397   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2260398   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2260399   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2260400   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2260401   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2260402   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2260403   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2260404   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2260405   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2260406   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2260407   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2260408   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2260409   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2260410   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2260411   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2260412   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2260413   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2260414   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2260415   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2260416   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2260417   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2260418   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2260419   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2260420   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2260421   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2260422   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2260423   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2260424   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2260425   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2260426   +END;
MPRINT(EM_DIAGRAM):   END;
2260427   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2260428   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2260429   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2260430   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2260431   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2260432   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2260433   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2260434   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2260435   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2260436   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2260437   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2260438   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2260439   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2260440   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2260441   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2260442   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2260443   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2260444   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2260445   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2260446   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2260447   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2260448   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2260449   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2260450   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2260451   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2260452   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2260453   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2260454   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2260455   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2260456   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2260457   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2260458   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2260459   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2260460   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2260461   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2260462   +   ELSE S_NumCatalogPurchases
2260463   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2260464   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2260465   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2260466   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2260467   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2260468   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2260469   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2260470   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2260471   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2260472   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2260473   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2260474   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2260475   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2260476   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2260477   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2260478   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2260479   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2260480   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2260481   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2260482   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2260483   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2260484   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2260485   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2260486   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2260487   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2260488   +END;
MPRINT(EM_DIAGRAM):   END;
2260489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260490   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2260491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260493   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2260494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260496   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2260497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260498   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2260499   +   H1x1_1  =    -0.00800383076247 * S_AcceptedCmpTotal
2260500   +          +     0.02761302021586 * S_Age  +     0.10595191274027 * S_Frq
2260501   +          +    -0.15720275096991 * S_Income  +     0.14522420813528 *
2260502   +        S_Kidhome  +    -0.14485367197729 * S_Mnt  +     0.10029542464177 *
2260503   +        S_MntFishProducts  +      0.0126489883955 * S_MntFruits
2260504   +          +    -0.01721251339827 * S_MntGoldProds  +    -0.69008250574088 *
2260505   +        S_MntMeatProducts  +     0.01018204164797 * S_MntSweetProducts
2260506   +          +     0.22039448854688 * S_MntWines  +     0.01531819489128 *
2260507   +        S_MonthsAsCustomer  +    -0.23161250514854 * S_NumCatalogPurchases
2260508   +          +    -0.20127545393212 * S_NumDealsPurchases
2260509   +          +     0.04506333103933 * S_NumDistPurchases
2260510   +          +     0.35249458492371 * S_NumStorePurchases
2260511   +          +     0.25004284340707 * S_NumWebPurchases
2260512   +          +    -0.53727251220752 * S_NumWebVisitsMonth
2260513   +          +    -0.05439428653958 * S_RFMstat  +     0.36751560031492 *
2260514   +        S_RMntFrq  +      0.5373510847225 * S_Recency
2260515   +          +     0.08757258535387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.00800383076247 * S_AcceptedCmpTotal + 0.02761302021586 * 
S_Age + 0.10595191274027 * S_Frq + -0.15720275096991 * S_Income + 0.14522420813528 * S_Kidhome 
+ -0.14485367197729 * S_Mnt + 0.10029542464177 * S_MntFishProducts + 0.0126489883955 * 
S_MntFruits + -0.01721251339827 * S_MntGoldProds + -0.69008250574088 * S_MntMeatProducts + 
0.01018204164797 * S_MntSweetProducts + 0.22039448854688 * S_MntWines + 0.01531819489128 * 
S_MonthsAsCustomer + -0.23161250514854 * S_NumCatalogPurchases + -0.20127545393212 * 
S_NumDealsPurchases + 0.04506333103933 * S_NumDistPurchases + 0.35249458492371 * 
S_NumStorePurchases + 0.25004284340707 * S_NumWebPurchases + -0.53727251220752 * 
S_NumWebVisitsMonth + -0.05439428653958 * S_RFMstat + 0.36751560031492 * S_RMntFrq + 
0.5373510847225 * S_Recency + 0.08757258535387 * S_Teenhome ;
2260516   +   H1x1_1  = H1x1_1  +     0.21204360154837 * AcceptedCmp10
2260517   +          +     0.20766091429217 * AcceptedCmp20  +     0.20201307074488 *
2260518   +        AcceptedCmp30  +     0.26898383850722 * AcceptedCmp40
2260519   +          +     0.55154220854739 * AcceptedCmp50  +     0.13147328871299 *
2260520   +        Complain0  +    -0.02797177954188 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21204360154837 * AcceptedCmp10 + 0.20766091429217 * 
AcceptedCmp20 + 0.20201307074488 * AcceptedCmp30 + 0.26898383850722 * AcceptedCmp40 + 
0.55154220854739 * AcceptedCmp50 + 0.13147328871299 * Complain0 + -0.02797177954188 * 
HigherEducationBinary0 ;
2260521   +   H1x1_1  = H1x1_1  +    -0.00959805163736 * Education2n_Cycle
2260522   +          +     0.37192717803938 * EducationBasic  +    -0.10342362068485 *
2260523   +        EducationGraduation  +    -0.13377682721092 * EducationMaster
2260524   +          +    -0.19452359839974 * Marital_StatusDivorced
2260525   +          +     0.32327870805716 * Marital_StatusMarried
2260526   +          +    -0.20770545592268 * Marital_StatusSingle
2260527   +          +     0.35618773017298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00959805163736 * Education2n_Cycle + 
0.37192717803938 * EducationBasic + -0.10342362068485 * EducationGraduation + 
-0.13377682721092 * EducationMaster + -0.19452359839974 * Marital_StatusDivorced + 
0.32327870805716 * Marital_StatusMarried + -0.20770545592268 * Marital_StatusSingle + 
0.35618773017298 * Marital_StatusTogether ;
2260528   +   H1x1_1  =     0.87012150629431 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87012150629431 + H1x1_1 ;
2260529   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2260530   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2260531   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2260532   +END;
MPRINT(EM_DIAGRAM):   END;
2260533   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2260534   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2260535   +END;
MPRINT(EM_DIAGRAM):   END;
2260536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260537   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2260538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260539   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2260540   +   H1x2_1  =     0.92357456692651 * S_AcceptedCmpTotal
2260541   +          +    -0.00516549264504 * S_Age  +    -1.03043789382359 * S_Frq
2260542   +          +     0.78555631441048 * S_Income  +    -1.36329797235747 *
2260543   +        S_Kidhome  +    -0.77229288487872 * S_Mnt  +     1.27281095482218 *
2260544   +        S_MntFishProducts  +     0.04568599055132 * S_MntFruits
2260545   +          +    -0.13434867195633 * S_MntGoldProds  +    -1.95682488683295 *
2260546   +        S_MntMeatProducts  +     -0.0253141337078 * S_MntSweetProducts
2260547   +          +     0.67857436596482 * S_MntWines  +    -0.07247572940845 *
2260548   +        S_MonthsAsCustomer  +    -1.02814758425435 * S_NumCatalogPurchases
2260549   +          +    -0.02120959778153 * S_NumDealsPurchases
2260550   +          +     1.49013956394863 * S_NumDistPurchases
2260551   +          +    -0.96806240220463 * S_NumStorePurchases
2260552   +          +    -1.68330472453558 * S_NumWebPurchases
2260553   +          +     3.42976128164256 * S_NumWebVisitsMonth
2260554   +          +    -0.38912520446503 * S_RFMstat  +    -2.57487899031042 *
2260555   +        S_RMntFrq  +    -3.14923215912621 * S_Recency
2260556   +          +    -0.67635091810974 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.92357456692651 * S_AcceptedCmpTotal + -0.00516549264504 * 
S_Age + -1.03043789382359 * S_Frq + 0.78555631441048 * S_Income + -1.36329797235747 * 
S_Kidhome + -0.77229288487872 * S_Mnt + 1.27281095482218 * S_MntFishProducts + 
0.04568599055132 * S_MntFruits + -0.13434867195633 * S_MntGoldProds + -1.95682488683295 * 
S_MntMeatProducts + -0.0253141337078 * S_MntSweetProducts + 0.67857436596482 * S_MntWines + 
-0.07247572940845 * S_MonthsAsCustomer + -1.02814758425435 * S_NumCatalogPurchases + 
-0.02120959778153 * S_NumDealsPurchases + 1.49013956394863 * S_NumDistPurchases + 
-0.96806240220463 * S_NumStorePurchases + -1.68330472453558 * S_NumWebPurchases + 
3.42976128164256 * S_NumWebVisitsMonth + -0.38912520446503 * S_RFMstat + -2.57487899031042 * 
S_RMntFrq + -3.14923215912621 * S_Recency + -0.67635091810974 * S_Teenhome ;
2260557   +   H1x2_1  = H1x2_1  +    -0.18835638765595 * AcceptedCmp10
2260558   +          +     1.28752081945681 * AcceptedCmp20  +     -0.5515893923669 *
2260559   +        AcceptedCmp30  +    -0.82440763600043 * AcceptedCmp40
2260560   +          +     1.94503109075872 * AcceptedCmp50  +    -0.75977722298402 *
2260561   +        Complain0  +    -1.11349075129464 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.18835638765595 * AcceptedCmp10 + 1.28752081945681 * 
AcceptedCmp20 + -0.5515893923669 * AcceptedCmp30 + -0.82440763600043 * AcceptedCmp40 + 
1.94503109075872 * AcceptedCmp50 + -0.75977722298402 * Complain0 + -1.11349075129464 * 
HigherEducationBinary0 ;
2260562   +   H1x2_1  = H1x2_1  +     1.79843117215153 * Education2n_Cycle
2260563   +          +    -1.50428649925314 * EducationBasic  +    -0.32238897768725 *
2260564   +        EducationGraduation  +    -0.16909007224958 * EducationMaster
2260565   +          +      1.9815992681602 * Marital_StatusDivorced
2260566   +          +    -3.07893181570848 * Marital_StatusMarried
2260567   +          +     1.72965298244219 * Marital_StatusSingle
2260568   +          +    -3.17208781997524 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.79843117215153 * Education2n_Cycle + 
-1.50428649925314 * EducationBasic + -0.32238897768725 * EducationGraduation + 
-0.16909007224958 * EducationMaster + 1.9815992681602 * Marital_StatusDivorced + 
-3.07893181570848 * Marital_StatusMarried + 1.72965298244219 * Marital_StatusSingle + 
-3.17208781997524 * Marital_StatusTogether ;
2260569   +   H1x2_1  =     0.54729406730223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.54729406730223 + H1x2_1 ;
2260570   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2260571   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2260572   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2260573   +   IF H1x2_1  < _REC_EPS AND H1x2_1  > - _REC_EPS THEN
2260574   +   H1x2_1  = H1x2_1  * H1x2_1 ;
MPRINT(EM_DIAGRAM):   IF H1x2_1 < _REC_EPS AND H1x2_1 > - _REC_EPS THEN H1x2_1 = H1x2_1 * 
H1x2_1 ;
2260575   +   ELSE H1x2_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x2_1 = _REC_EPS ;
2260576   +END;
MPRINT(EM_DIAGRAM):   END;
2260577   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2260578   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2260579   +END;
MPRINT(EM_DIAGRAM):   END;
2260580   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260581   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2260582   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260583   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2260584   +   H1x3_1  =     0.90092602642364 * S_AcceptedCmpTotal
2260585   +          +    -0.16291307307626 * S_Age  +    -0.40132431666712 * S_Frq
2260586   +          +    -0.77251140598484 * S_Income  +     0.02215214313934 *
2260587   +        S_Kidhome  +     0.13123074182657 * S_Mnt  +    -0.43664076061176 *
2260588   +        S_MntFishProducts  +    -1.64192761266072 * S_MntFruits
2260589   +          +    -1.54189230184745 * S_MntGoldProds  +     -0.4138869968665 *
2260590   +        S_MntMeatProducts  +      0.5773885392047 * S_MntSweetProducts
2260591   +          +     1.45077769194851 * S_MntWines  +      0.5855746168529 *
2260592   +        S_MonthsAsCustomer  +     0.10198319985004 * S_NumCatalogPurchases
2260593   +          +     -0.5334151509863 * S_NumDealsPurchases
2260594   +          +     0.40600458912114 * S_NumDistPurchases
2260595   +          +    -0.30674653528261 * S_NumStorePurchases
2260596   +          +     0.10785037433743 * S_NumWebPurchases
2260597   +          +     0.99701680073452 * S_NumWebVisitsMonth
2260598   +          +    -0.25371895811899 * S_RFMstat  +     2.19406614746442 *
2260599   +        S_RMntFrq  +      1.0786726340694 * S_Recency
2260600   +          +     0.64406049150007 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.90092602642364 * S_AcceptedCmpTotal + -0.16291307307626 * 
S_Age + -0.40132431666712 * S_Frq + -0.77251140598484 * S_Income + 0.02215214313934 * 
S_Kidhome + 0.13123074182657 * S_Mnt + -0.43664076061176 * S_MntFishProducts + 
-1.64192761266072 * S_MntFruits + -1.54189230184745 * S_MntGoldProds + -0.4138869968665 * 
S_MntMeatProducts + 0.5773885392047 * S_MntSweetProducts + 1.45077769194851 * S_MntWines + 
0.5855746168529 * S_MonthsAsCustomer + 0.10198319985004 * S_NumCatalogPurchases + 
-0.5334151509863 * S_NumDealsPurchases + 0.40600458912114 * S_NumDistPurchases + 
-0.30674653528261 * S_NumStorePurchases + 0.10785037433743 * S_NumWebPurchases + 
0.99701680073452 * S_NumWebVisitsMonth + -0.25371895811899 * S_RFMstat + 2.19406614746442 * 
S_RMntFrq + 1.0786726340694 * S_Recency + 0.64406049150007 * S_Teenhome ;
2260601   +   H1x3_1  = H1x3_1  +    -0.58424742605644 * AcceptedCmp10
2260602   +          +     -0.7436165858459 * AcceptedCmp20  +    -0.33959137246457 *
2260603   +        AcceptedCmp30  +     0.42726020731333 * AcceptedCmp40
2260604   +          +     2.23707409189181 * AcceptedCmp50  +     0.98135772482722 *
2260605   +        Complain0  +    -0.85818399669867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.58424742605644 * AcceptedCmp10 + -0.7436165858459 * 
AcceptedCmp20 + -0.33959137246457 * AcceptedCmp30 + 0.42726020731333 * AcceptedCmp40 + 
2.23707409189181 * AcceptedCmp50 + 0.98135772482722 * Complain0 + -0.85818399669867 * 
HigherEducationBinary0 ;
2260606   +   H1x3_1  = H1x3_1  +    -0.89540752048995 * Education2n_Cycle
2260607   +          +     1.29513448243349 * EducationBasic  +    -1.47068621785539 *
2260608   +        EducationGraduation  +    -1.63362973413899 * EducationMaster
2260609   +          +    -0.72494401881341 * Marital_StatusDivorced
2260610   +          +    -0.82332231639631 * Marital_StatusMarried
2260611   +          +     -0.8863559011195 * Marital_StatusSingle
2260612   +          +     0.97129982315045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.89540752048995 * Education2n_Cycle + 
1.29513448243349 * EducationBasic + -1.47068621785539 * EducationGraduation + 
-1.63362973413899 * EducationMaster + -0.72494401881341 * Marital_StatusDivorced + 
-0.82332231639631 * Marital_StatusMarried + -0.8863559011195 * Marital_StatusSingle + 
0.97129982315045 * Marital_StatusTogether ;
2260613   +   H1x3_1  =     0.55234573720932 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.55234573720932 + H1x3_1 ;
2260614   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2260615   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2260616   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2260617   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2260618   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2260619   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2260620   +END;
MPRINT(EM_DIAGRAM):   END;
2260621   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2260622   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2260623   +END;
MPRINT(EM_DIAGRAM):   END;
2260624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260625   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2260626   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260627   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2260628   +   P_DepVar1  =     35.4482526843154 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 35.4482526843154 * H1x1_1 ;
2260629   +   P_DepVar1  = P_DepVar1  +    -0.08810161142704 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.08810161142704 * H1x2_1 ;
2260630   +   P_DepVar1  = P_DepVar1  +     0.02248060710303 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 0.02248060710303 * H1x3_1 ;
2260631   +   P_DepVar1  =    -6.23004657634651 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.23004657634651 + P_DepVar1 ;
2260632   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2260633   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2260634   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2260635   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2260636   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2260637   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2260638   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2260639   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2260640   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2260641   +END;
MPRINT(EM_DIAGRAM):   END;
2260642   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2260643   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2260644   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2260645   +END;
MPRINT(EM_DIAGRAM):   END;
2260646   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2260647   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2260648   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2260649   +END;
MPRINT(EM_DIAGRAM):   END;
2260650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260651   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2260652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2260653   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2260654   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2260655   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2260656   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2260657   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2260658   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2260659   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2260660   +END;
MPRINT(EM_DIAGRAM):   END;
2260661   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2260662   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2260663   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2260664   +drop
2260665   +H1x1_1
2260666   +H1x2_1
2260667   +H1x3_1
2260668   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x2_1 H1x3_1 ;
2260669   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2260670    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2260671    quit;
2260672    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2260673    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2260674    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2260675    retain ID 2 Node "AutoNeural6";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural6";
2260676    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2260677    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2506 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2506 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260678    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2260679    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260680    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2506 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2506 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2260681    proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME 
CREATOR);
2260682    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260683    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL6_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260684    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2260685    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2260686    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2260687    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260688    proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
2260689    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2260690    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2260691    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260692    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260693    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2260694    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2260695    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260696    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260697    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2260698    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2260698  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1495 rows and 5 columns.

2260699    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260700    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2260701    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1495 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1495 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2260702    filename _pref
2260702  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2260703    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2260704    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2260705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2260706   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2260707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2260708   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2260709   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2260710   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2260711    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2260712    quit;
2260713    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2260714    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2260715    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2260716    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2260717    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2260718    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260719    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2260720    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260721    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260722    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2260723    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260724    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2260725    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2260726    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2260727    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2260728    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260729    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2260730    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2260731    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2260732    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260733    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260734    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2260735    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2260736    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260737    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260738    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2260739    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2260739  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2260740    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2260741    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2260742    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1499 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260743    filename _pref
2260743  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2260744    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2260745    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2260746   +
2260747   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2260748   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2260748  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2260749   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2260750   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2260751   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2260752   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2260753   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2260754    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2260755    quit;
2260756    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2260757    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2260758    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2260759    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2260760    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2260761    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260762    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2260763    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260764    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260765    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2260766    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260767    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260768    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2260769    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2260770    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2260771    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260772    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2260773    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2260774    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2260775    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260776    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260777    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2260778    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2260779    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260780    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260781    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2260782    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2260782  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2260783    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2260784    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2260785    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1538 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260786    filename _pref
2260786  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2260787    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2260788    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2260789   +
2260790   +
2260791   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2260792   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2260793   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2260794   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2260795   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2260796   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2260797   +
2260798   +
2260799   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2260800   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2260801   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2260802   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2260803   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2260804   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2260805   +
2260806   +
2260807   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2260808   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2260809   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2260810   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2260811   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2260812   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2260813   +
2260814   +
2260815   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2260816   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2260817   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2260818   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2260819   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2260820   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2260821   +
2260822   +
2260823   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2260824   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2260825   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2260826   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2260827   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2260828   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2260829   +
2260830   +
2260831   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2260832   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2260833   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2260834   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2260835   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2260836   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2260837   +
2260838   +
2260839   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2260840   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2260841   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2260842   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2260843   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2260844   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2260845   +
2260846   +
2260847   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2260848   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2260849   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2260850   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2260851   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2260852   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2260853   +if
2260854   +_FILTERNORM1 not in ( '.')
2260855   + and
2260856   +_FILTERNORM2 not in ( '.')
2260857   + and
2260858   +_FILTERNORM3 not in ( '.')
2260859   + and
2260860   +_FILTERNORM4 not in ( '.')
2260861   + and
2260862   +_FILTERNORM5 not in ( '.')
2260863   + and
2260864   +_FILTERNORM6 not in ( '.')
2260865   + and
2260866   +_FILTERNORM7 not in ( ' ')
2260867   + and
2260868   +_FILTERNORM8 not in ( ' ')
2260869   +and
2260870   +( Dt_Customer ne .)
2260871   +and ( Income ne . and (Income<=107000))
2260872   +and ( Kidhome ne .)
2260873   +and ( MntFishProducts ne .)
2260874   +and ( MntFruits ne .)
2260875   +and ( MntGoldProds ne .)
2260876   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2260877   +and ( MntSweetProducts ne .)
2260878   +and ( MntWines ne .)
2260879   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2260880   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2260881   +and ( NumStorePurchases ne .)
2260882   +and ( NumWebPurchases ne .)
2260883   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2260884   +and ( Recency ne .)
2260885   +and ( Teenhome ne .)
2260886   +and ( Year_Birth ne .)
2260887   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2260888   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2260889   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2260890   +end;
MPRINT(EM_DIAGRAM):   end;
2260891   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2260892   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2260893    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2260894    quit;
2260895    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2260896    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2260897    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2260898    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2260899    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2260900    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260901    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2260902    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260903    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2260904    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2260905    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260906    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260907    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2260908    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2260909    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2260910    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260911    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2260912    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2260913    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2260914    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260915    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260916    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2260917    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2260918    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2260919    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260920    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2260921    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2260921  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2260922    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260923    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2260924    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1604 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2260925    %macro varDept(fcmpdata=,id=);
2260926    %global nobs&id scoreFlag&id;
2260927    %let scoreFlag&id = 0;
2260928    %if &id=1 or ^&fcmpStart %then %do;
2260929    proc sort data=&fcmpdata out=_temp&id nodupkey;
2260930    by NAME;
2260931    where id=&id and LHS in( %let j=1;
2260932    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2260933    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2260934    "&var" %let j = %eval(&j+1);
2260935    %end;
2260936    );
2260937    run;
2260938    %let dsid = %sysfunc(open(_temp&id));
2260939    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2260940    %let dsid = %sysfunc(close(&dsid));
2260941    %if &&nobs&id %then %do;
2260942    %let scoreFlag&id = 1;
2260943    %let fcmpStart = 1;
2260944    %end;
2260945    %else %let fcmpStart = 0;
2260946    %end;
2260947    %else %do;
2260948    proc sort data=&fcmpdata out=_tempid;
2260949    where id=&id;
2260950    by LHS;
2260951    run;
2260952    %let dsid = %sysfunc(open(_tempid));
2260953    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2260954    %let dsid = %sysfunc(close(&dsid));
2260955    %if ^&&nobs&id %then %do;
2260956    proc datasets lib=work nolist;
2260957    delete _tempid;
2260958    run;
2260959    quit;
2260960    %end;
2260961    %else %do;
2260962    data _tempAll;
2260963    set %let j=%eval(&id-1);
2260964    %do x=1 %to &j;
2260965    %if &&nobs&x %then %do;
2260966    _temp&x %end;
2260967    %end;
2260968    ;
2260969    run;
2260970    proc sql;
2260971    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2260971  ! work._tempid p2 where p.name=p2.lhs;
2260972    quit;
2260973    data _temp&id;
2260974    set _temp&id;
2260975    where LHS ne '' and NAME ne '' and Node ne '';
2260976    run;
2260977    proc datasets lib=work nolist;
2260978    delete _tempAll;
2260979    run;
2260980    %let dsid = %sysfunc(open(_temp&id));
2260981    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2260982    %let dsid = %sysfunc(close(&dsid));
2260983    %if ^&&nobs&id %then %do;
2260984    proc datasets lib=work nolist;
2260985    delete _temp&id;
2260986    run;
2260987    quit;
2260988    %end;
2260989    %else %do;
2260990    %let scoreFlag&id = 1;
2260991    data _temp&id;
2260992    set _temp&id;
2260993    where LHS ne NAME and node ne '';
2260994    run;
2260995    %let dsid = %sysfunc(open(_temp&id));
2260996    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2260997    %let dsid = %sysfunc(close(&dsid));
2260998    %if ^&&nobs&id %then %do;
2260999    proc datasets lib=work nolist;
2261000    delete _temp&id;
2261001    run;
2261002    quit;
2261003    %end;
2261004    %else %do;
2261005    proc sort data=_temp&id nodupkey;
2261006    by LHS NAME;
2261007    run;
2261008    %end;
2261009    %end;
2261010    %end;
2261011    %end;
2261012    %mend varDept;
2261013    %macro optCode(outdata=fcmpdata);
2261014    %global fcmpStart;
2261015    %let fcmpStart = 0;
2261016    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2261017    %let NumNodes=9;
2261018    %do k=1 %to &NumNodes;
2261019    %vardept(fcmpdata=&outdata, id=&k);
2261020    %end;
2261021    %mend optCode;
2261022    %optcode(outData=EMWS8.Ensmbl36_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2261023    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2261024    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2261025    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2261026    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261027    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2261028    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2261029    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2261030    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2261031    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2261032    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2261032  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2261033    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261034    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2261035    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2261036    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2261037    filename _pref
2261037  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
2261038    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2261039    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
2261040   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2261041   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2261042   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2261043   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2261044   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2261045   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2261046   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2261047   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2261048   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2261049   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2261050   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2261051   +LENGTH _WARN_ $4
2261052   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2261053   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2261054   +
2261055   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2261056   +
2261057   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2261058   +
2261059   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2261060   +
2261061   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2261062   +
2261063   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2261064   +
2261065   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2261066   +
2261067   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2261068   +
2261069   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2261070   +
2261071   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2261072   +
2261073   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2261074   +
2261075   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2261076   +
2261077   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2261078   +
2261079   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2261080   +
2261081   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2261082   +
2261083   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2261084   +
2261085   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2261086   +
2261087   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2261088   +
2261089   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2261090   +
2261091   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2261092   +
2261093   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2261094   +
2261095   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2261096   +
2261097   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2261098   +
2261099   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2261100   +
2261101   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2261102   +
2261103   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2261104   +
2261105   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2261106   +
2261107   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2261108   +
2261109   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2261110   +
2261111   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2261112   +
2261113   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2261114   +
2261115   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2261116   +
2261117   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2261118   +
2261119   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2261120   +
2261121   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2261122   +
2261123   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2261124   +
2261125   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2261126   +
2261127   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2261128   +
2261129   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2261130   +
2261131   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2261132   +
2261133   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2261134   +
2261135   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2261136   +
2261137   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2261138   +
2261139   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2261140   +
2261141   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2261142   +
2261143   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2261144   +
2261145   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2261146   +
2261147   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2261148   +
2261149   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2261150   +
2261151   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2261152   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2261153   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2261154   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2261155   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2261156   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261157   +end;
MPRINT(EM_DIAGRAM):   end;
2261158   +else do;
MPRINT(EM_DIAGRAM):   else do;
2261159   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2261160   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2261161   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2261162   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2261163   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2261164   +   end;
MPRINT(EM_DIAGRAM):   end;
2261165   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2261166   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2261167   +   end;
MPRINT(EM_DIAGRAM):   end;
2261168   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2261169   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2261170   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2261171   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261172   +   end;
MPRINT(EM_DIAGRAM):   end;
2261173   +end;
MPRINT(EM_DIAGRAM):   end;
2261174   +
2261175   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2261176   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2261177   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2261178   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2261179   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2261180   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261181   +end;
MPRINT(EM_DIAGRAM):   end;
2261182   +else do;
MPRINT(EM_DIAGRAM):   else do;
2261183   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2261184   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2261185   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2261186   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2261187   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2261188   +   end;
MPRINT(EM_DIAGRAM):   end;
2261189   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2261190   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2261191   +   end;
MPRINT(EM_DIAGRAM):   end;
2261192   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2261193   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2261194   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2261195   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261196   +   end;
MPRINT(EM_DIAGRAM):   end;
2261197   +end;
MPRINT(EM_DIAGRAM):   end;
2261198   +
2261199   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2261200   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2261201   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2261202   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2261203   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2261204   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261205   +end;
MPRINT(EM_DIAGRAM):   end;
2261206   +else do;
MPRINT(EM_DIAGRAM):   else do;
2261207   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2261208   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2261209   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2261210   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2261211   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2261212   +   end;
MPRINT(EM_DIAGRAM):   end;
2261213   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2261214   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2261215   +   end;
MPRINT(EM_DIAGRAM):   end;
2261216   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2261217   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2261218   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2261219   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261220   +   end;
MPRINT(EM_DIAGRAM):   end;
2261221   +end;
MPRINT(EM_DIAGRAM):   end;
2261222   +
2261223   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2261224   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2261225   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2261226   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2261227   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2261228   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261229   +end;
MPRINT(EM_DIAGRAM):   end;
2261230   +else do;
MPRINT(EM_DIAGRAM):   else do;
2261231   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2261232   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2261233   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2261234   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2261235   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2261236   +   end;
MPRINT(EM_DIAGRAM):   end;
2261237   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2261238   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2261239   +   end;
MPRINT(EM_DIAGRAM):   end;
2261240   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2261241   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2261242   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2261243   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261244   +   end;
MPRINT(EM_DIAGRAM):   end;
2261245   +end;
MPRINT(EM_DIAGRAM):   end;
2261246   +
2261247   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2261248   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2261249   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2261250   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2261251   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2261252   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261253   +end;
MPRINT(EM_DIAGRAM):   end;
2261254   +else do;
MPRINT(EM_DIAGRAM):   else do;
2261255   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2261256   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2261257   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2261258   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2261259   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2261260   +   end;
MPRINT(EM_DIAGRAM):   end;
2261261   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2261262   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2261263   +   end;
MPRINT(EM_DIAGRAM):   end;
2261264   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2261265   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2261266   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2261267   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261268   +   end;
MPRINT(EM_DIAGRAM):   end;
2261269   +end;
MPRINT(EM_DIAGRAM):   end;
2261270   +
2261271   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2261272   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2261273   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2261274   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2261275   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2261276   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261277   +end;
MPRINT(EM_DIAGRAM):   end;
2261278   +else do;
MPRINT(EM_DIAGRAM):   else do;
2261279   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2261280   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2261281   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2261282   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2261283   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2261284   +   end;
MPRINT(EM_DIAGRAM):   end;
2261285   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2261286   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2261287   +   end;
MPRINT(EM_DIAGRAM):   end;
2261288   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2261289   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2261290   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2261291   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261292   +   end;
MPRINT(EM_DIAGRAM):   end;
2261293   +end;
MPRINT(EM_DIAGRAM):   end;
2261294   +
2261295   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2261296   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2261297   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2261298   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2261299   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2261300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261301   +end;
MPRINT(EM_DIAGRAM):   end;
2261302   +else do;
MPRINT(EM_DIAGRAM):   else do;
2261303   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2261304   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2261305   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2261306   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2261307   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2261308   +   end;
MPRINT(EM_DIAGRAM):   end;
2261309   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2261310   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2261311   +   end;
MPRINT(EM_DIAGRAM):   end;
2261312   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2261313   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2261314   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2261315   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261316   +   end;
MPRINT(EM_DIAGRAM):   end;
2261317   +end;
MPRINT(EM_DIAGRAM):   end;
2261318   +
2261319   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2261320   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2261321   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2261322   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2261323   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2261324   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2261325   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2261326   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2261327   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2261328   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2261329   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2261330   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2261331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2261332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261333   +end;
MPRINT(EM_DIAGRAM):   end;
2261334   +else do;
MPRINT(EM_DIAGRAM):   else do;
2261335   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2261336   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2261337   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2261338   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2261339   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2261340   +   end;
MPRINT(EM_DIAGRAM):   end;
2261341   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2261342   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2261343   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2261344   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2261345   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2261346   +   end;
MPRINT(EM_DIAGRAM):   end;
2261347   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2261348   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2261349   +   end;
MPRINT(EM_DIAGRAM):   end;
2261350   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2261351   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2261352   +   end;
MPRINT(EM_DIAGRAM):   end;
2261353   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2261354   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2261355   +   end;
MPRINT(EM_DIAGRAM):   end;
2261356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2261357   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2261358   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2261359   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2261360   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2261361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2261362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261363   +   end;
MPRINT(EM_DIAGRAM):   end;
2261364   +end;
MPRINT(EM_DIAGRAM):   end;
2261365   +
2261366   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2261367   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2261368   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2261369   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2261370   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2261371   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2261372   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2261373   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2261374   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2261375   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2261376   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2261377   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2261378   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2261379   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2261380   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261381   +end;
MPRINT(EM_DIAGRAM):   end;
2261382   +else do;
MPRINT(EM_DIAGRAM):   else do;
2261383   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2261384   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2261385   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2261386   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2261387   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2261388   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2261389   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2261390   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2261391   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2261392   +         end;
MPRINT(EM_DIAGRAM):   end;
2261393   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2261394   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2261395   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2261396   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2261397   +            end;
MPRINT(EM_DIAGRAM):   end;
2261398   +         end;
MPRINT(EM_DIAGRAM):   end;
2261399   +      end;
MPRINT(EM_DIAGRAM):   end;
2261400   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2261401   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2261402   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2261403   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2261404   +         end;
MPRINT(EM_DIAGRAM):   end;
2261405   +      end;
MPRINT(EM_DIAGRAM):   end;
2261406   +   end;
MPRINT(EM_DIAGRAM):   end;
2261407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2261408   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2261409   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2261410   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2261411   +      end;
MPRINT(EM_DIAGRAM):   end;
2261412   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2261413   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2261414   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2261415   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2261416   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2261417   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2261418   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2261419   +         end;
MPRINT(EM_DIAGRAM):   end;
2261420   +      end;
MPRINT(EM_DIAGRAM):   end;
2261421   +   end;
MPRINT(EM_DIAGRAM):   end;
2261422   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2261423   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2261424   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2261425   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2261426   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2261427   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2261428   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261429   +   end;
MPRINT(EM_DIAGRAM):   end;
2261430   +end;
MPRINT(EM_DIAGRAM):   end;
2261431   +
2261432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261433   +*** Checking missing input Interval
2261434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2261435   +
2261436   +IF NMISS(
2261437   +   AcceptedCmpTotal ,
2261438   +   Age ,
2261439   +   Frq ,
2261440   +   Income ,
2261441   +   Kidhome ,
2261442   +   Mnt ,
2261443   +   MntFishProducts ,
2261444   +   MntFruits ,
2261445   +   MntGoldProds ,
2261446   +   MntMeatProducts ,
2261447   +   MntSweetProducts ,
2261448   +   MntWines ,
2261449   +   MonthsAsCustomer ,
2261450   +   NumCatalogPurchases ,
2261451   +   NumDealsPurchases ,
2261452   +   NumDistPurchases ,
2261453   +   NumStorePurchases ,
2261454   +   NumWebPurchases ,
2261455   +   NumWebVisitsMonth ,
2261456   +   RFMstat ,
2261457   +   RMntFrq ,
2261458   +   Recency ,
2261459   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2261460   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2261461   +
2261462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2261463   +END;
MPRINT(EM_DIAGRAM):   END;
2261464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261465   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2261466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261467   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2261468   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2261469   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2261470   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2261471   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2261472   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2261473   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2261474   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2261475   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2261476   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2261477   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2261478   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2261479   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2261480   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2261481   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2261482   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2261483   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2261484   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2261485   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2261486   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2261487   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2261488   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2261489   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2261490   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2261491   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2261492   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2261493   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2261494   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2261495   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2261496   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2261497   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2261498   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2261499   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2261500   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2261501   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2261502   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2261503   +END;
MPRINT(EM_DIAGRAM):   END;
2261504   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2261505   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2261506   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2261507   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2261508   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2261509   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2261510   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2261511   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2261512   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2261513   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2261514   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2261515   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2261516   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2261517   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2261518   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2261519   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2261520   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2261521   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2261522   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2261523   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2261524   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2261525   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2261526   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2261527   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2261528   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2261529   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2261530   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2261531   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2261532   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2261533   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2261534   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2261535   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2261536   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2261537   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2261538   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2261539   +   ELSE S_NumCatalogPurchases
2261540   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2261541   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2261542   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2261543   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2261544   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2261545   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2261546   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2261547   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2261548   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2261549   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2261550   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2261551   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2261552   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2261553   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2261554   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2261555   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2261556   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2261557   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2261558   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2261559   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2261560   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2261561   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2261562   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2261563   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2261564   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2261565   +END;
MPRINT(EM_DIAGRAM):   END;
2261566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261567   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2261568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261570   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2261571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261572   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261573   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2261574   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261575   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2261576   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2261577   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2261578   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2261579   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2261580   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2261581   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2261582   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2261583   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2261584   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2261585   +          +     0.08390531145773 * S_NumDealsPurchases
2261586   +          +    -0.29505970645775 * S_NumDistPurchases
2261587   +          +    -0.13820571170194 * S_NumStorePurchases
2261588   +          +     0.11468011313368 * S_NumWebPurchases
2261589   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2261590   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2261591   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2261592   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 * 
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome 
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 * 
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts + 
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 * 
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 * 
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 * 
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 * 
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq + 
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2261593   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2261594   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2261595   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2261596   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2261597   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2261598   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2261599   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2261600   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2261601   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2261602   +          +     0.18009076035363 * S_NumDealsPurchases
2261603   +          +     0.03853861006587 * S_NumDistPurchases
2261604   +          +    -0.05118063952874 * S_NumStorePurchases
2261605   +          +    -0.03282286120473 * S_NumWebPurchases
2261606   +          +     0.31160900419026 * S_NumWebVisitsMonth
2261607   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2261608   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2261609   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age 
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome + 
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 * 
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts + 
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 * 
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 * 
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 * 
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 * 
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq + 
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2261610   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2261611   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2261612   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2261613   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2261614   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 * 
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 + 
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 * 
HigherEducationBinary0 ;
2261615   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2261616   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2261617   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2261618   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2261619   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 * 
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 + 
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 * 
HigherEducationBinary0 ;
2261620   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2261621   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2261622   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2261623   +          +    -0.04750981393889 * Marital_StatusDivorced
2261624   +          +     0.28216925676677 * Marital_StatusMarried
2261625   +          +    -0.20757827413964 * Marital_StatusSingle
2261626   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle + 
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127 
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 * 
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 * 
Marital_StatusTogether ;
2261627   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2261628   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2261629   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2261630   +          +     0.05981919620577 * Marital_StatusDivorced
2261631   +          +    -0.17161573846062 * Marital_StatusMarried
2261632   +          +     0.15869440681091 * Marital_StatusSingle
2261633   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle + 
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation + 
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced + 
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle + 
-0.13282372850158 * Marital_StatusTogether ;
2261634   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2261635   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2261636   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2261637   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2261638   +END;
MPRINT(EM_DIAGRAM):   END;
2261639   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2261640   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2261641   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2261642   +END;
MPRINT(EM_DIAGRAM):   END;
2261643   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261644   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2261645   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261646   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2261647   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2261648   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2261649   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2261650   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2261651   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2261652   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2261653   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2261654   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2261655   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2261656   +          +     0.00741910846933 * S_NumDealsPurchases
2261657   +          +       1.334289252268 * S_NumDistPurchases
2261658   +          +    -0.29851567180932 * S_NumStorePurchases
2261659   +          +    -0.52115313259666 * S_NumWebPurchases
2261660   +          +     0.93907168501909 * S_NumWebVisitsMonth
2261661   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2261662   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2261663   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age 
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome + 
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 * 
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts + 
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 * 
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 * 
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 * 
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 * 
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq + 
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2261664   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2261665   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2261666   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2261667   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2261668   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2261669   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2261670   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2261671   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2261672   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2261673   +          +     1.60427001186844 * S_NumDealsPurchases
2261674   +          +    -0.18447618033353 * S_NumDistPurchases
2261675   +          +    -1.29966073003539 * S_NumStorePurchases
2261676   +          +    -1.12373457341536 * S_NumWebPurchases
2261677   +          +     1.46099221440494 * S_NumWebVisitsMonth
2261678   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2261679   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2261680   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 * 
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 * 
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts + 
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 * 
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines + 
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases + 
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases + 
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases + 
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 * 
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2261681   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2261682   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2261683   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2261684   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2261685   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 * 
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 + 
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 * 
HigherEducationBinary0 ;
2261686   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2261687   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2261688   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2261689   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2261690   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 * 
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 + 
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 * 
HigherEducationBinary0 ;
2261691   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2261692   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2261693   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2261694   +          +     0.59819559998538 * Marital_StatusDivorced
2261695   +          +     0.92957772553633 * Marital_StatusMarried
2261696   +          +    -1.11796266958894 * Marital_StatusSingle
2261697   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 * 
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster + 
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried + 
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2261698   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2261699   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2261700   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2261701   +          +      1.0870909562212 * Marital_StatusDivorced
2261702   +          +     1.50333961797515 * Marital_StatusMarried
2261703   +          +    -1.41407780765932 * Marital_StatusSingle
2261704   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle + 
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation + 
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced + 
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle + 
-0.52528072358697 * Marital_StatusTogether ;
2261705   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2261706   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2261707   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2261708   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2261709   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2261710   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2261711   +END;
MPRINT(EM_DIAGRAM):   END;
2261712   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2261713   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2261714   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2261715   +END;
MPRINT(EM_DIAGRAM):   END;
2261716   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261717   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2261718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261719   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2261720   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2261721   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2261722   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2261723   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2261724   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2261725   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2261726   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2261727   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2261728   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2261729   +          +     -1.1174504455343 * S_NumDealsPurchases
2261730   +          +    -0.18561253113498 * S_NumDistPurchases
2261731   +          +    -0.35231054612792 * S_NumStorePurchases
2261732   +          +      0.9249490354172 * S_NumWebPurchases
2261733   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2261734   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2261735   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2261736   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 * 
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 * 
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts + 
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 * 
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines + 
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases + 
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases + 
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases + 
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 * 
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2261737   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2261738   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2261739   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2261740   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2261741   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2261742   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2261743   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2261744   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2261745   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2261746   +          +     1.05434863590054 * S_NumDealsPurchases
2261747   +          +    -0.73255174632068 * S_NumDistPurchases
2261748   +          +     0.53949953455044 * S_NumStorePurchases
2261749   +          +    -0.61709467816649 * S_NumWebPurchases
2261750   +          +     1.36235282484348 * S_NumWebVisitsMonth
2261751   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2261752   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2261753   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 * 
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome 
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 * 
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts + 
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 * 
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 * 
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 * 
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 * 
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq + 
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2261754   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2261755   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2261756   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2261757   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2261758   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 * 
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 + 
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 * 
HigherEducationBinary0 ;
2261759   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2261760   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2261761   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2261762   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2261763   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833 
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 + 
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 * 
HigherEducationBinary0 ;
2261764   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2261765   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2261766   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2261767   +          +     0.22253248036322 * Marital_StatusDivorced
2261768   +          +    -1.72455332745001 * Marital_StatusMarried
2261769   +          +     0.57787272107232 * Marital_StatusSingle
2261770   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle + 
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation + 
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced + 
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle + 
0.16267074825086 * Marital_StatusTogether ;
2261771   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2261772   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2261773   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2261774   +          +     0.14637124403046 * Marital_StatusDivorced
2261775   +          +     0.18905186437528 * Marital_StatusMarried
2261776   +          +     0.00511958458521 * Marital_StatusSingle
2261777   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle + 
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation + 
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced + 
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle + 
-0.915980703129 * Marital_StatusTogether ;
2261778   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2261779   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2261780   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2261781   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2261782   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2261783   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2261784   +END;
MPRINT(EM_DIAGRAM):   END;
2261785   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2261786   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2261787   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2261788   +END;
MPRINT(EM_DIAGRAM):   END;
2261789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261790   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2261791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261792   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2261793   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2261794   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2261795   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2261796   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 * 
H1x2_2 ;
2261797   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2261798   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 * 
H1x3_2 ;
2261799   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2261800   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2261801   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2261802   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2261803   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2261804   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2261805   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2261806   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2261807   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2261808   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2261809   +END;
MPRINT(EM_DIAGRAM):   END;
2261810   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2261811   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2261812   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2261813   +END;
MPRINT(EM_DIAGRAM):   END;
2261814   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2261815   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2261816   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2261817   +END;
MPRINT(EM_DIAGRAM):   END;
2261818   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261819   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2261820   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2261821   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2261822   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2261823   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2261824   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2261825   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2261826   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2261827   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2261828   +END;
MPRINT(EM_DIAGRAM):   END;
2261829   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2261830   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2261831   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2261832   +drop
2261833   +H1x1_1
2261834   +H1x1_2
2261835   +H1x2_1
2261836   +H1x2_2
2261837   +H1x3_1
2261838   +H1x3_2
2261839   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2261840   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2261841    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2261842    quit;
2261843    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2261844    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2261845    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2261846    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
2261847    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2261848    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2931 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2931 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2261849    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2261850    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2261851    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2931 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2931 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261852    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME 
CREATOR);
2261853    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2261854    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2261855    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2261856    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2261857    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2261858    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261859    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
2261860    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2261861    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2261862    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2261863    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261864    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2261865    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2261866    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2261867    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261868    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2261869    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2261869  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1623 rows and 5 columns.

2261870    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2261871    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2261872    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1623 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1623 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261873    filename _pref
2261873  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2261874    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2261875    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2261876   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2261877   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2261878   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2261879   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2261880   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2261881   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2261882    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2261883    quit;
2261884    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2261885    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2261886    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2261887    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2261888    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2261889    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2261890    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2261891    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2261892    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261893    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2261894    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2261895    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261896    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2261897    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2261898    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2261899    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2261900    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2261901    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2261902    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2261903    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2261904    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2261905    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2261906    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2261907    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2261908    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261909    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2261910    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2261910  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2261911    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261912    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2261913    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1627 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2261914    filename _pref
2261914  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2261915    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2261916    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2261917   +
2261918   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2261919   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2261919  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2261920   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2261921   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2261922   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2261923   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2261924   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2261925    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2261926    quit;
2261927    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2261928    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2261929    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2261930    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2261931    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2261932    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261933    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2261934    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2261935    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261936    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2261937    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2261938    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2261939    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2261940    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2261941    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2261942    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261943    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2261944    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261945    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2261946    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2261947    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2261948    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2261949    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2261950    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2261951    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261952    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2261953    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2261953  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2261954    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261955    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2261956    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1666 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2261957    filename _pref
2261957  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2261958    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2261959    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2261960   +
2261961   +
2261962   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2261963   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2261964   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2261965   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2261966   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2261967   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2261968   +
2261969   +
2261970   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2261971   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2261972   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2261973   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2261974   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2261975   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2261976   +
2261977   +
2261978   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2261979   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2261980   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2261981   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2261982   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2261983   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2261984   +
2261985   +
2261986   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2261987   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2261988   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2261989   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2261990   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2261991   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2261992   +
2261993   +
2261994   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2261995   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2261996   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2261997   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2261998   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2261999   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2262000   +
2262001   +
2262002   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2262003   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2262004   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2262005   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2262006   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2262007   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2262008   +
2262009   +
2262010   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2262011   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2262012   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2262013   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2262014   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2262015   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2262016   +
2262017   +
2262018   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2262019   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2262020   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2262021   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2262022   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2262023   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2262024   +if
2262025   +_FILTERNORM1 not in ( '.')
2262026   + and
2262027   +_FILTERNORM2 not in ( '.')
2262028   + and
2262029   +_FILTERNORM3 not in ( '.')
2262030   + and
2262031   +_FILTERNORM4 not in ( '.')
2262032   + and
2262033   +_FILTERNORM5 not in ( '.')
2262034   + and
2262035   +_FILTERNORM6 not in ( '.')
2262036   + and
2262037   +_FILTERNORM7 not in ( ' ')
2262038   + and
2262039   +_FILTERNORM8 not in ( ' ')
2262040   +and
2262041   +( Dt_Customer ne .)
2262042   +and ( Income ne . and (Income<=107000))
2262043   +and ( Kidhome ne .)
2262044   +and ( MntFishProducts ne .)
2262045   +and ( MntFruits ne .)
2262046   +and ( MntGoldProds ne .)
2262047   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2262048   +and ( MntSweetProducts ne .)
2262049   +and ( MntWines ne .)
2262050   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2262051   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2262052   +and ( NumStorePurchases ne .)
2262053   +and ( NumWebPurchases ne .)
2262054   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2262055   +and ( Recency ne .)
2262056   +and ( Teenhome ne .)
2262057   +and ( Year_Birth ne .)
2262058   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2262059   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2262060   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2262061   +end;
MPRINT(EM_DIAGRAM):   end;
2262062   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2262063   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2262064    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2262065    quit;
2262066    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2262067    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2262068    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2262069    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2262070    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2262071    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2262072    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2262073    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2262074    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2262075    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2262076    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2262077    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2262078    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2262079    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2262080    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2262081    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2262082    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2262083    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2262084    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2262085    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2262086    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2262087    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2262088    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2262089    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2262090    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2262091    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2262092    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2262092  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2262093    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2262094    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2262095    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1732 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2262096    %macro varDept(fcmpdata=,id=);
2262097    %global nobs&id scoreFlag&id;
2262098    %let scoreFlag&id = 0;
2262099    %if &id=1 or ^&fcmpStart %then %do;
2262100    proc sort data=&fcmpdata out=_temp&id nodupkey;
2262101    by NAME;
2262102    where id=&id and LHS in( %let j=1;
2262103    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2262104    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2262105    "&var" %let j = %eval(&j+1);
2262106    %end;
2262107    );
2262108    run;
2262109    %let dsid = %sysfunc(open(_temp&id));
2262110    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2262111    %let dsid = %sysfunc(close(&dsid));
2262112    %if &&nobs&id %then %do;
2262113    %let scoreFlag&id = 1;
2262114    %let fcmpStart = 1;
2262115    %end;
2262116    %else %let fcmpStart = 0;
2262117    %end;
2262118    %else %do;
2262119    proc sort data=&fcmpdata out=_tempid;
2262120    where id=&id;
2262121    by LHS;
2262122    run;
2262123    %let dsid = %sysfunc(open(_tempid));
2262124    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2262125    %let dsid = %sysfunc(close(&dsid));
2262126    %if ^&&nobs&id %then %do;
2262127    proc datasets lib=work nolist;
2262128    delete _tempid;
2262129    run;
2262130    quit;
2262131    %end;
2262132    %else %do;
2262133    data _tempAll;
2262134    set %let j=%eval(&id-1);
2262135    %do x=1 %to &j;
2262136    %if &&nobs&x %then %do;
2262137    _temp&x %end;
2262138    %end;
2262139    ;
2262140    run;
2262141    proc sql;
2262142    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2262142  ! work._tempid p2 where p.name=p2.lhs;
2262143    quit;
2262144    data _temp&id;
2262145    set _temp&id;
2262146    where LHS ne '' and NAME ne '' and Node ne '';
2262147    run;
2262148    proc datasets lib=work nolist;
2262149    delete _tempAll;
2262150    run;
2262151    %let dsid = %sysfunc(open(_temp&id));
2262152    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2262153    %let dsid = %sysfunc(close(&dsid));
2262154    %if ^&&nobs&id %then %do;
2262155    proc datasets lib=work nolist;
2262156    delete _temp&id;
2262157    run;
2262158    quit;
2262159    %end;
2262160    %else %do;
2262161    %let scoreFlag&id = 1;
2262162    data _temp&id;
2262163    set _temp&id;
2262164    where LHS ne NAME and node ne '';
2262165    run;
2262166    %let dsid = %sysfunc(open(_temp&id));
2262167    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2262168    %let dsid = %sysfunc(close(&dsid));
2262169    %if ^&&nobs&id %then %do;
2262170    proc datasets lib=work nolist;
2262171    delete _temp&id;
2262172    run;
2262173    quit;
2262174    %end;
2262175    %else %do;
2262176    proc sort data=_temp&id nodupkey;
2262177    by LHS NAME;
2262178    run;
2262179    %end;
2262180    %end;
2262181    %end;
2262182    %end;
2262183    %mend varDept;
2262184    %macro optCode(outdata=fcmpdata);
2262185    %global fcmpStart;
2262186    %let fcmpStart = 0;
2262187    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2262188    %let NumNodes=9;
2262189    %do k=1 %to &NumNodes;
2262190    %vardept(fcmpdata=&outdata, id=&k);
2262191    %end;
2262192    %mend optCode;
2262193    %optcode(outData=EMWS8.Ensmbl36_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2262194    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2262195    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2262196    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2262197    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2262198    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2262199    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2262200    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2262201    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2262202    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2262203    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2262203  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2262204    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2262205    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2262206    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2262207    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2262208    filename _pref
2262208  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
2262209    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2262210    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas.
2262211   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2262212   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
The SAS System

2262213   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2262214   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2262215   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2262216   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2262217   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2262218   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2262219   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2262220   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2262221   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2262222   +LENGTH _WARN_ $4
2262223   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2262224   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2262225   +
2262226   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2262227   +
2262228   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2262229   +
2262230   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2262231   +
2262232   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2262233   +
2262234   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2262235   +
2262236   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2262237   +
2262238   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2262239   +
2262240   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2262241   +
2262242   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2262243   +
2262244   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2262245   +
2262246   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2262247   +
2262248   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2262249   +
2262250   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2262251   +
2262252   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2262253   +
2262254   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2262255   +
2262256   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2262257   +
2262258   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2262259   +
2262260   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2262261   +
2262262   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2262263   +
2262264   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2262265   +
2262266   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2262267   +
2262268   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2262269   +
2262270   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2262271   +
2262272   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2262273   +
2262274   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2262275   +
2262276   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2262277   +
2262278   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2262279   +
2262280   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2262281   +
2262282   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2262283   +
2262284   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2262285   +
2262286   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2262287   +
2262288   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2262289   +
2262290   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2262291   +
2262292   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2262293   +
2262294   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2262295   +
2262296   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2262297   +
2262298   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2262299   +
2262300   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2262301   +
2262302   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2262303   +
2262304   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2262305   +
2262306   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2262307   +
2262308   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2262309   +
2262310   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2262311   +
2262312   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2262313   +
2262314   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2262315   +
2262316   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2262317   +
2262318   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2262319   +
2262320   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2262321   +
2262322   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2262323   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2262324   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2262325   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2262326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2262327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262328   +end;
MPRINT(EM_DIAGRAM):   end;
2262329   +else do;
MPRINT(EM_DIAGRAM):   else do;
2262330   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2262331   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2262332   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2262333   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2262334   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2262335   +   end;
MPRINT(EM_DIAGRAM):   end;
2262336   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2262337   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2262338   +   end;
MPRINT(EM_DIAGRAM):   end;
2262339   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2262340   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2262341   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2262342   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262343   +   end;
MPRINT(EM_DIAGRAM):   end;
2262344   +end;
MPRINT(EM_DIAGRAM):   end;
2262345   +
2262346   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2262347   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2262348   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2262349   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2262350   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2262351   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262352   +end;
MPRINT(EM_DIAGRAM):   end;
2262353   +else do;
MPRINT(EM_DIAGRAM):   else do;
2262354   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2262355   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2262356   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2262357   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2262358   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2262359   +   end;
MPRINT(EM_DIAGRAM):   end;
2262360   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2262361   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2262362   +   end;
MPRINT(EM_DIAGRAM):   end;
2262363   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2262364   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2262365   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2262366   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262367   +   end;
MPRINT(EM_DIAGRAM):   end;
2262368   +end;
MPRINT(EM_DIAGRAM):   end;
2262369   +
2262370   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2262371   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2262372   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2262373   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2262374   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2262375   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262376   +end;
MPRINT(EM_DIAGRAM):   end;
2262377   +else do;
MPRINT(EM_DIAGRAM):   else do;
2262378   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2262379   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2262380   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2262381   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2262382   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2262383   +   end;
MPRINT(EM_DIAGRAM):   end;
2262384   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2262385   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2262386   +   end;
MPRINT(EM_DIAGRAM):   end;
2262387   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2262388   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2262389   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2262390   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262391   +   end;
MPRINT(EM_DIAGRAM):   end;
2262392   +end;
MPRINT(EM_DIAGRAM):   end;
2262393   +
2262394   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2262395   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2262396   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2262397   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2262398   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2262399   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262400   +end;
MPRINT(EM_DIAGRAM):   end;
2262401   +else do;
MPRINT(EM_DIAGRAM):   else do;
2262402   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2262403   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2262404   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2262405   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2262406   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2262407   +   end;
MPRINT(EM_DIAGRAM):   end;
2262408   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2262409   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2262410   +   end;
MPRINT(EM_DIAGRAM):   end;
2262411   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2262412   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2262413   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2262414   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262415   +   end;
MPRINT(EM_DIAGRAM):   end;
2262416   +end;
MPRINT(EM_DIAGRAM):   end;
2262417   +
2262418   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2262419   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2262420   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2262421   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2262422   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2262423   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262424   +end;
MPRINT(EM_DIAGRAM):   end;
2262425   +else do;
MPRINT(EM_DIAGRAM):   else do;
2262426   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2262427   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2262428   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2262429   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2262430   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2262431   +   end;
MPRINT(EM_DIAGRAM):   end;
2262432   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2262433   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2262434   +   end;
MPRINT(EM_DIAGRAM):   end;
2262435   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2262436   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2262437   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2262438   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262439   +   end;
MPRINT(EM_DIAGRAM):   end;
2262440   +end;
MPRINT(EM_DIAGRAM):   end;
2262441   +
2262442   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2262443   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2262444   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2262445   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2262446   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2262447   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262448   +end;
MPRINT(EM_DIAGRAM):   end;
2262449   +else do;
MPRINT(EM_DIAGRAM):   else do;
2262450   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2262451   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2262452   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2262453   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2262454   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2262455   +   end;
MPRINT(EM_DIAGRAM):   end;
2262456   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2262457   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2262458   +   end;
MPRINT(EM_DIAGRAM):   end;
2262459   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2262460   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2262461   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2262462   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262463   +   end;
MPRINT(EM_DIAGRAM):   end;
2262464   +end;
MPRINT(EM_DIAGRAM):   end;
2262465   +
2262466   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2262467   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2262468   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2262469   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2262470   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2262471   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262472   +end;
MPRINT(EM_DIAGRAM):   end;
2262473   +else do;
MPRINT(EM_DIAGRAM):   else do;
2262474   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2262475   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2262476   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2262477   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2262478   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2262479   +   end;
MPRINT(EM_DIAGRAM):   end;
2262480   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2262481   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2262482   +   end;
MPRINT(EM_DIAGRAM):   end;
2262483   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2262484   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2262485   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2262486   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262487   +   end;
MPRINT(EM_DIAGRAM):   end;
2262488   +end;
MPRINT(EM_DIAGRAM):   end;
2262489   +
2262490   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2262491   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2262492   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2262493   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2262494   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2262495   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2262496   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2262497   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2262498   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2262499   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2262500   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2262501   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2262502   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2262503   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262504   +end;
MPRINT(EM_DIAGRAM):   end;
2262505   +else do;
MPRINT(EM_DIAGRAM):   else do;
2262506   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2262507   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2262508   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2262509   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2262510   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2262511   +   end;
MPRINT(EM_DIAGRAM):   end;
2262512   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2262513   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2262514   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2262515   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2262516   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2262517   +   end;
MPRINT(EM_DIAGRAM):   end;
2262518   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2262519   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2262520   +   end;
MPRINT(EM_DIAGRAM):   end;
2262521   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2262522   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2262523   +   end;
MPRINT(EM_DIAGRAM):   end;
2262524   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2262525   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2262526   +   end;
MPRINT(EM_DIAGRAM):   end;
2262527   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2262528   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2262529   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2262530   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2262531   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2262532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2262533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262534   +   end;
MPRINT(EM_DIAGRAM):   end;
2262535   +end;
MPRINT(EM_DIAGRAM):   end;
2262536   +
2262537   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2262538   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2262539   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2262540   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2262541   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2262542   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2262543   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2262544   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2262545   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2262546   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2262547   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2262548   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2262549   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2262550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2262551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262552   +end;
MPRINT(EM_DIAGRAM):   end;
2262553   +else do;
MPRINT(EM_DIAGRAM):   else do;
2262554   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2262555   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2262556   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2262557   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2262558   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2262559   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2262560   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2262561   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2262562   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2262563   +         end;
MPRINT(EM_DIAGRAM):   end;
2262564   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2262565   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2262566   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2262567   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2262568   +            end;
MPRINT(EM_DIAGRAM):   end;
2262569   +         end;
MPRINT(EM_DIAGRAM):   end;
2262570   +      end;
MPRINT(EM_DIAGRAM):   end;
2262571   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2262572   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2262573   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2262574   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2262575   +         end;
MPRINT(EM_DIAGRAM):   end;
2262576   +      end;
MPRINT(EM_DIAGRAM):   end;
2262577   +   end;
MPRINT(EM_DIAGRAM):   end;
2262578   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2262579   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2262580   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2262581   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2262582   +      end;
MPRINT(EM_DIAGRAM):   end;
2262583   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2262584   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2262585   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2262586   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2262587   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2262588   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2262589   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2262590   +         end;
MPRINT(EM_DIAGRAM):   end;
2262591   +      end;
MPRINT(EM_DIAGRAM):   end;
2262592   +   end;
MPRINT(EM_DIAGRAM):   end;
2262593   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2262594   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2262595   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2262596   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2262597   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2262598   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2262599   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262600   +   end;
MPRINT(EM_DIAGRAM):   end;
2262601   +end;
MPRINT(EM_DIAGRAM):   end;
2262602   +
2262603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262604   +*** Checking missing input Interval
2262605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2262606   +
2262607   +IF NMISS(
2262608   +   AcceptedCmpTotal ,
2262609   +   Age ,
2262610   +   Frq ,
2262611   +   Income ,
2262612   +   Kidhome ,
2262613   +   Mnt ,
2262614   +   MntFishProducts ,
2262615   +   MntFruits ,
2262616   +   MntGoldProds ,
2262617   +   MntMeatProducts ,
2262618   +   MntSweetProducts ,
2262619   +   MntWines ,
2262620   +   MonthsAsCustomer ,
2262621   +   NumCatalogPurchases ,
2262622   +   NumDealsPurchases ,
2262623   +   NumDistPurchases ,
2262624   +   NumStorePurchases ,
2262625   +   NumWebPurchases ,
2262626   +   NumWebVisitsMonth ,
2262627   +   RFMstat ,
2262628   +   RMntFrq ,
2262629   +   Recency ,
2262630   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2262631   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2262632   +
2262633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2262634   +END;
MPRINT(EM_DIAGRAM):   END;
2262635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262636   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2262637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262638   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2262639   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2262640   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2262641   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2262642   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2262643   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2262644   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2262645   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2262646   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2262647   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2262648   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2262649   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2262650   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2262651   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2262652   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2262653   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2262654   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2262655   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2262656   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2262657   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2262658   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2262659   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2262660   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2262661   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2262662   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2262663   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2262664   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2262665   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2262666   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2262667   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2262668   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2262669   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2262670   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2262671   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2262672   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2262673   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2262674   +END;
MPRINT(EM_DIAGRAM):   END;
2262675   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2262676   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2262677   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2262678   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2262679   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2262680   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2262681   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2262682   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2262683   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2262684   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2262685   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2262686   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2262687   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2262688   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2262689   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2262690   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2262691   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2262692   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2262693   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2262694   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2262695   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2262696   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2262697   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2262698   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2262699   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2262700   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2262701   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2262702   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2262703   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2262704   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2262705   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2262706   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2262707   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2262708   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2262709   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2262710   +   ELSE S_NumCatalogPurchases
2262711   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2262712   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2262713   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2262714   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2262715   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2262716   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2262717   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2262718   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2262719   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2262720   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2262721   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2262722   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2262723   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2262724   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2262725   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2262726   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2262727   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2262728   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2262729   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2262730   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2262731   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2262732   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2262733   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2262734   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2262735   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2262736   +END;
MPRINT(EM_DIAGRAM):   END;
2262737   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262738   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2262739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262740   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262741   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2262742   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262744   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2262745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262746   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2262747   +   H1x1_1  =      1.2726802048269 * S_AcceptedCmpTotal
2262748   +          +    -0.02889982967357 * S_Age  +    -0.26165770909003 * S_Frq
2262749   +          +     0.19140564299867 * S_Income  +     0.30244335152969 *
2262750   +        S_Kidhome  +    -0.03391217967468 * S_Mnt  +    -0.99943007809307 *
2262751   +        S_MntFishProducts  +    -0.04374917285968 * S_MntFruits
2262752   +          +    -0.13546758294455 * S_MntGoldProds  +     3.59922243619013 *
2262753   +        S_MntMeatProducts  +    -0.10424531322566 * S_MntSweetProducts
2262754   +          +    -1.98884071414703 * S_MntWines  +     0.05310540691138 *
2262755   +        S_MonthsAsCustomer  +     0.58072892654416 * S_NumCatalogPurchases
2262756   +          +     0.30381426454211 * S_NumDealsPurchases
2262757   +          +     0.39966076372974 * S_NumDistPurchases
2262758   +          +    -0.58875986801139 * S_NumStorePurchases
2262759   +          +    -0.78850031558536 * S_NumWebPurchases
2262760   +          +     0.35182997415921 * S_NumWebVisitsMonth
2262761   +          +     1.51048129701176 * S_RFMstat  +     1.13354085492775 *
2262762   +        S_RMntFrq  +     -0.2185811652116 * S_Recency
2262763   +          +     0.01153374704027 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.2726802048269 * S_AcceptedCmpTotal + -0.02889982967357 * 
S_Age + -0.26165770909003 * S_Frq + 0.19140564299867 * S_Income + 0.30244335152969 * S_Kidhome 
+ -0.03391217967468 * S_Mnt + -0.99943007809307 * S_MntFishProducts + -0.04374917285968 * 
S_MntFruits + -0.13546758294455 * S_MntGoldProds + 3.59922243619013 * S_MntMeatProducts + 
-0.10424531322566 * S_MntSweetProducts + -1.98884071414703 * S_MntWines + 0.05310540691138 * 
S_MonthsAsCustomer + 0.58072892654416 * S_NumCatalogPurchases + 0.30381426454211 * 
S_NumDealsPurchases + 0.39966076372974 * S_NumDistPurchases + -0.58875986801139 * 
S_NumStorePurchases + -0.78850031558536 * S_NumWebPurchases + 0.35182997415921 * 
S_NumWebVisitsMonth + 1.51048129701176 * S_RFMstat + 1.13354085492775 * S_RMntFrq + 
-0.2185811652116 * S_Recency + 0.01153374704027 * S_Teenhome ;
2262764   +   H1x1_2  =     0.18093166280015 * S_AcceptedCmpTotal
2262765   +          +    -0.00677564787839 * S_Age  +    -0.21510325598577 * S_Frq
2262766   +          +     0.26314356814214 * S_Income  +    -0.30016454601651 *
2262767   +        S_Kidhome  +     -0.1410547608427 * S_Mnt  +    -0.04272369939478 *
2262768   +        S_MntFishProducts  +    -0.05622578678457 * S_MntFruits
2262769   +          +     0.04457230545618 * S_MntGoldProds  +     0.40709024692944 *
2262770   +        S_MntMeatProducts  +    -0.02989090770621 * S_MntSweetProducts
2262771   +          +    -0.18818656503765 * S_MntWines  +    -0.06237311646922 *
2262772   +        S_MonthsAsCustomer  +     0.39737856936198 * S_NumCatalogPurchases
2262773   +          +     0.33734772994048 * S_NumDealsPurchases
2262774   +          +     0.06152222921422 * S_NumDistPurchases
2262775   +          +    -0.32068333792942 * S_NumStorePurchases
2262776   +          +    -0.26971366415104 * S_NumWebPurchases
2262777   +          +     0.57693239481071 * S_NumWebVisitsMonth
2262778   +          +     0.01161324864777 * S_RFMstat  +     0.00311083015445 *
2262779   +        S_RMntFrq  +    -0.67669007299893 * S_Recency
2262780   +          +     -0.2298426154616 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18093166280015 * S_AcceptedCmpTotal + -0.00677564787839 * 
S_Age + -0.21510325598577 * S_Frq + 0.26314356814214 * S_Income + -0.30016454601651 * 
S_Kidhome + -0.1410547608427 * S_Mnt + -0.04272369939478 * S_MntFishProducts + 
-0.05622578678457 * S_MntFruits + 0.04457230545618 * S_MntGoldProds + 0.40709024692944 * 
S_MntMeatProducts + -0.02989090770621 * S_MntSweetProducts + -0.18818656503765 * S_MntWines + 
-0.06237311646922 * S_MonthsAsCustomer + 0.39737856936198 * S_NumCatalogPurchases + 
0.33734772994048 * S_NumDealsPurchases + 0.06152222921422 * S_NumDistPurchases + 
-0.32068333792942 * S_NumStorePurchases + -0.26971366415104 * S_NumWebPurchases + 
0.57693239481071 * S_NumWebVisitsMonth + 0.01161324864777 * S_RFMstat + 0.00311083015445 * 
S_RMntFrq + -0.67669007299893 * S_Recency + -0.2298426154616 * S_Teenhome ;
2262781   +   H1x1_3  =    -0.09356212420726 * S_AcceptedCmpTotal
2262782   +          +    -0.01904617704654 * S_Age  +    -0.15700206132472 * S_Frq
2262783   +          +    -0.58483226627076 * S_Income  +     0.30001673574917 *
2262784   +        S_Kidhome  +    -0.19921492301896 * S_Mnt  +    -0.00125986769238 *
2262785   +        S_MntFishProducts  +     0.10195959942937 * S_MntFruits
2262786   +          +      0.0069592628978 * S_MntGoldProds  +     0.03606436199308 *
2262787   +        S_MntMeatProducts  +     0.11259135359155 * S_MntSweetProducts
2262788   +          +     0.05408818612126 * S_MntWines  +    -0.14024859528104 *
2262789   +        S_MonthsAsCustomer  +    -0.14071929240584 * S_NumCatalogPurchases
2262790   +          +     0.22142792900578 * S_NumDealsPurchases
2262791   +          +     -0.0291983445755 * S_NumDistPurchases
2262792   +          +     -0.1997372957954 * S_NumStorePurchases
2262793   +          +    -0.01286201468794 * S_NumWebPurchases
2262794   +          +    -0.35208468552742 * S_NumWebVisitsMonth
2262795   +          +     0.02982651364231 * S_RFMstat  +      0.0228316921695 *
2262796   +        S_RMntFrq  +      0.3930877517629 * S_Recency
2262797   +          +     0.28989829670594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.09356212420726 * S_AcceptedCmpTotal + -0.01904617704654 * 
S_Age + -0.15700206132472 * S_Frq + -0.58483226627076 * S_Income + 0.30001673574917 * 
S_Kidhome + -0.19921492301896 * S_Mnt + -0.00125986769238 * S_MntFishProducts + 
0.10195959942937 * S_MntFruits + 0.0069592628978 * S_MntGoldProds + 0.03606436199308 * 
S_MntMeatProducts + 0.11259135359155 * S_MntSweetProducts + 0.05408818612126 * S_MntWines + 
-0.14024859528104 * S_MonthsAsCustomer + -0.14071929240584 * S_NumCatalogPurchases + 
0.22142792900578 * S_NumDealsPurchases + -0.0291983445755 * S_NumDistPurchases + 
-0.1997372957954 * S_NumStorePurchases + -0.01286201468794 * S_NumWebPurchases + 
-0.35208468552742 * S_NumWebVisitsMonth + 0.02982651364231 * S_RFMstat + 0.0228316921695 * 
S_RMntFrq + 0.3930877517629 * S_Recency + 0.28989829670594 * S_Teenhome ;
2262798   +   H1x1_1  = H1x1_1  +     0.03659432989123 * AcceptedCmp10
2262799   +          +    -0.12552546530316 * AcceptedCmp20  +     0.57200428680255 *
2262800   +        AcceptedCmp30  +      0.4327465126256 * AcceptedCmp40
2262801   +          +    -1.24484170256212 * AcceptedCmp50  +     0.21604379838869 *
2262802   +        Complain0  +    -0.14986629245585 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.03659432989123 * AcceptedCmp10 + -0.12552546530316 * 
AcceptedCmp20 + 0.57200428680255 * AcceptedCmp30 + 0.4327465126256 * AcceptedCmp40 + 
-1.24484170256212 * AcceptedCmp50 + 0.21604379838869 * Complain0 + -0.14986629245585 * 
HigherEducationBinary0 ;
2262803   +   H1x1_2  = H1x1_2  +    -0.13542589174402 * AcceptedCmp10
2262804   +          +    -0.19116289400292 * AcceptedCmp20  +    -0.10302282473135 *
2262805   +        AcceptedCmp30  +    -0.08705955845916 * AcceptedCmp40
2262806   +          +    -0.17435407626698 * AcceptedCmp50  +    -0.09781790399225 *
2262807   +        Complain0  +     0.02006296587353 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13542589174402 * AcceptedCmp10 + -0.19116289400292 
* AcceptedCmp20 + -0.10302282473135 * AcceptedCmp30 + -0.08705955845916 * AcceptedCmp40 + 
-0.17435407626698 * AcceptedCmp50 + -0.09781790399225 * Complain0 + 0.02006296587353 * 
HigherEducationBinary0 ;
2262808   +   H1x1_3  = H1x1_3  +     0.08917557424765 * AcceptedCmp10
2262809   +          +    -0.00944366858806 * AcceptedCmp20  +     0.30527409248576 *
2262810   +        AcceptedCmp30  +     0.26823019920335 * AcceptedCmp40
2262811   +          +    -0.02131660897576 * AcceptedCmp50  +    -0.16243659451446 *
2262812   +        Complain0  +    -0.28227689084686 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.08917557424765 * AcceptedCmp10 + -0.00944366858806 * 
AcceptedCmp20 + 0.30527409248576 * AcceptedCmp30 + 0.26823019920335 * AcceptedCmp40 + 
-0.02131660897576 * AcceptedCmp50 + -0.16243659451446 * Complain0 + -0.28227689084686 * 
HigherEducationBinary0 ;
2262813   +   H1x1_1  = H1x1_1  +     0.12998959528304 * Education2n_Cycle
2262814   +          +     0.48334684246109 * EducationBasic  +    -0.07156918649895 *
2262815   +        EducationGraduation  +    -0.21017720550072 * EducationMaster
2262816   +          +    -0.22358326722482 * Marital_StatusDivorced
2262817   +          +     0.09394210085787 * Marital_StatusMarried
2262818   +          +    -0.10381546554982 * Marital_StatusSingle
2262819   +          +     0.05935260608375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12998959528304 * Education2n_Cycle + 
0.48334684246109 * EducationBasic + -0.07156918649895 * EducationGraduation + 
-0.21017720550072 * EducationMaster + -0.22358326722482 * Marital_StatusDivorced + 
0.09394210085787 * Marital_StatusMarried + -0.10381546554982 * Marital_StatusSingle + 
0.05935260608375 * Marital_StatusTogether ;
2262820   +   H1x1_2  = H1x1_2  +     0.02955854298839 * Education2n_Cycle
2262821   +          +    -0.13472200519398 * EducationBasic  +     0.01930622297518 *
2262822   +        EducationGraduation  +    -0.00188262361226 * EducationMaster
2262823   +          +     0.16606212232833 * Marital_StatusDivorced
2262824   +          +    -0.33252488631677 * Marital_StatusMarried
2262825   +          +     0.26735237322144 * Marital_StatusSingle
2262826   +          +    -0.37056611493683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.02955854298839 * Education2n_Cycle + 
-0.13472200519398 * EducationBasic + 0.01930622297518 * EducationGraduation + 
-0.00188262361226 * EducationMaster + 0.16606212232833 * Marital_StatusDivorced + 
-0.33252488631677 * Marital_StatusMarried + 0.26735237322144 * Marital_StatusSingle + 
-0.37056611493683 * Marital_StatusTogether ;
2262827   +   H1x1_3  = H1x1_3  +     0.29085314695378 * Education2n_Cycle
2262828   +          +     -0.2177077392676 * EducationBasic  +    -0.12975750226767 *
2262829   +        EducationGraduation  +     0.12920694427876 * EducationMaster
2262830   +          +    -0.30275479651076 * Marital_StatusDivorced
2262831   +          +     0.50273719874035 * Marital_StatusMarried
2262832   +          +    -0.39588303956293 * Marital_StatusSingle
2262833   +          +     0.42028863850572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29085314695378 * Education2n_Cycle + 
-0.2177077392676 * EducationBasic + -0.12975750226767 * EducationGraduation + 0.12920694427876 
* EducationMaster + -0.30275479651076 * Marital_StatusDivorced + 0.50273719874035 * 
Marital_StatusMarried + -0.39588303956293 * Marital_StatusSingle + 0.42028863850572 * 
Marital_StatusTogether ;
2262834   +   H1x1_1  =     1.91295924572895 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.91295924572895 + H1x1_1 ;
2262835   +   H1x1_2  =    -1.21245226681055 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.21245226681055 + H1x1_2 ;
2262836   +   H1x1_3  =    -0.01609140135594 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.01609140135594 + H1x1_3 ;
2262837   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2262838   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2262839   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2262840   +   H1x1_2  = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
2262841   +   H1x1_3  = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
2262842   +END;
MPRINT(EM_DIAGRAM):   END;
2262843   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2262844   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2262845   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2262846   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2262847   +END;
MPRINT(EM_DIAGRAM):   END;
2262848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262849   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2262850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262851   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2262852   +   H1x2_1  =     0.73632716677259 * S_AcceptedCmpTotal
2262853   +          +     -1.3452480925823 * S_Age  +    -0.77564767519981 * S_Frq
2262854   +          +    -0.06163854052357 * S_Income  +     1.82428003860444 *
2262855   +        S_Kidhome  +       0.661412748756 * S_Mnt  +      1.8826488743919 *
2262856   +        S_MntFishProducts  +    -0.21815276926728 * S_MntFruits
2262857   +          +     1.06597641654862 * S_MntGoldProds  +     0.13887400045643 *
2262858   +        S_MntMeatProducts  +    -0.62827157985225 * S_MntSweetProducts
2262859   +          +     1.70742231056065 * S_MntWines  +     0.52403167020638 *
2262860   +        S_MonthsAsCustomer  +    -2.99889150929209 * S_NumCatalogPurchases
2262861   +          +    -2.59470529821377 * S_NumDealsPurchases
2262862   +          +      0.7668756449818 * S_NumDistPurchases
2262863   +          +     0.61064641547208 * S_NumStorePurchases
2262864   +          +    -0.87106335660846 * S_NumWebPurchases
2262865   +          +      0.1188879348197 * S_NumWebVisitsMonth
2262866   +          +     0.89319669432194 * S_RFMstat  +       -0.45272285967 *
2262867   +        S_RMntFrq  +     -0.7210740986075 * S_Recency
2262868   +          +      0.7032117485114 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73632716677259 * S_AcceptedCmpTotal + -1.3452480925823 * 
S_Age + -0.77564767519981 * S_Frq + -0.06163854052357 * S_Income + 1.82428003860444 * 
S_Kidhome + 0.661412748756 * S_Mnt + 1.8826488743919 * S_MntFishProducts + -0.21815276926728 * 
S_MntFruits + 1.06597641654862 * S_MntGoldProds + 0.13887400045643 * S_MntMeatProducts + 
-0.62827157985225 * S_MntSweetProducts + 1.70742231056065 * S_MntWines + 0.52403167020638 * 
S_MonthsAsCustomer + -2.99889150929209 * S_NumCatalogPurchases + -2.59470529821377 * 
S_NumDealsPurchases + 0.7668756449818 * S_NumDistPurchases + 0.61064641547208 * 
S_NumStorePurchases + -0.87106335660846 * S_NumWebPurchases + 0.1188879348197 * 
S_NumWebVisitsMonth + 0.89319669432194 * S_RFMstat + -0.45272285967 * S_RMntFrq + 
-0.7210740986075 * S_Recency + 0.7032117485114 * S_Teenhome ;
2262869   +   H1x2_2  =      0.5405970783297 * S_AcceptedCmpTotal
2262870   +          +     0.34103648596436 * S_Age  +    -1.00413619660059 * S_Frq
2262871   +          +     0.40958797602392 * S_Income  +    -0.94731216445533 *
2262872   +        S_Kidhome  +    -0.17755265939769 * S_Mnt  +    -0.88926202859892 *
2262873   +        S_MntFishProducts  +      0.6791087530674 * S_MntFruits
2262874   +          +     1.10836805118307 * S_MntGoldProds  +    -0.29462180872033 *
2262875   +        S_MntMeatProducts  +     2.21935054370304 * S_MntSweetProducts
2262876   +          +     1.41379847080743 * S_MntWines  +    -0.66077297246309 *
2262877   +        S_MonthsAsCustomer  +     0.91491641336561 * S_NumCatalogPurchases
2262878   +          +    -0.41834528691349 * S_NumDealsPurchases
2262879   +          +    -0.07802605490227 * S_NumDistPurchases
2262880   +          +    -0.62261476153139 * S_NumStorePurchases
2262881   +          +    -0.84011953180231 * S_NumWebPurchases
2262882   +          +     0.95169092183885 * S_NumWebVisitsMonth
2262883   +          +      0.4036735448902 * S_RFMstat  +     0.44620057959954 *
2262884   +        S_RMntFrq  +    -0.54980566705324 * S_Recency
2262885   +          +    -0.48914926560129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.5405970783297 * S_AcceptedCmpTotal + 0.34103648596436 * S_Age 
+ -1.00413619660059 * S_Frq + 0.40958797602392 * S_Income + -0.94731216445533 * S_Kidhome + 
-0.17755265939769 * S_Mnt + -0.88926202859892 * S_MntFishProducts + 0.6791087530674 * 
S_MntFruits + 1.10836805118307 * S_MntGoldProds + -0.29462180872033 * S_MntMeatProducts + 
2.21935054370304 * S_MntSweetProducts + 1.41379847080743 * S_MntWines + -0.66077297246309 * 
S_MonthsAsCustomer + 0.91491641336561 * S_NumCatalogPurchases + -0.41834528691349 * 
S_NumDealsPurchases + -0.07802605490227 * S_NumDistPurchases + -0.62261476153139 * 
S_NumStorePurchases + -0.84011953180231 * S_NumWebPurchases + 0.95169092183885 * 
S_NumWebVisitsMonth + 0.4036735448902 * S_RFMstat + 0.44620057959954 * S_RMntFrq + 
-0.54980566705324 * S_Recency + -0.48914926560129 * S_Teenhome ;
2262886   +   H1x2_3  =    -0.10056833202616 * S_AcceptedCmpTotal
2262887   +          +    -3.35021911955911 * S_Age  +    -0.47433508394475 * S_Frq
2262888   +          +      0.2642483252057 * S_Income  +     0.20666167536737 *
2262889   +        S_Kidhome  +    -1.63711887449192 * S_Mnt  +    -0.02078521278323 *
2262890   +        S_MntFishProducts  +    -0.13356020799092 * S_MntFruits
2262891   +          +     0.03199170913357 * S_MntGoldProds  +     0.35859745927921 *
2262892   +        S_MntMeatProducts  +     1.28933517907056 * S_MntSweetProducts
2262893   +          +    -0.45266889039243 * S_MntWines  +    -0.03980312418999 *
2262894   +        S_MonthsAsCustomer  +     0.11407065408619 * S_NumCatalogPurchases
2262895   +          +     1.50811278700924 * S_NumDealsPurchases
2262896   +          +    -0.40025710583484 * S_NumDistPurchases
2262897   +          +     0.16539197954198 * S_NumStorePurchases
2262898   +          +    -1.50803186935431 * S_NumWebPurchases
2262899   +          +    -0.35788712697704 * S_NumWebVisitsMonth
2262900   +          +    -2.06761773527847 * S_RFMstat  +    -0.00353259675109 *
2262901   +        S_RMntFrq  +      0.4364156603095 * S_Recency
2262902   +          +    -0.44689366494665 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.10056833202616 * S_AcceptedCmpTotal + -3.35021911955911 * 
S_Age + -0.47433508394475 * S_Frq + 0.2642483252057 * S_Income + 0.20666167536737 * S_Kidhome 
+ -1.63711887449192 * S_Mnt + -0.02078521278323 * S_MntFishProducts + -0.13356020799092 * 
S_MntFruits + 0.03199170913357 * S_MntGoldProds + 0.35859745927921 * S_MntMeatProducts + 
1.28933517907056 * S_MntSweetProducts + -0.45266889039243 * S_MntWines + -0.03980312418999 * 
S_MonthsAsCustomer + 0.11407065408619 * S_NumCatalogPurchases + 1.50811278700924 * 
S_NumDealsPurchases + -0.40025710583484 * S_NumDistPurchases + 0.16539197954198 * 
S_NumStorePurchases + -1.50803186935431 * S_NumWebPurchases + -0.35788712697704 * 
S_NumWebVisitsMonth + -2.06761773527847 * S_RFMstat + -0.00353259675109 * S_RMntFrq + 
0.4364156603095 * S_Recency + -0.44689366494665 * S_Teenhome ;
2262903   +   H1x2_1  = H1x2_1  +     1.19862785990255 * AcceptedCmp10
2262904   +          +    -0.56777088839338 * AcceptedCmp20  +    -0.20982687937883 *
2262905   +        AcceptedCmp30  +     0.23051157512105 * AcceptedCmp40
2262906   +          +    -1.16625535461103 * AcceptedCmp50  +    -0.03987377830172 *
2262907   +        Complain0  +    -1.17553145310278 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.19862785990255 * AcceptedCmp10 + -0.56777088839338 * 
AcceptedCmp20 + -0.20982687937883 * AcceptedCmp30 + 0.23051157512105 * AcceptedCmp40 + 
-1.16625535461103 * AcceptedCmp50 + -0.03987377830172 * Complain0 + -1.17553145310278 * 
HigherEducationBinary0 ;
2262908   +   H1x2_2  = H1x2_2  +    -1.37553391657098 * AcceptedCmp10
2262909   +          +    -0.49489986415129 * AcceptedCmp20  +     0.84075258232812 *
2262910   +        AcceptedCmp30  +     0.31883526052436 * AcceptedCmp40
2262911   +          +    -0.41245383847025 * AcceptedCmp50  +     0.75603245683628 *
2262912   +        Complain0  +    -2.07732119239317 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37553391657098 * AcceptedCmp10 + -0.49489986415129 
* AcceptedCmp20 + 0.84075258232812 * AcceptedCmp30 + 0.31883526052436 * AcceptedCmp40 + 
-0.41245383847025 * AcceptedCmp50 + 0.75603245683628 * Complain0 + -2.07732119239317 * 
HigherEducationBinary0 ;
2262913   +   H1x2_3  = H1x2_3  +     0.94876862525586 * AcceptedCmp10
2262914   +          +     0.79245605062261 * AcceptedCmp20  +     1.18614024465163 *
2262915   +        AcceptedCmp30  +    -0.24348380736895 * AcceptedCmp40
2262916   +          +     0.63374252730038 * AcceptedCmp50  +     0.36777527794452 *
2262917   +        Complain0  +    -0.07746344015306 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.94876862525586 * AcceptedCmp10 + 0.79245605062261 * 
AcceptedCmp20 + 1.18614024465163 * AcceptedCmp30 + -0.24348380736895 * AcceptedCmp40 + 
0.63374252730038 * AcceptedCmp50 + 0.36777527794452 * Complain0 + -0.07746344015306 * 
HigherEducationBinary0 ;
2262918   +   H1x2_1  = H1x2_1  +     1.73012058377195 * Education2n_Cycle
2262919   +          +     2.12295803973544 * EducationBasic  +     0.36945596974292 *
2262920   +        EducationGraduation  +    -1.22675967760612 * EducationMaster
2262921   +          +    -0.48199299977856 * Marital_StatusDivorced
2262922   +          +    -1.61546983135535 * Marital_StatusMarried
2262923   +          +     1.25890289649165 * Marital_StatusSingle
2262924   +          +    -0.35805098686637 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.73012058377195 * Education2n_Cycle + 
2.12295803973544 * EducationBasic + 0.36945596974292 * EducationGraduation + -1.22675967760612 
* EducationMaster + -0.48199299977856 * Marital_StatusDivorced + -1.61546983135535 * 
Marital_StatusMarried + 1.25890289649165 * Marital_StatusSingle + -0.35805098686637 * 
Marital_StatusTogether ;
2262925   +   H1x2_2  = H1x2_2  +    -1.04319773106255 * Education2n_Cycle
2262926   +          +    -1.20017517243416 * EducationBasic  +    -0.21851017334559 *
2262927   +        EducationGraduation  +     0.54918303984069 * EducationMaster
2262928   +          +    -0.69719138781358 * Marital_StatusDivorced
2262929   +          +     0.26964883367384 * Marital_StatusMarried
2262930   +          +      0.4656663467381 * Marital_StatusSingle
2262931   +          +    -0.38324848670979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.04319773106255 * Education2n_Cycle + 
-1.20017517243416 * EducationBasic + -0.21851017334559 * EducationGraduation + 
0.54918303984069 * EducationMaster + -0.69719138781358 * Marital_StatusDivorced + 
0.26964883367384 * Marital_StatusMarried + 0.4656663467381 * Marital_StatusSingle + 
-0.38324848670979 * Marital_StatusTogether ;
2262932   +   H1x2_3  = H1x2_3  +     0.26572249637491 * Education2n_Cycle
2262933   +          +     1.36865822272368 * EducationBasic  +     0.26769702437041 *
2262934   +        EducationGraduation  +    -0.57748542336591 * EducationMaster
2262935   +          +     1.40407968804704 * Marital_StatusDivorced
2262936   +          +    -1.35468203106214 * Marital_StatusMarried
2262937   +          +      1.0644996414042 * Marital_StatusSingle
2262938   +          +    -0.68198832748724 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26572249637491 * Education2n_Cycle + 
1.36865822272368 * EducationBasic + 0.26769702437041 * EducationGraduation + -0.57748542336591 
* EducationMaster + 1.40407968804704 * Marital_StatusDivorced + -1.35468203106214 * 
Marital_StatusMarried + 1.0644996414042 * Marital_StatusSingle + -0.68198832748724 * 
Marital_StatusTogether ;
2262939   +   H1x2_1  =     1.72650566457008 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.72650566457008 + H1x2_1 ;
2262940   +   H1x2_2  =     -1.0113179577999 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.0113179577999 + H1x2_2 ;
2262941   +   H1x2_3  =     0.14003924400021 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.14003924400021 + H1x2_3 ;
2262942   +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
2262943   +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
2262944   +   H1x2_3  = SIN(H1x2_3 );
MPRINT(EM_DIAGRAM):   H1x2_3 = SIN(H1x2_3 );
2262945   +END;
MPRINT(EM_DIAGRAM):   END;
2262946   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2262947   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2262948   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2262949   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2262950   +END;
MPRINT(EM_DIAGRAM):   END;
2262951   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262952   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2262953   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262954   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2262955   +   P_DepVar1  =    -7.62079794803554 * H1x1_1  +     13.7007341613959 * H1x1_2
2262956   +          +    -6.77882452096978 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.62079794803554 * H1x1_1 + 13.7007341613959 * H1x1_2 + 
-6.77882452096978 * H1x1_3 ;
2262957   +   P_DepVar1  = P_DepVar1  +    -0.44850093089338 * H1x2_1
2262958   +          +    -1.24228597291063 * H1x2_2  +     1.00075465600952 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.44850093089338 * H1x2_1 + -1.24228597291063 * 
H1x2_2 + 1.00075465600952 * H1x2_3 ;
2262959   +   P_DepVar1  =    -2.26198805619545 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26198805619545 + P_DepVar1 ;
2262960   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2262961   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2262962   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2262963   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2262964   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2262965   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2262966   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2262967   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2262968   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2262969   +END;
MPRINT(EM_DIAGRAM):   END;
2262970   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2262971   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2262972   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2262973   +END;
MPRINT(EM_DIAGRAM):   END;
2262974   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2262975   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2262976   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2262977   +END;
MPRINT(EM_DIAGRAM):   END;
2262978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262979   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2262980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2262981   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2262982   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2262983   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2262984   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2262985   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2262986   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2262987   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2262988   +END;
MPRINT(EM_DIAGRAM):   END;
2262989   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2262990   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2262991   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2262992   +drop
2262993   +H1x1_1
2262994   +H1x1_2
2262995   +H1x1_3
2262996   +H1x2_1
2262997   +H1x2_2
2262998   +H1x2_3
2262999   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x2_1 H1x2_2 H1x2_3 ;
2263000   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2263001    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2263002    quit;
2263003    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2263004    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2263005    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2263006    retain ID 2 Node "AutoNeural8";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural8";
2263007    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2263008    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2929 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2929 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263009    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2263010    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263011    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2929 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2929 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263012    proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME 
CREATOR);
2263013    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263014    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL8_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263015    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2263016    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2263017    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2263018    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263019    proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
2263020    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2263021    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2263022    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263023    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263024    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2263025    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2263026    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263027    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2263028    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2263029    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2263029  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1623 rows and 5 columns.

2263030    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263031    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2263032    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1623 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1623 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263033    filename _pref
2263033  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2263034    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2263035    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2263036   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2263037   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2263038   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2263039   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2263040   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2263041   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2263042    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2263043    quit;
2263044    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2263045    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2263046    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2263047    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2263048    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2263049    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263050    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2263051    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263052    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263053    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2263054    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263055    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2263056    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2263057    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2263058    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2263059    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263060    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2263061    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2263062    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2263063    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263064    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263065    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2263066    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2263067    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263068    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263069    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2263070    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2263070  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2263071    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263072    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2263073    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1627 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263074    filename _pref
2263074  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2263075    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2263076    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2263077   +
2263078   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2263079   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2263079  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2263080   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2263081   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2263082   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2263083   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2263084   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2263085    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2263086    quit;
2263087    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2263088    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2263089    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2263090    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2263091    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2263092    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2263093    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2263094    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263095    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263096    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2263097    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263098    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263099    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2263100    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2263101    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2263102    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2263103    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2263104    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263105    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2263106    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263107    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263108    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2263109    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2263110    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263111    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263112    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2263113    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2263113  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2263114    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263115    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2263116    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1666 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263117    filename _pref
2263117  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2263118    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2263119    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2263120   +
2263121   +
2263122   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2263123   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2263124   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2263125   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2263126   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2263127   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2263128   +
2263129   +
2263130   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2263131   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2263132   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2263133   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2263134   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2263135   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2263136   +
2263137   +
2263138   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2263139   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2263140   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2263141   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2263142   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2263143   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2263144   +
2263145   +
2263146   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2263147   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2263148   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2263149   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2263150   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2263151   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2263152   +
2263153   +
2263154   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2263155   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2263156   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2263157   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2263158   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2263159   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2263160   +
2263161   +
2263162   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2263163   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2263164   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2263165   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2263166   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2263167   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2263168   +
2263169   +
2263170   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2263171   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2263172   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2263173   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2263174   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2263175   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2263176   +
2263177   +
2263178   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2263179   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2263180   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2263181   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2263182   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2263183   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2263184   +if
2263185   +_FILTERNORM1 not in ( '.')
2263186   + and
2263187   +_FILTERNORM2 not in ( '.')
2263188   + and
2263189   +_FILTERNORM3 not in ( '.')
2263190   + and
2263191   +_FILTERNORM4 not in ( '.')
2263192   + and
2263193   +_FILTERNORM5 not in ( '.')
2263194   + and
2263195   +_FILTERNORM6 not in ( '.')
2263196   + and
2263197   +_FILTERNORM7 not in ( ' ')
2263198   + and
2263199   +_FILTERNORM8 not in ( ' ')
2263200   +and
2263201   +( Dt_Customer ne .)
2263202   +and ( Income ne . and (Income<=107000))
2263203   +and ( Kidhome ne .)
2263204   +and ( MntFishProducts ne .)
2263205   +and ( MntFruits ne .)
2263206   +and ( MntGoldProds ne .)
2263207   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2263208   +and ( MntSweetProducts ne .)
2263209   +and ( MntWines ne .)
2263210   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2263211   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2263212   +and ( NumStorePurchases ne .)
2263213   +and ( NumWebPurchases ne .)
2263214   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2263215   +and ( Recency ne .)
2263216   +and ( Teenhome ne .)
2263217   +and ( Year_Birth ne .)
2263218   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2263219   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2263220   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2263221   +end;
MPRINT(EM_DIAGRAM):   end;
2263222   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2263223   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2263224    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2263225    quit;
2263226    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2263227    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2263228    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2263229    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2263230    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2263231    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263232    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2263233    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263234    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263235    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2263236    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263237    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2263238    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2263239    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2263240    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2263241    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263242    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2263243    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2263244    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2263245    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263246    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263247    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2263248    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2263249    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2263250    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2263251    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2263252    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2263252  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2263253    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263254    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2263255    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1732 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263256    %macro varDept(fcmpdata=,id=);
2263257    %global nobs&id scoreFlag&id;
2263258    %let scoreFlag&id = 0;
2263259    %if &id=1 or ^&fcmpStart %then %do;
2263260    proc sort data=&fcmpdata out=_temp&id nodupkey;
2263261    by NAME;
2263262    where id=&id and LHS in( %let j=1;
2263263    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2263264    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2263265    "&var" %let j = %eval(&j+1);
2263266    %end;
2263267    );
2263268    run;
2263269    %let dsid = %sysfunc(open(_temp&id));
2263270    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2263271    %let dsid = %sysfunc(close(&dsid));
2263272    %if &&nobs&id %then %do;
2263273    %let scoreFlag&id = 1;
2263274    %let fcmpStart = 1;
2263275    %end;
2263276    %else %let fcmpStart = 0;
2263277    %end;
2263278    %else %do;
2263279    proc sort data=&fcmpdata out=_tempid;
2263280    where id=&id;
2263281    by LHS;
2263282    run;
2263283    %let dsid = %sysfunc(open(_tempid));
2263284    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2263285    %let dsid = %sysfunc(close(&dsid));
2263286    %if ^&&nobs&id %then %do;
2263287    proc datasets lib=work nolist;
2263288    delete _tempid;
2263289    run;
2263290    quit;
2263291    %end;
2263292    %else %do;
2263293    data _tempAll;
2263294    set %let j=%eval(&id-1);
2263295    %do x=1 %to &j;
2263296    %if &&nobs&x %then %do;
2263297    _temp&x %end;
2263298    %end;
2263299    ;
2263300    run;
2263301    proc sql;
2263302    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2263302  ! work._tempid p2 where p.name=p2.lhs;
2263303    quit;
2263304    data _temp&id;
2263305    set _temp&id;
2263306    where LHS ne '' and NAME ne '' and Node ne '';
2263307    run;
2263308    proc datasets lib=work nolist;
2263309    delete _tempAll;
2263310    run;
2263311    %let dsid = %sysfunc(open(_temp&id));
2263312    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2263313    %let dsid = %sysfunc(close(&dsid));
2263314    %if ^&&nobs&id %then %do;
2263315    proc datasets lib=work nolist;
2263316    delete _temp&id;
2263317    run;
2263318    quit;
2263319    %end;
2263320    %else %do;
2263321    %let scoreFlag&id = 1;
2263322    data _temp&id;
2263323    set _temp&id;
2263324    where LHS ne NAME and node ne '';
2263325    run;
2263326    %let dsid = %sysfunc(open(_temp&id));
2263327    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2263328    %let dsid = %sysfunc(close(&dsid));
2263329    %if ^&&nobs&id %then %do;
2263330    proc datasets lib=work nolist;
2263331    delete _temp&id;
2263332    run;
2263333    quit;
2263334    %end;
2263335    %else %do;
2263336    proc sort data=_temp&id nodupkey;
2263337    by LHS NAME;
2263338    run;
2263339    %end;
2263340    %end;
2263341    %end;
2263342    %end;
2263343    %mend varDept;
2263344    %macro optCode(outdata=fcmpdata);
2263345    %global fcmpStart;
2263346    %let fcmpStart = 0;
2263347    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2263348    %let NumNodes=9;
2263349    %do k=1 %to &NumNodes;
2263350    %vardept(fcmpdata=&outdata, id=&k);
2263351    %end;
2263352    %mend optCode;
2263353    %optcode(outData=EMWS8.Ensmbl36_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2263354    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2263355    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2263356    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2263357    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263358    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2263359    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2263360    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2263361    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2263362    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2263363    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2263363  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2263364    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2263365    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2263366    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2263367    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2263368    filename _pref
2263368  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
2263369    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2263370    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
2263371   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2263372   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2263373   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2263374   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2263375   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2263376   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2263377   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2263378   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2263379   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2263380   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2263381   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2263382   +LENGTH _WARN_ $4
2263383   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2263384   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2263385   +
2263386   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2263387   +
2263388   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2263389   +
2263390   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2263391   +
2263392   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2263393   +
2263394   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2263395   +
2263396   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2263397   +
2263398   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2263399   +
2263400   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2263401   +
2263402   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2263403   +
2263404   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2263405   +
2263406   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2263407   +
2263408   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2263409   +
2263410   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2263411   +
2263412   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2263413   +
2263414   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2263415   +
2263416   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2263417   +
2263418   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2263419   +
2263420   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2263421   +
2263422   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2263423   +
2263424   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2263425   +
2263426   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2263427   +
2263428   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2263429   +
2263430   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2263431   +
2263432   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2263433   +
2263434   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2263435   +
2263436   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2263437   +
2263438   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2263439   +
2263440   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2263441   +
2263442   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2263443   +
2263444   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2263445   +
2263446   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2263447   +
2263448   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2263449   +
2263450   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2263451   +
2263452   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2263453   +
2263454   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2263455   +
2263456   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2263457   +
2263458   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2263459   +
2263460   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2263461   +
2263462   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2263463   +
2263464   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2263465   +
2263466   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2263467   +
2263468   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2263469   +
2263470   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2263471   +
2263472   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2263473   +
2263474   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2263475   +
2263476   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2263477   +
2263478   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2263479   +
2263480   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2263481   +
2263482   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2263483   +
2263484   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2263485   +
2263486   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2263487   +
2263488   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2263489   +
2263490   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2263491   +
2263492   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2263493   +
2263494   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2263495   +
2263496   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2263497   +
2263498   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2263499   +
2263500   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2263501   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2263502   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2263503   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2263504   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2263505   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263506   +end;
MPRINT(EM_DIAGRAM):   end;
2263507   +else do;
MPRINT(EM_DIAGRAM):   else do;
2263508   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2263509   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2263510   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2263511   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2263512   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2263513   +   end;
MPRINT(EM_DIAGRAM):   end;
2263514   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2263515   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2263516   +   end;
MPRINT(EM_DIAGRAM):   end;
2263517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2263518   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2263519   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2263520   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263521   +   end;
MPRINT(EM_DIAGRAM):   end;
2263522   +end;
MPRINT(EM_DIAGRAM):   end;
2263523   +
2263524   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2263525   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2263526   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2263527   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2263528   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2263529   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263530   +end;
MPRINT(EM_DIAGRAM):   end;
2263531   +else do;
MPRINT(EM_DIAGRAM):   else do;
2263532   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2263533   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2263534   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2263535   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2263536   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2263537   +   end;
MPRINT(EM_DIAGRAM):   end;
2263538   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2263539   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2263540   +   end;
MPRINT(EM_DIAGRAM):   end;
2263541   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2263542   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2263543   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2263544   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263545   +   end;
MPRINT(EM_DIAGRAM):   end;
2263546   +end;
MPRINT(EM_DIAGRAM):   end;
2263547   +
2263548   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2263549   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2263550   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2263551   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2263552   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2263553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263554   +end;
MPRINT(EM_DIAGRAM):   end;
2263555   +else do;
MPRINT(EM_DIAGRAM):   else do;
2263556   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2263557   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2263558   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2263559   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2263560   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2263561   +   end;
MPRINT(EM_DIAGRAM):   end;
2263562   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2263563   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2263564   +   end;
MPRINT(EM_DIAGRAM):   end;
2263565   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2263566   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2263567   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2263568   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263569   +   end;
MPRINT(EM_DIAGRAM):   end;
2263570   +end;
MPRINT(EM_DIAGRAM):   end;
2263571   +
2263572   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2263573   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2263574   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2263575   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2263576   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2263577   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263578   +end;
MPRINT(EM_DIAGRAM):   end;
2263579   +else do;
MPRINT(EM_DIAGRAM):   else do;
2263580   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2263581   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2263582   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2263583   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2263584   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2263585   +   end;
MPRINT(EM_DIAGRAM):   end;
2263586   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2263587   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2263588   +   end;
MPRINT(EM_DIAGRAM):   end;
2263589   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2263590   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2263591   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2263592   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263593   +   end;
MPRINT(EM_DIAGRAM):   end;
2263594   +end;
MPRINT(EM_DIAGRAM):   end;
2263595   +
2263596   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2263597   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2263598   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2263599   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2263600   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2263601   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263602   +end;
MPRINT(EM_DIAGRAM):   end;
2263603   +else do;
MPRINT(EM_DIAGRAM):   else do;
2263604   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2263605   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2263606   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2263607   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2263608   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2263609   +   end;
MPRINT(EM_DIAGRAM):   end;
2263610   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2263611   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2263612   +   end;
MPRINT(EM_DIAGRAM):   end;
2263613   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2263614   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2263615   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2263616   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263617   +   end;
MPRINT(EM_DIAGRAM):   end;
2263618   +end;
MPRINT(EM_DIAGRAM):   end;
2263619   +
2263620   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2263621   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2263622   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2263623   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2263624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2263625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263626   +end;
MPRINT(EM_DIAGRAM):   end;
2263627   +else do;
MPRINT(EM_DIAGRAM):   else do;
2263628   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2263629   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2263630   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2263631   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2263632   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2263633   +   end;
MPRINT(EM_DIAGRAM):   end;
2263634   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2263635   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2263636   +   end;
MPRINT(EM_DIAGRAM):   end;
2263637   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2263638   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2263639   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2263640   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263641   +   end;
MPRINT(EM_DIAGRAM):   end;
2263642   +end;
MPRINT(EM_DIAGRAM):   end;
2263643   +
2263644   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2263645   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2263646   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2263647   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2263648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2263649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263650   +end;
MPRINT(EM_DIAGRAM):   end;
2263651   +else do;
MPRINT(EM_DIAGRAM):   else do;
2263652   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2263653   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2263654   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2263655   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2263656   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2263657   +   end;
MPRINT(EM_DIAGRAM):   end;
2263658   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2263659   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2263660   +   end;
MPRINT(EM_DIAGRAM):   end;
2263661   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2263662   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2263663   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2263664   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263665   +   end;
MPRINT(EM_DIAGRAM):   end;
2263666   +end;
MPRINT(EM_DIAGRAM):   end;
2263667   +
2263668   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2263669   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2263670   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2263671   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2263672   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2263673   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2263674   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2263675   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2263676   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2263677   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2263678   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2263679   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2263680   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2263681   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263682   +end;
MPRINT(EM_DIAGRAM):   end;
2263683   +else do;
MPRINT(EM_DIAGRAM):   else do;
2263684   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2263685   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2263686   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2263687   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2263688   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2263689   +   end;
MPRINT(EM_DIAGRAM):   end;
2263690   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2263691   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2263692   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2263693   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2263694   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2263695   +   end;
MPRINT(EM_DIAGRAM):   end;
2263696   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2263697   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2263698   +   end;
MPRINT(EM_DIAGRAM):   end;
2263699   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2263700   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2263701   +   end;
MPRINT(EM_DIAGRAM):   end;
2263702   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2263703   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2263704   +   end;
MPRINT(EM_DIAGRAM):   end;
2263705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2263706   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2263707   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2263708   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2263709   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2263710   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2263711   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263712   +   end;
MPRINT(EM_DIAGRAM):   end;
2263713   +end;
MPRINT(EM_DIAGRAM):   end;
2263714   +
2263715   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2263716   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2263717   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2263718   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2263719   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2263720   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2263721   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2263722   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2263723   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2263724   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2263725   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2263726   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2263727   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2263728   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2263729   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263730   +end;
MPRINT(EM_DIAGRAM):   end;
2263731   +else do;
MPRINT(EM_DIAGRAM):   else do;
2263732   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2263733   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2263734   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2263735   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2263736   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2263737   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2263738   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2263739   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2263740   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2263741   +         end;
MPRINT(EM_DIAGRAM):   end;
2263742   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2263743   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2263744   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2263745   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2263746   +            end;
MPRINT(EM_DIAGRAM):   end;
2263747   +         end;
MPRINT(EM_DIAGRAM):   end;
2263748   +      end;
MPRINT(EM_DIAGRAM):   end;
2263749   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2263750   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2263751   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2263752   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2263753   +         end;
MPRINT(EM_DIAGRAM):   end;
2263754   +      end;
MPRINT(EM_DIAGRAM):   end;
2263755   +   end;
MPRINT(EM_DIAGRAM):   end;
2263756   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2263757   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2263758   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2263759   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2263760   +      end;
MPRINT(EM_DIAGRAM):   end;
2263761   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2263762   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2263763   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2263764   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2263765   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2263766   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2263767   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2263768   +         end;
MPRINT(EM_DIAGRAM):   end;
2263769   +      end;
MPRINT(EM_DIAGRAM):   end;
2263770   +   end;
MPRINT(EM_DIAGRAM):   end;
2263771   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2263772   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2263773   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2263774   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2263775   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2263776   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2263777   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263778   +   end;
MPRINT(EM_DIAGRAM):   end;
2263779   +end;
MPRINT(EM_DIAGRAM):   end;
2263780   +
2263781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2263782   +*** Checking missing input Interval
2263783   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2263784   +
2263785   +IF NMISS(
2263786   +   AcceptedCmpTotal ,
2263787   +   Age ,
2263788   +   Frq ,
2263789   +   Income ,
2263790   +   Kidhome ,
2263791   +   Mnt ,
2263792   +   MntFishProducts ,
2263793   +   MntFruits ,
2263794   +   MntGoldProds ,
2263795   +   MntMeatProducts ,
2263796   +   MntSweetProducts ,
2263797   +   MntWines ,
2263798   +   MonthsAsCustomer ,
2263799   +   NumCatalogPurchases ,
2263800   +   NumDealsPurchases ,
2263801   +   NumDistPurchases ,
2263802   +   NumStorePurchases ,
2263803   +   NumWebPurchases ,
2263804   +   NumWebVisitsMonth ,
2263805   +   RFMstat ,
2263806   +   RMntFrq ,
2263807   +   Recency ,
2263808   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2263809   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2263810   +
2263811   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2263812   +END;
MPRINT(EM_DIAGRAM):   END;
2263813   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2263814   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2263815   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2263816   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2263817   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2263818   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2263819   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2263820   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2263821   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2263822   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2263823   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2263824   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2263825   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2263826   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2263827   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2263828   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2263829   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2263830   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2263831   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2263832   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2263833   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2263834   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2263835   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2263836   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2263837   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2263838   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2263839   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2263840   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2263841   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2263842   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2263843   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2263844   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2263845   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2263846   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2263847   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2263848   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2263849   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2263850   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2263851   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2263852   +END;
MPRINT(EM_DIAGRAM):   END;
2263853   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2263854   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2263855   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2263856   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2263857   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2263858   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2263859   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2263860   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2263861   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2263862   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2263863   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2263864   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2263865   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2263866   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2263867   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2263868   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2263869   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2263870   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2263871   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2263872   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2263873   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2263874   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2263875   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2263876   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2263877   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2263878   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2263879   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2263880   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2263881   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2263882   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2263883   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2263884   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2263885   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2263886   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2263887   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2263888   +   ELSE S_NumCatalogPurchases
2263889   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2263890   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2263891   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2263892   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2263893   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2263894   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2263895   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2263896   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2263897   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2263898   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2263899   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2263900   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2263901   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2263902   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2263903   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2263904   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2263905   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2263906   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2263907   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2263908   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2263909   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2263910   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2263911   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2263912   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2263913   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2263914   +END;
MPRINT(EM_DIAGRAM):   END;
2263915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2263916   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2263917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2263918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2263919   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2263920   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2263921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2263922   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2263923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2263924   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2263925   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2263926   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2263927   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2263928   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2263929   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2263930   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2263931   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2263932   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2263933   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2263934   +          +     3.21215425524619 * S_NumDealsPurchases
2263935   +          +     0.08695198777156 * S_NumDistPurchases
2263936   +          +    -2.58697971128295 * S_NumStorePurchases
2263937   +          +    -0.44431924796059 * S_NumWebPurchases
2263938   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2263939   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2263940   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2263941   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 * 
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 * 
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts + 
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 * 
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines + 
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases + 
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases + 
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases + 
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 * 
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2263942   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2263943   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2263944   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2263945   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2263946   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2263947   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2263948   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2263949   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2263950   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2263951   +          +    -0.83844506398484 * S_NumDealsPurchases
2263952   +          +     0.60831936516804 * S_NumDistPurchases
2263953   +          +     1.79084087761626 * S_NumStorePurchases
2263954   +          +     1.17119196356453 * S_NumWebPurchases
2263955   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2263956   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2263957   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2263958   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 * 
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome 
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 * 
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts + 
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 * 
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 * 
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 * 
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 * 
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq + 
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2263959   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2263960   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2263961   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2263962   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2263963   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2263964   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2263965   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2263966   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2263967   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2263968   +          +    -0.31484031572628 * S_NumDealsPurchases
2263969   +          +    -0.18273941035679 * S_NumDistPurchases
2263970   +          +     0.99501789733882 * S_NumStorePurchases
2263971   +          +     1.32014078829379 * S_NumWebPurchases
2263972   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2263973   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2263974   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2263975   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 * 
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 * 
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098 
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts + 
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 * 
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 * 
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 * 
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 * 
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq + 
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2263976   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2263977   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2263978   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2263979   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2263980   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2263981   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2263982   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2263983   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2263984   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2263985   +          +     1.19658719134196 * S_NumDealsPurchases
2263986   +          +     0.87478204472986 * S_NumDistPurchases
2263987   +          +    -0.20635856288784 * S_NumStorePurchases
2263988   +          +    -0.89927356974242 * S_NumWebPurchases
2263989   +          +     2.92285244132576 * S_NumWebVisitsMonth
2263990   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2263991   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2263992   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 * 
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome 
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 * 
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts + 
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 * 
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 * 
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 * 
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 * 
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq + 
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2263993   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2263994   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2263995   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2263996   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2263997   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2263998   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2263999   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2264000   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2264001   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2264002   +          +       -2.32617124568 * S_NumDealsPurchases
2264003   +          +    -0.56589187730672 * S_NumDistPurchases
2264004   +          +     1.07062299863482 * S_NumStorePurchases
2264005   +          +     0.30077273739578 * S_NumWebPurchases
2264006   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2264007   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2264008   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2264009   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 * 
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 * 
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661 
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts + 
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 * 
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 * 
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 * 
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 * 
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq + 
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2264010   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2264011   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2264012   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2264013   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2264014   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 * 
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 + 
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 * 
HigherEducationBinary0 ;
2264015   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2264016   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2264017   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2264018   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2264019   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 * 
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 + 
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 * 
HigherEducationBinary0 ;
2264020   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2264021   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2264022   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2264023   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2264024   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 * 
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 + 
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 * 
HigherEducationBinary0 ;
2264025   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2264026   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2264027   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2264028   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2264029   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234 
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 + 
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 * 
HigherEducationBinary0 ;
2264030   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2264031   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2264032   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2264033   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2264034   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 * 
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 + 
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 * 
HigherEducationBinary0 ;
2264035   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2264036   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2264037   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2264038   +          +    -0.27797737429678 * Marital_StatusDivorced
2264039   +          +    -0.08137635862327 * Marital_StatusMarried
2264040   +          +     0.06275411820495 * Marital_StatusSingle
2264041   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle + 
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588 
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 * 
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 * 
Marital_StatusTogether ;
2264042   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2264043   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2264044   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2264045   +          +     0.05151426841441 * Marital_StatusDivorced
2264046   +          +     1.19165082030442 * Marital_StatusMarried
2264047   +          +    -1.08257080662611 * Marital_StatusSingle
2264048   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle + 
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112 
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 * 
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 * 
Marital_StatusTogether ;
2264049   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2264050   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2264051   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2264052   +          +      0.0238206459022 * Marital_StatusDivorced
2264053   +          +     -0.4653244204261 * Marital_StatusMarried
2264054   +          +     0.13051613619882 * Marital_StatusSingle
2264055   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle + 
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation + 
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced + 
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle + 
-0.35951366919755 * Marital_StatusTogether ;
2264056   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2264057   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2264058   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2264059   +          +     -0.7449356409222 * Marital_StatusDivorced
2264060   +          +    -1.46604673521535 * Marital_StatusMarried
2264061   +          +     0.74484771688818 * Marital_StatusSingle
2264062   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle + 
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249 
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 * 
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 * 
Marital_StatusTogether ;
2264063   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2264064   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2264065   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2264066   +          +    -3.68044980584423 * Marital_StatusDivorced
2264067   +          +     3.14587407902338 * Marital_StatusMarried
2264068   +          +    -2.66118132753024 * Marital_StatusSingle
2264069   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle + 
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation + 
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced + 
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle + 
3.50991640149914 * Marital_StatusTogether ;
2264070   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2264071   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2264072   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2264073   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2264074   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2264075   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2264076   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2264077   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2264078   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2264079   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2264080   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2264081   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2264082   +END;
MPRINT(EM_DIAGRAM):   END;
2264083   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2264084   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2264085   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2264086   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2264087   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2264088   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2264089   +END;
MPRINT(EM_DIAGRAM):   END;
2264090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2264091   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2264092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2264093   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2264094   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2264095   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2264096   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2264097   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2264098   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2264099   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2264100   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2264101   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2264102   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2264103   +          +     0.89261880438741 * S_NumDealsPurchases
2264104   +          +    -1.61647413199892 * S_NumDistPurchases
2264105   +          +    -0.56304669045195 * S_NumStorePurchases
2264106   +          +      0.7766837080945 * S_NumWebPurchases
2264107   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2264108   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2264109   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2264110   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 * 
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 * 
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts + 
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 * 
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines + 
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases + 
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases + 
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases + 
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 * 
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2264111   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2264112   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2264113   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2264114   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2264115   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2264116   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2264117   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2264118   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2264119   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2264120   +          +     1.02431289724643 * S_NumDealsPurchases
2264121   +          +    -0.90960173637405 * S_NumDistPurchases
2264122   +          +     1.24283490404772 * S_NumStorePurchases
2264123   +          +     1.23072413154592 * S_NumWebPurchases
2264124   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2264125   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2264126   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2264127   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age 
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome + 
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 * 
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts + 
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 * 
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 * 
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 * 
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 * 
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq + 
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2264128   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2264129   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2264130   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2264131   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2264132   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2264133   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2264134   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2264135   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2264136   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2264137   +          +    -0.26249596122198 * S_NumDealsPurchases
2264138   +          +    -0.63328519804758 * S_NumDistPurchases
2264139   +          +    -0.88467503575886 * S_NumStorePurchases
2264140   +          +    -0.83120537310738 * S_NumWebPurchases
2264141   +          +     1.40072282351719 * S_NumWebVisitsMonth
2264142   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2264143   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2264144   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 * 
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 * 
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts + 
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 * 
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines + 
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases + 
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases + 
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases + 
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 * 
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2264145   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2264146   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2264147   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2264148   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2264149   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2264150   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2264151   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2264152   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2264153   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2264154   +          +     1.30167361451945 * S_NumDealsPurchases
2264155   +          +     1.45457613716235 * S_NumDistPurchases
2264156   +          +    -0.40226463685252 * S_NumStorePurchases
2264157   +          +     0.36369161683572 * S_NumWebPurchases
2264158   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2264159   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2264160   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2264161   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 * 
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome 
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 * 
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts + 
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 * 
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 * 
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 * 
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 * 
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq + 
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2264162   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2264163   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2264164   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2264165   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2264166   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2264167   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2264168   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2264169   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2264170   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2264171   +          +    -0.54572162665338 * S_NumDealsPurchases
2264172   +          +      0.9607390449318 * S_NumDistPurchases
2264173   +          +    -0.03259470545754 * S_NumStorePurchases
2264174   +          +     0.19202241423412 * S_NumWebPurchases
2264175   +          +     0.61085831658456 * S_NumWebVisitsMonth
2264176   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2264177   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2264178   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 * 
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 * 
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts + 
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 * 
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines + 
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases + 
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases + 
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases + 
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 * 
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2264179   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2264180   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2264181   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2264182   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2264183   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 * 
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 + 
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 * 
HigherEducationBinary0 ;
2264184   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2264185   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2264186   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2264187   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2264188   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 * 
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 + 
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 * 
HigherEducationBinary0 ;
2264189   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2264190   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2264191   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2264192   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2264193   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 * 
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 + 
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 * 
HigherEducationBinary0 ;
2264194   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2264195   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2264196   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2264197   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2264198   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 * 
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 + 
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 * 
HigherEducationBinary0 ;
2264199   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2264200   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2264201   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2264202   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2264203   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 * 
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 + 
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 * 
HigherEducationBinary0 ;
2264204   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2264205   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2264206   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2264207   +          +    -2.32430245081383 * Marital_StatusDivorced
2264208   +          +    -0.09815511356796 * Marital_StatusMarried
2264209   +          +     0.13075504294551 * Marital_StatusSingle
2264210   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle + 
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804 
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 * 
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 * 
Marital_StatusTogether ;
2264211   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2264212   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2264213   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2264214   +          +    -0.65574603869224 * Marital_StatusDivorced
2264215   +          +     1.54672472575294 * Marital_StatusMarried
2264216   +          +    -1.59817602340208 * Marital_StatusSingle
2264217   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle + 
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451 
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 * 
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 * 
Marital_StatusTogether ;
2264218   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2264219   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2264220   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2264221   +          +    -0.50911604604781 * Marital_StatusDivorced
2264222   +          +     0.30403066135719 * Marital_StatusMarried
2264223   +          +      0.1026950879545 * Marital_StatusSingle
2264224   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle + 
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444 
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 * 
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 * 
Marital_StatusTogether ;
2264225   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2264226   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2264227   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2264228   +          +     1.07371507133318 * Marital_StatusDivorced
2264229   +          +    -0.07097334129051 * Marital_StatusMarried
2264230   +          +    -0.48339718568621 * Marital_StatusSingle
2264231   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle + 
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566 
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 * 
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 * 
Marital_StatusTogether ;
2264232   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2264233   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2264234   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2264235   +          +     1.04342893515504 * Marital_StatusDivorced
2264236   +          +     1.16171312085032 * Marital_StatusMarried
2264237   +          +    -0.30201646939913 * Marital_StatusSingle
2264238   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle + 
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119 
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 * 
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 * 
Marital_StatusTogether ;
2264239   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2264240   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2264241   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2264242   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2264243   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2264244   +END;
MPRINT(EM_DIAGRAM):   END;
2264245   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2264246   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2264247   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2264248   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2264249   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2264250   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2264251   +END;
MPRINT(EM_DIAGRAM):   END;
2264252   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2264253   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2264254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2264255   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2264256   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2264257   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2264258   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2264259   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2264260   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2264261   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2264262   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2264263   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2264264   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2264265   +          +     1.32256781010645 * S_NumDealsPurchases
2264266   +          +    -1.43015438973619 * S_NumDistPurchases
2264267   +          +    -0.63489289584421 * S_NumStorePurchases
2264268   +          +     0.90508699686841 * S_NumWebPurchases
2264269   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2264270   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2264271   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2264272   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 * 
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome 
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 * 
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts + 
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 * 
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 * 
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 * 
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 * 
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq + 
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2264273   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2264274   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2264275   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2264276   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2264277   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2264278   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2264279   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2264280   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2264281   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2264282   +          +     0.85965187264096 * S_NumDealsPurchases
2264283   +          +    -1.15239933286756 * S_NumDistPurchases
2264284   +          +     1.20800889102387 * S_NumStorePurchases
2264285   +          +     1.08790389130242 * S_NumWebPurchases
2264286   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2264287   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2264288   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2264289   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 * 
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 * 
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826 
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts + 
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 * 
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 * 
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 * 
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 * 
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq + 
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2264290   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2264291   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2264292   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2264293   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2264294   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2264295   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2264296   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2264297   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2264298   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2264299   +          +     -0.5767607129654 * S_NumDealsPurchases
2264300   +          +     -0.2643921429796 * S_NumDistPurchases
2264301   +          +    -0.67417489911206 * S_NumStorePurchases
2264302   +          +    -0.51423877684891 * S_NumWebPurchases
2264303   +          +     1.40328299605176 * S_NumWebVisitsMonth
2264304   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2264305   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2264306   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 * 
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome 
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 * 
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts + 
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 * 
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 * 
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 * 
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 * 
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq + 
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2264307   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2264308   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2264309   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2264310   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2264311   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2264312   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2264313   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2264314   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2264315   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2264316   +          +      1.2821617657076 * S_NumDealsPurchases
2264317   +          +     1.26584115202735 * S_NumDistPurchases
2264318   +          +    -0.46597664211833 * S_NumStorePurchases
2264319   +          +     0.45652363472866 * S_NumWebPurchases
2264320   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2264321   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2264322   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2264323   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 * 
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome 
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 * 
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts + 
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 * 
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 * 
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 * 
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 * 
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq + 
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2264324   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2264325   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2264326   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2264327   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2264328   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2264329   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2264330   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2264331   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2264332   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2264333   +          +    -0.85162564171681 * S_NumDealsPurchases
2264334   +          +     0.64631099667221 * S_NumDistPurchases
2264335   +          +    -0.03081963858636 * S_NumStorePurchases
2264336   +          +    -0.24124717624664 * S_NumWebPurchases
2264337   +          +     0.56425980772372 * S_NumWebVisitsMonth
2264338   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2264339   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2264340   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 * 
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 * 
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts + 
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 * 
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines + 
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases + 
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases + 
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases + 
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 * 
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2264341   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2264342   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2264343   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2264344   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2264345   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 * 
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 + 
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 * 
HigherEducationBinary0 ;
2264346   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2264347   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2264348   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2264349   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2264350   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 * 
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 + 
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 * 
HigherEducationBinary0 ;
2264351   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2264352   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2264353   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2264354   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2264355   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 * 
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 + 
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 * 
HigherEducationBinary0 ;
2264356   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2264357   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2264358   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2264359   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2264360   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938 
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 + 
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 * 
HigherEducationBinary0 ;
2264361   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2264362   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2264363   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2264364   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2264365   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 * 
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 + 
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 * 
HigherEducationBinary0 ;
2264366   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2264367   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2264368   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2264369   +          +    -2.49973437075558 * Marital_StatusDivorced
2264370   +          +    -0.18076948182574 * Marital_StatusMarried
2264371   +          +     0.13498525495231 * Marital_StatusSingle
2264372   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle + 
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868 
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 * 
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 * 
Marital_StatusTogether ;
2264373   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2264374   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2264375   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2264376   +          +       -0.59463732835 * Marital_StatusDivorced
2264377   +          +     1.37741332427598 * Marital_StatusMarried
2264378   +          +     -1.5833455713231 * Marital_StatusSingle
2264379   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle + 
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation + 
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced + 
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle + 
1.79205360628448 * Marital_StatusTogether ;
2264380   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2264381   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2264382   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2264383   +          +    -0.44569556289443 * Marital_StatusDivorced
2264384   +          +     0.29918053103557 * Marital_StatusMarried
2264385   +          +    -0.10337314064224 * Marital_StatusSingle
2264386   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle + 
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474 
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 * 
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 * 
Marital_StatusTogether ;
2264387   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2264388   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2264389   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2264390   +          +     1.13881957277462 * Marital_StatusDivorced
2264391   +          +    -0.35849807146313 * Marital_StatusMarried
2264392   +          +    -0.22168731316885 * Marital_StatusSingle
2264393   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle + 
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697 
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 * 
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 * 
Marital_StatusTogether ;
2264394   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2264395   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2264396   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2264397   +          +     1.10774969923269 * Marital_StatusDivorced
2264398   +          +     1.08409594073043 * Marital_StatusMarried
2264399   +          +    -0.33145048007894 * Marital_StatusSingle
2264400   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle + 
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249 
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 * 
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 * 
Marital_StatusTogether ;
2264401   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2264402   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2264403   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2264404   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2264405   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2264406   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2264407   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2264408   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2264409   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2264410   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2264411   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2264412   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2264413   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 * 
H1x3_2 ;
2264414   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2264415   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2264416   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 * 
H1x3_3 ;
2264417   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2264418   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2264419   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 * 
H1x3_4 ;
2264420   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2264421   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2264422   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 * 
H1x3_5 ;
2264423   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2264424   +END;
MPRINT(EM_DIAGRAM):   END;
2264425   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2264426   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2264427   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2264428   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2264429   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2264430   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2264431   +END;
MPRINT(EM_DIAGRAM):   END;
2264432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2264433   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2264434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2264435   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2264436   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2264437   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2264438   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 + 
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2264439   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2264440   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2264441   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 * 
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2264442   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2264443   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2264444   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 * 
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2264445   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2264446   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2264447   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2264448   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2264449   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2264450   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2264451   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2264452   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2264453   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2264454   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2264455   +END;
MPRINT(EM_DIAGRAM):   END;
2264456   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2264457   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2264458   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2264459   +END;
MPRINT(EM_DIAGRAM):   END;
2264460   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2264461   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2264462   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2264463   +END;
MPRINT(EM_DIAGRAM):   END;
2264464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2264465   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2264466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2264467   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2264468   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2264469   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2264470   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2264471   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2264472   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2264473   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2264474   +END;
MPRINT(EM_DIAGRAM):   END;
2264475   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2264476   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2264477   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2264478   +drop
2264479   +H1x1_1
2264480   +H1x1_2
2264481   +H1x1_3
2264482   +H1x1_4
2264483   +H1x1_5
2264484   +H1x2_1
2264485   +H1x2_2
2264486   +H1x2_3
2264487   +H1x2_4
2264488   +H1x2_5
2264489   +H1x3_1
2264490   +H1x3_2
2264491   +H1x3_3
2264492   +H1x3_4
2264493   +H1x3_5
2264494   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4 
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2264495   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2264496    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2264497    quit;
2264498    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2264499    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2264500    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2264501    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
2264502    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2264503    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4614 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4614 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264504    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2264505    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264506    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4614 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4614 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264507    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME 
CREATOR);
2264508    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264509    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264510    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2264511    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2264512    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2264513    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264514    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
2264515    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

2264516    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2264517    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264518    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264519    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2264520    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2264521    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264522    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264523    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2264524    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2264524  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2263 rows and 5 columns.

2264525    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2264526    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2264527    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2263 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 2263 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264528    filename _pref
2264528  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2264529    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2264530    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2264531   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2264532   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2264533   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2264534   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2264535   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2264536   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2264537    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2264538    quit;
2264539    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2264540    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2264541    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2264542    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2264543    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2264544    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2264545    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2264546    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264547    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264548    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2264549    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264550    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264551    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2264552    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2264553    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2264554    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2264555    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2264556    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2264557    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2264558    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264559    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2264560    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2264561    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2264562    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264563    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264564    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2264565    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2264565  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2264566    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264567    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2264568    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 2267 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264569    filename _pref
2264569  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2264570    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2264571    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2264572   +
2264573   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2264574   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2264574  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2264575   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2264576   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2264577   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2264578   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2264579   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2264580    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2264581    quit;
2264582    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2264583    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2264584    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2264585    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2264586    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2264587    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264588    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2264589    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264590    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264591    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2264592    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264593    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2264594    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2264595    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2264596    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2264597    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264598    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2264599    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264600    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2264601    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264602    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2264603    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2264604    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2264605    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264606    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264607    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2264608    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2264608  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2264609    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2264610    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2264611    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 2306 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264612    filename _pref
2264612  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2264613    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2264614    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2264615   +
2264616   +
2264617   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2264618   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2264619   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2264620   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2264621   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2264622   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2264623   +
2264624   +
2264625   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2264626   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2264627   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2264628   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2264629   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2264630   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2264631   +
2264632   +
2264633   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2264634   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2264635   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2264636   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2264637   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2264638   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2264639   +
2264640   +
2264641   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2264642   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2264643   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2264644   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2264645   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2264646   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2264647   +
2264648   +
2264649   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2264650   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2264651   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2264652   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2264653   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2264654   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2264655   +
2264656   +
2264657   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2264658   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2264659   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2264660   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2264661   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2264662   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2264663   +
2264664   +
2264665   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2264666   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2264667   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2264668   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2264669   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2264670   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2264671   +
2264672   +
2264673   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2264674   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2264675   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2264676   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2264677   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2264678   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2264679   +if
2264680   +_FILTERNORM1 not in ( '.')
2264681   + and
2264682   +_FILTERNORM2 not in ( '.')
2264683   + and
2264684   +_FILTERNORM3 not in ( '.')
2264685   + and
2264686   +_FILTERNORM4 not in ( '.')
2264687   + and
2264688   +_FILTERNORM5 not in ( '.')
2264689   + and
2264690   +_FILTERNORM6 not in ( '.')
2264691   + and
2264692   +_FILTERNORM7 not in ( ' ')
2264693   + and
2264694   +_FILTERNORM8 not in ( ' ')
2264695   +and
2264696   +( Dt_Customer ne .)
2264697   +and ( Income ne . and (Income<=107000))
2264698   +and ( Kidhome ne .)
2264699   +and ( MntFishProducts ne .)
2264700   +and ( MntFruits ne .)
2264701   +and ( MntGoldProds ne .)
2264702   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2264703   +and ( MntSweetProducts ne .)
2264704   +and ( MntWines ne .)
2264705   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2264706   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2264707   +and ( NumStorePurchases ne .)
2264708   +and ( NumWebPurchases ne .)
2264709   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2264710   +and ( Recency ne .)
2264711   +and ( Teenhome ne .)
2264712   +and ( Year_Birth ne .)
2264713   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2264714   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2264715   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2264716   +end;
MPRINT(EM_DIAGRAM):   end;
2264717   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2264718   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2264719    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2264720    quit;
2264721    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2264722    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2264723    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2264724    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2264725    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2264726    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264727    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2264728    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264729    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2264730    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2264731    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264732    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264733    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2264734    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2264735    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2264736    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264737    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2264738    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2264739    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2264740    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264741    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264742    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2264743    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2264744    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2264745    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2264746    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2264747    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2264747  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2264748    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264749    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2264750    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 2372 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264751    %macro varDept(fcmpdata=,id=);
2264752    %global nobs&id scoreFlag&id;
2264753    %let scoreFlag&id = 0;
2264754    %if &id=1 or ^&fcmpStart %then %do;
2264755    proc sort data=&fcmpdata out=_temp&id nodupkey;
2264756    by NAME;
2264757    where id=&id and LHS in( %let j=1;
2264758    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2264759    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2264760    "&var" %let j = %eval(&j+1);
2264761    %end;
2264762    );
2264763    run;
2264764    %let dsid = %sysfunc(open(_temp&id));
2264765    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2264766    %let dsid = %sysfunc(close(&dsid));
2264767    %if &&nobs&id %then %do;
2264768    %let scoreFlag&id = 1;
2264769    %let fcmpStart = 1;
2264770    %end;
2264771    %else %let fcmpStart = 0;
2264772    %end;
2264773    %else %do;
2264774    proc sort data=&fcmpdata out=_tempid;
2264775    where id=&id;
2264776    by LHS;
2264777    run;
2264778    %let dsid = %sysfunc(open(_tempid));
2264779    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2264780    %let dsid = %sysfunc(close(&dsid));
2264781    %if ^&&nobs&id %then %do;
2264782    proc datasets lib=work nolist;
2264783    delete _tempid;
2264784    run;
2264785    quit;
2264786    %end;
2264787    %else %do;
2264788    data _tempAll;
2264789    set %let j=%eval(&id-1);
2264790    %do x=1 %to &j;
2264791    %if &&nobs&x %then %do;
2264792    _temp&x %end;
2264793    %end;
2264794    ;
2264795    run;
2264796    proc sql;
2264797    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2264797  ! work._tempid p2 where p.name=p2.lhs;
2264798    quit;
2264799    data _temp&id;
2264800    set _temp&id;
2264801    where LHS ne '' and NAME ne '' and Node ne '';
2264802    run;
2264803    proc datasets lib=work nolist;
2264804    delete _tempAll;
2264805    run;
2264806    %let dsid = %sysfunc(open(_temp&id));
2264807    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2264808    %let dsid = %sysfunc(close(&dsid));
2264809    %if ^&&nobs&id %then %do;
2264810    proc datasets lib=work nolist;
2264811    delete _temp&id;
2264812    run;
2264813    quit;
2264814    %end;
2264815    %else %do;
2264816    %let scoreFlag&id = 1;
2264817    data _temp&id;
2264818    set _temp&id;
2264819    where LHS ne NAME and node ne '';
2264820    run;
2264821    %let dsid = %sysfunc(open(_temp&id));
2264822    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2264823    %let dsid = %sysfunc(close(&dsid));
2264824    %if ^&&nobs&id %then %do;
2264825    proc datasets lib=work nolist;
2264826    delete _temp&id;
2264827    run;
2264828    quit;
2264829    %end;
2264830    %else %do;
2264831    proc sort data=_temp&id nodupkey;
2264832    by LHS NAME;
2264833    run;
2264834    %end;
2264835    %end;
2264836    %end;
2264837    %end;
2264838    %mend varDept;
2264839    %macro optCode(outdata=fcmpdata);
2264840    %global fcmpStart;
2264841    %let fcmpStart = 0;
2264842    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2264843    %let NumNodes=9;
2264844    %do k=1 %to &NumNodes;
2264845    %vardept(fcmpdata=&outdata, id=&k);
2264846    %end;
2264847    %mend optCode;
2264848    %optcode(outData=EMWS8.Ensmbl36_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2264849    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2264850    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2264851    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2264852    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2264853    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2264854    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2264855    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2264856    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2264857    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2264858    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2264858  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2264859    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2264860    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2264861    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2264862    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2264863    filename _pref
2264863  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2264864    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2264865    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2264866   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2264867   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2264868   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2264869   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2264870   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2264871   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2264872   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2264873   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2264874   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2264875   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2264876   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2264877   +LENGTH _WARN_ $4
2264878   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2264879   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2264880   +
2264881   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2264882   +
2264883   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2264884   +
2264885   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2264886   +
2264887   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2264888   +
2264889   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2264890   +
2264891   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2264892   +
2264893   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2264894   +
2264895   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2264896   +
2264897   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2264898   +
2264899   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2264900   +
2264901   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2264902   +
2264903   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2264904   +
2264905   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2264906   +
2264907   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2264908   +
2264909   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2264910   +
2264911   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2264912   +
2264913   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2264914   +
2264915   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2264916   +
2264917   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2264918   +
2264919   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2264920   +
2264921   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2264922   +
2264923   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2264924   +
2264925   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2264926   +
2264927   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2264928   +
2264929   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2264930   +
2264931   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2264932   +
2264933   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2264934   +
2264935   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2264936   +
2264937   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2264938   +
2264939   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2264940   +
2264941   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2264942   +
2264943   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2264944   +
2264945   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2264946   +
2264947   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2264948   +
2264949   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2264950   +
2264951   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2264952   +
2264953   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2264954   +
2264955   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2264956   +
2264957   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2264958   +
2264959   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2264960   +
2264961   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2264962   +
2264963   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2264964   +
2264965   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2264966   +
2264967   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2264968   +
2264969   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2264970   +
2264971   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2264972   +
2264973   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2264974   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2264975   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2264976   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2264977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2264978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2264979   +end;
MPRINT(EM_DIAGRAM):   end;
2264980   +else do;
MPRINT(EM_DIAGRAM):   else do;
2264981   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2264982   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2264983   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2264984   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2264985   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2264986   +   end;
MPRINT(EM_DIAGRAM):   end;
2264987   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2264988   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2264989   +   end;
MPRINT(EM_DIAGRAM):   end;
2264990   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2264991   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2264992   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2264993   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2264994   +   end;
MPRINT(EM_DIAGRAM):   end;
2264995   +end;
MPRINT(EM_DIAGRAM):   end;
2264996   +
2264997   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2264998   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2264999   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2265000   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2265001   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2265002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265003   +end;
MPRINT(EM_DIAGRAM):   end;
2265004   +else do;
MPRINT(EM_DIAGRAM):   else do;
2265005   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2265006   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2265007   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2265008   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2265009   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2265010   +   end;
MPRINT(EM_DIAGRAM):   end;
2265011   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2265012   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2265013   +   end;
MPRINT(EM_DIAGRAM):   end;
2265014   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2265015   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2265016   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2265017   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265018   +   end;
MPRINT(EM_DIAGRAM):   end;
2265019   +end;
MPRINT(EM_DIAGRAM):   end;
2265020   +
2265021   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2265022   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2265023   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2265024   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2265025   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2265026   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265027   +end;
MPRINT(EM_DIAGRAM):   end;
2265028   +else do;
MPRINT(EM_DIAGRAM):   else do;
2265029   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2265030   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2265031   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2265032   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2265033   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2265034   +   end;
MPRINT(EM_DIAGRAM):   end;
2265035   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2265036   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2265037   +   end;
MPRINT(EM_DIAGRAM):   end;
2265038   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2265039   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2265040   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2265041   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265042   +   end;
MPRINT(EM_DIAGRAM):   end;
2265043   +end;
MPRINT(EM_DIAGRAM):   end;
2265044   +
2265045   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2265046   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2265047   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2265048   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2265049   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2265050   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265051   +end;
MPRINT(EM_DIAGRAM):   end;
2265052   +else do;
MPRINT(EM_DIAGRAM):   else do;
2265053   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2265054   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2265055   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2265056   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2265057   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2265058   +   end;
MPRINT(EM_DIAGRAM):   end;
2265059   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2265060   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2265061   +   end;
MPRINT(EM_DIAGRAM):   end;
2265062   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2265063   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2265064   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2265065   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265066   +   end;
MPRINT(EM_DIAGRAM):   end;
2265067   +end;
MPRINT(EM_DIAGRAM):   end;
2265068   +
2265069   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2265070   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2265071   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2265072   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2265073   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2265074   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265075   +end;
MPRINT(EM_DIAGRAM):   end;
2265076   +else do;
MPRINT(EM_DIAGRAM):   else do;
2265077   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2265078   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2265079   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2265080   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2265081   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2265082   +   end;
MPRINT(EM_DIAGRAM):   end;
2265083   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2265084   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2265085   +   end;
MPRINT(EM_DIAGRAM):   end;
2265086   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2265087   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2265088   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2265089   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265090   +   end;
MPRINT(EM_DIAGRAM):   end;
2265091   +end;
MPRINT(EM_DIAGRAM):   end;
2265092   +
2265093   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2265094   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2265095   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2265096   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2265097   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2265098   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265099   +end;
MPRINT(EM_DIAGRAM):   end;
2265100   +else do;
MPRINT(EM_DIAGRAM):   else do;
2265101   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2265102   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2265103   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2265104   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2265105   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2265106   +   end;
MPRINT(EM_DIAGRAM):   end;
2265107   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2265108   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2265109   +   end;
MPRINT(EM_DIAGRAM):   end;
2265110   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2265111   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2265112   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2265113   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265114   +   end;
MPRINT(EM_DIAGRAM):   end;
2265115   +end;
MPRINT(EM_DIAGRAM):   end;
2265116   +
2265117   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2265118   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2265119   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2265120   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2265121   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2265122   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265123   +end;
MPRINT(EM_DIAGRAM):   end;
2265124   +else do;
MPRINT(EM_DIAGRAM):   else do;
2265125   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2265126   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2265127   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2265128   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2265129   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2265130   +   end;
MPRINT(EM_DIAGRAM):   end;
2265131   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2265132   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2265133   +   end;
MPRINT(EM_DIAGRAM):   end;
2265134   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2265135   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2265136   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2265137   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265138   +   end;
MPRINT(EM_DIAGRAM):   end;
2265139   +end;
MPRINT(EM_DIAGRAM):   end;
2265140   +
2265141   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2265142   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2265143   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2265144   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2265145   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2265146   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2265147   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2265148   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2265149   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2265150   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2265151   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2265152   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2265153   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2265154   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265155   +end;
MPRINT(EM_DIAGRAM):   end;
2265156   +else do;
MPRINT(EM_DIAGRAM):   else do;
2265157   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2265158   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2265159   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2265160   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2265161   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2265162   +   end;
MPRINT(EM_DIAGRAM):   end;
2265163   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2265164   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2265165   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2265166   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2265167   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2265168   +   end;
MPRINT(EM_DIAGRAM):   end;
2265169   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2265170   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2265171   +   end;
MPRINT(EM_DIAGRAM):   end;
2265172   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2265173   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2265174   +   end;
MPRINT(EM_DIAGRAM):   end;
2265175   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2265176   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2265177   +   end;
MPRINT(EM_DIAGRAM):   end;
2265178   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2265179   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2265180   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2265181   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2265182   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2265183   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2265184   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265185   +   end;
MPRINT(EM_DIAGRAM):   end;
2265186   +end;
MPRINT(EM_DIAGRAM):   end;
2265187   +
2265188   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2265189   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2265190   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2265191   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2265192   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2265193   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2265194   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2265195   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2265196   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2265197   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2265198   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2265199   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2265200   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2265201   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2265202   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265203   +end;
MPRINT(EM_DIAGRAM):   end;
2265204   +else do;
MPRINT(EM_DIAGRAM):   else do;
2265205   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2265206   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2265207   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2265208   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2265209   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2265210   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2265211   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2265212   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2265213   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2265214   +         end;
MPRINT(EM_DIAGRAM):   end;
2265215   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2265216   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2265217   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2265218   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2265219   +            end;
MPRINT(EM_DIAGRAM):   end;
2265220   +         end;
MPRINT(EM_DIAGRAM):   end;
2265221   +      end;
MPRINT(EM_DIAGRAM):   end;
2265222   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2265223   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2265224   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2265225   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2265226   +         end;
MPRINT(EM_DIAGRAM):   end;
2265227   +      end;
MPRINT(EM_DIAGRAM):   end;
2265228   +   end;
MPRINT(EM_DIAGRAM):   end;
2265229   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2265230   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2265231   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2265232   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2265233   +      end;
MPRINT(EM_DIAGRAM):   end;
2265234   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2265235   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2265236   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2265237   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2265238   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2265239   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2265240   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2265241   +         end;
MPRINT(EM_DIAGRAM):   end;
2265242   +      end;
MPRINT(EM_DIAGRAM):   end;
2265243   +   end;
MPRINT(EM_DIAGRAM):   end;
2265244   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2265245   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2265246   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2265247   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2265248   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2265249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2265250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265251   +   end;
MPRINT(EM_DIAGRAM):   end;
2265252   +end;
MPRINT(EM_DIAGRAM):   end;
2265253   +
2265254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2265255   +*** Checking missing input Interval
2265256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2265257   +
2265258   +IF NMISS(
2265259   +   AcceptedCmpTotal ,
2265260   +   Age ,
2265261   +   Frq ,
2265262   +   Income ,
2265263   +   Kidhome ,
2265264   +   Mnt ,
2265265   +   MntFishProducts ,
2265266   +   MntFruits ,
2265267   +   MntGoldProds ,
2265268   +   MntMeatProducts ,
2265269   +   MntSweetProducts ,
2265270   +   MntWines ,
2265271   +   MonthsAsCustomer ,
2265272   +   NumCatalogPurchases ,
2265273   +   NumDealsPurchases ,
2265274   +   NumDistPurchases ,
2265275   +   NumStorePurchases ,
2265276   +   NumWebPurchases ,
2265277   +   NumWebVisitsMonth ,
2265278   +   RFMstat ,
2265279   +   RMntFrq ,
2265280   +   Recency ,
2265281   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2265282   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2265283   +
2265284   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2265285   +END;
MPRINT(EM_DIAGRAM):   END;
2265286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2265287   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2265288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2265289   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2265290   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2265291   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2265292   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2265293   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2265294   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2265295   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2265296   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2265297   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2265298   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2265299   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2265300   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2265301   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2265302   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2265303   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2265304   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2265305   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2265306   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2265307   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2265308   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2265309   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2265310   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2265311   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2265312   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2265313   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2265314   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2265315   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2265316   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2265317   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2265318   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2265319   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2265320   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2265321   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2265322   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2265323   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2265324   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2265325   +END;
MPRINT(EM_DIAGRAM):   END;
2265326   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2265327   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2265328   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2265329   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2265330   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2265331   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2265332   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2265333   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2265334   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2265335   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2265336   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2265337   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2265338   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2265339   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2265340   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2265341   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2265342   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2265343   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2265344   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2265345   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2265346   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2265347   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2265348   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2265349   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2265350   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2265351   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2265352   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2265353   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2265354   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2265355   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2265356   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2265357   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2265358   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2265359   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2265360   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2265361   +   ELSE S_NumCatalogPurchases
2265362   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2265363   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2265364   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2265365   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2265366   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2265367   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2265368   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2265369   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2265370   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2265371   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2265372   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2265373   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2265374   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2265375   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2265376   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2265377   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2265378   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2265379   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2265380   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2265381   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2265382   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2265383   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2265384   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2265385   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2265386   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2265387   +END;
MPRINT(EM_DIAGRAM):   END;
2265388   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2265389   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2265390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2265391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2265392   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2265393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2265394   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2265395   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2265396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2265397   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2265398   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2265399   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2265400   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2265401   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2265402   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2265403   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2265404   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2265405   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2265406   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2265407   +          +    -1.09856598010056 * S_NumDealsPurchases
2265408   +          +    -0.10571850472514 * S_NumDistPurchases
2265409   +          +     0.11898210654227 * S_NumStorePurchases
2265410   +          +      0.5984912060231 * S_NumWebPurchases
2265411   +          +     0.78592531126942 * S_NumWebVisitsMonth
2265412   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2265413   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2265414   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2265415   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2265416   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2265417   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2265418   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2265419   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2265420   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2265421   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2265422   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2265423   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2265424   +          +    -0.84042044250624 * S_NumDealsPurchases
2265425   +          +    -0.10246261015488 * S_NumDistPurchases
2265426   +          +     0.06886149708824 * S_NumStorePurchases
2265427   +          +     0.63156910388199 * S_NumWebPurchases
2265428   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2265429   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2265430   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2265431   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2265432   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2265433   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2265434   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2265435   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2265436   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2265437   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2265438   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2265439   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2265440   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2265441   +          +     0.45393712455366 * S_NumDealsPurchases
2265442   +          +    -0.25292198053552 * S_NumDistPurchases
2265443   +          +    -1.35582215064749 * S_NumStorePurchases
2265444   +          +    -0.83132202302639 * S_NumWebPurchases
2265445   +          +     1.87116225272678 * S_NumWebVisitsMonth
2265446   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2265447   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2265448   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2265449   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2265450   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2265451   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2265452   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2265453   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2265454   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2265455   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2265456   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2265457   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2265458   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2265459   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2265460   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2265461   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2265462   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2265463   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2265464   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2265465   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2265466   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2265467   +          +      0.4695898100094 * Marital_StatusDivorced
2265468   +          +    -0.52137742289262 * Marital_StatusMarried
2265469   +          +    -0.32382086914936 * Marital_StatusSingle
2265470   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2265471   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2265472   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2265473   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2265474   +          +    -1.04858218653238 * Marital_StatusDivorced
2265475   +          +     2.41098335093061 * Marital_StatusMarried
2265476   +          +    -1.94696044861334 * Marital_StatusSingle
2265477   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2265478   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2265479   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2265480   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2265481   +          +     0.42964114177062 * Marital_StatusDivorced
2265482   +          +    -0.38607635605816 * Marital_StatusMarried
2265483   +          +    -0.02157405407852 * Marital_StatusSingle
2265484   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2265485   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2265486   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2265487   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2265488   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2265489   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2265490   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2265491   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2265492   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2265493   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2265494   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2265495   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2265496   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2265497   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2265498   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2265499   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2265500   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2265501   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2265502   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2265503   +END;
MPRINT(EM_DIAGRAM):   END;
2265504   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2265505   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2265506   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2265507   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2265508   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2265509   +END;
MPRINT(EM_DIAGRAM):   END;
2265510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2265511   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2265512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2265513   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2265514   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2265515   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2265516   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2265517   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2265518   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2265519   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2265520   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2265521   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2265522   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2265523   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2265524   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2265525   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2265526   +END;
MPRINT(EM_DIAGRAM):   END;
2265527   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2265528   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2265529   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2265530   +END;
MPRINT(EM_DIAGRAM):   END;
2265531   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2265532   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2265533   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2265534   +END;
MPRINT(EM_DIAGRAM):   END;
2265535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2265536   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2265537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2265538   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2265539   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2265540   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2265541   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2265542   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2265543   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2265544   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2265545   +END;
MPRINT(EM_DIAGRAM):   END;
2265546   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2265547   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2265548   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2265549   +drop
2265550   +H1x1_1
2265551   +H1x1_2
2265552   +H1x1_3
2265553   +H1x1_4
2265554   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2265555   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2265556    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2265557    quit;
2265558    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2265559    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2265560    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2265561    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2265562    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2265563    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265564    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2265565    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265566    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265567    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
2265568    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265569    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2265570    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2265571    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2265572    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2265573    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265574    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2265575    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2265576    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2265577    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265578    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265579    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2265580    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2265581    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265582    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265583    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2265584    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2265584  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1479 rows and 5 columns.

2265585    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265586    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2265587    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265588    filename _pref
2265588  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2265589    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2265590    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2265591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2265592   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2265593   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2265594   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2265595   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2265596   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2265597    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2265598    quit;
2265599    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2265600    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2265601    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2265602    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2265603    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2265604    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265605    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2265606    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265607    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265608    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2265609    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265610    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265611    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2265612    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2265613    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2265614    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2265615    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2265616    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2265617    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2265618    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265619    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2265620    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2265621    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2265622    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265623    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265624    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2265625    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2265625  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2265626    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265627    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2265628    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265629    filename _pref
2265629  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2265630    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2265631    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2265632   +
2265633   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2265634   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2265634  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2265635   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2265636   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2265637   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2265638   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2265639   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2265640    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2265641    quit;
2265642    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2265643    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2265644    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2265645    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2265646    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2265647    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265648    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2265649    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265650    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265651    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2265652    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265653    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2265654    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2265655    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2265656    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2265657    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265658    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2265659    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265660    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2265661    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265662    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2265663    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2265664    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2265665    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265666    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265667    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2265668    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2265668  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2265669    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265670    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2265671    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1522 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265672    filename _pref
2265672  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2265673    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2265674    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2265675   +
2265676   +
2265677   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2265678   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2265679   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2265680   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2265681   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2265682   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2265683   +
2265684   +
2265685   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2265686   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2265687   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2265688   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2265689   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2265690   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2265691   +
2265692   +
2265693   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2265694   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2265695   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2265696   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2265697   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2265698   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2265699   +
2265700   +
2265701   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2265702   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2265703   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2265704   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2265705   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2265706   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2265707   +
2265708   +
2265709   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2265710   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2265711   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2265712   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2265713   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2265714   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2265715   +
2265716   +
2265717   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2265718   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2265719   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2265720   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2265721   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2265722   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2265723   +
2265724   +
2265725   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2265726   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2265727   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2265728   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2265729   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2265730   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2265731   +
2265732   +
2265733   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2265734   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2265735   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2265736   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2265737   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2265738   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2265739   +if
2265740   +_FILTERNORM1 not in ( '.')
2265741   + and
2265742   +_FILTERNORM2 not in ( '.')
2265743   + and
2265744   +_FILTERNORM3 not in ( '.')
2265745   + and
2265746   +_FILTERNORM4 not in ( '.')
2265747   + and
2265748   +_FILTERNORM5 not in ( '.')
2265749   + and
2265750   +_FILTERNORM6 not in ( '.')
2265751   + and
2265752   +_FILTERNORM7 not in ( ' ')
2265753   + and
2265754   +_FILTERNORM8 not in ( ' ')
2265755   +and
2265756   +( Dt_Customer ne .)
2265757   +and ( Income ne . and (Income<=107000))
2265758   +and ( Kidhome ne .)
2265759   +and ( MntFishProducts ne .)
2265760   +and ( MntFruits ne .)
2265761   +and ( MntGoldProds ne .)
2265762   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2265763   +and ( MntSweetProducts ne .)
2265764   +and ( MntWines ne .)
2265765   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2265766   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2265767   +and ( NumStorePurchases ne .)
2265768   +and ( NumWebPurchases ne .)
2265769   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2265770   +and ( Recency ne .)
2265771   +and ( Teenhome ne .)
2265772   +and ( Year_Birth ne .)
2265773   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2265774   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2265775   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2265776   +end;
MPRINT(EM_DIAGRAM):   end;
2265777   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2265778   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2265779    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2265780    quit;
2265781    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2265782    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2265783    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2265784    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2265785    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2265786    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265787    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2265788    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265789    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2265790    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2265791    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265792    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265793    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2265794    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2265795    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2265796    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265797    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2265798    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2265799    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2265800    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265801    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265802    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2265803    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2265804    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2265805    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265806    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2265807    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2265807  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2265808    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265809    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2265810    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1588 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265811    %macro varDept(fcmpdata=,id=);
2265812    %global nobs&id scoreFlag&id;
2265813    %let scoreFlag&id = 0;
2265814    %if &id=1 or ^&fcmpStart %then %do;
2265815    proc sort data=&fcmpdata out=_temp&id nodupkey;
2265816    by NAME;
2265817    where id=&id and LHS in( %let j=1;
2265818    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2265819    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2265820    "&var" %let j = %eval(&j+1);
2265821    %end;
2265822    );
2265823    run;
2265824    %let dsid = %sysfunc(open(_temp&id));
2265825    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2265826    %let dsid = %sysfunc(close(&dsid));
2265827    %if &&nobs&id %then %do;
2265828    %let scoreFlag&id = 1;
2265829    %let fcmpStart = 1;
2265830    %end;
2265831    %else %let fcmpStart = 0;
2265832    %end;
2265833    %else %do;
2265834    proc sort data=&fcmpdata out=_tempid;
2265835    where id=&id;
2265836    by LHS;
2265837    run;
2265838    %let dsid = %sysfunc(open(_tempid));
2265839    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2265840    %let dsid = %sysfunc(close(&dsid));
2265841    %if ^&&nobs&id %then %do;
2265842    proc datasets lib=work nolist;
2265843    delete _tempid;
2265844    run;
2265845    quit;
2265846    %end;
2265847    %else %do;
2265848    data _tempAll;
2265849    set %let j=%eval(&id-1);
2265850    %do x=1 %to &j;
2265851    %if &&nobs&x %then %do;
2265852    _temp&x %end;
2265853    %end;
2265854    ;
2265855    run;
2265856    proc sql;
2265857    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2265857  ! work._tempid p2 where p.name=p2.lhs;
2265858    quit;
2265859    data _temp&id;
2265860    set _temp&id;
2265861    where LHS ne '' and NAME ne '' and Node ne '';
2265862    run;
2265863    proc datasets lib=work nolist;
2265864    delete _tempAll;
2265865    run;
2265866    %let dsid = %sysfunc(open(_temp&id));
2265867    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2265868    %let dsid = %sysfunc(close(&dsid));
2265869    %if ^&&nobs&id %then %do;
2265870    proc datasets lib=work nolist;
2265871    delete _temp&id;
2265872    run;
2265873    quit;
2265874    %end;
2265875    %else %do;
2265876    %let scoreFlag&id = 1;
2265877    data _temp&id;
2265878    set _temp&id;
2265879    where LHS ne NAME and node ne '';
2265880    run;
2265881    %let dsid = %sysfunc(open(_temp&id));
2265882    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2265883    %let dsid = %sysfunc(close(&dsid));
2265884    %if ^&&nobs&id %then %do;
2265885    proc datasets lib=work nolist;
2265886    delete _temp&id;
2265887    run;
2265888    quit;
2265889    %end;
2265890    %else %do;
2265891    proc sort data=_temp&id nodupkey;
2265892    by LHS NAME;
2265893    run;
2265894    %end;
2265895    %end;
2265896    %end;
2265897    %end;
2265898    %mend varDept;
2265899    %macro optCode(outdata=fcmpdata);
2265900    %global fcmpStart;
2265901    %let fcmpStart = 0;
2265902    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2265903    %let NumNodes=9;
2265904    %do k=1 %to &NumNodes;
2265905    %vardept(fcmpdata=&outdata, id=&k);
2265906    %end;
2265907    %mend optCode;
2265908    %optcode(outData=EMWS8.Ensmbl36_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2265909    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2265910    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2265911    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2265912    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265913    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2265914    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2265915    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2265916    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265917    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2265918    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2265918  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2265919    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2265920    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2265921    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2265922    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2265923    filename _pref
2265923  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2265924    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2265925    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2265926   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2265927   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2265928   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2265929   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2265930   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2265931   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2265932   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2265933   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2265934   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2265935   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2265936   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2265937   +LENGTH _WARN_ $4
2265938   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2265939   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2265940   +
2265941   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2265942   +
2265943   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2265944   +
2265945   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2265946   +
2265947   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2265948   +
2265949   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2265950   +
2265951   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2265952   +
2265953   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2265954   +
2265955   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2265956   +
2265957   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2265958   +
2265959   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2265960   +
2265961   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2265962   +
2265963   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2265964   +
2265965   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2265966   +
2265967   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2265968   +
2265969   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2265970   +
2265971   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2265972   +
2265973   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2265974   +
2265975   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2265976   +
2265977   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2265978   +
2265979   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2265980   +
2265981   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2265982   +
2265983   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2265984   +
2265985   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2265986   +
2265987   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2265988   +
2265989   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2265990   +
2265991   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2265992   +
2265993   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2265994   +
2265995   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2265996   +
2265997   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2265998   +
2265999   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2266000   +
2266001   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2266002   +
2266003   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2266004   +
2266005   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2266006   +
2266007   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2266008   +
2266009   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2266010   +
2266011   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2266012   +
2266013   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2266014   +
2266015   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2266016   +
2266017   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2266018   +
2266019   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2266020   +
2266021   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2266022   +
2266023   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2266024   +
2266025   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2266026   +
2266027   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2266028   +
2266029   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2266030   +
2266031   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2266032   +
2266033   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2266034   +
2266035   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2266036   +
2266037   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2266038   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2266039   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2266040   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2266041   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2266042   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266043   +end;
MPRINT(EM_DIAGRAM):   end;
2266044   +else do;
MPRINT(EM_DIAGRAM):   else do;
2266045   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2266046   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2266047   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2266048   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2266049   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2266050   +   end;
MPRINT(EM_DIAGRAM):   end;
2266051   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2266052   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2266053   +   end;
MPRINT(EM_DIAGRAM):   end;
2266054   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2266055   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2266056   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2266057   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266058   +   end;
MPRINT(EM_DIAGRAM):   end;
2266059   +end;
MPRINT(EM_DIAGRAM):   end;
2266060   +
2266061   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2266062   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2266063   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2266064   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2266065   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2266066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266067   +end;
MPRINT(EM_DIAGRAM):   end;
2266068   +else do;
MPRINT(EM_DIAGRAM):   else do;
2266069   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2266070   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2266071   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2266072   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2266073   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2266074   +   end;
MPRINT(EM_DIAGRAM):   end;
2266075   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2266076   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2266077   +   end;
MPRINT(EM_DIAGRAM):   end;
2266078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2266079   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2266080   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2266081   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266082   +   end;
MPRINT(EM_DIAGRAM):   end;
2266083   +end;
MPRINT(EM_DIAGRAM):   end;
2266084   +
2266085   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2266086   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2266087   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2266088   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2266089   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2266090   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266091   +end;
MPRINT(EM_DIAGRAM):   end;
2266092   +else do;
MPRINT(EM_DIAGRAM):   else do;
2266093   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2266094   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2266095   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2266096   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2266097   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2266098   +   end;
MPRINT(EM_DIAGRAM):   end;
2266099   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2266100   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2266101   +   end;
MPRINT(EM_DIAGRAM):   end;
2266102   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2266103   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2266104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2266105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266106   +   end;
MPRINT(EM_DIAGRAM):   end;
2266107   +end;
MPRINT(EM_DIAGRAM):   end;
2266108   +
2266109   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2266110   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2266111   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2266112   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2266113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2266114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266115   +end;
MPRINT(EM_DIAGRAM):   end;
2266116   +else do;
MPRINT(EM_DIAGRAM):   else do;
2266117   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2266118   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2266119   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2266120   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2266121   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2266122   +   end;
MPRINT(EM_DIAGRAM):   end;
2266123   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2266124   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2266125   +   end;
MPRINT(EM_DIAGRAM):   end;
2266126   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2266127   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2266128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2266129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266130   +   end;
MPRINT(EM_DIAGRAM):   end;
2266131   +end;
MPRINT(EM_DIAGRAM):   end;
2266132   +
2266133   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2266134   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2266135   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2266136   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2266137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2266138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266139   +end;
MPRINT(EM_DIAGRAM):   end;
2266140   +else do;
MPRINT(EM_DIAGRAM):   else do;
2266141   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2266142   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2266143   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2266144   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2266145   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2266146   +   end;
MPRINT(EM_DIAGRAM):   end;
2266147   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2266148   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2266149   +   end;
MPRINT(EM_DIAGRAM):   end;
2266150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2266151   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2266152   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2266153   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266154   +   end;
MPRINT(EM_DIAGRAM):   end;
2266155   +end;
MPRINT(EM_DIAGRAM):   end;
2266156   +
2266157   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2266158   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2266159   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2266160   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2266161   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2266162   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266163   +end;
MPRINT(EM_DIAGRAM):   end;
2266164   +else do;
MPRINT(EM_DIAGRAM):   else do;
2266165   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2266166   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2266167   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2266168   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2266169   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2266170   +   end;
MPRINT(EM_DIAGRAM):   end;
2266171   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2266172   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2266173   +   end;
MPRINT(EM_DIAGRAM):   end;
2266174   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2266175   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2266176   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2266177   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266178   +   end;
MPRINT(EM_DIAGRAM):   end;
2266179   +end;
MPRINT(EM_DIAGRAM):   end;
2266180   +
2266181   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2266182   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2266183   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2266184   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2266185   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2266186   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266187   +end;
MPRINT(EM_DIAGRAM):   end;
2266188   +else do;
MPRINT(EM_DIAGRAM):   else do;
2266189   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2266190   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2266191   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2266192   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2266193   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2266194   +   end;
MPRINT(EM_DIAGRAM):   end;
2266195   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2266196   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2266197   +   end;
MPRINT(EM_DIAGRAM):   end;
2266198   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2266199   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2266200   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2266201   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266202   +   end;
MPRINT(EM_DIAGRAM):   end;
2266203   +end;
MPRINT(EM_DIAGRAM):   end;
2266204   +
2266205   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2266206   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2266207   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2266208   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2266209   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2266210   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2266211   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2266212   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2266213   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2266214   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2266215   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2266216   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2266217   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2266218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266219   +end;
MPRINT(EM_DIAGRAM):   end;
2266220   +else do;
MPRINT(EM_DIAGRAM):   else do;
2266221   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2266222   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2266223   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2266224   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2266225   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2266226   +   end;
MPRINT(EM_DIAGRAM):   end;
2266227   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2266228   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2266229   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2266230   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2266231   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2266232   +   end;
MPRINT(EM_DIAGRAM):   end;
2266233   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2266234   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2266235   +   end;
MPRINT(EM_DIAGRAM):   end;
2266236   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2266237   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2266238   +   end;
MPRINT(EM_DIAGRAM):   end;
2266239   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2266240   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2266241   +   end;
MPRINT(EM_DIAGRAM):   end;
2266242   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2266243   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2266244   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2266245   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2266246   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2266247   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2266248   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266249   +   end;
MPRINT(EM_DIAGRAM):   end;
2266250   +end;
MPRINT(EM_DIAGRAM):   end;
2266251   +
2266252   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2266253   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2266254   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2266255   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2266256   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2266257   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2266258   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2266259   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2266260   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2266261   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2266262   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2266263   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2266264   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2266265   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2266266   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266267   +end;
MPRINT(EM_DIAGRAM):   end;
2266268   +else do;
MPRINT(EM_DIAGRAM):   else do;
2266269   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2266270   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2266271   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2266272   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2266273   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2266274   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2266275   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2266276   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2266277   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2266278   +         end;
MPRINT(EM_DIAGRAM):   end;
2266279   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2266280   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2266281   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2266282   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2266283   +            end;
MPRINT(EM_DIAGRAM):   end;
2266284   +         end;
MPRINT(EM_DIAGRAM):   end;
2266285   +      end;
MPRINT(EM_DIAGRAM):   end;
2266286   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2266287   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2266288   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2266289   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2266290   +         end;
MPRINT(EM_DIAGRAM):   end;
2266291   +      end;
MPRINT(EM_DIAGRAM):   end;
2266292   +   end;
MPRINT(EM_DIAGRAM):   end;
2266293   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2266294   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2266295   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2266296   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2266297   +      end;
MPRINT(EM_DIAGRAM):   end;
2266298   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2266299   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2266300   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2266301   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2266302   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2266303   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2266304   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2266305   +         end;
MPRINT(EM_DIAGRAM):   end;
2266306   +      end;
MPRINT(EM_DIAGRAM):   end;
2266307   +   end;
MPRINT(EM_DIAGRAM):   end;
2266308   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2266309   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2266310   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2266311   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2266312   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2266313   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2266314   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266315   +   end;
MPRINT(EM_DIAGRAM):   end;
2266316   +end;
MPRINT(EM_DIAGRAM):   end;
2266317   +
2266318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2266319   +*** Checking missing input Interval
2266320   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2266321   +
2266322   +IF NMISS(
2266323   +   AcceptedCmpTotal ,
2266324   +   Age ,
2266325   +   Frq ,
2266326   +   Income ,
2266327   +   Kidhome ,
2266328   +   Mnt ,
2266329   +   MntFishProducts ,
2266330   +   MntFruits ,
2266331   +   MntGoldProds ,
2266332   +   MntMeatProducts ,
2266333   +   MntSweetProducts ,
2266334   +   MntWines ,
2266335   +   MonthsAsCustomer ,
2266336   +   NumCatalogPurchases ,
2266337   +   NumDealsPurchases ,
2266338   +   NumDistPurchases ,
2266339   +   NumStorePurchases ,
2266340   +   NumWebPurchases ,
2266341   +   NumWebVisitsMonth ,
2266342   +   RFMstat ,
2266343   +   RMntFrq ,
2266344   +   Recency ,
2266345   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2266346   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2266347   +
2266348   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2266349   +END;
MPRINT(EM_DIAGRAM):   END;
2266350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2266351   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2266352   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2266353   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2266354   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2266355   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2266356   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2266357   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2266358   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2266359   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2266360   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2266361   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2266362   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2266363   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2266364   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2266365   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2266366   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2266367   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2266368   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2266369   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2266370   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2266371   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2266372   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2266373   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2266374   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2266375   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2266376   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2266377   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2266378   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2266379   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2266380   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2266381   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2266382   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2266383   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2266384   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2266385   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2266386   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2266387   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2266388   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2266389   +END;
MPRINT(EM_DIAGRAM):   END;
2266390   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2266391   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2266392   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2266393   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2266394   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2266395   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2266396   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2266397   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2266398   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2266399   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2266400   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2266401   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2266402   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2266403   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2266404   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2266405   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2266406   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2266407   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2266408   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2266409   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2266410   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2266411   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2266412   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2266413   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2266414   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2266415   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2266416   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2266417   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2266418   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2266419   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2266420   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2266421   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2266422   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2266423   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2266424   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2266425   +   ELSE S_NumCatalogPurchases
2266426   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2266427   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2266428   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2266429   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2266430   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2266431   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2266432   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2266433   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2266434   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2266435   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2266436   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2266437   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2266438   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2266439   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2266440   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2266441   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2266442   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2266443   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2266444   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2266445   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2266446   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2266447   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2266448   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2266449   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2266450   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2266451   +END;
MPRINT(EM_DIAGRAM):   END;
2266452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2266453   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2266454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2266455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2266456   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2266457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2266458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2266459   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2266460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2266461   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2266462   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2266463   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2266464   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2266465   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2266466   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2266467   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2266468   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2266469   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2266470   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2266471   +          +     0.19770934886328 * S_NumDealsPurchases
2266472   +          +      0.0515215988111 * S_NumDistPurchases
2266473   +          +    -0.34569346346089 * S_NumStorePurchases
2266474   +          +    -0.27122293596124 * S_NumWebPurchases
2266475   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2266476   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2266477   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2266478   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
The SAS System

0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2266479   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2266480   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2266481   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2266482   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2266483   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2266484   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2266485   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2266486   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2266487   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2266488   +          +     0.54308887602031 * S_NumDealsPurchases
2266489   +          +    -0.22507315320192 * S_NumDistPurchases
2266490   +          +    -0.79861387328361 * S_NumStorePurchases
2266491   +          +    -0.45467494002747 * S_NumWebPurchases
2266492   +          +      0.2119048824613 * S_NumWebVisitsMonth
2266493   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2266494   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2266495   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2266496   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2266497   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2266498   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2266499   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2266500   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2266501   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2266502   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2266503   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2266504   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2266505   +          +     -0.0771083149302 * S_NumDealsPurchases
2266506   +          +     0.03403621221162 * S_NumDistPurchases
2266507   +          +     0.61303946422025 * S_NumStorePurchases
2266508   +          +     0.27126793634053 * S_NumWebPurchases
2266509   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2266510   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2266511   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2266512   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2266513   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2266514   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2266515   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2266516   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2266517   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2266518   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2266519   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2266520   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2266521   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2266522   +          +     0.29894603062327 * S_NumDealsPurchases
2266523   +          +     0.07614620530875 * S_NumDistPurchases
2266524   +          +     0.15402335009896 * S_NumStorePurchases
2266525   +          +     0.10615749096863 * S_NumWebPurchases
2266526   +          +     0.41962286816879 * S_NumWebVisitsMonth
2266527   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2266528   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2266529   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2266530   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2266531   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2266532   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2266533   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2266534   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2266535   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2266536   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2266537   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2266538   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2266539   +          +     0.14392502416642 * S_NumDealsPurchases
2266540   +          +    -0.10026304978633 * S_NumDistPurchases
2266541   +          +     -0.0588453022746 * S_NumStorePurchases
2266542   +          +     0.24799398610395 * S_NumWebPurchases
2266543   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2266544   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2266545   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2266546   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2266547   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2266548   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2266549   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2266550   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2266551   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2266552   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2266553   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2266554   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2266555   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2266556   +          +     0.08149600854964 * S_NumDealsPurchases
2266557   +          +     0.16873541613513 * S_NumDistPurchases
2266558   +          +    -0.20437343413446 * S_NumStorePurchases
2266559   +          +     -0.1671107527288 * S_NumWebPurchases
2266560   +          +     0.03677043100993 * S_NumWebVisitsMonth
2266561   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2266562   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2266563   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2266564   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2266565   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2266566   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2266567   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2266568   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2266569   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2266570   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2266571   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2266572   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2266573   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2266574   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2266575   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2266576   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2266577   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2266578   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2266579   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2266580   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2266581   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2266582   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2266583   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2266584   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2266585   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2266586   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2266587   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2266588   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2266589   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2266590   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2266591   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2266592   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2266593   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2266594   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2266595   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2266596   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2266597   +          +    -0.31045295887604 * Marital_StatusDivorced
2266598   +          +    -0.01109401001539 * Marital_StatusMarried
2266599   +          +     0.01325135981025 * Marital_StatusSingle
2266600   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2266601   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2266602   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2266603   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2266604   +          +     0.02275101861599 * Marital_StatusDivorced
2266605   +          +     0.20271548664903 * Marital_StatusMarried
2266606   +          +    -0.12132069210718 * Marital_StatusSingle
2266607   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2266608   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2266609   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2266610   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2266611   +          +     -0.4992959703281 * Marital_StatusDivorced
2266612   +          +     0.62071659624138 * Marital_StatusMarried
2266613   +          +    -0.21776202274494 * Marital_StatusSingle
2266614   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2266615   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2266616   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2266617   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2266618   +          +     0.05626212670587 * Marital_StatusDivorced
2266619   +          +     0.14353891364597 * Marital_StatusMarried
2266620   +          +    -0.29006765622997 * Marital_StatusSingle
2266621   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2266622   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2266623   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2266624   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2266625   +          +    -0.21206913700604 * Marital_StatusDivorced
2266626   +          +     0.58790643614629 * Marital_StatusMarried
2266627   +          +    -0.65995982578062 * Marital_StatusSingle
2266628   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2266629   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2266630   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2266631   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2266632   +          +    -0.05047370516008 * Marital_StatusDivorced
2266633   +          +    -0.23139090963669 * Marital_StatusMarried
2266634   +          +     0.04816197463249 * Marital_StatusSingle
2266635   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2266636   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2266637   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2266638   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2266639   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2266640   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2266641   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2266642   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2266643   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2266644   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2266645   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2266646   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2266647   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2266648   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2266649   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2266650   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2266651   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2266652   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2266653   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2266654   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2266655   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2266656   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2266657   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2266658   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2266659   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2266660   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2266661   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2266662   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2266663   +END;
MPRINT(EM_DIAGRAM):   END;
2266664   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2266665   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2266666   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2266667   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2266668   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2266669   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2266670   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2266671   +END;
MPRINT(EM_DIAGRAM):   END;
2266672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2266673   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2266674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2266675   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2266676   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2266677   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2266678   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2266679   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2266680   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2266681   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2266682   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2266683   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2266684   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2266685   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2266686   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2266687   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2266688   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2266689   +END;
MPRINT(EM_DIAGRAM):   END;
2266690   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2266691   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2266692   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2266693   +END;
MPRINT(EM_DIAGRAM):   END;
2266694   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2266695   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2266696   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2266697   +END;
MPRINT(EM_DIAGRAM):   END;
2266698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2266699   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2266700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2266701   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2266702   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2266703   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2266704   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2266705   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2266706   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2266707   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2266708   +END;
MPRINT(EM_DIAGRAM):   END;
2266709   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2266710   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2266711   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2266712   +drop
2266713   +H1x1_1
2266714   +H1x1_2
2266715   +H1x1_3
2266716   +H1x1_4
2266717   +H1x1_5
2266718   +H1x1_6
2266719   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2266720   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2266721    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2266722    quit;
2266723    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2266724    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2266725    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2266726    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2266727    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2266728    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266729    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2266730    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266731    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266732    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
2266733    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266734    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266735    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2266736    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2266737    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2266738    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266739    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2266740    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

2266741    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2266742    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266743    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266744    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2266745    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2266746    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266747    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2266748    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2266749    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2266749  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

2266750    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266751    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2266752    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266753    filename _pref
2266753  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2266754    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2266755    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2266756   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2266757   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2266758   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2266759   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2266760   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2266761   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2266762    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2266763    quit;
2266764    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2266765    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2266766    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2266767    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2266768    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2266769    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2266770    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2266771    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266772    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266773    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2266774    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266775    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266776    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2266777    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2266778    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2266779    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266780    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2266781    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2266782    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2266783    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266784    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266785    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2266786    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2266787    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266788    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266789    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2266790    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2266790  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2266791    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2266792    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2266793    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266794    filename _pref
2266794  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2266795    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2266796    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2266797   +
2266798   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2266799   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2266799  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2266800   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2266801   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2266802   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2266803   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2266804   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2266805    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2266806    quit;
2266807    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2266808    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2266809    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2266810    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2266811    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2266812    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266813    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2266814    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266815    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266816    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2266817    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266818    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.14 seconds
      cpu time            0.00 seconds
      

2266819    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2266820    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2266821    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2266822    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2266823    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2266824    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266825    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2266826    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266827    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266828    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2266829    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2266830    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266831    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2266832    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2266833    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2266833  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2266834    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266835    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2266836    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266837    filename _pref
2266837  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2266838    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2266839    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2266840   +
2266841   +
2266842   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2266843   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2266844   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2266845   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2266846   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2266847   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2266848   +
2266849   +
2266850   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2266851   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2266852   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2266853   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2266854   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2266855   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2266856   +
2266857   +
2266858   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2266859   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2266860   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2266861   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2266862   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2266863   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2266864   +
2266865   +
2266866   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2266867   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2266868   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2266869   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2266870   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2266871   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2266872   +
2266873   +
2266874   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2266875   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2266876   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2266877   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2266878   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2266879   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2266880   +
2266881   +
2266882   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2266883   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2266884   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2266885   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2266886   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2266887   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2266888   +
2266889   +
2266890   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2266891   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2266892   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2266893   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2266894   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2266895   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2266896   +
2266897   +
2266898   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2266899   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2266900   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2266901   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2266902   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2266903   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2266904   +if
2266905   +_FILTERNORM1 not in ( '.')
2266906   + and
2266907   +_FILTERNORM2 not in ( '.')
2266908   + and
2266909   +_FILTERNORM3 not in ( '.')
2266910   + and
2266911   +_FILTERNORM4 not in ( '.')
2266912   + and
2266913   +_FILTERNORM5 not in ( '.')
2266914   + and
2266915   +_FILTERNORM6 not in ( '.')
2266916   + and
2266917   +_FILTERNORM7 not in ( ' ')
2266918   + and
2266919   +_FILTERNORM8 not in ( ' ')
2266920   +and
2266921   +( Dt_Customer ne .)
2266922   +and ( Income ne . and (Income<=107000))
2266923   +and ( Kidhome ne .)
2266924   +and ( MntFishProducts ne .)
2266925   +and ( MntFruits ne .)
2266926   +and ( MntGoldProds ne .)
2266927   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2266928   +and ( MntSweetProducts ne .)
2266929   +and ( MntWines ne .)
2266930   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2266931   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2266932   +and ( NumStorePurchases ne .)
2266933   +and ( NumWebPurchases ne .)
2266934   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2266935   +and ( Recency ne .)
2266936   +and ( Teenhome ne .)
2266937   +and ( Year_Birth ne .)
2266938   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2266939   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2266940   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2266941   +end;
MPRINT(EM_DIAGRAM):   end;
2266942   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2266943   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2266944    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2266945    quit;
2266946    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2266947    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2266948    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2266949    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2266950    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2266951    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266952    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2266953    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266954    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266955    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2266956    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266957    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2266958    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2266959    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2266960    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2266961    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266962    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2266963    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2266964    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2266965    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266966    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266967    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2266968    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2266969    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2266970    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2266971    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2266972    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2266972  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2266973    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266974    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2266975    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2266976    %macro varDept(fcmpdata=,id=);
2266977    %global nobs&id scoreFlag&id;
2266978    %let scoreFlag&id = 0;
2266979    %if &id=1 or ^&fcmpStart %then %do;
2266980    proc sort data=&fcmpdata out=_temp&id nodupkey;
2266981    by NAME;
2266982    where id=&id and LHS in( %let j=1;
2266983    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2266984    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2266985    "&var" %let j = %eval(&j+1);
2266986    %end;
2266987    );
2266988    run;
2266989    %let dsid = %sysfunc(open(_temp&id));
2266990    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2266991    %let dsid = %sysfunc(close(&dsid));
2266992    %if &&nobs&id %then %do;
2266993    %let scoreFlag&id = 1;
2266994    %let fcmpStart = 1;
2266995    %end;
2266996    %else %let fcmpStart = 0;
2266997    %end;
2266998    %else %do;
2266999    proc sort data=&fcmpdata out=_tempid;
2267000    where id=&id;
2267001    by LHS;
2267002    run;
2267003    %let dsid = %sysfunc(open(_tempid));
2267004    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2267005    %let dsid = %sysfunc(close(&dsid));
2267006    %if ^&&nobs&id %then %do;
2267007    proc datasets lib=work nolist;
2267008    delete _tempid;
2267009    run;
2267010    quit;
2267011    %end;
2267012    %else %do;
2267013    data _tempAll;
2267014    set %let j=%eval(&id-1);
2267015    %do x=1 %to &j;
2267016    %if &&nobs&x %then %do;
2267017    _temp&x %end;
2267018    %end;
2267019    ;
2267020    run;
2267021    proc sql;
2267022    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2267022  ! work._tempid p2 where p.name=p2.lhs;
2267023    quit;
2267024    data _temp&id;
2267025    set _temp&id;
2267026    where LHS ne '' and NAME ne '' and Node ne '';
2267027    run;
2267028    proc datasets lib=work nolist;
2267029    delete _tempAll;
2267030    run;
2267031    %let dsid = %sysfunc(open(_temp&id));
2267032    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2267033    %let dsid = %sysfunc(close(&dsid));
2267034    %if ^&&nobs&id %then %do;
2267035    proc datasets lib=work nolist;
2267036    delete _temp&id;
2267037    run;
2267038    quit;
2267039    %end;
2267040    %else %do;
2267041    %let scoreFlag&id = 1;
2267042    data _temp&id;
2267043    set _temp&id;
2267044    where LHS ne NAME and node ne '';
2267045    run;
2267046    %let dsid = %sysfunc(open(_temp&id));
2267047    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2267048    %let dsid = %sysfunc(close(&dsid));
2267049    %if ^&&nobs&id %then %do;
2267050    proc datasets lib=work nolist;
2267051    delete _temp&id;
2267052    run;
2267053    quit;
2267054    %end;
2267055    %else %do;
2267056    proc sort data=_temp&id nodupkey;
2267057    by LHS NAME;
2267058    run;
2267059    %end;
2267060    %end;
2267061    %end;
2267062    %end;
2267063    %mend varDept;
2267064    %macro optCode(outdata=fcmpdata);
2267065    %global fcmpStart;
2267066    %let fcmpStart = 0;
2267067    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2267068    %let NumNodes=9;
2267069    %do k=1 %to &NumNodes;
2267070    %vardept(fcmpdata=&outdata, id=&k);
2267071    %end;
2267072    %mend optCode;
2267073    %optcode(outData=EMWS8.Ensmbl36_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2267074    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2267075    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2267076    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2267077    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2267078    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2267079    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2267080    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2267081    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2267082    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2267083    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2267083  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2267084    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2267085    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2267086    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2267087    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2267088    filename _pref
2267088  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2267089    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2267090    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2267091   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2267092   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2267093   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2267094   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2267095   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2267096   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2267097   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2267098   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2267099   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2267100   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2267101   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2267102   +LENGTH _WARN_ $4
2267103   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2267104   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2267105   +
2267106   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2267107   +
2267108   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2267109   +
2267110   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2267111   +
2267112   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2267113   +
2267114   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2267115   +
2267116   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2267117   +
2267118   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2267119   +
2267120   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2267121   +
2267122   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2267123   +
2267124   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2267125   +
2267126   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2267127   +
2267128   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2267129   +
2267130   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2267131   +
2267132   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2267133   +
2267134   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2267135   +
2267136   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2267137   +
2267138   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2267139   +
2267140   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2267141   +
2267142   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2267143   +
2267144   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2267145   +
2267146   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2267147   +
2267148   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2267149   +
2267150   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2267151   +
2267152   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2267153   +
2267154   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2267155   +
2267156   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2267157   +
2267158   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2267159   +
2267160   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2267161   +
2267162   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2267163   +
2267164   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2267165   +
2267166   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2267167   +
2267168   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2267169   +
2267170   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2267171   +
2267172   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2267173   +
2267174   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2267175   +
2267176   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2267177   +
2267178   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2267179   +
2267180   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2267181   +
2267182   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2267183   +
2267184   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2267185   +
2267186   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2267187   +
2267188   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2267189   +
2267190   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2267191   +
2267192   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2267193   +
2267194   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2267195   +
2267196   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2267197   +
2267198   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2267199   +
2267200   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2267201   +
2267202   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2267203   +
2267204   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2267205   +
2267206   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2267207   +
2267208   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2267209   +
2267210   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2267211   +
2267212   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2267213   +
2267214   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2267215   +
2267216   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2267217   +
2267218   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2267219   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2267220   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2267221   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2267222   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2267223   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267224   +end;
MPRINT(EM_DIAGRAM):   end;
2267225   +else do;
MPRINT(EM_DIAGRAM):   else do;
2267226   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2267227   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2267228   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2267229   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2267230   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2267231   +   end;
MPRINT(EM_DIAGRAM):   end;
2267232   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2267233   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2267234   +   end;
MPRINT(EM_DIAGRAM):   end;
2267235   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2267236   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2267237   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2267238   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267239   +   end;
MPRINT(EM_DIAGRAM):   end;
2267240   +end;
MPRINT(EM_DIAGRAM):   end;
2267241   +
2267242   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2267243   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2267244   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2267245   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2267246   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2267247   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267248   +end;
MPRINT(EM_DIAGRAM):   end;
2267249   +else do;
MPRINT(EM_DIAGRAM):   else do;
2267250   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2267251   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2267252   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2267253   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2267254   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2267255   +   end;
MPRINT(EM_DIAGRAM):   end;
2267256   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2267257   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2267258   +   end;
MPRINT(EM_DIAGRAM):   end;
2267259   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2267260   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2267261   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2267262   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267263   +   end;
MPRINT(EM_DIAGRAM):   end;
2267264   +end;
MPRINT(EM_DIAGRAM):   end;
2267265   +
2267266   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2267267   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2267268   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2267269   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2267270   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2267271   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267272   +end;
MPRINT(EM_DIAGRAM):   end;
2267273   +else do;
MPRINT(EM_DIAGRAM):   else do;
2267274   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2267275   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2267276   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2267277   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2267278   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2267279   +   end;
MPRINT(EM_DIAGRAM):   end;
2267280   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2267281   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2267282   +   end;
MPRINT(EM_DIAGRAM):   end;
2267283   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2267284   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2267285   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2267286   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267287   +   end;
MPRINT(EM_DIAGRAM):   end;
2267288   +end;
MPRINT(EM_DIAGRAM):   end;
2267289   +
2267290   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2267291   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2267292   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2267293   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2267294   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2267295   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267296   +end;
MPRINT(EM_DIAGRAM):   end;
2267297   +else do;
MPRINT(EM_DIAGRAM):   else do;
2267298   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2267299   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2267300   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2267301   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2267302   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2267303   +   end;
MPRINT(EM_DIAGRAM):   end;
2267304   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2267305   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2267306   +   end;
MPRINT(EM_DIAGRAM):   end;
2267307   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2267308   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2267309   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2267310   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267311   +   end;
MPRINT(EM_DIAGRAM):   end;
2267312   +end;
MPRINT(EM_DIAGRAM):   end;
2267313   +
2267314   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2267315   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2267316   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2267317   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2267318   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2267319   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267320   +end;
MPRINT(EM_DIAGRAM):   end;
2267321   +else do;
MPRINT(EM_DIAGRAM):   else do;
2267322   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2267323   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2267324   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2267325   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2267326   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2267327   +   end;
MPRINT(EM_DIAGRAM):   end;
2267328   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2267329   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2267330   +   end;
MPRINT(EM_DIAGRAM):   end;
2267331   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2267332   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2267333   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2267334   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267335   +   end;
MPRINT(EM_DIAGRAM):   end;
2267336   +end;
MPRINT(EM_DIAGRAM):   end;
2267337   +
2267338   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2267339   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2267340   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2267341   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2267342   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2267343   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267344   +end;
MPRINT(EM_DIAGRAM):   end;
2267345   +else do;
MPRINT(EM_DIAGRAM):   else do;
2267346   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2267347   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2267348   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2267349   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2267350   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2267351   +   end;
MPRINT(EM_DIAGRAM):   end;
2267352   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2267353   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2267354   +   end;
MPRINT(EM_DIAGRAM):   end;
2267355   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2267356   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2267357   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2267358   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267359   +   end;
MPRINT(EM_DIAGRAM):   end;
2267360   +end;
MPRINT(EM_DIAGRAM):   end;
2267361   +
2267362   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2267363   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2267364   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2267365   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2267366   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2267367   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267368   +end;
MPRINT(EM_DIAGRAM):   end;
2267369   +else do;
MPRINT(EM_DIAGRAM):   else do;
2267370   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2267371   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2267372   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2267373   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2267374   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2267375   +   end;
MPRINT(EM_DIAGRAM):   end;
2267376   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2267377   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2267378   +   end;
MPRINT(EM_DIAGRAM):   end;
2267379   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2267380   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2267381   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2267382   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267383   +   end;
MPRINT(EM_DIAGRAM):   end;
2267384   +end;
MPRINT(EM_DIAGRAM):   end;
2267385   +
2267386   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2267387   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2267388   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2267389   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2267390   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2267391   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2267392   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2267393   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2267394   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2267395   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2267396   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2267397   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2267398   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2267399   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267400   +end;
MPRINT(EM_DIAGRAM):   end;
2267401   +else do;
MPRINT(EM_DIAGRAM):   else do;
2267402   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2267403   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2267404   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2267405   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2267406   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2267407   +   end;
MPRINT(EM_DIAGRAM):   end;
2267408   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2267409   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2267410   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2267411   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2267412   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2267413   +   end;
MPRINT(EM_DIAGRAM):   end;
2267414   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2267415   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2267416   +   end;
MPRINT(EM_DIAGRAM):   end;
2267417   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2267418   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2267419   +   end;
MPRINT(EM_DIAGRAM):   end;
2267420   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2267421   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2267422   +   end;
MPRINT(EM_DIAGRAM):   end;
2267423   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2267424   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2267425   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2267426   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2267427   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2267428   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2267429   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267430   +   end;
MPRINT(EM_DIAGRAM):   end;
2267431   +end;
MPRINT(EM_DIAGRAM):   end;
2267432   +
2267433   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2267434   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2267435   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2267436   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2267437   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2267438   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2267439   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2267440   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2267441   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2267442   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2267443   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2267444   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2267445   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2267446   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2267447   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267448   +end;
MPRINT(EM_DIAGRAM):   end;
2267449   +else do;
MPRINT(EM_DIAGRAM):   else do;
2267450   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2267451   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2267452   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2267453   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2267454   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2267455   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2267456   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2267457   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2267458   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2267459   +         end;
MPRINT(EM_DIAGRAM):   end;
2267460   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2267461   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2267462   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2267463   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2267464   +            end;
MPRINT(EM_DIAGRAM):   end;
2267465   +         end;
MPRINT(EM_DIAGRAM):   end;
2267466   +      end;
MPRINT(EM_DIAGRAM):   end;
2267467   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2267468   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2267469   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2267470   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2267471   +         end;
MPRINT(EM_DIAGRAM):   end;
2267472   +      end;
MPRINT(EM_DIAGRAM):   end;
2267473   +   end;
MPRINT(EM_DIAGRAM):   end;
2267474   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2267475   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2267476   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2267477   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2267478   +      end;
MPRINT(EM_DIAGRAM):   end;
2267479   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2267480   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2267481   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2267482   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2267483   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2267484   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2267485   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2267486   +         end;
MPRINT(EM_DIAGRAM):   end;
2267487   +      end;
MPRINT(EM_DIAGRAM):   end;
2267488   +   end;
MPRINT(EM_DIAGRAM):   end;
2267489   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2267490   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2267491   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2267492   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2267493   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2267494   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2267495   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267496   +   end;
MPRINT(EM_DIAGRAM):   end;
2267497   +end;
MPRINT(EM_DIAGRAM):   end;
2267498   +
2267499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2267500   +*** Checking missing input Interval
2267501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2267502   +
2267503   +IF NMISS(
2267504   +   AcceptedCmpTotal ,
2267505   +   Age ,
2267506   +   Frq ,
2267507   +   Income ,
2267508   +   Kidhome ,
2267509   +   Mnt ,
2267510   +   MntFishProducts ,
2267511   +   MntFruits ,
2267512   +   MntGoldProds ,
2267513   +   MntMeatProducts ,
2267514   +   MntSweetProducts ,
2267515   +   MntWines ,
2267516   +   MonthsAsCustomer ,
2267517   +   NumCatalogPurchases ,
2267518   +   NumDealsPurchases ,
2267519   +   NumDistPurchases ,
2267520   +   NumStorePurchases ,
2267521   +   NumWebPurchases ,
2267522   +   NumWebVisitsMonth ,
2267523   +   RFMstat ,
2267524   +   RMntFrq ,
2267525   +   Recency ,
2267526   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2267527   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2267528   +
2267529   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2267530   +END;
MPRINT(EM_DIAGRAM):   END;
2267531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2267532   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2267533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2267534   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2267535   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2267536   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2267537   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2267538   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2267539   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2267540   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2267541   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2267542   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2267543   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2267544   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2267545   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2267546   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2267547   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2267548   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2267549   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2267550   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2267551   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2267552   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2267553   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2267554   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2267555   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2267556   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2267557   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2267558   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2267559   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2267560   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2267561   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2267562   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2267563   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2267564   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2267565   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2267566   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2267567   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2267568   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2267569   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2267570   +END;
MPRINT(EM_DIAGRAM):   END;
2267571   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2267572   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2267573   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2267574   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2267575   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2267576   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2267577   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2267578   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2267579   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2267580   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2267581   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2267582   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2267583   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2267584   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2267585   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2267586   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2267587   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2267588   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2267589   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2267590   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2267591   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2267592   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2267593   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2267594   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2267595   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2267596   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2267597   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2267598   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2267599   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2267600   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2267601   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2267602   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2267603   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2267604   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2267605   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2267606   +   ELSE S_NumCatalogPurchases
2267607   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2267608   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2267609   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2267610   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2267611   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2267612   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2267613   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2267614   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2267615   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2267616   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2267617   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2267618   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2267619   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2267620   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2267621   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2267622   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2267623   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2267624   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2267625   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2267626   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2267627   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2267628   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2267629   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2267630   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2267631   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2267632   +END;
MPRINT(EM_DIAGRAM):   END;
2267633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2267634   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2267635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2267636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2267637   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2267638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2267639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2267640   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2267641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2267642   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2267643   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2267644   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2267645   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2267646   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2267647   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2267648   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2267649   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2267650   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2267651   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2267652   +          +      0.1112677116841 * S_NumDealsPurchases
2267653   +          +     0.01563584187072 * S_NumDistPurchases
2267654   +          +     0.19193969522995 * S_NumStorePurchases
2267655   +          +      0.3133556199984 * S_NumWebPurchases
2267656   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2267657   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2267658   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2267659   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2267660   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2267661   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2267662   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2267663   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2267664   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2267665   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2267666   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2267667   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2267668   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2267669   +          +     0.30225032753275 * S_NumDealsPurchases
2267670   +          +     0.33833359923595 * S_NumDistPurchases
2267671   +          +    -0.20255599575849 * S_NumStorePurchases
2267672   +          +    -0.12040071168942 * S_NumWebPurchases
2267673   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2267674   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2267675   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2267676   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2267677   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2267678   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2267679   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2267680   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2267681   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2267682   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2267683   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2267684   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2267685   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2267686   +          +     0.16792903091627 * S_NumDealsPurchases
2267687   +          +    -0.37408945626745 * S_NumDistPurchases
2267688   +          +    -0.18067262995566 * S_NumStorePurchases
2267689   +          +     0.21192146789881 * S_NumWebPurchases
2267690   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2267691   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2267692   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2267693   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2267694   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2267695   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2267696   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2267697   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2267698   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2267699   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2267700   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2267701   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2267702   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2267703   +          +     0.29407429399136 * S_NumDealsPurchases
2267704   +          +     0.01610745252195 * S_NumDistPurchases
2267705   +          +    -0.17767939085628 * S_NumStorePurchases
2267706   +          +    -0.15168958538637 * S_NumWebPurchases
2267707   +          +     0.17433622143988 * S_NumWebVisitsMonth
2267708   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2267709   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2267710   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2267711   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2267712   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2267713   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2267714   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2267715   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2267716   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2267717   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2267718   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2267719   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2267720   +          +    -0.37976451362108 * S_NumDealsPurchases
2267721   +          +    -0.17027731520801 * S_NumDistPurchases
2267722   +          +     0.59849493667087 * S_NumStorePurchases
2267723   +          +     0.65481480560301 * S_NumWebPurchases
2267724   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2267725   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2267726   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2267727   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2267728   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2267729   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2267730   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2267731   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2267732   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2267733   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2267734   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2267735   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2267736   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2267737   +          +    -0.07686699131623 * S_NumDealsPurchases
2267738   +          +    -0.07220460738926 * S_NumDistPurchases
2267739   +          +    -0.06554027468389 * S_NumStorePurchases
2267740   +          +     0.10422838158001 * S_NumWebPurchases
2267741   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2267742   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2267743   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2267744   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2267745   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2267746   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2267747   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2267748   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2267749   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2267750   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2267751   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2267752   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2267753   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2267754   +          +    -0.07920122387563 * S_NumDealsPurchases
2267755   +          +      0.3649244061347 * S_NumDistPurchases
2267756   +          +     0.36475853688403 * S_NumStorePurchases
2267757   +          +     0.02153991404063 * S_NumWebPurchases
2267758   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2267759   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2267760   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2267761   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2267762   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2267763   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2267764   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2267765   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2267766   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2267767   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2267768   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2267769   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2267770   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2267771   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2267772   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2267773   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2267774   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2267775   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2267776   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2267777   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2267778   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2267779   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2267780   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2267781   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2267782   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2267783   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2267784   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2267785   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2267786   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2267787   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2267788   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2267789   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2267790   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2267791   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2267792   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2267793   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2267794   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2267795   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2267796   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2267797   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2267798   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2267799   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2267800   +          +     0.07744097241553 * Marital_StatusDivorced
2267801   +          +     -0.0247463100385 * Marital_StatusMarried
2267802   +          +     0.05804915234573 * Marital_StatusSingle
2267803   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2267804   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2267805   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2267806   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2267807   +          +     0.01390668926269 * Marital_StatusDivorced
2267808   +          +     0.01136282152074 * Marital_StatusMarried
2267809   +          +     0.12450246418789 * Marital_StatusSingle
2267810   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2267811   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2267812   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2267813   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2267814   +          +    -0.19133456931879 * Marital_StatusDivorced
2267815   +          +     0.56263566654996 * Marital_StatusMarried
2267816   +          +    -0.42172822038882 * Marital_StatusSingle
2267817   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2267818   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2267819   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2267820   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2267821   +          +    -0.19871205065609 * Marital_StatusDivorced
2267822   +          +    -0.14730795681603 * Marital_StatusMarried
2267823   +          +     0.05055432510362 * Marital_StatusSingle
2267824   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2267825   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2267826   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2267827   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2267828   +          +    -0.35623807358995 * Marital_StatusDivorced
2267829   +          +     0.30324726283965 * Marital_StatusMarried
2267830   +          +    -0.18561093467927 * Marital_StatusSingle
2267831   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2267832   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2267833   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2267834   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2267835   +          +     0.11581014663368 * Marital_StatusDivorced
2267836   +          +    -0.31070638037659 * Marital_StatusMarried
2267837   +          +     0.17131747253949 * Marital_StatusSingle
2267838   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2267839   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2267840   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2267841   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2267842   +          +    -0.42450599871892 * Marital_StatusDivorced
2267843   +          +     0.48162905075885 * Marital_StatusMarried
2267844   +          +    -0.26618507749283 * Marital_StatusSingle
2267845   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2267846   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2267847   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2267848   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2267849   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2267850   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2267851   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2267852   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2267853   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2267854   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2267855   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2267856   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2267857   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2267858   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2267859   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2267860   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2267861   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2267862   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2267863   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2267864   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2267865   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2267866   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2267867   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2267868   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2267869   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2267870   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2267871   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2267872   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2267873   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2267874   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2267875   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2267876   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2267877   +END;
MPRINT(EM_DIAGRAM):   END;
2267878   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2267879   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2267880   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2267881   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2267882   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2267883   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2267884   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2267885   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2267886   +END;
MPRINT(EM_DIAGRAM):   END;
2267887   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2267888   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2267889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2267890   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2267891   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2267892   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2267893   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2267894   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2267895   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2267896   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2267897   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2267898   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2267899   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2267900   +          +     1.96719021971894 * S_NumDealsPurchases
2267901   +          +    -0.44535354794671 * S_NumDistPurchases
2267902   +          +    -0.54827762736866 * S_NumStorePurchases
2267903   +          +     1.02703310241897 * S_NumWebPurchases
2267904   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2267905   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2267906   +        S_RMntFrq  +       0.651688575044 * S_Recency
2267907   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2267908   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2267909   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2267910   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2267911   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2267912   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2267913   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2267914   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2267915   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2267916   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2267917   +          +     1.34659447971131 * S_NumDealsPurchases
2267918   +          +    -0.51624251310423 * S_NumDistPurchases
2267919   +          +      -1.283121574848 * S_NumStorePurchases
2267920   +          +    -1.83517806228926 * S_NumWebPurchases
2267921   +          +     0.51321339475285 * S_NumWebVisitsMonth
2267922   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2267923   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2267924   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2267925   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2267926   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2267927   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2267928   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2267929   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2267930   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2267931   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2267932   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2267933   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2267934   +          +     0.67492297345004 * S_NumDealsPurchases
2267935   +          +    -0.40437875375926 * S_NumDistPurchases
2267936   +          +     0.36322603681545 * S_NumStorePurchases
2267937   +          +    -1.15315070635524 * S_NumWebPurchases
2267938   +          +     1.20707272201156 * S_NumWebVisitsMonth
2267939   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2267940   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2267941   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2267942   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2267943   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2267944   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2267945   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2267946   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2267947   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2267948   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2267949   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2267950   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2267951   +          +    -0.41427983342148 * S_NumDealsPurchases
2267952   +          +    -0.22714305629205 * S_NumDistPurchases
2267953   +          +    -0.78763182048862 * S_NumStorePurchases
2267954   +          +    -0.26669253451501 * S_NumWebPurchases
2267955   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2267956   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2267957   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2267958   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2267959   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2267960   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2267961   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2267962   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2267963   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2267964   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2267965   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2267966   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2267967   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2267968   +          +      0.7697882092212 * S_NumDealsPurchases
2267969   +          +     0.51864835453056 * S_NumDistPurchases
2267970   +          +    -1.18320366630444 * S_NumStorePurchases
2267971   +          +     -0.6608394639529 * S_NumWebPurchases
2267972   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2267973   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2267974   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2267975   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2267976   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2267977   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2267978   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2267979   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2267980   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2267981   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2267982   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2267983   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2267984   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2267985   +          +     1.45707983202269 * S_NumDealsPurchases
2267986   +          +     0.83341887728641 * S_NumDistPurchases
2267987   +          +    -0.36664450469423 * S_NumStorePurchases
2267988   +          +     0.63911579043339 * S_NumWebPurchases
2267989   +          +     0.67144790303554 * S_NumWebVisitsMonth
2267990   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2267991   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2267992   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2267993   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2267994   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2267995   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2267996   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2267997   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2267998   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2267999   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2268000   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2268001   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2268002   +          +     0.68491896063662 * S_NumDealsPurchases
2268003   +          +      0.5386312048592 * S_NumDistPurchases
2268004   +          +     1.28108942503912 * S_NumStorePurchases
2268005   +          +    -0.88282270505969 * S_NumWebPurchases
2268006   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2268007   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2268008   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2268009   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2268010   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2268011   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2268012   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2268013   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2268014   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2268015   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2268016   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2268017   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2268018   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2268019   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2268020   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2268021   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2268022   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2268023   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2268024   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2268025   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2268026   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2268027   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2268028   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2268029   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2268030   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2268031   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2268032   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2268033   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2268034   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2268035   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2268036   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2268037   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2268038   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2268039   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2268040   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2268041   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2268042   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2268043   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2268044   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2268045   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2268046   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2268047   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2268048   +          +    -3.97961426831865 * Marital_StatusDivorced
2268049   +          +     0.00932639813867 * Marital_StatusMarried
2268050   +          +     1.29310186574718 * Marital_StatusSingle
2268051   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2268052   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2268053   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2268054   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2268055   +          +    -0.30358516578188 * Marital_StatusDivorced
2268056   +          +    -0.96176709360703 * Marital_StatusMarried
2268057   +          +     1.26977690921649 * Marital_StatusSingle
2268058   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2268059   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2268060   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2268061   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2268062   +          +     0.55272671490757 * Marital_StatusDivorced
2268063   +          +      0.1499239288334 * Marital_StatusMarried
2268064   +          +    -0.46840941760604 * Marital_StatusSingle
2268065   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2268066   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2268067   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2268068   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2268069   +          +      -1.240735370138 * Marital_StatusDivorced
2268070   +          +    -1.20089294883599 * Marital_StatusMarried
2268071   +          +     0.57492674426149 * Marital_StatusSingle
2268072   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2268073   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2268074   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2268075   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2268076   +          +     1.05435442049802 * Marital_StatusDivorced
2268077   +          +      0.3571256349717 * Marital_StatusMarried
2268078   +          +    -0.44741267266578 * Marital_StatusSingle
2268079   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2268080   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2268081   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2268082   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2268083   +          +     2.06026721980778 * Marital_StatusDivorced
2268084   +          +    -0.49583258645166 * Marital_StatusMarried
2268085   +          +    -1.14824900824474 * Marital_StatusSingle
2268086   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2268087   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2268088   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2268089   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2268090   +          +     -1.1890908607447 * Marital_StatusDivorced
2268091   +          +    -0.46668809907123 * Marital_StatusMarried
2268092   +          +     1.20342564763422 * Marital_StatusSingle
2268093   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2268094   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2268095   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2268096   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2268097   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2268098   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2268099   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2268100   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2268101   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2268102   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2268103   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2268104   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2268105   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2268106   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2268107   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2268108   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2268109   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2268110   +END;
MPRINT(EM_DIAGRAM):   END;
2268111   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2268112   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2268113   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2268114   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2268115   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2268116   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2268117   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2268118   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2268119   +END;
MPRINT(EM_DIAGRAM):   END;
2268120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2268121   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2268122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2268123   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2268124   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2268125   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2268126   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2268127   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2268128   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2268129   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2268130   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2268131   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2268132   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2268133   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2268134   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2268135   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2268136   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2268137   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2268138   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2268139   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2268140   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2268141   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2268142   +END;
MPRINT(EM_DIAGRAM):   END;
2268143   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2268144   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2268145   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2268146   +END;
MPRINT(EM_DIAGRAM):   END;
2268147   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2268148   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2268149   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2268150   +END;
MPRINT(EM_DIAGRAM):   END;
2268151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2268152   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2268153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2268154   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2268155   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2268156   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2268157   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2268158   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2268159   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2268160   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2268161   +END;
MPRINT(EM_DIAGRAM):   END;
2268162   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2268163   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2268164   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2268165   +drop
2268166   +H1x1_1
2268167   +H1x1_2
2268168   +H1x1_3
2268169   +H1x1_4
2268170   +H1x1_5
2268171   +H1x1_6
2268172   +H1x1_7
2268173   +H1x2_1
2268174   +H1x2_2
2268175   +H1x2_3
2268176   +H1x2_4
2268177   +H1x2_5
2268178   +H1x2_6
2268179   +H1x2_7
2268180   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2268181   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2268182    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2268183    quit;
2268184    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2268185    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2268186    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2268187    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2268188    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2268189    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2268190    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2268191    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268192    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268193    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
2268194    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268195    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2268196    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2268197    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2268198    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2268199    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268200    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2268201    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2268202    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2268203    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268204    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268205    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2268206    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2268207    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268208    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2268209    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2268210    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2268210  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2199 rows and 5 columns.

2268211    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268212    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2268213    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2199 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 2199 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268214    filename _pref
2268214  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2268215    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2268216    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2268217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268218   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2268219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2268220   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2268221   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2268222   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2268223    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2268224    quit;
2268225    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2268226    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2268227    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2268228    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2268229    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2268230    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2268231    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2268232    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268233    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268234    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2268235    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268236    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2268237    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2268238    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2268239    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2268240    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268241    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2268242    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2268243    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2268244    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268245    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268246    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2268247    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2268248    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268249    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268250    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2268251    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2268251  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2268252    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2268253    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2268254    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 2203 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268255    filename _pref
2268255  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2268256    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2268257    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2268258   +
2268259   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2268260   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2268260  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2268261   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2268262   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2268263   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2268264   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2268265   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2268266    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2268267    quit;
2268268    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2268269    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2268270    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2268271    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2268272    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2268273    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268274    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2268275    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268276    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268277    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2268278    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268279    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2268280    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2268281    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2268282    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2268283    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268284    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2268285    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268286    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2268287    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268288    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2268289    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2268290    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2268291    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268292    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268293    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2268294    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2268294  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2268295    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268296    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2268297    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 2242 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268298    filename _pref
2268298  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2268299    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2268300    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2268301   +
2268302   +
2268303   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2268304   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2268305   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2268306   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2268307   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2268308   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2268309   +
2268310   +
2268311   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2268312   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2268313   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2268314   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2268315   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2268316   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2268317   +
2268318   +
2268319   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2268320   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2268321   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2268322   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2268323   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2268324   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2268325   +
2268326   +
2268327   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2268328   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2268329   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2268330   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2268331   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2268332   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2268333   +
2268334   +
2268335   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2268336   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2268337   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2268338   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2268339   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2268340   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2268341   +
2268342   +
2268343   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2268344   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2268345   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2268346   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2268347   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2268348   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2268349   +
2268350   +
2268351   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2268352   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2268353   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2268354   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2268355   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2268356   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2268357   +
2268358   +
2268359   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2268360   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2268361   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2268362   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2268363   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2268364   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2268365   +if
2268366   +_FILTERNORM1 not in ( '.')
2268367   + and
2268368   +_FILTERNORM2 not in ( '.')
2268369   + and
2268370   +_FILTERNORM3 not in ( '.')
2268371   + and
2268372   +_FILTERNORM4 not in ( '.')
2268373   + and
2268374   +_FILTERNORM5 not in ( '.')
2268375   + and
2268376   +_FILTERNORM6 not in ( '.')
2268377   + and
2268378   +_FILTERNORM7 not in ( ' ')
2268379   + and
2268380   +_FILTERNORM8 not in ( ' ')
2268381   +and
2268382   +( Dt_Customer ne .)
2268383   +and ( Income ne . and (Income<=107000))
2268384   +and ( Kidhome ne .)
2268385   +and ( MntFishProducts ne .)
2268386   +and ( MntFruits ne .)
2268387   +and ( MntGoldProds ne .)
2268388   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2268389   +and ( MntSweetProducts ne .)
2268390   +and ( MntWines ne .)
2268391   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2268392   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2268393   +and ( NumStorePurchases ne .)
2268394   +and ( NumWebPurchases ne .)
2268395   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2268396   +and ( Recency ne .)
2268397   +and ( Teenhome ne .)
2268398   +and ( Year_Birth ne .)
2268399   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2268400   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2268401   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2268402   +end;
MPRINT(EM_DIAGRAM):   end;
2268403   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2268404   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2268405    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2268406    quit;
2268407    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2268408    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2268409    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2268410    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2268411    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2268412    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268413    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2268414    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268415    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268416    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2268417    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268418    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268419    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2268420    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2268421    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2268422    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268423    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2268424    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2268425    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2268426    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268427    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268428    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2268429    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2268430    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2268431    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2268432    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2268433    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2268433  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2268434    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268435    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
2268436    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 2308 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268437    %macro varDept(fcmpdata=,id=);
2268438    %global nobs&id scoreFlag&id;
2268439    %let scoreFlag&id = 0;
2268440    %if &id=1 or ^&fcmpStart %then %do;
2268441    proc sort data=&fcmpdata out=_temp&id nodupkey;
2268442    by NAME;
2268443    where id=&id and LHS in( %let j=1;
2268444    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2268445    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2268446    "&var" %let j = %eval(&j+1);
2268447    %end;
2268448    );
2268449    run;
2268450    %let dsid = %sysfunc(open(_temp&id));
2268451    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2268452    %let dsid = %sysfunc(close(&dsid));
2268453    %if &&nobs&id %then %do;
2268454    %let scoreFlag&id = 1;
2268455    %let fcmpStart = 1;
2268456    %end;
2268457    %else %let fcmpStart = 0;
2268458    %end;
2268459    %else %do;
2268460    proc sort data=&fcmpdata out=_tempid;
2268461    where id=&id;
2268462    by LHS;
2268463    run;
2268464    %let dsid = %sysfunc(open(_tempid));
2268465    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2268466    %let dsid = %sysfunc(close(&dsid));
2268467    %if ^&&nobs&id %then %do;
2268468    proc datasets lib=work nolist;
2268469    delete _tempid;
2268470    run;
2268471    quit;
2268472    %end;
2268473    %else %do;
2268474    data _tempAll;
2268475    set %let j=%eval(&id-1);
2268476    %do x=1 %to &j;
2268477    %if &&nobs&x %then %do;
2268478    _temp&x %end;
2268479    %end;
2268480    ;
2268481    run;
2268482    proc sql;
2268483    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2268483  ! work._tempid p2 where p.name=p2.lhs;
2268484    quit;
2268485    data _temp&id;
2268486    set _temp&id;
2268487    where LHS ne '' and NAME ne '' and Node ne '';
2268488    run;
2268489    proc datasets lib=work nolist;
2268490    delete _tempAll;
2268491    run;
2268492    %let dsid = %sysfunc(open(_temp&id));
2268493    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2268494    %let dsid = %sysfunc(close(&dsid));
2268495    %if ^&&nobs&id %then %do;
2268496    proc datasets lib=work nolist;
2268497    delete _temp&id;
2268498    run;
2268499    quit;
2268500    %end;
2268501    %else %do;
2268502    %let scoreFlag&id = 1;
2268503    data _temp&id;
2268504    set _temp&id;
2268505    where LHS ne NAME and node ne '';
2268506    run;
2268507    %let dsid = %sysfunc(open(_temp&id));
2268508    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2268509    %let dsid = %sysfunc(close(&dsid));
2268510    %if ^&&nobs&id %then %do;
2268511    proc datasets lib=work nolist;
2268512    delete _temp&id;
2268513    run;
2268514    quit;
2268515    %end;
2268516    %else %do;
2268517    proc sort data=_temp&id nodupkey;
2268518    by LHS NAME;
2268519    run;
2268520    %end;
2268521    %end;
2268522    %end;
2268523    %end;
2268524    %mend varDept;
2268525    %macro optCode(outdata=fcmpdata);
2268526    %global fcmpStart;
2268527    %let fcmpStart = 0;
2268528    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2268529    %let NumNodes=9;
2268530    %do k=1 %to &NumNodes;
2268531    %vardept(fcmpdata=&outdata, id=&k);
2268532    %end;
2268533    %mend optCode;
2268534    %optcode(outData=EMWS8.Ensmbl36_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2268535    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2268536    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2268537    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2268538    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268539    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2268540    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2268541    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2268542    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268543    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2268544    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2268544  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2268545    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2268546    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2268547    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2268548    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2268549    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2268550    * Ensmbl36: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing metadata for TRAIN data;
2268551    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL36_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl36_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl36_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl36_TRAIN out=WORK.M2I5RG6X noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2I5RG6X;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2I5RG6X(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2I5RG6X;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2I5RG6X;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2F8KJE0 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2F8KJE0;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2F8KJE0;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1Y5JMAF(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2F8KJE0;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2F8KJE0;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2F8KJE0;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2F8KJE0;
MPRINT(EMADVISECOLUMNS):   set WORK.M2F8KJE0;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl36";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl36";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2268871    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2268872    set EMWS8.Ensmbl36_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_EMINFO;
2268873    where DATA='Ensmbl36' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl36' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
2268874    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_EMINFO.
      WHERE (DATA='Ensmbl36') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2268875    data EMWS8.Ensmbl36_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl36_EMINFO;
2268876    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2268877    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2268878    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL36_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2268882    run;
2268883    data EMWS8.Ensmbl36_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_EMINFO;
2268884    set EMWS8.Ensmbl36_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_EMINFO WORK.MODELTEMP_INFO;
2268885    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL36_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL36_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268886    proc sort data = EMWS8.Ensmbl36_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl36_EMINFO NOTHREADS;
2268887    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2268888    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL36_EMINFO.
NOTE: The data set EMWS8.ENSMBL36_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268889    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
2268890    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2268891    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268892    proc sort data = EMWS8.Ensmbl36_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl36_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2268893    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2268894    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL36_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2268895    data EMWS8.Ensmbl36_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_EMINFO;
2268896    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2268897    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2268898    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL36_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2268899    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2268900    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2268901    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2268902    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL36_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL36_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
