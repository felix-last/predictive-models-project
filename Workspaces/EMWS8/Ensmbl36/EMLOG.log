*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                11.35 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.34 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                11.34 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1_SEM5T
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1_SEM5T new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.34 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.34 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[396521] MAX=1 EXCEEDMAXVALUE='' )[396525] )[396519]
VALIDCHOICES=(CHOICE1='Y' )[396523] )[396807] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[396529]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[396533] )[396531] )[396527] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[396537]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[396543] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[396541] )[396539] )[396535] )[396517]
4055397    proc freq data=EMWS8.Ensmbl36_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl36_VariableSet noprint;
4055398    table ROLE*LEVEL/out=WORK.Ensmbl36META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl36META;
4055399    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL36_VARIABLESET.
NOTE: The data set WORK.ENSMBL36META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
4055400    proc print data=WORK.Ensmbl36META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl36META label noobs;
4055401    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
4055402    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
4055402  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
4055402  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
4055403    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4055404    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
4055405    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL36META.
NOTE: The PROCEDURE PRINT printed page 3423.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4055406    title10;
MPRINT(EM_DIAGRAM):   title10;
4055407    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN EMWS8 AutoNeural6_TRAIN
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN
EMWS8.AutoNeural6_TRAIN EMWS8.AutoNeural6_TRAIN EMWS8 AutoNeural6_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural6_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural6_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
4055436    data WORK.Ensmbl36_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl36_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
4055437    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
4055438    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
4055438  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
4055438  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
4055439       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
4055439  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
4055439  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
4055440    set EMWS8.AUTONEURAL6_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL6_DEPVAR_DM( where=(_TYPE_="TARGET"));
4055441    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
4055442    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
4055443    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
4055444    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
4055445    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
4055446    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
4055447    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
4055448    end;
MPRINT(EM_DIAGRAM):   end;
4055449    output;
MPRINT(EM_DIAGRAM):   output;
4055450    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL6_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL36_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4055451    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4055452    proc print data=WORK.Ensmbl36_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl36_EVENT noobs label;
4055453    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
4055454    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4055455    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
4055456    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL36_EVENT.
NOTE: The PROCEDURE PRINT printed page 3424.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4055457    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
4055458    proc print data = EMWS8.AutoNeural6_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural6_DepVar_DM noobs label;
4055459    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
4055460    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
4055461    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
4055461  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
4055461  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
4055462    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4055463    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
4055464    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL6_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3425.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4055465    title10;
MPRINT(EM_DIAGRAM):   title10;
4055466    %let groupid =;
4055467    %let endGroupid =;
4055468    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4055469    set EMWS8.AutoNeural6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_EMINFO;
4055470    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
4055470  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
4055471    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
4055472    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
4055473    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4055474    %let groupid =;
4055475    %let endGroupid =;
4055476    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4055477    set EMWS8.AutoNeural7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_EMINFO;
4055478    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
4055478  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
4055479    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
4055480    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
4055481    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4055482    %let groupid =;
4055483    %let endGroupid =;
4055484    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4055485    set EMWS8.AutoNeural8_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural8_EMINFO;
4055486    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
4055486  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
4055487    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
4055488    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
4055489    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL8_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4055490    %let groupid =;
4055491    %let endGroupid =;
4055492    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4055493    set EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO;
4055494    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
4055494  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
4055495    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
4055496    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
4055497    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4055498    %let groupid =;
4055499    %let endGroupid =;
4055500    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4055501    set EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO;
4055502    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
4055502  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
4055503    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
4055504    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
4055505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4055506    %let groupid =;
4055507    %let endGroupid =;
4055508    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4055509    set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
4055510    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
4055510  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
4055511    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
4055512    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
4055513    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4055514    %let groupid =;
4055515    %let endGroupid =;
4055516    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4055517    set EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO;
4055518    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
4055518  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
4055519    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
4055520    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
4055521    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4055522    data WORK.Ensmbl36;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl36;
4055523    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
4055524    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
4055524  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
4055525    nodeid="AUTONEURAL6";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL6";
4055526    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
4055527    output;
MPRINT(EM_DIAGRAM):   output;
4055528    nodeid="AUTONEURAL7";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL7";
4055529    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
4055530    output;
MPRINT(EM_DIAGRAM):   output;
4055531    nodeid="AUTONEURAL8";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL8";
4055532    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
4055533    output;
MPRINT(EM_DIAGRAM):   output;
4055534    nodeid="AUTONEURAL10";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL10";
4055535    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
4055536    output;
MPRINT(EM_DIAGRAM):   output;
4055537    nodeid="AUTONEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL9";
4055538    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
4055539    output;
MPRINT(EM_DIAGRAM):   output;
4055540    nodeid="AUTONEURAL11";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL11";
4055541    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
4055542    output;
MPRINT(EM_DIAGRAM):   output;
4055543    nodeid="AUTONEURAL12";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL12";
4055544    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
4055545    output;
MPRINT(EM_DIAGRAM):   output;
4055546    ;
MPRINT(EM_DIAGRAM):   ;
4055547    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL36 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4055548    title;
MPRINT(EM_DIAGRAM):   title;
4055549    proc print data=WORK.Ensmbl36 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl36 label noobs;
4055550    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
4055551    title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
4055552    run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL36.
NOTE: The PROCEDURE PRINT printed page 3426.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4055553    title9;
MPRINT(EM_DIAGRAM):   title9;
4055554    title10;
MPRINT(EM_DIAGRAM):   title10;
4055555    data WORK.M2NUP3JR;
MPRINT(EM_DIAGRAM):    data WORK.M2NUP3JR;
4055556    set WORK.M2NUP3JR;
MPRINT(EM_DIAGRAM):   set WORK.M2NUP3JR;
4055557    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
4055558    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M2NUP3JR.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M2NUP3JR has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4055559    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
4055560    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
4055561    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
4055562    %macro DMDBClass;
4055563        DepVar(DESC)
4055564    %mend DMDBClass;
4055565    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
4055566    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
4055567    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
4055568    %macro DMDBVar;
4055569
4055570    %mend DMDBVar;
4055571    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055572    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
4055573    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055574    proc dmdb batch data=EMWS8.AutoNeural6_TRAIN
4055575    dmdbcat=WORK.EM_DMDB
4055576    maxlevel = 513
4055577    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural6_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
4055578    class %DMDBClass;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
4055579    target
4055580    DepVar
4055581    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
4055582    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL6_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
4055583    quit;
4055584    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.34 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                11.34 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0078VQK
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0078VQK new;
MPRINT(EM_DIAGRAM):   run;
4055686    filename emflow
4055686  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring AUTONEURAL6_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055687    *------------------------------------------------------------*;
4055688    * Ensmbl36: Scoring AUTONEURAL6_TRAIN data;
4055689    *------------------------------------------------------------*;
4055690    data EMWS8.Ensmbl36_TRAIN
4055691    / view=EMWS8.Ensmbl36_TRAIN
4055692    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_TRAIN / view=EMWS8.Ensmbl36_TRAIN ;
4055693    set EMWS8.AutoNeural6_TRAIN
4055694    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_TRAIN ;
4055695    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMFLOWSCORE.sas.
4055696   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055697   +* Ensmbl36: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Combine model for DepVar;
4055698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055699   +* Ensmbl36: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 1 of 7;
4055700   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055701   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055702   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
4055703   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
4055704   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
4055705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055706   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055707   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
4055708   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
4055709   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
4055710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055712   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
4055713   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
4055714   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
4055715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055717   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
4055718   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
4055719   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
4055720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055721   +
4055722   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4055723   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4055723  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4055724   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4055725   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4055726   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4055727   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4055728   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
4055729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055730   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
4055731   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
4055732   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
4055733   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055735   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4055736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055737   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4055738   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4055739   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
4055740   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055741   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
4055742   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
4055743   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
4055744   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055746   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
4055747   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
4055748   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
4055749   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055751   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4055752   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4055753   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
4055754   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4055755   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4055756   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4055757   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4055758   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4055759   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4055760   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4055761   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4055762   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4055763   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4055764   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4055765   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4055766   +LENGTH _WARN_ $4
4055767   +      F_DepVar  $ 12
4055768   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4055769   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4055770   +
4055771   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4055772   +
4055773   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4055774   +
4055775   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4055776   +
4055777   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4055778   +
4055779   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4055780   +
4055781   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4055782   +
4055783   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4055784   +
4055785   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4055786   +
4055787   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4055788   +
4055789   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4055790   +
4055791   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4055792   +
4055793   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4055794   +
4055795   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4055796   +
4055797   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4055798   +
4055799   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4055800   +
4055801   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4055802   +
4055803   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4055804   +
4055805   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4055806   +
4055807   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4055808   +
4055809   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4055810   +
4055811   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4055812   +
4055813   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4055814   +
4055815   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4055816   +
4055817   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4055818   +
4055819   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4055820   +
4055821   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4055822   +
4055823   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4055824   +
4055825   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4055826   +
4055827   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4055828   +
4055829   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4055830   +
4055831   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4055832   +
4055833   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4055834   +
4055835   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4055836   +
4055837   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4055838   +
4055839   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4055840   +
4055841   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4055842   +
4055843   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4055844   +
4055845   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4055846   +
4055847   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4055848   +
4055849   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4055850   +
4055851   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4055852   +
4055853   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4055854   +
4055855   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4055856   +
4055857   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4055858   +
4055859   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4055860   +
4055861   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4055862   +
4055863   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4055864   +
4055865   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4055866   +
4055867   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4055868   +
4055869   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4055870   +
4055871   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4055872   +
4055873   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4055874   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4055875   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4055876   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4055877   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4055878   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4055879   +end;
MPRINT(EM_DIAGRAM):   end;
4055880   +else do;
MPRINT(EM_DIAGRAM):   else do;
4055881   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4055882   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4055883   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4055884   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4055885   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4055886   +   end;
MPRINT(EM_DIAGRAM):   end;
4055887   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4055888   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4055889   +   end;
MPRINT(EM_DIAGRAM):   end;
4055890   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4055891   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4055892   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4055893   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4055894   +   end;
MPRINT(EM_DIAGRAM):   end;
4055895   +end;
MPRINT(EM_DIAGRAM):   end;
4055896   +
4055897   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4055898   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4055899   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4055900   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4055901   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4055902   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4055903   +end;
MPRINT(EM_DIAGRAM):   end;
4055904   +else do;
MPRINT(EM_DIAGRAM):   else do;
4055905   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4055906   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4055907   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4055908   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4055909   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4055910   +   end;
MPRINT(EM_DIAGRAM):   end;
4055911   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4055912   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4055913   +   end;
MPRINT(EM_DIAGRAM):   end;
4055914   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4055915   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4055916   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4055917   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4055918   +   end;
MPRINT(EM_DIAGRAM):   end;
4055919   +end;
MPRINT(EM_DIAGRAM):   end;
4055920   +
4055921   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4055922   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4055923   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4055924   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4055925   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4055926   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4055927   +end;
MPRINT(EM_DIAGRAM):   end;
4055928   +else do;
MPRINT(EM_DIAGRAM):   else do;
4055929   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4055930   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4055931   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4055932   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4055933   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4055934   +   end;
MPRINT(EM_DIAGRAM):   end;
4055935   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4055936   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4055937   +   end;
MPRINT(EM_DIAGRAM):   end;
4055938   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4055939   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4055940   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4055941   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4055942   +   end;
MPRINT(EM_DIAGRAM):   end;
4055943   +end;
MPRINT(EM_DIAGRAM):   end;
4055944   +
4055945   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4055946   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4055947   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4055948   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4055949   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4055950   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4055951   +end;
MPRINT(EM_DIAGRAM):   end;
4055952   +else do;
MPRINT(EM_DIAGRAM):   else do;
4055953   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4055954   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4055955   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4055956   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4055957   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4055958   +   end;
MPRINT(EM_DIAGRAM):   end;
4055959   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4055960   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4055961   +   end;
MPRINT(EM_DIAGRAM):   end;
4055962   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4055963   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4055964   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4055965   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4055966   +   end;
MPRINT(EM_DIAGRAM):   end;
4055967   +end;
MPRINT(EM_DIAGRAM):   end;
4055968   +
4055969   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4055970   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4055971   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4055972   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4055973   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4055974   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4055975   +end;
MPRINT(EM_DIAGRAM):   end;
4055976   +else do;
MPRINT(EM_DIAGRAM):   else do;
4055977   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4055978   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4055979   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4055980   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4055981   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4055982   +   end;
MPRINT(EM_DIAGRAM):   end;
4055983   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4055984   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4055985   +   end;
MPRINT(EM_DIAGRAM):   end;
4055986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4055987   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4055988   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4055989   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4055990   +   end;
MPRINT(EM_DIAGRAM):   end;
4055991   +end;
MPRINT(EM_DIAGRAM):   end;
4055992   +
4055993   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4055994   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4055995   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4055996   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4055997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4055998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4055999   +end;
MPRINT(EM_DIAGRAM):   end;
4056000   +else do;
MPRINT(EM_DIAGRAM):   else do;
4056001   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4056002   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4056003   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4056004   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4056005   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4056006   +   end;
MPRINT(EM_DIAGRAM):   end;
4056007   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4056008   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4056009   +   end;
MPRINT(EM_DIAGRAM):   end;
4056010   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4056011   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4056012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4056013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056014   +   end;
MPRINT(EM_DIAGRAM):   end;
4056015   +end;
MPRINT(EM_DIAGRAM):   end;
4056016   +
4056017   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4056018   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4056019   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4056020   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4056021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4056022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056023   +end;
MPRINT(EM_DIAGRAM):   end;
4056024   +else do;
MPRINT(EM_DIAGRAM):   else do;
4056025   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4056026   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4056027   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4056028   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4056029   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4056030   +   end;
MPRINT(EM_DIAGRAM):   end;
4056031   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4056032   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4056033   +   end;
MPRINT(EM_DIAGRAM):   end;
4056034   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4056035   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4056036   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4056037   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056038   +   end;
MPRINT(EM_DIAGRAM):   end;
4056039   +end;
MPRINT(EM_DIAGRAM):   end;
4056040   +
4056041   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4056042   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4056043   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4056044   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4056045   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4056046   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4056047   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4056048   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4056049   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4056050   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4056051   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4056052   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4056053   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4056054   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056055   +end;
MPRINT(EM_DIAGRAM):   end;
4056056   +else do;
MPRINT(EM_DIAGRAM):   else do;
4056057   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4056058   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4056059   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4056060   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4056061   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4056062   +   end;
MPRINT(EM_DIAGRAM):   end;
4056063   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4056064   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4056065   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4056066   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4056067   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4056068   +   end;
MPRINT(EM_DIAGRAM):   end;
4056069   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4056070   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4056071   +   end;
MPRINT(EM_DIAGRAM):   end;
4056072   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4056073   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4056074   +   end;
MPRINT(EM_DIAGRAM):   end;
4056075   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4056076   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4056077   +   end;
MPRINT(EM_DIAGRAM):   end;
4056078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4056079   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4056080   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4056081   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4056082   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4056083   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4056084   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056085   +   end;
MPRINT(EM_DIAGRAM):   end;
4056086   +end;
MPRINT(EM_DIAGRAM):   end;
4056087   +
4056088   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4056089   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4056090   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4056091   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4056092   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4056093   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4056094   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4056095   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4056096   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4056097   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4056098   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4056099   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4056100   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4056101   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4056102   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056103   +end;
MPRINT(EM_DIAGRAM):   end;
4056104   +else do;
MPRINT(EM_DIAGRAM):   else do;
4056105   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4056106   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4056107   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4056108   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4056109   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4056110   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4056111   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4056112   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4056113   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4056114   +         end;
MPRINT(EM_DIAGRAM):   end;
4056115   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4056116   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4056117   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4056118   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4056119   +            end;
MPRINT(EM_DIAGRAM):   end;
4056120   +         end;
MPRINT(EM_DIAGRAM):   end;
4056121   +      end;
MPRINT(EM_DIAGRAM):   end;
4056122   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4056123   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4056124   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4056125   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4056126   +         end;
MPRINT(EM_DIAGRAM):   end;
4056127   +      end;
MPRINT(EM_DIAGRAM):   end;
4056128   +   end;
MPRINT(EM_DIAGRAM):   end;
4056129   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4056130   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4056131   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4056132   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4056133   +      end;
MPRINT(EM_DIAGRAM):   end;
4056134   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4056135   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4056136   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4056137   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4056138   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4056139   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4056140   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4056141   +         end;
MPRINT(EM_DIAGRAM):   end;
4056142   +      end;
MPRINT(EM_DIAGRAM):   end;
4056143   +   end;
MPRINT(EM_DIAGRAM):   end;
4056144   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4056145   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4056146   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4056147   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4056148   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4056149   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4056150   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056151   +   end;
MPRINT(EM_DIAGRAM):   end;
4056152   +end;
MPRINT(EM_DIAGRAM):   end;
4056153   +
4056154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056155   +*** Checking missing input Interval
4056156   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4056157   +
4056158   +IF NMISS(
4056159   +   AcceptedCmpTotal ,
4056160   +   Age ,
4056161   +   Frq ,
4056162   +   Income ,
4056163   +   Kidhome ,
4056164   +   Mnt ,
4056165   +   MntFishProducts ,
4056166   +   MntFruits ,
4056167   +   MntGoldProds ,
4056168   +   MntMeatProducts ,
4056169   +   MntSweetProducts ,
4056170   +   MntWines ,
4056171   +   MonthsAsCustomer ,
4056172   +   NumCatalogPurchases ,
4056173   +   NumDealsPurchases ,
4056174   +   NumDistPurchases ,
4056175   +   NumStorePurchases ,
4056176   +   NumWebPurchases ,
4056177   +   NumWebVisitsMonth ,
4056178   +   RFMstat ,
4056179   +   RMntFrq ,
4056180   +   Recency ,
4056181   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4056182   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4056183   +
4056184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056185   +END;
MPRINT(EM_DIAGRAM):   END;
4056186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056187   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4056188   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056189   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4056190   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4056191   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4056192   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4056193   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4056194   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4056195   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4056196   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4056197   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4056198   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4056199   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4056200   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4056201   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4056202   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4056203   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4056204   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4056205   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4056206   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4056207   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4056208   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4056209   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4056210   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4056211   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4056212   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4056213   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4056214   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4056215   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4056216   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4056217   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4056218   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4056219   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4056220   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4056221   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4056222   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4056223   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4056224   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4056225   +END;
MPRINT(EM_DIAGRAM):   END;
4056226   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4056227   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4056228   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4056229   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4056230   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4056231   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4056232   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4056233   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4056234   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4056235   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4056236   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4056237   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4056238   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4056239   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4056240   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4056241   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4056242   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4056243   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4056244   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4056245   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4056246   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4056247   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4056248   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4056249   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4056250   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4056251   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4056252   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4056253   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4056254   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4056255   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4056256   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4056257   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4056258   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4056259   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4056260   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4056261   +   ELSE S_NumCatalogPurchases
4056262   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4056263   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4056264   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4056265   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4056266   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4056267   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4056268   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4056269   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4056270   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4056271   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4056272   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4056273   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4056274   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4056275   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4056276   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4056277   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4056278   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4056279   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4056280   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4056281   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4056282   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4056283   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4056284   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4056285   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4056286   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4056287   +END;
MPRINT(EM_DIAGRAM):   END;
4056288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056289   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4056290   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056291   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056292   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4056293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056295   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4056296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056297   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4056298   +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
4056299   +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
4056300   +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
4056301   +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
4056302   +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
4056303   +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
4056304   +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
4056305   +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
4056306   +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
4056307   +          +     -0.4295354470932 * S_NumDealsPurchases
4056308   +          +    -0.08226280459837 * S_NumDistPurchases
4056309   +          +      0.2932815275833 * S_NumStorePurchases
4056310   +          +     0.19049189042599 * S_NumWebPurchases
4056311   +          +    -0.98799339280673 * S_NumWebVisitsMonth
4056312   +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
4056313   +        S_RMntFrq  +     1.04348870032296 * S_Recency
4056314   +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 *
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 *
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts +
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 *
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 *
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 *
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 *
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq +
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
4056315   +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
4056316   +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
4056317   +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
4056318   +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
4056319   +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 *
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 +
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 *
HigherEducationBinary0 ;
4056320   +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
4056321   +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
4056322   +        EducationGraduation  +    -0.06446100461656 * EducationMaster
4056323   +          +    -0.78551174413278 * Marital_StatusDivorced
4056324   +          +     1.14162836709205 * Marital_StatusMarried
4056325   +          +    -0.85471695548675 * Marital_StatusSingle
4056326   +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle +
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 *
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 *
Marital_StatusTogether ;
4056327   +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
4056328   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4056329   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4056330   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4056331   +END;
MPRINT(EM_DIAGRAM):   END;
4056332   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4056333   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4056334   +END;
MPRINT(EM_DIAGRAM):   END;
4056335   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056336   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4056337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056338   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4056339   +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
4056340   +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
4056341   +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
4056342   +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
4056343   +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
4056344   +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
4056345   +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
4056346   +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
4056347   +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
4056348   +          +      0.1710743409836 * S_NumDealsPurchases
4056349   +          +     1.10019178495427 * S_NumDistPurchases
4056350   +          +     0.06701301620472 * S_NumStorePurchases
4056351   +          +    -1.47240374003368 * S_NumWebPurchases
4056352   +          +     0.38443387640949 * S_NumWebVisitsMonth
4056353   +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
4056354   +        S_RMntFrq  +    -0.01383257292281 * S_Recency
4056355   +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 *
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 *
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts +
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 *
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines +
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases +
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases +
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases +
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 *
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
4056356   +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
4056357   +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
4056358   +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
4056359   +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
4056360   +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 *
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 +
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 *
HigherEducationBinary0 ;
4056361   +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
4056362   +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
4056363   +        EducationGraduation  +    -0.84396607413409 * EducationMaster
4056364   +          +    -0.36835980184757 * Marital_StatusDivorced
4056365   +          +     0.71718933679692 * Marital_StatusMarried
4056366   +          +    -0.35767236657055 * Marital_StatusSingle
4056367   +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle +
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation +
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced +
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle +
0.87230634846649 * Marital_StatusTogether ;
4056368   +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
4056369   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4056370   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4056371   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4056372   +END;
MPRINT(EM_DIAGRAM):   END;
4056373   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4056374   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4056375   +END;
MPRINT(EM_DIAGRAM):   END;
4056376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056377   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4056378   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056379   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4056380   +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
4056381   +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
4056382   +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
4056383   +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
4056384   +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
4056385   +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
4056386   +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
4056387   +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
4056388   +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
4056389   +          +    -1.99858075809796 * S_NumDealsPurchases
4056390   +          +    -0.37353682448701 * S_NumDistPurchases
4056391   +          +     1.16275863071649 * S_NumStorePurchases
4056392   +          +       -0.75936809253 * S_NumWebPurchases
4056393   +          +     2.17936226306026 * S_NumWebVisitsMonth
4056394   +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
4056395   +        S_RMntFrq  +    -1.06566929523903 * S_Recency
4056396   +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 *
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 *
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts +
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 *
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 *
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 *
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 *
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq +
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
4056397   +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
4056398   +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
4056399   +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
4056400   +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
4056401   +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 *
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 +
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 *
HigherEducationBinary0 ;
4056402   +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
4056403   +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
4056404   +        EducationGraduation  +    -0.90489876056203 * EducationMaster
4056405   +          +     0.60036315441483 * Marital_StatusDivorced
4056406   +          +    -0.94084946353672 * Marital_StatusMarried
4056407   +          +     0.34594388147374 * Marital_StatusSingle
4056408   +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle +
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 *
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 *
Marital_StatusTogether ;
4056409   +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
4056410   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4056411   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4056412   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4056413   +END;
MPRINT(EM_DIAGRAM):   END;
4056414   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4056415   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4056416   +END;
MPRINT(EM_DIAGRAM):   END;
4056417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056418   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4056419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056420   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4056421   +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
4056422   +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
4056423   +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
4056424   +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
4056425   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
4056426   +END;
MPRINT(EM_DIAGRAM):   END;
4056427   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4056428   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4056429   +END;
MPRINT(EM_DIAGRAM):   END;
4056430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056431   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4056432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056433   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4056434   +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
4056435   +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
4056436   +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
4056437   +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
4056438   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
4056439   +END;
MPRINT(EM_DIAGRAM):   END;
4056440   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4056441   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4056442   +END;
MPRINT(EM_DIAGRAM):   END;
4056443   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056444   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4056445   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056446   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4056447   +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
4056448   +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
4056449   +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
4056450   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4056451   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4056452   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
4056453   +END;
MPRINT(EM_DIAGRAM):   END;
4056454   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4056455   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4056456   +END;
MPRINT(EM_DIAGRAM):   END;
4056457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056458   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4056459   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056460   +
4056461   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4056462   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4056463   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4056464   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4056465   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4056466   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4056467   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4056468   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4056469   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4056470   +end;
MPRINT(EM_DIAGRAM):   end;
4056471   +else do;
MPRINT(EM_DIAGRAM):   else do;
4056472   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4056473   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4056474   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4056475   +   end;
MPRINT(EM_DIAGRAM):   end;
4056476   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4056477   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4056478   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4056479   +   end;
MPRINT(EM_DIAGRAM):   end;
4056480   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4056481   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4056482   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4056483   +   end;
MPRINT(EM_DIAGRAM):   end;
4056484   +end;
MPRINT(EM_DIAGRAM):   end;
4056485   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4056486   +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
4056487   +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
4056488   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4056489   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4056490   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4056491   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4056492   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4056493   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4056494   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4056495   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4056496   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4056497   +END;
MPRINT(EM_DIAGRAM):   END;
4056498   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4056499   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4056500   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4056501   +END;
MPRINT(EM_DIAGRAM):   END;
4056502   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4056503   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4056504   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4056505   +END;
MPRINT(EM_DIAGRAM):   END;
4056506   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4056507   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4056508   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4056509   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4056510   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4056511   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4056512   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4056513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056514   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4056515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056516   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4056517   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4056518   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4056519   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4056520   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4056521   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4056522   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4056523   +END;
MPRINT(EM_DIAGRAM):   END;
4056524   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4056525   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4056526   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4056527   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4056528   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
4056529   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4056530   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
4056531   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4056532   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
4056533   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
4056534   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
4056535   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
4056536   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4056537   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
4056538   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4056539   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
4056540   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
4056541   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
4056542   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4056543   +* Ensmbl36: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 2 of 7;
4056544   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4056545   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4056546   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4056547   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4056548   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
4056549   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4056550   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4056551   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4056552   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4056553   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4056554   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4056555   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4056556   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4056557   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4056558   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4056559   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4056560   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4056561   +LENGTH _WARN_ $4
4056562   +      F_DepVar  $ 12
4056563   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4056564   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4056565   +
4056566   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4056567   +
4056568   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4056569   +
4056570   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4056571   +
4056572   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4056573   +
4056574   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4056575   +
4056576   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4056577   +
4056578   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4056579   +
4056580   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4056581   +
4056582   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4056583   +
4056584   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4056585   +
4056586   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4056587   +
4056588   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4056589   +
4056590   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4056591   +
4056592   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4056593   +
4056594   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4056595   +
4056596   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4056597   +
4056598   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4056599   +
4056600   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4056601   +
4056602   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4056603   +
4056604   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4056605   +
4056606   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4056607   +
4056608   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4056609   +
4056610   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4056611   +
4056612   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4056613   +
4056614   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4056615   +
4056616   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4056617   +
4056618   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4056619   +
4056620   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4056621   +
4056622   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4056623   +
4056624   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4056625   +
4056626   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4056627   +
4056628   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4056629   +
4056630   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4056631   +
4056632   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4056633   +
4056634   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4056635   +
4056636   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4056637   +
4056638   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4056639   +
4056640   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4056641   +
4056642   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4056643   +
4056644   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4056645   +
4056646   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4056647   +
4056648   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4056649   +
4056650   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4056651   +
4056652   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4056653   +
4056654   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4056655   +
4056656   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4056657   +
4056658   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4056659   +
4056660   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4056661   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4056662   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4056663   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4056664   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4056665   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056666   +end;
MPRINT(EM_DIAGRAM):   end;
4056667   +else do;
MPRINT(EM_DIAGRAM):   else do;
4056668   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4056669   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4056670   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4056671   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4056672   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4056673   +   end;
MPRINT(EM_DIAGRAM):   end;
4056674   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4056675   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4056676   +   end;
MPRINT(EM_DIAGRAM):   end;
4056677   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4056678   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4056679   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4056680   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056681   +   end;
MPRINT(EM_DIAGRAM):   end;
4056682   +end;
MPRINT(EM_DIAGRAM):   end;
4056683   +
4056684   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4056685   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4056686   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4056687   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4056688   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4056689   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056690   +end;
MPRINT(EM_DIAGRAM):   end;
4056691   +else do;
MPRINT(EM_DIAGRAM):   else do;
4056692   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4056693   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4056694   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4056695   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4056696   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4056697   +   end;
MPRINT(EM_DIAGRAM):   end;
4056698   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4056699   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4056700   +   end;
MPRINT(EM_DIAGRAM):   end;
4056701   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4056702   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4056703   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4056704   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056705   +   end;
MPRINT(EM_DIAGRAM):   end;
4056706   +end;
MPRINT(EM_DIAGRAM):   end;
4056707   +
4056708   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4056709   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4056710   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4056711   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4056712   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4056713   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056714   +end;
MPRINT(EM_DIAGRAM):   end;
4056715   +else do;
MPRINT(EM_DIAGRAM):   else do;
4056716   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4056717   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4056718   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4056719   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4056720   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4056721   +   end;
MPRINT(EM_DIAGRAM):   end;
4056722   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4056723   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4056724   +   end;
MPRINT(EM_DIAGRAM):   end;
4056725   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4056726   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4056727   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4056728   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056729   +   end;
MPRINT(EM_DIAGRAM):   end;
4056730   +end;
MPRINT(EM_DIAGRAM):   end;
4056731   +
4056732   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4056733   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4056734   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4056735   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4056736   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4056737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056738   +end;
MPRINT(EM_DIAGRAM):   end;
4056739   +else do;
MPRINT(EM_DIAGRAM):   else do;
4056740   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4056741   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4056742   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4056743   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4056744   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4056745   +   end;
MPRINT(EM_DIAGRAM):   end;
4056746   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4056747   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4056748   +   end;
MPRINT(EM_DIAGRAM):   end;
4056749   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4056750   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4056751   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4056752   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056753   +   end;
MPRINT(EM_DIAGRAM):   end;
4056754   +end;
MPRINT(EM_DIAGRAM):   end;
4056755   +
4056756   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4056757   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4056758   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4056759   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4056760   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4056761   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056762   +end;
MPRINT(EM_DIAGRAM):   end;
4056763   +else do;
MPRINT(EM_DIAGRAM):   else do;
4056764   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4056765   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4056766   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4056767   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4056768   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4056769   +   end;
MPRINT(EM_DIAGRAM):   end;
4056770   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4056771   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4056772   +   end;
MPRINT(EM_DIAGRAM):   end;
4056773   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4056774   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4056775   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4056776   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056777   +   end;
MPRINT(EM_DIAGRAM):   end;
4056778   +end;
MPRINT(EM_DIAGRAM):   end;
4056779   +
4056780   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4056781   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4056782   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4056783   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4056784   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4056785   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056786   +end;
MPRINT(EM_DIAGRAM):   end;
4056787   +else do;
MPRINT(EM_DIAGRAM):   else do;
4056788   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4056789   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4056790   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4056791   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4056792   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4056793   +   end;
MPRINT(EM_DIAGRAM):   end;
4056794   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4056795   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4056796   +   end;
MPRINT(EM_DIAGRAM):   end;
4056797   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4056798   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4056799   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4056800   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056801   +   end;
MPRINT(EM_DIAGRAM):   end;
4056802   +end;
MPRINT(EM_DIAGRAM):   end;
4056803   +
4056804   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4056805   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4056806   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4056807   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4056808   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4056809   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056810   +end;
MPRINT(EM_DIAGRAM):   end;
4056811   +else do;
MPRINT(EM_DIAGRAM):   else do;
4056812   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4056813   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4056814   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4056815   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4056816   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4056817   +   end;
MPRINT(EM_DIAGRAM):   end;
4056818   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4056819   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4056820   +   end;
MPRINT(EM_DIAGRAM):   end;
4056821   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4056822   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4056823   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4056824   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056825   +   end;
MPRINT(EM_DIAGRAM):   end;
4056826   +end;
MPRINT(EM_DIAGRAM):   end;
4056827   +
4056828   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4056829   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4056830   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4056831   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4056832   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4056833   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4056834   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4056835   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4056836   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4056837   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4056838   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4056839   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4056840   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4056841   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056842   +end;
MPRINT(EM_DIAGRAM):   end;
4056843   +else do;
MPRINT(EM_DIAGRAM):   else do;
4056844   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4056845   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4056846   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4056847   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4056848   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4056849   +   end;
MPRINT(EM_DIAGRAM):   end;
4056850   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4056851   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4056852   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4056853   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4056854   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4056855   +   end;
MPRINT(EM_DIAGRAM):   end;
4056856   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4056857   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4056858   +   end;
MPRINT(EM_DIAGRAM):   end;
4056859   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4056860   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4056861   +   end;
MPRINT(EM_DIAGRAM):   end;
4056862   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4056863   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4056864   +   end;
MPRINT(EM_DIAGRAM):   end;
4056865   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4056866   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4056867   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4056868   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4056869   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4056870   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4056871   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056872   +   end;
MPRINT(EM_DIAGRAM):   end;
4056873   +end;
MPRINT(EM_DIAGRAM):   end;
4056874   +
4056875   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4056876   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4056877   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4056878   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4056879   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4056880   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4056881   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4056882   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4056883   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4056884   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4056885   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4056886   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4056887   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4056888   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4056889   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056890   +end;
MPRINT(EM_DIAGRAM):   end;
4056891   +else do;
MPRINT(EM_DIAGRAM):   else do;
4056892   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4056893   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4056894   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4056895   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4056896   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4056897   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4056898   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4056899   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4056900   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4056901   +         end;
MPRINT(EM_DIAGRAM):   end;
4056902   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4056903   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4056904   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4056905   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4056906   +            end;
MPRINT(EM_DIAGRAM):   end;
4056907   +         end;
MPRINT(EM_DIAGRAM):   end;
4056908   +      end;
MPRINT(EM_DIAGRAM):   end;
4056909   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4056910   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4056911   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4056912   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4056913   +         end;
MPRINT(EM_DIAGRAM):   end;
4056914   +      end;
MPRINT(EM_DIAGRAM):   end;
4056915   +   end;
MPRINT(EM_DIAGRAM):   end;
4056916   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4056917   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4056918   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4056919   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4056920   +      end;
MPRINT(EM_DIAGRAM):   end;
4056921   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4056922   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4056923   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4056924   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4056925   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4056926   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4056927   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4056928   +         end;
MPRINT(EM_DIAGRAM):   end;
4056929   +      end;
MPRINT(EM_DIAGRAM):   end;
4056930   +   end;
MPRINT(EM_DIAGRAM):   end;
4056931   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4056932   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4056933   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4056934   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4056935   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4056936   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4056937   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056938   +   end;
MPRINT(EM_DIAGRAM):   end;
4056939   +end;
MPRINT(EM_DIAGRAM):   end;
4056940   +
4056941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056942   +*** Checking missing input Interval
4056943   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4056944   +
4056945   +IF NMISS(
4056946   +   AcceptedCmpTotal ,
4056947   +   Age ,
4056948   +   Frq ,
4056949   +   Income ,
4056950   +   Kidhome ,
4056951   +   Mnt ,
4056952   +   MntFishProducts ,
4056953   +   MntFruits ,
4056954   +   MntGoldProds ,
4056955   +   MntMeatProducts ,
4056956   +   MntSweetProducts ,
4056957   +   MntWines ,
4056958   +   MonthsAsCustomer ,
4056959   +   NumCatalogPurchases ,
4056960   +   NumDealsPurchases ,
4056961   +   NumDistPurchases ,
4056962   +   NumStorePurchases ,
4056963   +   NumWebPurchases ,
4056964   +   NumWebVisitsMonth ,
4056965   +   RFMstat ,
4056966   +   RMntFrq ,
4056967   +   Recency ,
4056968   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4056969   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4056970   +
4056971   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4056972   +END;
MPRINT(EM_DIAGRAM):   END;
4056973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056974   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4056975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4056976   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4056977   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4056978   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4056979   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4056980   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4056981   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4056982   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4056983   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4056984   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4056985   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4056986   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4056987   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4056988   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4056989   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4056990   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4056991   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4056992   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4056993   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4056994   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4056995   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4056996   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4056997   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4056998   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4056999   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4057000   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4057001   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4057002   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4057003   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4057004   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4057005   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4057006   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4057007   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4057008   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4057009   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4057010   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4057011   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4057012   +END;
MPRINT(EM_DIAGRAM):   END;
4057013   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4057014   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4057015   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4057016   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4057017   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4057018   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4057019   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4057020   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4057021   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4057022   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4057023   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4057024   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4057025   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4057026   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4057027   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4057028   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4057029   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4057030   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4057031   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4057032   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4057033   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4057034   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4057035   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4057036   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4057037   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4057038   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4057039   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4057040   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4057041   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4057042   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4057043   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4057044   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4057045   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4057046   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4057047   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4057048   +   ELSE S_NumCatalogPurchases
4057049   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4057050   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4057051   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4057052   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4057053   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4057054   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4057055   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4057056   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4057057   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4057058   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4057059   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4057060   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4057061   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4057062   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4057063   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4057064   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4057065   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4057066   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4057067   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4057068   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4057069   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4057070   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4057071   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4057072   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4057073   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4057074   +END;
MPRINT(EM_DIAGRAM):   END;
4057075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057076   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4057077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057079   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4057080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057082   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4057083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057084   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4057085   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
4057086   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
4057087   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
4057088   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
4057089   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
4057090   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
4057091   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
4057092   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
4057093   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
4057094   +          +     0.09708841024031 * S_NumDealsPurchases
4057095   +          +    -0.29075561032014 * S_NumDistPurchases
4057096   +          +    -0.14495394259873 * S_NumStorePurchases
4057097   +          +     0.11890705145732 * S_NumWebPurchases
4057098   +          +    -0.16954189911344 * S_NumWebVisitsMonth
4057099   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
4057100   +        S_RMntFrq  +     0.17150719398884 * S_Recency
4057101   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 *
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 *
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts +
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 *
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines +
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases +
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases +
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases +
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 *
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
4057102   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
4057103   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
4057104   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
4057105   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
4057106   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
4057107   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
4057108   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
4057109   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
4057110   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
4057111   +          +     0.16274478997892 * S_NumDealsPurchases
4057112   +          +     0.03966958784582 * S_NumDistPurchases
4057113   +          +    -0.04714110726598 * S_NumStorePurchases
4057114   +          +    -0.02124229528082 * S_NumWebPurchases
4057115   +          +     0.29753299776832 * S_NumWebVisitsMonth
4057116   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
4057117   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
4057118   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 *
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 *
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts +
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 *
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines +
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases +
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases +
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases +
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 *
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
4057119   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
4057120   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
4057121   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
4057122   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
4057123   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 *
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 +
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 *
HigherEducationBinary0 ;
4057124   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
4057125   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
4057126   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
4057127   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
4057128   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 *
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 +
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 *
HigherEducationBinary0 ;
4057129   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
4057130   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
4057131   +        EducationGraduation  +     0.00619669837452 * EducationMaster
4057132   +          +    -0.05037639679806 * Marital_StatusDivorced
4057133   +          +     0.28781968727878 * Marital_StatusMarried
4057134   +          +    -0.20382417074384 * Marital_StatusSingle
4057135   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle +
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 *
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 *
Marital_StatusTogether ;
4057136   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
4057137   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
4057138   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
4057139   +          +     0.06970969219123 * Marital_StatusDivorced
4057140   +          +    -0.15787475744986 * Marital_StatusMarried
4057141   +          +     0.14345344072192 * Marital_StatusSingle
4057142   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 *
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 *
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 *
Marital_StatusTogether ;
4057143   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
4057144   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
4057145   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
4057146   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
4057147   +END;
MPRINT(EM_DIAGRAM):   END;
4057148   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4057149   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4057150   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4057151   +END;
MPRINT(EM_DIAGRAM):   END;
4057152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057153   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4057154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057155   +
4057156   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4057157   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4057158   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4057159   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4057160   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4057161   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4057162   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4057163   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4057164   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4057165   +end;
MPRINT(EM_DIAGRAM):   end;
4057166   +else do;
MPRINT(EM_DIAGRAM):   else do;
4057167   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4057168   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4057169   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4057170   +   end;
MPRINT(EM_DIAGRAM):   end;
4057171   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4057172   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4057173   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4057174   +   end;
MPRINT(EM_DIAGRAM):   end;
4057175   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4057176   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4057177   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4057178   +   end;
MPRINT(EM_DIAGRAM):   end;
4057179   +end;
MPRINT(EM_DIAGRAM):   end;
4057180   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4057181   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
4057182   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
4057183   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
4057184   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4057185   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4057186   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4057187   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4057188   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4057189   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4057190   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4057191   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4057192   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4057193   +END;
MPRINT(EM_DIAGRAM):   END;
4057194   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4057195   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4057196   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4057197   +END;
MPRINT(EM_DIAGRAM):   END;
4057198   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4057199   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4057200   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4057201   +END;
MPRINT(EM_DIAGRAM):   END;
4057202   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4057203   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4057204   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4057205   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4057206   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4057207   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4057208   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4057209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057210   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4057211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057212   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4057213   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4057214   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4057215   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4057216   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4057217   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4057218   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4057219   +END;
MPRINT(EM_DIAGRAM):   END;
4057220   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4057221   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4057222   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4057223   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4057224   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
4057225   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4057226   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
4057227   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4057228   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
4057229   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
4057230   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
4057231   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
4057232   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4057233   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
4057234   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4057235   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
4057236   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
4057237   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
4057238   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4057239   +* Ensmbl36: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 3 of 7;
4057240   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4057241   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4057242   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4057243   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4057244   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
4057245   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4057246   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4057247   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4057248   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4057249   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4057250   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4057251   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4057252   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4057253   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4057254   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4057255   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4057256   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4057257   +LENGTH _WARN_ $4
4057258   +      F_DepVar  $ 12
4057259   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4057260   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4057261   +
4057262   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4057263   +
4057264   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4057265   +
4057266   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4057267   +
4057268   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4057269   +
4057270   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4057271   +
4057272   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4057273   +
4057274   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4057275   +
4057276   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4057277   +
4057278   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4057279   +
4057280   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4057281   +
4057282   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4057283   +
4057284   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4057285   +
4057286   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4057287   +
4057288   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4057289   +
4057290   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4057291   +
4057292   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4057293   +
4057294   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4057295   +
4057296   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4057297   +
4057298   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4057299   +
4057300   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4057301   +
4057302   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4057303   +
4057304   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4057305   +
4057306   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4057307   +
4057308   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4057309   +
4057310   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4057311   +
4057312   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4057313   +
4057314   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4057315   +
4057316   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4057317   +
4057318   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4057319   +
4057320   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4057321   +
4057322   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4057323   +
4057324   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4057325   +
4057326   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4057327   +
4057328   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4057329   +
4057330   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4057331   +
4057332   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4057333   +
4057334   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4057335   +
4057336   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4057337   +
4057338   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4057339   +
4057340   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4057341   +
4057342   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4057343   +
4057344   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4057345   +
4057346   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4057347   +
4057348   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4057349   +
4057350   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4057351   +
4057352   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4057353   +
4057354   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4057355   +
4057356   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4057357   +
4057358   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4057359   +
4057360   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4057361   +
4057362   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4057363   +
4057364   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4057365   +
4057366   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4057367   +
4057368   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4057369   +
4057370   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4057371   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4057372   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4057373   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4057374   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4057375   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057376   +end;
MPRINT(EM_DIAGRAM):   end;
4057377   +else do;
MPRINT(EM_DIAGRAM):   else do;
4057378   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4057379   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4057380   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4057381   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4057382   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4057383   +   end;
MPRINT(EM_DIAGRAM):   end;
4057384   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4057385   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4057386   +   end;
MPRINT(EM_DIAGRAM):   end;
4057387   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4057388   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4057389   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4057390   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057391   +   end;
MPRINT(EM_DIAGRAM):   end;
4057392   +end;
MPRINT(EM_DIAGRAM):   end;
4057393   +
4057394   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4057395   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4057396   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4057397   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4057398   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4057399   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057400   +end;
MPRINT(EM_DIAGRAM):   end;
4057401   +else do;
MPRINT(EM_DIAGRAM):   else do;
4057402   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4057403   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4057404   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4057405   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4057406   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4057407   +   end;
MPRINT(EM_DIAGRAM):   end;
4057408   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4057409   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4057410   +   end;
MPRINT(EM_DIAGRAM):   end;
4057411   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4057412   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4057413   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4057414   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057415   +   end;
MPRINT(EM_DIAGRAM):   end;
4057416   +end;
MPRINT(EM_DIAGRAM):   end;
4057417   +
4057418   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4057419   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4057420   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4057421   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4057422   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4057423   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057424   +end;
MPRINT(EM_DIAGRAM):   end;
4057425   +else do;
MPRINT(EM_DIAGRAM):   else do;
4057426   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4057427   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4057428   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4057429   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4057430   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4057431   +   end;
MPRINT(EM_DIAGRAM):   end;
4057432   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4057433   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4057434   +   end;
MPRINT(EM_DIAGRAM):   end;
4057435   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4057436   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4057437   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4057438   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057439   +   end;
MPRINT(EM_DIAGRAM):   end;
4057440   +end;
MPRINT(EM_DIAGRAM):   end;
4057441   +
4057442   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4057443   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4057444   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4057445   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4057446   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4057447   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057448   +end;
MPRINT(EM_DIAGRAM):   end;
4057449   +else do;
MPRINT(EM_DIAGRAM):   else do;
4057450   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4057451   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4057452   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4057453   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4057454   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4057455   +   end;
MPRINT(EM_DIAGRAM):   end;
4057456   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4057457   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4057458   +   end;
MPRINT(EM_DIAGRAM):   end;
4057459   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4057460   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4057461   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4057462   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057463   +   end;
MPRINT(EM_DIAGRAM):   end;
4057464   +end;
MPRINT(EM_DIAGRAM):   end;
4057465   +
4057466   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4057467   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4057468   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4057469   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4057470   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4057471   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057472   +end;
MPRINT(EM_DIAGRAM):   end;
4057473   +else do;
MPRINT(EM_DIAGRAM):   else do;
4057474   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4057475   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4057476   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4057477   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4057478   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4057479   +   end;
MPRINT(EM_DIAGRAM):   end;
4057480   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4057481   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4057482   +   end;
MPRINT(EM_DIAGRAM):   end;
4057483   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4057484   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4057485   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4057486   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057487   +   end;
MPRINT(EM_DIAGRAM):   end;
4057488   +end;
MPRINT(EM_DIAGRAM):   end;
4057489   +
4057490   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4057491   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4057492   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4057493   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4057494   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4057495   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057496   +end;
MPRINT(EM_DIAGRAM):   end;
4057497   +else do;
MPRINT(EM_DIAGRAM):   else do;
4057498   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4057499   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4057500   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4057501   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4057502   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4057503   +   end;
MPRINT(EM_DIAGRAM):   end;
4057504   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4057505   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4057506   +   end;
MPRINT(EM_DIAGRAM):   end;
4057507   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4057508   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4057509   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4057510   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057511   +   end;
MPRINT(EM_DIAGRAM):   end;
4057512   +end;
MPRINT(EM_DIAGRAM):   end;
4057513   +
4057514   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4057515   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4057516   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4057517   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4057518   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4057519   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057520   +end;
MPRINT(EM_DIAGRAM):   end;
4057521   +else do;
MPRINT(EM_DIAGRAM):   else do;
4057522   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4057523   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4057524   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4057525   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4057526   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4057527   +   end;
MPRINT(EM_DIAGRAM):   end;
4057528   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4057529   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4057530   +   end;
MPRINT(EM_DIAGRAM):   end;
4057531   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4057532   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4057533   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4057534   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057535   +   end;
MPRINT(EM_DIAGRAM):   end;
4057536   +end;
MPRINT(EM_DIAGRAM):   end;
4057537   +
4057538   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4057539   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4057540   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4057541   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4057542   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4057543   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4057544   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4057545   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4057546   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4057547   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4057548   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4057549   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4057550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4057551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057552   +end;
MPRINT(EM_DIAGRAM):   end;
4057553   +else do;
MPRINT(EM_DIAGRAM):   else do;
4057554   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4057555   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4057556   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4057557   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4057558   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4057559   +   end;
MPRINT(EM_DIAGRAM):   end;
4057560   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4057561   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4057562   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4057563   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4057564   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4057565   +   end;
MPRINT(EM_DIAGRAM):   end;
4057566   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4057567   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4057568   +   end;
MPRINT(EM_DIAGRAM):   end;
4057569   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4057570   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4057571   +   end;
MPRINT(EM_DIAGRAM):   end;
4057572   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4057573   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4057574   +   end;
MPRINT(EM_DIAGRAM):   end;
4057575   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4057576   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4057577   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4057578   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4057579   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4057580   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4057581   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057582   +   end;
MPRINT(EM_DIAGRAM):   end;
4057583   +end;
MPRINT(EM_DIAGRAM):   end;
4057584   +
4057585   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4057586   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4057587   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4057588   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4057589   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4057590   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4057591   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4057592   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4057593   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4057594   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4057595   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4057596   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4057597   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4057598   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4057599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057600   +end;
MPRINT(EM_DIAGRAM):   end;
4057601   +else do;
MPRINT(EM_DIAGRAM):   else do;
4057602   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4057603   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4057604   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4057605   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4057606   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4057607   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4057608   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4057609   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4057610   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4057611   +         end;
MPRINT(EM_DIAGRAM):   end;
4057612   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4057613   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4057614   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4057615   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4057616   +            end;
MPRINT(EM_DIAGRAM):   end;
4057617   +         end;
MPRINT(EM_DIAGRAM):   end;
4057618   +      end;
MPRINT(EM_DIAGRAM):   end;
4057619   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4057620   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4057621   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4057622   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4057623   +         end;
MPRINT(EM_DIAGRAM):   end;
4057624   +      end;
MPRINT(EM_DIAGRAM):   end;
4057625   +   end;
MPRINT(EM_DIAGRAM):   end;
4057626   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4057627   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4057628   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4057629   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4057630   +      end;
MPRINT(EM_DIAGRAM):   end;
4057631   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4057632   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4057633   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4057634   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4057635   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4057636   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4057637   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4057638   +         end;
MPRINT(EM_DIAGRAM):   end;
4057639   +      end;
MPRINT(EM_DIAGRAM):   end;
4057640   +   end;
MPRINT(EM_DIAGRAM):   end;
4057641   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4057642   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4057643   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4057644   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4057645   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4057646   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4057647   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057648   +   end;
MPRINT(EM_DIAGRAM):   end;
4057649   +end;
MPRINT(EM_DIAGRAM):   end;
4057650   +
4057651   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057652   +*** Checking missing input Interval
4057653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4057654   +
4057655   +IF NMISS(
4057656   +   AcceptedCmpTotal ,
4057657   +   Age ,
4057658   +   Frq ,
4057659   +   Income ,
4057660   +   Kidhome ,
4057661   +   Mnt ,
4057662   +   MntFishProducts ,
4057663   +   MntFruits ,
4057664   +   MntGoldProds ,
4057665   +   MntMeatProducts ,
4057666   +   MntSweetProducts ,
4057667   +   MntWines ,
4057668   +   MonthsAsCustomer ,
4057669   +   NumCatalogPurchases ,
4057670   +   NumDealsPurchases ,
4057671   +   NumDistPurchases ,
4057672   +   NumStorePurchases ,
4057673   +   NumWebPurchases ,
4057674   +   NumWebVisitsMonth ,
4057675   +   RFMstat ,
4057676   +   RMntFrq ,
4057677   +   Recency ,
4057678   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4057679   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4057680   +
4057681   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4057682   +END;
MPRINT(EM_DIAGRAM):   END;
4057683   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057684   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4057685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057686   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4057687   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4057688   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4057689   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4057690   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4057691   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4057692   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4057693   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4057694   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4057695   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4057696   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4057697   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4057698   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4057699   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4057700   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4057701   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4057702   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4057703   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4057704   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4057705   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4057706   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4057707   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4057708   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4057709   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4057710   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4057711   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4057712   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4057713   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4057714   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4057715   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4057716   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4057717   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4057718   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4057719   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4057720   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4057721   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4057722   +END;
MPRINT(EM_DIAGRAM):   END;
4057723   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4057724   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4057725   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4057726   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4057727   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4057728   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4057729   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4057730   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4057731   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4057732   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4057733   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4057734   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4057735   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4057736   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4057737   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4057738   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4057739   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4057740   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4057741   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4057742   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4057743   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4057744   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4057745   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4057746   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4057747   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4057748   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4057749   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4057750   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4057751   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4057752   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4057753   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4057754   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4057755   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4057756   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4057757   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4057758   +   ELSE S_NumCatalogPurchases
4057759   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4057760   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4057761   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4057762   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4057763   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4057764   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4057765   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4057766   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4057767   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4057768   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4057769   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4057770   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4057771   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4057772   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4057773   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4057774   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4057775   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4057776   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4057777   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4057778   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4057779   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4057780   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4057781   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4057782   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4057783   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4057784   +END;
MPRINT(EM_DIAGRAM):   END;
4057785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057786   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4057787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057788   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057789   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4057790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057792   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4057793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057794   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4057795   +   H1x1_1  =    -1.49223555176068 * S_AcceptedCmpTotal
4057796   +          +    -0.32281831453238 * S_Age  +     0.28120825505194 * S_Frq
4057797   +          +    -0.39842787806973 * S_Income  +     0.36430856665979 *
4057798   +        S_Kidhome  +    -0.25637228568962 * S_Mnt  +     0.24110438184349 *
4057799   +        S_MntFishProducts  +     0.13701085804118 * S_MntFruits
4057800   +          +     0.11223882829002 * S_MntGoldProds  +     -1.6663458930199 *
4057801   +        S_MntMeatProducts  +      0.0702185455839 * S_MntSweetProducts
4057802   +          +    -0.01371828795287 * S_MntWines  +    -0.15983998015164 *
4057803   +        S_MonthsAsCustomer  +    -0.71296831037224 * S_NumCatalogPurchases
4057804   +          +     0.76573417773216 * S_NumDealsPurchases
4057805   +          +     0.22648400529885 * S_NumDistPurchases
4057806   +          +     1.21720286527592 * S_NumStorePurchases
4057807   +          +     0.60948566229097 * S_NumWebPurchases
4057808   +          +    -2.18126452011089 * S_NumWebVisitsMonth
4057809   +          +     0.32447158734618 * S_RFMstat  +     2.09718739448286 *
4057810   +        S_RMntFrq  +     2.00816730203973 * S_Recency
4057811   +          +     0.71721312404607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.49223555176068 * S_AcceptedCmpTotal + -0.32281831453238 *
S_Age + 0.28120825505194 * S_Frq + -0.39842787806973 * S_Income + 0.36430856665979 * S_Kidhome
+ -0.25637228568962 * S_Mnt + 0.24110438184349 * S_MntFishProducts + 0.13701085804118 *
S_MntFruits + 0.11223882829002 * S_MntGoldProds + -1.6663458930199 * S_MntMeatProducts +
0.0702185455839 * S_MntSweetProducts + -0.01371828795287 * S_MntWines + -0.15983998015164 *
S_MonthsAsCustomer + -0.71296831037224 * S_NumCatalogPurchases + 0.76573417773216 *
S_NumDealsPurchases + 0.22648400529885 * S_NumDistPurchases + 1.21720286527592 *
S_NumStorePurchases + 0.60948566229097 * S_NumWebPurchases + -2.18126452011089 *
S_NumWebVisitsMonth + 0.32447158734618 * S_RFMstat + 2.09718739448286 * S_RMntFrq +
2.00816730203973 * S_Recency + 0.71721312404607 * S_Teenhome ;
4057812   +   H1x1_2  =    -3.95102659899455 * S_AcceptedCmpTotal
4057813   +          +    -0.08322758955502 * S_Age  +     0.48219484564503 * S_Frq
4057814   +          +    -0.47312016087921 * S_Income  +    -0.28936610485406 *
4057815   +        S_Kidhome  +    -1.88029814405677 * S_Mnt  +     1.82010433926021 *
4057816   +        S_MntFishProducts  +     0.24350362722041 * S_MntFruits
4057817   +          +     -0.0982980353358 * S_MntGoldProds  +     -8.1095841881459 *
4057818   +        S_MntMeatProducts  +    -0.08364558784797 * S_MntSweetProducts
4057819   +          +     2.19205303691707 * S_MntWines  +    -0.00045011863954 *
4057820   +        S_MonthsAsCustomer  +    -1.63167878295586 * S_NumCatalogPurchases
4057821   +          +    -1.52828428070828 * S_NumDealsPurchases
4057822   +          +    -0.01775178145113 * S_NumDistPurchases
4057823   +          +     1.11531198663491 * S_NumStorePurchases
4057824   +          +     1.79501098452904 * S_NumWebPurchases
4057825   +          +     -0.7392686013605 * S_NumWebVisitsMonth
4057826   +          +    -1.44559350209967 * S_RFMstat  +     1.21221378487873 *
4057827   +        S_RMntFrq  +     0.68917175969495 * S_Recency
4057828   +          +      0.3873784466888 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.95102659899455 * S_AcceptedCmpTotal + -0.08322758955502 *
S_Age + 0.48219484564503 * S_Frq + -0.47312016087921 * S_Income + -0.28936610485406 *
S_Kidhome + -1.88029814405677 * S_Mnt + 1.82010433926021 * S_MntFishProducts +
0.24350362722041 * S_MntFruits + -0.0982980353358 * S_MntGoldProds + -8.1095841881459 *
S_MntMeatProducts + -0.08364558784797 * S_MntSweetProducts + 2.19205303691707 * S_MntWines +
-0.00045011863954 * S_MonthsAsCustomer + -1.63167878295586 * S_NumCatalogPurchases +
-1.52828428070828 * S_NumDealsPurchases + -0.01775178145113 * S_NumDistPurchases +
1.11531198663491 * S_NumStorePurchases + 1.79501098452904 * S_NumWebPurchases +
-0.7392686013605 * S_NumWebVisitsMonth + -1.44559350209967 * S_RFMstat + 1.21221378487873 *
S_RMntFrq + 0.68917175969495 * S_Recency + 0.3873784466888 * S_Teenhome ;
4057829   +   H1x1_1  = H1x1_1  +    -0.51533233697482 * AcceptedCmp10
4057830   +          +    -0.34752733433815 * AcceptedCmp20  +     0.22125035216356 *
4057831   +        AcceptedCmp30  +     0.05379844837275 * AcceptedCmp40
4057832   +          +    -0.20445562216782 * AcceptedCmp50  +    -0.30276475879877 *
4057833   +        Complain0  +     0.06619165480602 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51533233697482 * AcceptedCmp10 + -0.34752733433815
* AcceptedCmp20 + 0.22125035216356 * AcceptedCmp30 + 0.05379844837275 * AcceptedCmp40 +
-0.20445562216782 * AcceptedCmp50 + -0.30276475879877 * Complain0 + 0.06619165480602 *
HigherEducationBinary0 ;
4057834   +   H1x1_2  = H1x1_2  +     4.56470093348771 * AcceptedCmp10
4057835   +          +    -2.57910461209778 * AcceptedCmp20  +     -2.5693819769014 *
4057836   +        AcceptedCmp30  +    -1.94278577333227 * AcceptedCmp40
4057837   +          +     2.05860438228037 * AcceptedCmp50  +     0.25089930568051 *
4057838   +        Complain0  +      0.2603214054608 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.56470093348771 * AcceptedCmp10 + -2.57910461209778 *
AcceptedCmp20 + -2.5693819769014 * AcceptedCmp30 + -1.94278577333227 * AcceptedCmp40 +
2.05860438228037 * AcceptedCmp50 + 0.25089930568051 * Complain0 + 0.2603214054608 *
HigherEducationBinary0 ;
4057839   +   H1x1_1  = H1x1_1  +    -0.49828378489244 * Education2n_Cycle
4057840   +          +     0.39089624737534 * EducationBasic  +    -0.48226710339977 *
4057841   +        EducationGraduation  +    -0.06304916771632 * EducationMaster
4057842   +          +    -1.56926331102732 * Marital_StatusDivorced
4057843   +          +     2.38562782588323 * Marital_StatusMarried
4057844   +          +    -1.91012008029228 * Marital_StatusSingle
4057845   +          +     2.35299228753934 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.49828378489244 * Education2n_Cycle +
0.39089624737534 * EducationBasic + -0.48226710339977 * EducationGraduation +
-0.06304916771632 * EducationMaster + -1.56926331102732 * Marital_StatusDivorced +
2.38562782588323 * Marital_StatusMarried + -1.91012008029228 * Marital_StatusSingle +
2.35299228753934 * Marital_StatusTogether ;
4057846   +   H1x1_2  = H1x1_2  +    -0.32482988110182 * Education2n_Cycle
4057847   +          +    -0.31705264382373 * EducationBasic  +    -0.14073222836204 *
4057848   +        EducationGraduation  +    -0.14552128560395 * EducationMaster
4057849   +          +     0.39329538853368 * Marital_StatusDivorced
4057850   +          +       0.055543492668 * Marital_StatusMarried
4057851   +          +    -0.36260663573441 * Marital_StatusSingle
4057852   +          +     0.16563783024817 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.32482988110182 * Education2n_Cycle +
-0.31705264382373 * EducationBasic + -0.14073222836204 * EducationGraduation +
-0.14552128560395 * EducationMaster + 0.39329538853368 * Marital_StatusDivorced +
0.055543492668 * Marital_StatusMarried + -0.36260663573441 * Marital_StatusSingle +
0.16563783024817 * Marital_StatusTogether ;
4057853   +   H1x1_1  =     0.82901515254061 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.82901515254061 + H1x1_1 ;
4057854   +   H1x1_2  =     -1.6113683532078 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.6113683532078 + H1x1_2 ;
4057855   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
4057856   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
4057857   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4057858   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4057859   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4057860   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4057861   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4057862   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4057863   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4057864   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4057865   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4057866   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4057867   +END;
MPRINT(EM_DIAGRAM):   END;
4057868   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4057869   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4057870   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4057871   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4057872   +END;
MPRINT(EM_DIAGRAM):   END;
4057873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057874   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4057875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057876   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4057877   +   H1x2_1  =     -1.1749963769098 * S_AcceptedCmpTotal
4057878   +          +      0.0835452152484 * S_Age  +     0.29627839234992 * S_Frq
4057879   +          +    -0.11493797334082 * S_Income  +    -1.11510356366657 *
4057880   +        S_Kidhome  +     0.18185063757674 * S_Mnt  +    -0.17631127507692 *
4057881   +        S_MntFishProducts  +     1.24365107847098 * S_MntFruits
4057882   +          +     0.16504711681039 * S_MntGoldProds  +     0.99592906524599 *
4057883   +        S_MntMeatProducts  +     0.07387543627707 * S_MntSweetProducts
4057884   +          +    -0.00693664828192 * S_MntWines  +    -0.14413765189074 *
4057885   +        S_MonthsAsCustomer  +    -0.36632511301344 * S_NumCatalogPurchases
4057886   +          +    -0.41717905931734 * S_NumDealsPurchases
4057887   +          +    -0.48750443671176 * S_NumDistPurchases
4057888   +          +      1.9775770151507 * S_NumStorePurchases
4057889   +          +    -0.43534422425416 * S_NumWebPurchases
4057890   +          +    -1.48049451059329 * S_NumWebVisitsMonth
4057891   +          +     1.55056718888347 * S_RFMstat  +    -1.96774244937803 *
4057892   +        S_RMntFrq  +     -1.0977291490167 * S_Recency
4057893   +          +    -1.73756201871547 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.1749963769098 * S_AcceptedCmpTotal + 0.0835452152484 * S_Age
+ 0.29627839234992 * S_Frq + -0.11493797334082 * S_Income + -1.11510356366657 * S_Kidhome +
0.18185063757674 * S_Mnt + -0.17631127507692 * S_MntFishProducts + 1.24365107847098 *
S_MntFruits + 0.16504711681039 * S_MntGoldProds + 0.99592906524599 * S_MntMeatProducts +
0.07387543627707 * S_MntSweetProducts + -0.00693664828192 * S_MntWines + -0.14413765189074 *
S_MonthsAsCustomer + -0.36632511301344 * S_NumCatalogPurchases + -0.41717905931734 *
S_NumDealsPurchases + -0.48750443671176 * S_NumDistPurchases + 1.9775770151507 *
S_NumStorePurchases + -0.43534422425416 * S_NumWebPurchases + -1.48049451059329 *
S_NumWebVisitsMonth + 1.55056718888347 * S_RFMstat + -1.96774244937803 * S_RMntFrq +
-1.0977291490167 * S_Recency + -1.73756201871547 * S_Teenhome ;
4057894   +   H1x2_2  =     0.87479703138918 * S_AcceptedCmpTotal
4057895   +          +    -0.61917505429247 * S_Age  +     0.18385580137989 * S_Frq
4057896   +          +     0.30709491132909 * S_Income  +      1.6244568354812 *
4057897   +        S_Kidhome  +     0.77673205123801 * S_Mnt  +    -0.00950889578201 *
4057898   +        S_MntFishProducts  +    -0.47007254592819 * S_MntFruits
4057899   +          +      0.6454406759241 * S_MntGoldProds  +     0.78795218230384 *
4057900   +        S_MntMeatProducts  +    -1.18230648640376 * S_MntSweetProducts
4057901   +          +     1.41552316954503 * S_MntWines  +    -0.46565264346633 *
4057902   +        S_MonthsAsCustomer  +     0.48368171409283 * S_NumCatalogPurchases
4057903   +          +     0.76267091632012 * S_NumDealsPurchases
4057904   +          +     1.55118513069849 * S_NumDistPurchases
4057905   +          +       1.649962776028 * S_NumStorePurchases
4057906   +          +    -0.27453335733875 * S_NumWebPurchases
4057907   +          +     0.26599210649756 * S_NumWebVisitsMonth
4057908   +          +     0.00143802909271 * S_RFMstat  +    -0.62161550917558 *
4057909   +        S_RMntFrq  +    -0.60215803586133 * S_Recency
4057910   +          +     0.22509643762583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.87479703138918 * S_AcceptedCmpTotal + -0.61917505429247 *
S_Age + 0.18385580137989 * S_Frq + 0.30709491132909 * S_Income + 1.6244568354812 * S_Kidhome +
0.77673205123801 * S_Mnt + -0.00950889578201 * S_MntFishProducts + -0.47007254592819 *
S_MntFruits + 0.6454406759241 * S_MntGoldProds + 0.78795218230384 * S_MntMeatProducts +
-1.18230648640376 * S_MntSweetProducts + 1.41552316954503 * S_MntWines + -0.46565264346633 *
S_MonthsAsCustomer + 0.48368171409283 * S_NumCatalogPurchases + 0.76267091632012 *
S_NumDealsPurchases + 1.55118513069849 * S_NumDistPurchases + 1.649962776028 *
S_NumStorePurchases + -0.27453335733875 * S_NumWebPurchases + 0.26599210649756 *
S_NumWebVisitsMonth + 0.00143802909271 * S_RFMstat + -0.62161550917558 * S_RMntFrq +
-0.60215803586133 * S_Recency + 0.22509643762583 * S_Teenhome ;
4057911   +   H1x2_1  = H1x2_1  +    -0.22417594551449 * AcceptedCmp10
4057912   +          +    -0.55200708632393 * AcceptedCmp20  +     1.04226929662396 *
4057913   +        AcceptedCmp30  +    -0.43983724759528 * AcceptedCmp40
4057914   +          +    -0.97319667842772 * AcceptedCmp50  +     2.14592283316473 *
4057915   +        Complain0  +     0.00148996042832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.22417594551449 * AcceptedCmp10 + -0.55200708632393
* AcceptedCmp20 + 1.04226929662396 * AcceptedCmp30 + -0.43983724759528 * AcceptedCmp40 +
-0.97319667842772 * AcceptedCmp50 + 2.14592283316473 * Complain0 + 0.00148996042832 *
HigherEducationBinary0 ;
4057916   +   H1x2_2  = H1x2_2  +     1.02054806337451 * AcceptedCmp10
4057917   +          +      2.0527957252179 * AcceptedCmp20  +     0.15243342547701 *
4057918   +        AcceptedCmp30  +    -2.55108921567655 * AcceptedCmp40
4057919   +          +    -0.66084381908537 * AcceptedCmp50  +    -0.15574677370344 *
4057920   +        Complain0  +    -0.89833811964409 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.02054806337451 * AcceptedCmp10 + 2.0527957252179 *
AcceptedCmp20 + 0.15243342547701 * AcceptedCmp30 + -2.55108921567655 * AcceptedCmp40 +
-0.66084381908537 * AcceptedCmp50 + -0.15574677370344 * Complain0 + -0.89833811964409 *
HigherEducationBinary0 ;
4057921   +   H1x2_1  = H1x2_1  +     0.47883438771897 * Education2n_Cycle
4057922   +          +     1.28689916550347 * EducationBasic  +    -1.05405263417007 *
4057923   +        EducationGraduation  +     0.24617525366101 * EducationMaster
4057924   +          +    -1.84502099308633 * Marital_StatusDivorced
4057925   +          +     0.16524535969204 * Marital_StatusMarried
4057926   +          +     0.01375012857393 * Marital_StatusSingle
4057927   +          +     0.33752759564982 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.47883438771897 * Education2n_Cycle +
1.28689916550347 * EducationBasic + -1.05405263417007 * EducationGraduation + 0.24617525366101
* EducationMaster + -1.84502099308633 * Marital_StatusDivorced + 0.16524535969204 *
Marital_StatusMarried + 0.01375012857393 * Marital_StatusSingle + 0.33752759564982 *
Marital_StatusTogether ;
4057928   +   H1x2_2  = H1x2_2  +     -0.4088130246632 * Education2n_Cycle
4057929   +          +    -0.51383473075458 * EducationBasic  +     0.81399641406825 *
4057930   +        EducationGraduation  +      0.6427794380992 * EducationMaster
4057931   +          +     0.18210930140238 * Marital_StatusDivorced
4057932   +          +    -1.49615662968181 * Marital_StatusMarried
4057933   +          +     1.61043484549536 * Marital_StatusSingle
4057934   +          +    -1.22593755313209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.4088130246632 * Education2n_Cycle +
-0.51383473075458 * EducationBasic + 0.81399641406825 * EducationGraduation + 0.6427794380992
* EducationMaster + 0.18210930140238 * Marital_StatusDivorced + -1.49615662968181 *
Marital_StatusMarried + 1.61043484549536 * Marital_StatusSingle + -1.22593755313209 *
Marital_StatusTogether ;
4057935   +   H1x2_1  =    -1.87516498734281 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.87516498734281 + H1x2_1 ;
4057936   +   H1x2_2  =     -1.2865444436051 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.2865444436051 + H1x2_2 ;
4057937   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
4057938   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
4057939   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4057940   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4057941   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4057942   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4057943   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4057944   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4057945   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4057946   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4057947   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4057948   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4057949   +END;
MPRINT(EM_DIAGRAM):   END;
4057950   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4057951   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4057952   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4057953   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4057954   +END;
MPRINT(EM_DIAGRAM):   END;
4057955   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057956   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4057957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057958   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4057959   +   H2x1_1  =     1.23576217175305 * H1x1_1  +     4.19315123860009 * H1x1_2
4057960   +          +    -3.85498900364115 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.23576217175305 * H1x1_1 + 4.19315123860009 * H1x1_2 +
-3.85498900364115 * H1x1_3 ;
4057961   +   H2x1_2  =        0.24209158888 * H1x1_1  +     0.59735252655183 * H1x1_2
4057962   +          +     1.27545750114528 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.24209158888 * H1x1_1 + 0.59735252655183 * H1x1_2 +
1.27545750114528 * H1x1_3 ;
4057963   +   H2x1_3  =     1.36411346566831 * H1x1_1  +     4.19709046572946 * H1x1_2
4057964   +          +    -4.50940237896172 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.36411346566831 * H1x1_1 + 4.19709046572946 * H1x1_2 +
-4.50940237896172 * H1x1_3 ;
4057965   +   H2x1_1  = H2x1_1  +     0.65417285199474 * H1x2_1
4057966   +          +      2.5072311354855 * H1x2_2  +     -2.0438449895367 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.65417285199474 * H1x2_1 + 2.5072311354855 * H1x2_2 +
-2.0438449895367 * H1x2_3 ;
4057967   +   H2x1_2  = H2x1_2  +      0.4352357645315 * H1x2_1
4057968   +          +     -0.9643467516424 * H1x2_2  +     0.46452403975724 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.4352357645315 * H1x2_1 + -0.9643467516424 * H1x2_2 +
0.46452403975724 * H1x2_3 ;
4057969   +   H2x1_3  = H2x1_3  +     0.13671643242806 * H1x2_1
4057970   +          +     1.59797252596846 * H1x2_2  +    -2.67821815632058 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.13671643242806 * H1x2_1 + 1.59797252596846 * H1x2_2
+ -2.67821815632058 * H1x2_3 ;
4057971   +   H2x1_1  =     0.15805888658617 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.15805888658617 + H2x1_1 ;
4057972   +   H2x1_2  =     1.42566993600015 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.42566993600015 + H2x1_2 ;
4057973   +   H2x1_3  =     1.00076706282181 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.00076706282181 + H2x1_3 ;
4057974   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4057975   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4057976   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4057977   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4057978   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4057979   +END;
MPRINT(EM_DIAGRAM):   END;
4057980   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4057981   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4057982   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4057983   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4057984   +END;
MPRINT(EM_DIAGRAM):   END;
4057985   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057986   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4057987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4057988   +
4057989   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4057990   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4057991   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4057992   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4057993   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4057994   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4057995   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4057996   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4057997   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4057998   +end;
MPRINT(EM_DIAGRAM):   end;
4057999   +else do;
MPRINT(EM_DIAGRAM):   else do;
4058000   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4058001   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4058002   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4058003   +   end;
MPRINT(EM_DIAGRAM):   end;
4058004   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4058005   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4058006   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4058007   +   end;
MPRINT(EM_DIAGRAM):   end;
4058008   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4058009   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4058010   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4058011   +   end;
MPRINT(EM_DIAGRAM):   end;
4058012   +end;
MPRINT(EM_DIAGRAM):   end;
4058013   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4058014   +   P_DepVar1  =    -6.91101516234847 * H2x1_1  +     1.76281132920385 * H2x1_2
4058015   +          +     -7.2624751055034 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.91101516234847 * H2x1_1 + 1.76281132920385 * H2x1_2 +
-7.2624751055034 * H2x1_3 ;
4058016   +   P_DepVar1  =     -0.0724356806648 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.0724356806648 + P_DepVar1 ;
4058017   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4058018   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4058019   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4058020   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4058021   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4058022   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4058023   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4058024   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4058025   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4058026   +END;
MPRINT(EM_DIAGRAM):   END;
4058027   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4058028   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4058029   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4058030   +END;
MPRINT(EM_DIAGRAM):   END;
4058031   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4058032   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4058033   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4058034   +END;
MPRINT(EM_DIAGRAM):   END;
4058035   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4058036   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4058037   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4058038   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4058039   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4058040   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4058041   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4058042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4058043   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4058044   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4058045   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4058046   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4058047   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4058048   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4058049   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4058050   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4058051   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4058052   +END;
MPRINT(EM_DIAGRAM):   END;
4058053   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4058054   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4058055   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4058056   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4058057   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
4058058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4058059   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
4058060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4058061   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
4058062   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
4058063   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
4058064   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
4058065   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4058066   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
4058067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4058068   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
4058069   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
4058070   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
4058071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4058072   +* Ensmbl36: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 4 of 7;
4058073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4058074   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4058075   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4058076   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4058077   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
4058078   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4058079   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4058080   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4058081   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4058082   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4058083   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4058084   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4058085   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4058086   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4058087   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4058088   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4058089   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4058090   +LENGTH _WARN_ $4
4058091   +      F_DepVar  $ 12
4058092   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4058093   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4058094   +
4058095   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4058096   +
4058097   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4058098   +
4058099   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4058100   +
4058101   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4058102   +
4058103   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4058104   +
4058105   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4058106   +
4058107   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4058108   +
4058109   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4058110   +
4058111   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4058112   +
4058113   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4058114   +
4058115   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4058116   +
4058117   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4058118   +
4058119   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4058120   +
4058121   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4058122   +
4058123   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4058124   +
4058125   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4058126   +
4058127   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4058128   +
4058129   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4058130   +
4058131   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4058132   +
4058133   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4058134   +
4058135   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4058136   +
4058137   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4058138   +
4058139   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4058140   +
4058141   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4058142   +
4058143   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4058144   +
4058145   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4058146   +
4058147   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4058148   +
4058149   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4058150   +
4058151   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4058152   +
4058153   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4058154   +
4058155   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4058156   +
4058157   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4058158   +
4058159   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4058160   +
4058161   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4058162   +
4058163   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4058164   +
4058165   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4058166   +
4058167   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4058168   +
4058169   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4058170   +
4058171   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4058172   +
4058173   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4058174   +
4058175   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4058176   +
4058177   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4058178   +
4058179   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4058180   +
4058181   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4058182   +
4058183   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4058184   +
4058185   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4058186   +
4058187   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4058188   +
4058189   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4058190   +
4058191   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
4058192   +
4058193   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
4058194   +
4058195   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
4058196   +
4058197   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
4058198   +
4058199   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4058200   +
4058201   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4058202   +
4058203   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4058204   +
4058205   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4058206   +
4058207   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4058208   +
4058209   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4058210   +
4058211   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
4058212   +
4058213   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
4058214   +
4058215   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
4058216   +
4058217   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
4058218   +
4058219   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4058220   +
4058221   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
4058222   +
4058223   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
4058224   +
4058225   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
4058226   +
4058227   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
4058228   +
4058229   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4058230   +
4058231   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4058232   +
4058233   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4058234   +
4058235   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4058236   +
4058237   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4058238   +
4058239   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4058240   +
4058241   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4058242   +
4058243   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4058244   +
4058245   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4058246   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4058247   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4058248   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4058249   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4058250   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058251   +end;
MPRINT(EM_DIAGRAM):   end;
4058252   +else do;
MPRINT(EM_DIAGRAM):   else do;
4058253   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4058254   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4058255   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4058256   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4058257   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4058258   +   end;
MPRINT(EM_DIAGRAM):   end;
4058259   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4058260   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4058261   +   end;
MPRINT(EM_DIAGRAM):   end;
4058262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4058263   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4058264   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4058265   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058266   +   end;
MPRINT(EM_DIAGRAM):   end;
4058267   +end;
MPRINT(EM_DIAGRAM):   end;
4058268   +
4058269   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4058270   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4058271   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4058272   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4058273   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4058274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058275   +end;
MPRINT(EM_DIAGRAM):   end;
4058276   +else do;
MPRINT(EM_DIAGRAM):   else do;
4058277   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4058278   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4058279   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4058280   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4058281   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4058282   +   end;
MPRINT(EM_DIAGRAM):   end;
4058283   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4058284   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4058285   +   end;
MPRINT(EM_DIAGRAM):   end;
4058286   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4058287   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4058288   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4058289   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058290   +   end;
MPRINT(EM_DIAGRAM):   end;
4058291   +end;
MPRINT(EM_DIAGRAM):   end;
4058292   +
4058293   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4058294   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4058295   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4058296   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4058297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4058298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058299   +end;
MPRINT(EM_DIAGRAM):   end;
4058300   +else do;
MPRINT(EM_DIAGRAM):   else do;
4058301   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4058302   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4058303   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4058304   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4058305   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4058306   +   end;
MPRINT(EM_DIAGRAM):   end;
4058307   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4058308   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4058309   +   end;
MPRINT(EM_DIAGRAM):   end;
4058310   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4058311   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4058312   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4058313   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058314   +   end;
MPRINT(EM_DIAGRAM):   end;
4058315   +end;
MPRINT(EM_DIAGRAM):   end;
4058316   +
4058317   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4058318   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4058319   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4058320   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4058321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4058322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058323   +end;
MPRINT(EM_DIAGRAM):   end;
4058324   +else do;
MPRINT(EM_DIAGRAM):   else do;
4058325   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4058326   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4058327   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4058328   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4058329   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4058330   +   end;
MPRINT(EM_DIAGRAM):   end;
4058331   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4058332   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4058333   +   end;
MPRINT(EM_DIAGRAM):   end;
4058334   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4058335   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4058336   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4058337   +      _DM_BAD = 1;
The SAS System
 
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058338   +   end;
MPRINT(EM_DIAGRAM):   end;
4058339   +end;
MPRINT(EM_DIAGRAM):   end;
4058340   +
4058341   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4058342   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4058343   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4058344   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4058345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4058346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058347   +end;
MPRINT(EM_DIAGRAM):   end;
4058348   +else do;
MPRINT(EM_DIAGRAM):   else do;
4058349   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4058350   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4058351   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4058352   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4058353   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4058354   +   end;
MPRINT(EM_DIAGRAM):   end;
4058355   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4058356   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4058357   +   end;
MPRINT(EM_DIAGRAM):   end;
4058358   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4058359   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4058360   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4058361   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058362   +   end;
MPRINT(EM_DIAGRAM):   end;
4058363   +end;
MPRINT(EM_DIAGRAM):   end;
4058364   +
4058365   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4058366   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4058367   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4058368   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4058369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4058370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058371   +end;
MPRINT(EM_DIAGRAM):   end;
4058372   +else do;
MPRINT(EM_DIAGRAM):   else do;
4058373   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4058374   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4058375   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4058376   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4058377   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4058378   +   end;
MPRINT(EM_DIAGRAM):   end;
4058379   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4058380   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4058381   +   end;
MPRINT(EM_DIAGRAM):   end;
4058382   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4058383   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4058384   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4058385   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058386   +   end;
MPRINT(EM_DIAGRAM):   end;
4058387   +end;
MPRINT(EM_DIAGRAM):   end;
4058388   +
4058389   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4058390   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4058391   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4058392   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4058393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4058394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058395   +end;
MPRINT(EM_DIAGRAM):   end;
4058396   +else do;
MPRINT(EM_DIAGRAM):   else do;
4058397   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4058398   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4058399   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4058400   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4058401   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4058402   +   end;
MPRINT(EM_DIAGRAM):   end;
4058403   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4058404   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4058405   +   end;
MPRINT(EM_DIAGRAM):   end;
4058406   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4058407   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4058408   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4058409   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058410   +   end;
MPRINT(EM_DIAGRAM):   end;
4058411   +end;
MPRINT(EM_DIAGRAM):   end;
4058412   +
4058413   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4058414   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4058415   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4058416   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4058417   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4058418   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4058419   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4058420   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4058421   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4058422   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4058423   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4058424   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4058425   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4058426   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058427   +end;
MPRINT(EM_DIAGRAM):   end;
4058428   +else do;
MPRINT(EM_DIAGRAM):   else do;
4058429   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4058430   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4058431   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4058432   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4058433   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4058434   +   end;
MPRINT(EM_DIAGRAM):   end;
4058435   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4058436   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4058437   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4058438   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4058439   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4058440   +   end;
MPRINT(EM_DIAGRAM):   end;
4058441   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4058442   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4058443   +   end;
MPRINT(EM_DIAGRAM):   end;
4058444   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4058445   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4058446   +   end;
MPRINT(EM_DIAGRAM):   end;
4058447   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4058448   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4058449   +   end;
MPRINT(EM_DIAGRAM):   end;
4058450   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4058451   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4058452   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4058453   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4058454   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4058455   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4058456   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058457   +   end;
MPRINT(EM_DIAGRAM):   end;
4058458   +end;
MPRINT(EM_DIAGRAM):   end;
4058459   +
4058460   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4058461   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4058462   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4058463   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4058464   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4058465   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4058466   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4058467   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4058468   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4058469   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4058470   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4058471   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4058472   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4058473   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4058474   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058475   +end;
MPRINT(EM_DIAGRAM):   end;
4058476   +else do;
MPRINT(EM_DIAGRAM):   else do;
4058477   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4058478   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4058479   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4058480   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4058481   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4058482   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4058483   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4058484   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4058485   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4058486   +         end;
MPRINT(EM_DIAGRAM):   end;
4058487   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4058488   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4058489   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4058490   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4058491   +            end;
MPRINT(EM_DIAGRAM):   end;
4058492   +         end;
MPRINT(EM_DIAGRAM):   end;
4058493   +      end;
MPRINT(EM_DIAGRAM):   end;
4058494   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4058495   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4058496   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4058497   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4058498   +         end;
MPRINT(EM_DIAGRAM):   end;
4058499   +      end;
MPRINT(EM_DIAGRAM):   end;
4058500   +   end;
MPRINT(EM_DIAGRAM):   end;
4058501   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4058502   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4058503   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4058504   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4058505   +      end;
MPRINT(EM_DIAGRAM):   end;
4058506   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4058507   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4058508   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4058509   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4058510   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4058511   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4058512   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4058513   +         end;
MPRINT(EM_DIAGRAM):   end;
4058514   +      end;
MPRINT(EM_DIAGRAM):   end;
4058515   +   end;
MPRINT(EM_DIAGRAM):   end;
4058516   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4058517   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4058518   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4058519   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4058520   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4058521   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4058522   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058523   +   end;
MPRINT(EM_DIAGRAM):   end;
4058524   +end;
MPRINT(EM_DIAGRAM):   end;
4058525   +
4058526   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4058527   +*** Checking missing input Interval
4058528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4058529   +
4058530   +IF NMISS(
4058531   +   AcceptedCmpTotal ,
4058532   +   Age ,
4058533   +   Frq ,
4058534   +   Income ,
4058535   +   Kidhome ,
4058536   +   Mnt ,
4058537   +   MntFishProducts ,
4058538   +   MntFruits ,
4058539   +   MntGoldProds ,
4058540   +   MntMeatProducts ,
4058541   +   MntSweetProducts ,
4058542   +   MntWines ,
4058543   +   MonthsAsCustomer ,
4058544   +   NumCatalogPurchases ,
4058545   +   NumDealsPurchases ,
4058546   +   NumDistPurchases ,
4058547   +   NumStorePurchases ,
4058548   +   NumWebPurchases ,
4058549   +   NumWebVisitsMonth ,
4058550   +   RFMstat ,
4058551   +   RMntFrq ,
4058552   +   Recency ,
4058553   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4058554   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4058555   +
4058556   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4058557   +END;
MPRINT(EM_DIAGRAM):   END;
4058558   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4058559   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4058560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4058561   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4058562   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4058563   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4058564   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4058565   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4058566   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4058567   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4058568   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4058569   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4058570   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4058571   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4058572   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4058573   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4058574   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4058575   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4058576   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4058577   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4058578   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4058579   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4058580   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4058581   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4058582   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4058583   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4058584   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4058585   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4058586   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4058587   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4058588   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4058589   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4058590   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4058591   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4058592   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4058593   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4058594   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4058595   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4058596   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4058597   +END;
MPRINT(EM_DIAGRAM):   END;
4058598   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4058599   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4058600   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4058601   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4058602   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4058603   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4058604   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4058605   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4058606   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4058607   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4058608   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4058609   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4058610   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4058611   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4058612   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4058613   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4058614   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4058615   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4058616   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4058617   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4058618   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4058619   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4058620   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4058621   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4058622   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4058623   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4058624   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4058625   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4058626   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4058627   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4058628   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4058629   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4058630   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4058631   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4058632   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4058633   +   ELSE S_NumCatalogPurchases
4058634   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4058635   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4058636   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4058637   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4058638   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4058639   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4058640   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4058641   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4058642   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4058643   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4058644   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4058645   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4058646   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4058647   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4058648   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4058649   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4058650   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4058651   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4058652   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4058653   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4058654   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4058655   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4058656   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4058657   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4058658   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4058659   +END;
MPRINT(EM_DIAGRAM):   END;
4058660   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4058661   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4058662   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4058663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4058664   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4058665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4058666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4058667   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4058668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4058669   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4058670   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
4058671   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
4058672   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
4058673   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
4058674   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
4058675   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
4058676   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
4058677   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
4058678   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
4058679   +          +     3.45371614080196 * S_NumDealsPurchases
4058680   +          +     0.19118374544537 * S_NumDistPurchases
4058681   +          +    -2.45138001446793 * S_NumStorePurchases
4058682   +          +    -0.11424280244155 * S_NumWebPurchases
4058683   +          +    -2.31770357716565 * S_NumWebVisitsMonth
4058684   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
4058685   +        S_RMntFrq  +     0.26870809438679 * S_Recency
4058686   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
4058687   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
4058688   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
4058689   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
4058690   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
4058691   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
4058692   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
4058693   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
4058694   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
4058695   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
4058696   +          +    -1.28390925647659 * S_NumDealsPurchases
4058697   +          +     0.82669177239926 * S_NumDistPurchases
4058698   +          +     1.71678585204511 * S_NumStorePurchases
4058699   +          +     1.49226295608046 * S_NumWebPurchases
4058700   +          +     -4.0105103018388 * S_NumWebVisitsMonth
4058701   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
4058702   +        S_RMntFrq  +     4.74241121363086 * S_Recency
4058703   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
4058704   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
4058705   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
4058706   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
4058707   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
4058708   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
4058709   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
4058710   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
4058711   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
4058712   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
4058713   +          +     0.22958626391725 * S_NumDealsPurchases
4058714   +          +    -0.02046515813996 * S_NumDistPurchases
4058715   +          +      0.8618502050837 * S_NumStorePurchases
4058716   +          +     1.45175370326009 * S_NumWebPurchases
4058717   +          +    -0.86122442436156 * S_NumWebVisitsMonth
4058718   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
4058719   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
4058720   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
4058721   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
4058722   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
4058723   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
4058724   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
4058725   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
4058726   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
4058727   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
4058728   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
4058729   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
4058730   +          +     1.25310034610344 * S_NumDealsPurchases
4058731   +          +     0.92141098602176 * S_NumDistPurchases
4058732   +          +    -0.08806509391473 * S_NumStorePurchases
4058733   +          +     -1.0533787624668 * S_NumWebPurchases
4058734   +          +     3.07050739830585 * S_NumWebVisitsMonth
4058735   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
4058736   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
4058737   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
4058738   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
4058739   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
4058740   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
4058741   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
4058742   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
4058743   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
4058744   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
4058745   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
4058746   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
4058747   +          +    -1.68259553608287 * S_NumDealsPurchases
4058748   +          +    -0.53835572290445 * S_NumDistPurchases
4058749   +          +     1.25833922835446 * S_NumStorePurchases
4058750   +          +     0.48300830623998 * S_NumWebPurchases
4058751   +          +    -2.20119275236582 * S_NumWebVisitsMonth
4058752   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
4058753   +        S_RMntFrq  +     0.35692712879409 * S_Recency
4058754   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
4058755   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
4058756   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
4058757   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
4058758   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
4058759   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
4058760   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
4058761   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
4058762   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
4058763   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
4058764   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
4058765   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
4058766   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
4058767   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
4058768   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
4058769   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
4058770   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
4058771   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
4058772   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
4058773   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
4058774   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
4058775   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
4058776   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
4058777   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
4058778   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
4058779   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
4058780   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
4058781   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
4058782   +        EducationGraduation  +     1.25189584055994 * EducationMaster
4058783   +          +     0.26230568150721 * Marital_StatusDivorced
4058784   +          +     0.27563523967756 * Marital_StatusMarried
4058785   +          +     0.54464481618478 * Marital_StatusSingle
4058786   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
4058787   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
4058788   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
4058789   +        EducationGraduation  +     0.29772013614284 * EducationMaster
4058790   +          +    -0.06750661313108 * Marital_StatusDivorced
4058791   +          +     1.48628445854207 * Marital_StatusMarried
4058792   +          +    -0.52197797291165 * Marital_StatusSingle
4058793   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
4058794   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
4058795   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
4058796   +        EducationGraduation  +     0.45665087056809 * EducationMaster
4058797   +          +     0.03219453957597 * Marital_StatusDivorced
4058798   +          +    -0.73835008216677 * Marital_StatusMarried
4058799   +          +     0.11212575818086 * Marital_StatusSingle
4058800   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
4058801   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
4058802   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
4058803   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
4058804   +          +    -0.95055539413405 * Marital_StatusDivorced
4058805   +          +    -1.65922419336067 * Marital_StatusMarried
4058806   +          +     0.78727538125107 * Marital_StatusSingle
4058807   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
4058808   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
4058809   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
4058810   +        EducationGraduation  +     0.46710355433642 * EducationMaster
4058811   +          +     -4.1747415035634 * Marital_StatusDivorced
4058812   +          +     3.61194282451968 * Marital_StatusMarried
4058813   +          +     -3.2800495365546 * Marital_StatusSingle
4058814   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
4058815   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
4058816   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
4058817   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
4058818   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
4058819   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
4058820   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4058821   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4058822   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4058823   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
4058824   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
4058825   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
4058826   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
4058827   +END;
MPRINT(EM_DIAGRAM):   END;
4058828   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4058829   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4058830   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4058831   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4058832   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4058833   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4058834   +END;
MPRINT(EM_DIAGRAM):   END;
4058835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4058836   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4058837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4058838   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4058839   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
4058840   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
4058841   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
4058842   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
4058843   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
4058844   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
4058845   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
4058846   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
4058847   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
4058848   +          +     1.29727972396867 * S_NumDealsPurchases
4058849   +          +     -0.4796144286007 * S_NumDistPurchases
4058850   +          +     0.88365985808591 * S_NumStorePurchases
4058851   +          +     0.68522096892804 * S_NumWebPurchases
4058852   +          +     0.54931043107798 * S_NumWebVisitsMonth
4058853   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
4058854   +        S_RMntFrq  +     2.35704770144328 * S_Recency
4058855   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
4058856   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
4058857   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
4058858   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
4058859   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
4058860   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
4058861   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
4058862   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
4058863   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
4058864   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
4058865   +          +     0.26997834581422 * S_NumDealsPurchases
4058866   +          +      1.4974894627406 * S_NumDistPurchases
4058867   +          +     0.20577850505638 * S_NumStorePurchases
4058868   +          +     0.67578530037026 * S_NumWebPurchases
4058869   +          +     1.48893165613941 * S_NumWebVisitsMonth
4058870   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
4058871   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
4058872   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
4058873   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
4058874   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
4058875   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
4058876   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
4058877   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
4058878   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
4058879   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
4058880   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
4058881   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
4058882   +          +    -0.75474919633886 * S_NumDealsPurchases
4058883   +          +     2.21872386475638 * S_NumDistPurchases
4058884   +          +    -0.36191460108989 * S_NumStorePurchases
4058885   +          +     0.03160010932412 * S_NumWebPurchases
4058886   +          +     0.00984650739909 * S_NumWebVisitsMonth
4058887   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
4058888   +        S_RMntFrq  +     0.97890474913417 * S_Recency
4058889   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
4058890   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
4058891   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
4058892   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
4058893   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
4058894   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
4058895   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
4058896   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
4058897   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
4058898   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
4058899   +          +    -1.12057357865269 * S_NumDealsPurchases
4058900   +          +    -0.70841760614521 * S_NumDistPurchases
4058901   +          +    -1.39174816270404 * S_NumStorePurchases
4058902   +          +    -1.62343249380806 * S_NumWebPurchases
4058903   +          +    -0.73097954508465 * S_NumWebVisitsMonth
4058904   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
4058905   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
4058906   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
4058907   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
4058908   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
4058909   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
4058910   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
4058911   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
4058912   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
4058913   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
4058914   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
4058915   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
4058916   +          +     0.66880481485557 * S_NumDealsPurchases
4058917   +          +     0.69540174544859 * S_NumDistPurchases
4058918   +          +     1.68246546921736 * S_NumStorePurchases
4058919   +          +     1.85958176898295 * S_NumWebPurchases
4058920   +          +    -0.23815810306565 * S_NumWebVisitsMonth
4058921   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
4058922   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
4058923   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
4058924   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
4058925   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
4058926   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
4058927   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
4058928   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
4058929   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
4058930   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
4058931   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
4058932   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
4058933   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
4058934   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
4058935   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
4058936   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
4058937   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
4058938   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
4058939   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
4058940   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
4058941   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
4058942   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
4058943   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
4058944   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
4058945   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
4058946   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
4058947   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
4058948   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
4058949   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
4058950   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
4058951   +        EducationGraduation  +     0.32623787352656 * EducationMaster
4058952   +          +      0.2766977476799 * Marital_StatusDivorced
4058953   +          +     0.99585126449473 * Marital_StatusMarried
4058954   +          +    -0.71244490682808 * Marital_StatusSingle
4058955   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
4058956   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
4058957   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
4058958   +        EducationGraduation  +     0.47239961039918 * EducationMaster
4058959   +          +     0.04724779113048 * Marital_StatusDivorced
4058960   +          +    -0.80186231440666 * Marital_StatusMarried
4058961   +          +    -0.02226793584171 * Marital_StatusSingle
4058962   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
4058963   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
4058964   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
4058965   +        EducationGraduation  +     0.41284540548646 * EducationMaster
4058966   +          +     0.28206835683721 * Marital_StatusDivorced
4058967   +          +     0.46500886756532 * Marital_StatusMarried
4058968   +          +     0.35327545255503 * Marital_StatusSingle
4058969   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
4058970   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
4058971   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
4058972   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
4058973   +          +     1.22291788006392 * Marital_StatusDivorced
4058974   +          +    -2.27040720272432 * Marital_StatusMarried
4058975   +          +     1.13606780043773 * Marital_StatusSingle
4058976   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
4058977   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
4058978   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
4058979   +        EducationGraduation  +      0.4909097120378 * EducationMaster
4058980   +          +     -0.3999800759199 * Marital_StatusDivorced
4058981   +          +    -0.40978271635345 * Marital_StatusMarried
4058982   +          +    -0.55524279444227 * Marital_StatusSingle
4058983   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
4058984   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
4058985   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
4058986   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
4058987   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
4058988   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
4058989   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4058990   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4058991   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4058992   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
4058993   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
4058994   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
4058995   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
4058996   +END;
MPRINT(EM_DIAGRAM):   END;
4058997   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4058998   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4058999   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4059000   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4059001   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4059002   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4059003   +END;
MPRINT(EM_DIAGRAM):   END;
4059004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059005   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4059006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059007   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4059008   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
4059009   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
4059010   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
4059011   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
4059012   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
4059013   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
4059014   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
4059015   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
4059016   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
4059017   +          +     0.15783958682465 * S_NumDealsPurchases
4059018   +          +     1.52124708558457 * S_NumDistPurchases
4059019   +          +     -1.3804418313581 * S_NumStorePurchases
4059020   +          +    -1.29570111649272 * S_NumWebPurchases
4059021   +          +    -0.64280706056547 * S_NumWebVisitsMonth
4059022   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
4059023   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
4059024   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
4059025   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
4059026   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
4059027   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
4059028   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
4059029   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
4059030   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
4059031   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
4059032   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
4059033   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
4059034   +          +     0.12337111358286 * S_NumDealsPurchases
4059035   +          +     -2.3848926094027 * S_NumDistPurchases
4059036   +          +    -1.20666646996433 * S_NumStorePurchases
4059037   +          +     0.89549302881365 * S_NumWebPurchases
4059038   +          +     0.95359042569947 * S_NumWebVisitsMonth
4059039   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
4059040   +        S_RMntFrq  +     0.17682790616815 * S_Recency
4059041   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
4059042   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
4059043   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
4059044   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
4059045   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
4059046   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
4059047   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
4059048   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
4059049   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
4059050   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
4059051   +          +    -1.05383642674948 * S_NumDealsPurchases
4059052   +          +     1.71861984509369 * S_NumDistPurchases
4059053   +          +     1.47595181536047 * S_NumStorePurchases
4059054   +          +    -1.64165005491178 * S_NumWebPurchases
4059055   +          +    -2.35130004742828 * S_NumWebVisitsMonth
4059056   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
4059057   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
4059058   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
4059059   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
4059060   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
4059061   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
4059062   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
4059063   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
4059064   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
4059065   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
4059066   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
4059067   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
4059068   +          +     0.13347794794222 * S_NumDealsPurchases
4059069   +          +     0.30533639886561 * S_NumDistPurchases
4059070   +          +     1.63892955540526 * S_NumStorePurchases
4059071   +          +     0.43734586516446 * S_NumWebPurchases
4059072   +          +     1.79260779802864 * S_NumWebVisitsMonth
4059073   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
4059074   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
4059075   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
4059076   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
4059077   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
4059078   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
4059079   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
4059080   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
4059081   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
4059082   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
4059083   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
4059084   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
4059085   +          +     1.64209094349557 * S_NumDealsPurchases
4059086   +          +    -0.38876870460627 * S_NumDistPurchases
4059087   +          +    -0.48559309584971 * S_NumStorePurchases
4059088   +          +     0.21254626353218 * S_NumWebPurchases
4059089   +          +    -0.71484448532542 * S_NumWebVisitsMonth
4059090   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
4059091   +        S_RMntFrq  +     0.44893411588775 * S_Recency
4059092   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
4059093   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
4059094   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
4059095   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
4059096   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
4059097   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
4059098   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
4059099   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
4059100   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
4059101   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
4059102   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
4059103   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
4059104   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
4059105   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
4059106   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
4059107   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
4059108   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
4059109   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
4059110   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
4059111   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
4059112   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
4059113   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
4059114   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
4059115   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
4059116   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
4059117   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
4059118   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
4059119   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
4059120   +        EducationGraduation  +     0.46887304015863 * EducationMaster
4059121   +          +     1.33953173091973 * Marital_StatusDivorced
4059122   +          +    -0.26253208073262 * Marital_StatusMarried
4059123   +          +    -0.00960552682431 * Marital_StatusSingle
4059124   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
4059125   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
4059126   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
4059127   +        EducationGraduation  +     1.05325310300372 * EducationMaster
4059128   +          +     1.43150850334311 * Marital_StatusDivorced
4059129   +          +    -0.69239127844934 * Marital_StatusMarried
4059130   +          +     2.08477562471559 * Marital_StatusSingle
4059131   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
4059132   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
4059133   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
4059134   +        EducationGraduation  +     1.80436924796338 * EducationMaster
4059135   +          +     1.08387556786168 * Marital_StatusDivorced
4059136   +          +      1.0283506000217 * Marital_StatusMarried
4059137   +          +    -0.87069431107983 * Marital_StatusSingle
4059138   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
4059139   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
4059140   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
4059141   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
4059142   +          +      -1.347780188307 * Marital_StatusDivorced
4059143   +          +    -0.53911983240372 * Marital_StatusMarried
4059144   +          +     0.22083074159185 * Marital_StatusSingle
4059145   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
4059146   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
4059147   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
4059148   +        EducationGraduation  +      1.6087631135774 * EducationMaster
4059149   +          +     1.46582538311384 * Marital_StatusDivorced
4059150   +          +     0.05256161016002 * Marital_StatusMarried
4059151   +          +    -1.21402967626877 * Marital_StatusSingle
4059152   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
4059153   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
4059154   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
4059155   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
4059156   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
4059157   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
4059158   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4059159   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4059160   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4059161   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
4059162   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
4059163   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
4059164   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
4059165   +END;
MPRINT(EM_DIAGRAM):   END;
4059166   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4059167   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4059168   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
4059169   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
4059170   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
4059171   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
4059172   +END;
MPRINT(EM_DIAGRAM):   END;
4059173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059174   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4059175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059176   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4059177   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
4059178   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
4059179   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
4059180   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
4059181   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
4059182   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
4059183   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
4059184   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
4059185   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
4059186   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
4059187   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
4059188   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
4059189   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
4059190   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
4059191   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
4059192   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
4059193   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
4059194   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
4059195   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
4059196   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
4059197   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
4059198   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
4059199   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
4059200   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
4059201   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
4059202   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
4059203   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
4059204   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
4059205   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
4059206   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
4059207   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
4059208   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
4059209   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
4059210   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
4059211   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
4059212   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
4059213   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
4059214   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
4059215   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
4059216   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
4059217   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
4059218   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
4059219   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4059220   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4059221   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4059222   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4059223   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4059224   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4059225   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4059226   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4059227   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4059228   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4059229   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4059230   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4059231   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4059232   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4059233   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4059234   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4059235   +END;
MPRINT(EM_DIAGRAM):   END;
4059236   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4059237   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4059238   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4059239   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4059240   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4059241   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4059242   +END;
MPRINT(EM_DIAGRAM):   END;
4059243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059244   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4059245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059246   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4059247   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
4059248   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
4059249   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
4059250   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
4059251   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
4059252   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
4059253   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
4059254   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
4059255   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
4059256   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
4059257   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
4059258   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
4059259   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
4059260   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
4059261   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
4059262   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
4059263   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
4059264   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
4059265   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
4059266   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
4059267   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
4059268   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
4059269   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
4059270   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
4059271   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
4059272   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
4059273   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
4059274   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
4059275   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
4059276   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
4059277   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
4059278   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
4059279   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
4059280   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
4059281   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
4059282   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
4059283   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
4059284   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
4059285   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
4059286   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
4059287   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
4059288   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
4059289   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4059290   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
4059291   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
4059292   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
4059293   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
4059294   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
4059295   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
4059296   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
4059297   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
4059298   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
4059299   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
4059300   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
4059301   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
4059302   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
4059303   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
4059304   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
4059305   +END;
MPRINT(EM_DIAGRAM):   END;
4059306   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4059307   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4059308   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
4059309   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
4059310   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
4059311   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
4059312   +END;
MPRINT(EM_DIAGRAM):   END;
4059313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059314   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4059315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059316   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4059317   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
4059318   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
4059319   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
4059320   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
4059321   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
4059322   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
4059323   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
4059324   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
4059325   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
4059326   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
4059327   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
4059328   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
4059329   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
4059330   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
4059331   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
4059332   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
4059333   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
4059334   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
4059335   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
4059336   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
4059337   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
4059338   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
4059339   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
4059340   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
4059341   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
4059342   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
4059343   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
4059344   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
4059345   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
4059346   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
4059347   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4059348   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
4059349   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
4059350   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
4059351   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
4059352   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
4059353   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
4059354   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
4059355   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
4059356   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
4059357   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
4059358   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
4059359   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
4059360   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
4059361   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
4059362   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
4059363   +END;
MPRINT(EM_DIAGRAM):   END;
4059364   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4059365   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4059366   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
4059367   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
4059368   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
4059369   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
4059370   +END;
MPRINT(EM_DIAGRAM):   END;
4059371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059372   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4059373   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059374   +
4059375   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4059376   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4059377   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4059378   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4059379   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4059380   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4059381   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4059382   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4059383   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4059384   +end;
MPRINT(EM_DIAGRAM):   end;
4059385   +else do;
MPRINT(EM_DIAGRAM):   else do;
4059386   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4059387   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4059388   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4059389   +   end;
MPRINT(EM_DIAGRAM):   end;
4059390   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4059391   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4059392   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4059393   +   end;
MPRINT(EM_DIAGRAM):   end;
4059394   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4059395   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4059396   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4059397   +   end;
MPRINT(EM_DIAGRAM):   end;
4059398   +end;
MPRINT(EM_DIAGRAM):   end;
4059399   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4059400   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
4059401   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
4059402   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
4059403   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
4059404   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4059405   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4059406   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4059407   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4059408   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4059409   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4059410   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4059411   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4059412   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4059413   +END;
MPRINT(EM_DIAGRAM):   END;
4059414   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4059415   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4059416   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4059417   +END;
MPRINT(EM_DIAGRAM):   END;
4059418   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4059419   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4059420   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4059421   +END;
MPRINT(EM_DIAGRAM):   END;
4059422   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4059423   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4059424   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4059425   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4059426   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4059427   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4059428   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4059429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059430   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4059431   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059432   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4059433   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4059434   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4059435   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4059436   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4059437   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4059438   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4059439   +END;
MPRINT(EM_DIAGRAM):   END;
4059440   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4059441   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4059442   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4059443   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4059444   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
4059445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4059446   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
4059447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4059448   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
4059449   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
4059450   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
4059451   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
4059452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4059453   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
4059454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4059455   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
4059456   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
4059457   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
4059458   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4059459   +* Ensmbl36: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 5 of 7;
4059460   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4059461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4059462   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4059463   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4059464   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
4059465   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4059466   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4059467   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4059468   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4059469   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4059470   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4059471   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4059472   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4059473   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4059474   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4059475   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4059476   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4059477   +LENGTH _WARN_ $4
4059478   +      F_DepVar  $ 12
4059479   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4059480   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4059481   +
4059482   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4059483   +
4059484   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4059485   +
4059486   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4059487   +
4059488   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4059489   +
4059490   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4059491   +
4059492   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4059493   +
4059494   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4059495   +
4059496   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4059497   +
4059498   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4059499   +
4059500   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4059501   +
4059502   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4059503   +
4059504   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4059505   +
4059506   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4059507   +
4059508   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4059509   +
4059510   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4059511   +
4059512   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4059513   +
4059514   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4059515   +
4059516   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4059517   +
4059518   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4059519   +
4059520   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4059521   +
4059522   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4059523   +
4059524   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4059525   +
4059526   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4059527   +
4059528   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4059529   +
4059530   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4059531   +
4059532   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4059533   +
4059534   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4059535   +
4059536   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4059537   +
4059538   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4059539   +
4059540   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4059541   +
4059542   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4059543   +
4059544   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4059545   +
4059546   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4059547   +
4059548   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4059549   +
4059550   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4059551   +
4059552   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4059553   +
4059554   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4059555   +
4059556   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4059557   +
4059558   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4059559   +
4059560   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4059561   +
4059562   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4059563   +
4059564   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4059565   +
4059566   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4059567   +
4059568   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4059569   +
4059570   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4059571   +
4059572   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4059573   +
4059574   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4059575   +
4059576   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4059577   +
4059578   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4059579   +
4059580   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4059581   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4059582   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4059583   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4059584   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4059585   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059586   +end;
MPRINT(EM_DIAGRAM):   end;
4059587   +else do;
MPRINT(EM_DIAGRAM):   else do;
4059588   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4059589   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4059590   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4059591   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4059592   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4059593   +   end;
MPRINT(EM_DIAGRAM):   end;
4059594   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4059595   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4059596   +   end;
MPRINT(EM_DIAGRAM):   end;
4059597   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4059598   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4059599   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4059600   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059601   +   end;
MPRINT(EM_DIAGRAM):   end;
4059602   +end;
MPRINT(EM_DIAGRAM):   end;
4059603   +
4059604   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4059605   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4059606   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4059607   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4059608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4059609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059610   +end;
MPRINT(EM_DIAGRAM):   end;
4059611   +else do;
MPRINT(EM_DIAGRAM):   else do;
4059612   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4059613   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4059614   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4059615   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4059616   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4059617   +   end;
MPRINT(EM_DIAGRAM):   end;
4059618   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4059619   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4059620   +   end;
MPRINT(EM_DIAGRAM):   end;
4059621   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4059622   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4059623   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4059624   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059625   +   end;
MPRINT(EM_DIAGRAM):   end;
4059626   +end;
MPRINT(EM_DIAGRAM):   end;
4059627   +
4059628   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4059629   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4059630   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4059631   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4059632   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4059633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059634   +end;
MPRINT(EM_DIAGRAM):   end;
4059635   +else do;
MPRINT(EM_DIAGRAM):   else do;
4059636   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4059637   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4059638   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4059639   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4059640   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4059641   +   end;
MPRINT(EM_DIAGRAM):   end;
4059642   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4059643   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4059644   +   end;
MPRINT(EM_DIAGRAM):   end;
4059645   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4059646   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4059647   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4059648   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059649   +   end;
MPRINT(EM_DIAGRAM):   end;
4059650   +end;
MPRINT(EM_DIAGRAM):   end;
4059651   +
4059652   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4059653   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4059654   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4059655   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4059656   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4059657   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059658   +end;
MPRINT(EM_DIAGRAM):   end;
4059659   +else do;
MPRINT(EM_DIAGRAM):   else do;
4059660   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4059661   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4059662   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4059663   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4059664   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4059665   +   end;
MPRINT(EM_DIAGRAM):   end;
4059666   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4059667   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4059668   +   end;
MPRINT(EM_DIAGRAM):   end;
4059669   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4059670   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4059671   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4059672   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059673   +   end;
MPRINT(EM_DIAGRAM):   end;
4059674   +end;
MPRINT(EM_DIAGRAM):   end;
4059675   +
4059676   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4059677   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4059678   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4059679   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4059680   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4059681   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059682   +end;
MPRINT(EM_DIAGRAM):   end;
4059683   +else do;
MPRINT(EM_DIAGRAM):   else do;
4059684   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4059685   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4059686   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4059687   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4059688   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4059689   +   end;
MPRINT(EM_DIAGRAM):   end;
4059690   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4059691   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4059692   +   end;
MPRINT(EM_DIAGRAM):   end;
4059693   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4059694   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4059695   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4059696   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059697   +   end;
MPRINT(EM_DIAGRAM):   end;
4059698   +end;
MPRINT(EM_DIAGRAM):   end;
4059699   +
4059700   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4059701   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4059702   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4059703   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4059704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4059705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059706   +end;
MPRINT(EM_DIAGRAM):   end;
4059707   +else do;
MPRINT(EM_DIAGRAM):   else do;
4059708   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4059709   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4059710   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4059711   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4059712   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4059713   +   end;
MPRINT(EM_DIAGRAM):   end;
4059714   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4059715   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4059716   +   end;
MPRINT(EM_DIAGRAM):   end;
4059717   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4059718   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4059719   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4059720   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059721   +   end;
MPRINT(EM_DIAGRAM):   end;
4059722   +end;
MPRINT(EM_DIAGRAM):   end;
4059723   +
4059724   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4059725   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4059726   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4059727   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4059728   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4059729   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059730   +end;
MPRINT(EM_DIAGRAM):   end;
4059731   +else do;
MPRINT(EM_DIAGRAM):   else do;
4059732   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4059733   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4059734   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4059735   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4059736   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4059737   +   end;
MPRINT(EM_DIAGRAM):   end;
4059738   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4059739   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4059740   +   end;
MPRINT(EM_DIAGRAM):   end;
4059741   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4059742   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4059743   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4059744   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059745   +   end;
MPRINT(EM_DIAGRAM):   end;
4059746   +end;
MPRINT(EM_DIAGRAM):   end;
4059747   +
4059748   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4059749   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4059750   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4059751   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4059752   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4059753   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4059754   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4059755   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4059756   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4059757   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4059758   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4059759   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4059760   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4059761   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059762   +end;
MPRINT(EM_DIAGRAM):   end;
4059763   +else do;
MPRINT(EM_DIAGRAM):   else do;
4059764   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4059765   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4059766   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4059767   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4059768   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4059769   +   end;
MPRINT(EM_DIAGRAM):   end;
4059770   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4059771   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4059772   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4059773   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4059774   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4059775   +   end;
MPRINT(EM_DIAGRAM):   end;
4059776   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4059777   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4059778   +   end;
MPRINT(EM_DIAGRAM):   end;
4059779   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4059780   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4059781   +   end;
MPRINT(EM_DIAGRAM):   end;
4059782   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4059783   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4059784   +   end;
MPRINT(EM_DIAGRAM):   end;
4059785   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4059786   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4059787   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4059788   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4059789   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4059790   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4059791   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059792   +   end;
MPRINT(EM_DIAGRAM):   end;
4059793   +end;
MPRINT(EM_DIAGRAM):   end;
4059794   +
4059795   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4059796   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4059797   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4059798   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4059799   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4059800   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4059801   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4059802   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4059803   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4059804   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4059805   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4059806   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4059807   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4059808   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4059809   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059810   +end;
MPRINT(EM_DIAGRAM):   end;
4059811   +else do;
MPRINT(EM_DIAGRAM):   else do;
4059812   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4059813   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4059814   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4059815   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4059816   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4059817   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4059818   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4059819   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4059820   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4059821   +         end;
MPRINT(EM_DIAGRAM):   end;
4059822   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4059823   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4059824   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4059825   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4059826   +            end;
MPRINT(EM_DIAGRAM):   end;
4059827   +         end;
MPRINT(EM_DIAGRAM):   end;
4059828   +      end;
MPRINT(EM_DIAGRAM):   end;
4059829   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4059830   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4059831   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4059832   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4059833   +         end;
MPRINT(EM_DIAGRAM):   end;
4059834   +      end;
MPRINT(EM_DIAGRAM):   end;
4059835   +   end;
MPRINT(EM_DIAGRAM):   end;
4059836   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4059837   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4059838   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4059839   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4059840   +      end;
MPRINT(EM_DIAGRAM):   end;
4059841   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4059842   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4059843   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4059844   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4059845   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4059846   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4059847   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4059848   +         end;
MPRINT(EM_DIAGRAM):   end;
4059849   +      end;
MPRINT(EM_DIAGRAM):   end;
4059850   +   end;
MPRINT(EM_DIAGRAM):   end;
4059851   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4059852   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4059853   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4059854   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4059855   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4059856   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4059857   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059858   +   end;
MPRINT(EM_DIAGRAM):   end;
4059859   +end;
MPRINT(EM_DIAGRAM):   end;
4059860   +
4059861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059862   +*** Checking missing input Interval
4059863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4059864   +
4059865   +IF NMISS(
4059866   +   AcceptedCmpTotal ,
4059867   +   Age ,
4059868   +   Frq ,
4059869   +   Income ,
4059870   +   Kidhome ,
4059871   +   Mnt ,
4059872   +   MntFishProducts ,
4059873   +   MntFruits ,
4059874   +   MntGoldProds ,
4059875   +   MntMeatProducts ,
4059876   +   MntSweetProducts ,
4059877   +   MntWines ,
4059878   +   MonthsAsCustomer ,
4059879   +   NumCatalogPurchases ,
4059880   +   NumDealsPurchases ,
4059881   +   NumDistPurchases ,
4059882   +   NumStorePurchases ,
4059883   +   NumWebPurchases ,
4059884   +   NumWebVisitsMonth ,
4059885   +   RFMstat ,
4059886   +   RMntFrq ,
4059887   +   Recency ,
4059888   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4059889   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4059890   +
4059891   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4059892   +END;
MPRINT(EM_DIAGRAM):   END;
4059893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059894   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4059895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059896   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4059897   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4059898   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4059899   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4059900   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4059901   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4059902   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4059903   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4059904   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4059905   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4059906   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4059907   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4059908   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4059909   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4059910   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4059911   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4059912   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4059913   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4059914   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4059915   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4059916   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4059917   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4059918   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4059919   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4059920   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4059921   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4059922   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4059923   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4059924   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4059925   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4059926   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4059927   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4059928   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4059929   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4059930   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4059931   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4059932   +END;
MPRINT(EM_DIAGRAM):   END;
4059933   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4059934   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4059935   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4059936   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4059937   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4059938   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4059939   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4059940   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4059941   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4059942   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4059943   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4059944   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4059945   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4059946   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4059947   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4059948   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4059949   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4059950   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4059951   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4059952   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4059953   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4059954   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4059955   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4059956   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4059957   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4059958   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4059959   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4059960   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4059961   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4059962   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4059963   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4059964   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4059965   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4059966   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4059967   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4059968   +   ELSE S_NumCatalogPurchases
4059969   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4059970   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4059971   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4059972   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4059973   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4059974   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4059975   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4059976   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4059977   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4059978   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4059979   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4059980   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4059981   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4059982   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4059983   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4059984   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4059985   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4059986   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4059987   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4059988   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4059989   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4059990   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4059991   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4059992   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4059993   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4059994   +END;
MPRINT(EM_DIAGRAM):   END;
4059995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059996   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4059997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4059999   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4060000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060002   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4060003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060004   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4060005   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
4060006   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
4060007   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
4060008   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
4060009   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
4060010   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
4060011   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
4060012   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
4060013   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
4060014   +          +    -1.14704878034134 * S_NumDealsPurchases
4060015   +          +    -0.17763404274659 * S_NumDistPurchases
4060016   +          +     0.08894400267969 * S_NumStorePurchases
4060017   +          +     0.59283747891957 * S_NumWebPurchases
4060018   +          +     0.85268274682505 * S_NumWebVisitsMonth
4060019   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
4060020   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
4060021   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 *
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 *
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts +
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 *
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines +
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases +
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases +
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases +
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 *
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
4060022   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
4060023   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
4060024   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
4060025   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
4060026   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
4060027   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
4060028   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
4060029   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
4060030   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
4060031   +          +    -0.80841566068716 * S_NumDealsPurchases
4060032   +          +    -0.17995640033768 * S_NumDistPurchases
4060033   +          +     0.00713417460936 * S_NumStorePurchases
4060034   +          +     0.57881024323076 * S_NumWebPurchases
4060035   +          +    -1.35134224257365 * S_NumWebVisitsMonth
4060036   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
4060037   +        S_RMntFrq  +     1.16978656262499 * S_Recency
4060038   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 *
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 *
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts +
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 *
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 *
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 *
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 *
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq +
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
4060039   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
4060040   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
4060041   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
4060042   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
4060043   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
4060044   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
4060045   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
4060046   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
4060047   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
4060048   +          +     0.57891364118717 * S_NumDealsPurchases
4060049   +          +    -0.31024556838688 * S_NumDistPurchases
4060050   +          +    -1.48708542986704 * S_NumStorePurchases
4060051   +          +    -0.93009875249206 * S_NumWebPurchases
4060052   +          +     2.01900039122935 * S_NumWebVisitsMonth
4060053   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
4060054   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
4060055   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 *
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 *
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts +
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 *
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 *
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 *
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 *
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq +
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
4060056   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
4060057   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
4060058   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
4060059   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
4060060   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 *
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 +
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 *
HigherEducationBinary0 ;
4060061   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
4060062   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
4060063   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
4060064   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
4060065   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 *
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 +
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 *
HigherEducationBinary0 ;
4060066   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
4060067   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
4060068   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
4060069   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
4060070   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 +
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 *
HigherEducationBinary0 ;
4060071   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
4060072   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
4060073   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
4060074   +          +     0.55883606830033 * Marital_StatusDivorced
4060075   +          +    -0.54530037567066 * Marital_StatusMarried
4060076   +          +    -0.52994736075753 * Marital_StatusSingle
4060077   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle +
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation +
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced +
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle +
-0.53882341831078 * Marital_StatusTogether ;
4060078   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
4060079   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
4060080   +        EducationGraduation  +     0.31201349236277 * EducationMaster
4060081   +          +    -1.07368484057033 * Marital_StatusDivorced
4060082   +          +     2.73313504711262 * Marital_StatusMarried
4060083   +          +    -2.18530462876058 * Marital_StatusSingle
4060084   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle +
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 *
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 *
Marital_StatusTogether ;
4060085   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
4060086   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
4060087   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
4060088   +          +     0.49993144243043 * Marital_StatusDivorced
4060089   +          +    -0.38953339116829 * Marital_StatusMarried
4060090   +          +    -0.10836287319942 * Marital_StatusSingle
4060091   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle +
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation +
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced +
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle +
-0.42049990939036 * Marital_StatusTogether ;
4060092   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
4060093   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
4060094   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
4060095   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
4060096   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
4060097   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4060098   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4060099   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4060100   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4060101   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4060102   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4060103   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4060104   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4060105   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4060106   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4060107   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4060108   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4060109   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4060110   +END;
MPRINT(EM_DIAGRAM):   END;
4060111   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4060112   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4060113   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4060114   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4060115   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4060116   +END;
MPRINT(EM_DIAGRAM):   END;
4060117   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060118   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4060119   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060120   +
4060121   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4060122   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4060123   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4060124   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4060125   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4060126   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4060127   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4060128   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4060129   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4060130   +end;
MPRINT(EM_DIAGRAM):   end;
4060131   +else do;
MPRINT(EM_DIAGRAM):   else do;
4060132   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4060133   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4060134   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4060135   +   end;
MPRINT(EM_DIAGRAM):   end;
4060136   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4060137   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4060138   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4060139   +   end;
MPRINT(EM_DIAGRAM):   end;
4060140   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4060141   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4060142   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4060143   +   end;
MPRINT(EM_DIAGRAM):   end;
4060144   +end;
MPRINT(EM_DIAGRAM):   end;
4060145   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4060146   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
4060147   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 +
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
4060148   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
4060149   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4060150   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4060151   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4060152   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4060153   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4060154   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4060155   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4060156   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4060157   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4060158   +END;
MPRINT(EM_DIAGRAM):   END;
4060159   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4060160   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4060161   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4060162   +END;
MPRINT(EM_DIAGRAM):   END;
4060163   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4060164   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4060165   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4060166   +END;
MPRINT(EM_DIAGRAM):   END;
4060167   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4060168   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4060169   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4060170   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4060171   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4060172   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4060173   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4060174   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060175   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4060176   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060177   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4060178   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4060179   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4060180   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4060181   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4060182   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4060183   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4060184   +END;
MPRINT(EM_DIAGRAM):   END;
4060185   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4060186   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4060187   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4060188   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4060189   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
4060190   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4060191   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
4060192   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4060193   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
4060194   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
4060195   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
4060196   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
4060197   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4060198   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
4060199   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4060200   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
4060201   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
4060202   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
4060203   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4060204   +* Ensmbl36: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 6 of 7;
4060205   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4060206   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4060207   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4060208   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4060209   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
4060210   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4060211   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4060212   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4060213   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4060214   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4060215   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4060216   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4060217   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4060218   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4060219   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4060220   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4060221   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4060222   +LENGTH _WARN_ $4
4060223   +      F_DepVar  $ 12
4060224   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4060225   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4060226   +
4060227   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4060228   +
4060229   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4060230   +
4060231   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4060232   +
4060233   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4060234   +
4060235   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4060236   +
4060237   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4060238   +
4060239   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4060240   +
4060241   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4060242   +
4060243   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4060244   +
4060245   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4060246   +
4060247   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4060248   +
4060249   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4060250   +
4060251   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4060252   +
4060253   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4060254   +
4060255   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4060256   +
4060257   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4060258   +
4060259   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4060260   +
4060261   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4060262   +
4060263   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4060264   +
4060265   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4060266   +
4060267   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4060268   +
4060269   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4060270   +
4060271   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4060272   +
4060273   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4060274   +
4060275   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4060276   +
4060277   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4060278   +
4060279   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4060280   +
4060281   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4060282   +
4060283   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4060284   +
4060285   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4060286   +
4060287   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4060288   +
4060289   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4060290   +
4060291   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4060292   +
4060293   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4060294   +
4060295   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4060296   +
4060297   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4060298   +
4060299   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4060300   +
4060301   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4060302   +
4060303   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4060304   +
4060305   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4060306   +
4060307   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4060308   +
4060309   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4060310   +
4060311   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4060312   +
4060313   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4060314   +
4060315   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4060316   +
4060317   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4060318   +
4060319   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4060320   +
4060321   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4060322   +
4060323   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4060324   +
4060325   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4060326   +
4060327   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4060328   +
4060329   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4060330   +
4060331   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4060332   +
4060333   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4060334   +
4060335   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4060336   +
4060337   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4060338   +
4060339   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4060340   +
4060341   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4060342   +
4060343   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4060344   +
4060345   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4060346   +
4060347   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4060348   +
4060349   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4060350   +
4060351   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4060352   +
4060353   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4060354   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4060355   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4060356   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4060357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4060358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060359   +end;
MPRINT(EM_DIAGRAM):   end;
4060360   +else do;
MPRINT(EM_DIAGRAM):   else do;
4060361   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4060362   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4060363   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4060364   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4060365   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4060366   +   end;
MPRINT(EM_DIAGRAM):   end;
4060367   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4060368   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4060369   +   end;
MPRINT(EM_DIAGRAM):   end;
4060370   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4060371   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4060372   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4060373   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060374   +   end;
MPRINT(EM_DIAGRAM):   end;
4060375   +end;
MPRINT(EM_DIAGRAM):   end;
4060376   +
4060377   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4060378   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4060379   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4060380   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4060381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4060382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060383   +end;
MPRINT(EM_DIAGRAM):   end;
4060384   +else do;
MPRINT(EM_DIAGRAM):   else do;
4060385   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4060386   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4060387   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4060388   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4060389   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4060390   +   end;
MPRINT(EM_DIAGRAM):   end;
4060391   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4060392   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4060393   +   end;
MPRINT(EM_DIAGRAM):   end;
4060394   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4060395   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4060396   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4060397   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060398   +   end;
MPRINT(EM_DIAGRAM):   end;
4060399   +end;
MPRINT(EM_DIAGRAM):   end;
4060400   +
4060401   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4060402   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4060403   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4060404   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4060405   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4060406   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060407   +end;
MPRINT(EM_DIAGRAM):   end;
4060408   +else do;
MPRINT(EM_DIAGRAM):   else do;
4060409   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4060410   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4060411   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4060412   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4060413   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4060414   +   end;
MPRINT(EM_DIAGRAM):   end;
4060415   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4060416   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4060417   +   end;
MPRINT(EM_DIAGRAM):   end;
4060418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4060419   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4060420   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4060421   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060422   +   end;
MPRINT(EM_DIAGRAM):   end;
4060423   +end;
MPRINT(EM_DIAGRAM):   end;
4060424   +
4060425   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4060426   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4060427   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4060428   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4060429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4060430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060431   +end;
MPRINT(EM_DIAGRAM):   end;
4060432   +else do;
MPRINT(EM_DIAGRAM):   else do;
4060433   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4060434   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4060435   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4060436   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4060437   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4060438   +   end;
MPRINT(EM_DIAGRAM):   end;
4060439   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4060440   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4060441   +   end;
MPRINT(EM_DIAGRAM):   end;
4060442   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4060443   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4060444   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4060445   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060446   +   end;
MPRINT(EM_DIAGRAM):   end;
4060447   +end;
MPRINT(EM_DIAGRAM):   end;
4060448   +
4060449   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4060450   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4060451   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4060452   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4060453   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4060454   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060455   +end;
MPRINT(EM_DIAGRAM):   end;
4060456   +else do;
MPRINT(EM_DIAGRAM):   else do;
4060457   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4060458   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4060459   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4060460   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4060461   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4060462   +   end;
MPRINT(EM_DIAGRAM):   end;
4060463   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4060464   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4060465   +   end;
MPRINT(EM_DIAGRAM):   end;
4060466   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4060467   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4060468   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4060469   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060470   +   end;
MPRINT(EM_DIAGRAM):   end;
4060471   +end;
MPRINT(EM_DIAGRAM):   end;
4060472   +
4060473   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4060474   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4060475   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4060476   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4060477   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4060478   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060479   +end;
MPRINT(EM_DIAGRAM):   end;
4060480   +else do;
MPRINT(EM_DIAGRAM):   else do;
4060481   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4060482   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4060483   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4060484   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4060485   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4060486   +   end;
MPRINT(EM_DIAGRAM):   end;
4060487   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4060488   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4060489   +   end;
MPRINT(EM_DIAGRAM):   end;
4060490   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4060491   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4060492   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4060493   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060494   +   end;
MPRINT(EM_DIAGRAM):   end;
4060495   +end;
MPRINT(EM_DIAGRAM):   end;
4060496   +
4060497   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4060498   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4060499   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4060500   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4060501   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4060502   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060503   +end;
MPRINT(EM_DIAGRAM):   end;
4060504   +else do;
MPRINT(EM_DIAGRAM):   else do;
4060505   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4060506   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4060507   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4060508   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4060509   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4060510   +   end;
MPRINT(EM_DIAGRAM):   end;
4060511   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4060512   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4060513   +   end;
MPRINT(EM_DIAGRAM):   end;
4060514   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4060515   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4060516   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4060517   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060518   +   end;
MPRINT(EM_DIAGRAM):   end;
4060519   +end;
MPRINT(EM_DIAGRAM):   end;
4060520   +
4060521   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4060522   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4060523   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4060524   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4060525   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4060526   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4060527   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4060528   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4060529   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4060530   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4060531   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4060532   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4060533   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4060534   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060535   +end;
MPRINT(EM_DIAGRAM):   end;
4060536   +else do;
MPRINT(EM_DIAGRAM):   else do;
4060537   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4060538   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4060539   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4060540   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4060541   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4060542   +   end;
MPRINT(EM_DIAGRAM):   end;
4060543   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4060544   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4060545   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4060546   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4060547   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4060548   +   end;
MPRINT(EM_DIAGRAM):   end;
4060549   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4060550   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4060551   +   end;
MPRINT(EM_DIAGRAM):   end;
4060552   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4060553   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4060554   +   end;
MPRINT(EM_DIAGRAM):   end;
4060555   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4060556   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4060557   +   end;
MPRINT(EM_DIAGRAM):   end;
4060558   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4060559   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4060560   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4060561   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4060562   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4060563   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4060564   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060565   +   end;
MPRINT(EM_DIAGRAM):   end;
4060566   +end;
MPRINT(EM_DIAGRAM):   end;
4060567   +
4060568   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4060569   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4060570   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4060571   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4060572   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4060573   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4060574   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4060575   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4060576   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4060577   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4060578   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4060579   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4060580   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4060581   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4060582   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060583   +end;
MPRINT(EM_DIAGRAM):   end;
4060584   +else do;
MPRINT(EM_DIAGRAM):   else do;
4060585   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4060586   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4060587   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4060588   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4060589   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4060590   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4060591   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4060592   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4060593   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4060594   +         end;
MPRINT(EM_DIAGRAM):   end;
4060595   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4060596   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4060597   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4060598   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4060599   +            end;
MPRINT(EM_DIAGRAM):   end;
4060600   +         end;
MPRINT(EM_DIAGRAM):   end;
4060601   +      end;
MPRINT(EM_DIAGRAM):   end;
4060602   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4060603   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4060604   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4060605   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4060606   +         end;
MPRINT(EM_DIAGRAM):   end;
4060607   +      end;
MPRINT(EM_DIAGRAM):   end;
4060608   +   end;
MPRINT(EM_DIAGRAM):   end;
4060609   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4060610   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4060611   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4060612   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4060613   +      end;
MPRINT(EM_DIAGRAM):   end;
4060614   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4060615   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4060616   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4060617   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4060618   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4060619   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4060620   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4060621   +         end;
MPRINT(EM_DIAGRAM):   end;
4060622   +      end;
MPRINT(EM_DIAGRAM):   end;
4060623   +   end;
MPRINT(EM_DIAGRAM):   end;
4060624   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4060625   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4060626   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4060627   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4060628   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4060629   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4060630   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060631   +   end;
MPRINT(EM_DIAGRAM):   end;
4060632   +end;
MPRINT(EM_DIAGRAM):   end;
4060633   +
4060634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060635   +*** Checking missing input Interval
4060636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4060637   +
4060638   +IF NMISS(
4060639   +   AcceptedCmpTotal ,
4060640   +   Age ,
4060641   +   Frq ,
4060642   +   Income ,
4060643   +   Kidhome ,
4060644   +   Mnt ,
4060645   +   MntFishProducts ,
4060646   +   MntFruits ,
4060647   +   MntGoldProds ,
4060648   +   MntMeatProducts ,
4060649   +   MntSweetProducts ,
4060650   +   MntWines ,
4060651   +   MonthsAsCustomer ,
4060652   +   NumCatalogPurchases ,
4060653   +   NumDealsPurchases ,
4060654   +   NumDistPurchases ,
4060655   +   NumStorePurchases ,
4060656   +   NumWebPurchases ,
4060657   +   NumWebVisitsMonth ,
4060658   +   RFMstat ,
4060659   +   RMntFrq ,
4060660   +   Recency ,
4060661   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4060662   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4060663   +
4060664   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4060665   +END;
MPRINT(EM_DIAGRAM):   END;
4060666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060667   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4060668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060669   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4060670   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4060671   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4060672   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4060673   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4060674   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4060675   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4060676   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4060677   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4060678   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4060679   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4060680   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4060681   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4060682   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4060683   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4060684   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4060685   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4060686   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4060687   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4060688   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4060689   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4060690   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4060691   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4060692   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4060693   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4060694   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4060695   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4060696   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4060697   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4060698   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4060699   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4060700   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4060701   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4060702   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4060703   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4060704   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4060705   +END;
MPRINT(EM_DIAGRAM):   END;
4060706   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4060707   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4060708   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4060709   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4060710   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4060711   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4060712   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4060713   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4060714   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4060715   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4060716   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4060717   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4060718   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4060719   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4060720   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4060721   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4060722   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4060723   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4060724   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4060725   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4060726   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4060727   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4060728   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4060729   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4060730   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4060731   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4060732   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4060733   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4060734   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4060735   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4060736   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4060737   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4060738   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4060739   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4060740   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4060741   +   ELSE S_NumCatalogPurchases
4060742   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4060743   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4060744   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4060745   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4060746   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4060747   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4060748   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4060749   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4060750   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4060751   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4060752   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4060753   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4060754   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4060755   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4060756   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4060757   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4060758   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4060759   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4060760   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4060761   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4060762   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4060763   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4060764   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4060765   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4060766   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4060767   +END;
MPRINT(EM_DIAGRAM):   END;
4060768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060769   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4060770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060772   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4060773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060775   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4060776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060777   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4060778   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
4060779   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
4060780   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
4060781   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
4060782   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
4060783   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
4060784   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
4060785   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
4060786   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
4060787   +          +     0.89422627895323 * S_NumDealsPurchases
4060788   +          +    -0.13304125929765 * S_NumDistPurchases
4060789   +          +    -1.04568442570811 * S_NumStorePurchases
4060790   +          +    -0.28677765126751 * S_NumWebPurchases
4060791   +          +      1.2327638737509 * S_NumWebVisitsMonth
4060792   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
4060793   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
4060794   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
4060795   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
4060796   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
4060797   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
4060798   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
4060799   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
4060800   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
4060801   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
4060802   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
4060803   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
4060804   +          +     0.04224590196535 * S_NumDealsPurchases
4060805   +          +     0.76554742700113 * S_NumDistPurchases
4060806   +          +    -0.49155496870812 * S_NumStorePurchases
4060807   +          +     0.59606812744403 * S_NumWebPurchases
4060808   +          +     1.86809286276405 * S_NumWebVisitsMonth
4060809   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
4060810   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
4060811   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
4060812   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
4060813   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
4060814   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
4060815   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
4060816   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
4060817   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
4060818   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
4060819   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
4060820   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
4060821   +          +    -0.04866536993486 * S_NumDealsPurchases
4060822   +          +    -0.53535979020214 * S_NumDistPurchases
4060823   +          +     2.20634071253676 * S_NumStorePurchases
4060824   +          +      0.6164564989007 * S_NumWebPurchases
4060825   +          +    -0.43396314395263 * S_NumWebVisitsMonth
4060826   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
4060827   +        S_RMntFrq  +     2.37293441098349 * S_Recency
4060828   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
4060829   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
4060830   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
4060831   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
4060832   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
4060833   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
4060834   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
4060835   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
4060836   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
4060837   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
4060838   +          +     1.37461255707863 * S_NumDealsPurchases
4060839   +          +    -0.17684775000818 * S_NumDistPurchases
4060840   +          +    -0.62755623855535 * S_NumStorePurchases
4060841   +          +    -1.46551649022657 * S_NumWebPurchases
4060842   +          +     3.35784247878638 * S_NumWebVisitsMonth
4060843   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
4060844   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
4060845   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
4060846   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
4060847   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
4060848   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
4060849   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
4060850   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
4060851   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
4060852   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
4060853   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
4060854   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
4060855   +          +    -0.76256677907121 * S_NumDealsPurchases
4060856   +          +    -0.31591571751692 * S_NumDistPurchases
4060857   +          +      0.0506832614089 * S_NumStorePurchases
4060858   +          +      1.4636796923764 * S_NumWebPurchases
4060859   +          +     0.37743519705036 * S_NumWebVisitsMonth
4060860   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
4060861   +        S_RMntFrq  +     0.16854775832723 * S_Recency
4060862   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
4060863   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
4060864   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
4060865   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
4060866   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
4060867   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
4060868   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
4060869   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
4060870   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
4060871   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
4060872   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
4060873   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
4060874   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
4060875   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
4060876   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
4060877   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
4060878   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
4060879   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
4060880   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
4060881   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
4060882   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
4060883   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
4060884   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
4060885   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
4060886   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
4060887   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
4060888   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
4060889   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
4060890   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
4060891   +          +     0.68641668264565 * Marital_StatusDivorced
4060892   +          +    -0.81586871439732 * Marital_StatusMarried
4060893   +          +     0.63758920518451 * Marital_StatusSingle
4060894   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
4060895   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
4060896   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
4060897   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
4060898   +          +     0.05137560133238 * Marital_StatusDivorced
4060899   +          +    -2.24401993266209 * Marital_StatusMarried
4060900   +          +     1.57359386216115 * Marital_StatusSingle
4060901   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
4060902   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
4060903   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
4060904   +        EducationGraduation  +     0.61492669859334 * EducationMaster
4060905   +          +     -1.0649987815942 * Marital_StatusDivorced
4060906   +          +     0.76065111692388 * Marital_StatusMarried
4060907   +          +    -0.21694149754801 * Marital_StatusSingle
4060908   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
4060909   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
4060910   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
4060911   +        EducationGraduation  +     0.04208620358211 * EducationMaster
4060912   +          +     2.02155453548328 * Marital_StatusDivorced
4060913   +          +    -2.60190649735306 * Marital_StatusMarried
4060914   +          +     1.09149388354927 * Marital_StatusSingle
4060915   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
4060916   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
4060917   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
4060918   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
4060919   +          +     0.66315970650309 * Marital_StatusDivorced
4060920   +          +    -1.20476729758152 * Marital_StatusMarried
4060921   +          +     0.56175027826397 * Marital_StatusSingle
4060922   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
4060923   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
4060924   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
4060925   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
4060926   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
4060927   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
4060928   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
4060929   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
4060930   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4060931   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4060932   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4060933   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4060934   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4060935   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4060936   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4060937   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4060938   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4060939   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4060940   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4060941   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4060942   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4060943   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4060944   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4060945   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4060946   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4060947   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4060948   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4060949   +END;
MPRINT(EM_DIAGRAM):   END;
4060950   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4060951   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4060952   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4060953   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4060954   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4060955   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4060956   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4060957   +END;
MPRINT(EM_DIAGRAM):   END;
4060958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060959   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4060960   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4060961   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4060962   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
4060963   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
4060964   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
4060965   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
4060966   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
4060967   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
4060968   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
4060969   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
4060970   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
4060971   +          +     1.50005927423985 * S_NumDealsPurchases
4060972   +          +      0.5590536933569 * S_NumDistPurchases
4060973   +          +    -0.61757824339318 * S_NumStorePurchases
4060974   +          +     0.37259686538158 * S_NumWebPurchases
4060975   +          +     2.59725437895564 * S_NumWebVisitsMonth
4060976   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
4060977   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
4060978   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
4060979   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
4060980   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
4060981   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
4060982   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
4060983   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
4060984   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
4060985   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
4060986   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
4060987   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
4060988   +          +    -0.09282222088797 * S_NumDealsPurchases
4060989   +          +     0.10726247938321 * S_NumDistPurchases
4060990   +          +     -1.1235971458527 * S_NumStorePurchases
4060991   +          +    -0.78304387839877 * S_NumWebPurchases
4060992   +          +    -0.44139243179956 * S_NumWebVisitsMonth
4060993   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
4060994   +        S_RMntFrq  +     2.19072220135069 * S_Recency
4060995   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
4060996   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
4060997   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
4060998   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
4060999   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
4061000   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
4061001   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
4061002   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
4061003   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
4061004   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
4061005   +          +     0.35349185459988 * S_NumDealsPurchases
4061006   +          +     0.06853677714859 * S_NumDistPurchases
4061007   +          +    -1.47546012999338 * S_NumStorePurchases
4061008   +          +     0.20926435398916 * S_NumWebPurchases
4061009   +          +    -1.00535683639093 * S_NumWebVisitsMonth
4061010   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
4061011   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
4061012   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
4061013   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
4061014   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
4061015   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
4061016   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
4061017   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
4061018   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
4061019   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
4061020   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
4061021   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
4061022   +          +      0.3873586120272 * S_NumDealsPurchases
4061023   +          +     0.25911651157596 * S_NumDistPurchases
4061024   +          +     1.58922489084287 * S_NumStorePurchases
4061025   +          +     0.49041797743368 * S_NumWebPurchases
4061026   +          +     -1.5425586871929 * S_NumWebVisitsMonth
4061027   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
4061028   +        S_RMntFrq  +     1.03099569333498 * S_Recency
4061029   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
4061030   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
4061031   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
4061032   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
4061033   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
4061034   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
4061035   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
4061036   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
4061037   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
4061038   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
4061039   +          +    -0.60830880287865 * S_NumDealsPurchases
4061040   +          +      0.0745331267194 * S_NumDistPurchases
4061041   +          +    -1.39472448256952 * S_NumStorePurchases
4061042   +          +     1.95372179969087 * S_NumWebPurchases
4061043   +          +    -0.63307356390404 * S_NumWebVisitsMonth
4061044   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
4061045   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
4061046   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
4061047   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
4061048   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
4061049   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
4061050   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
4061051   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
4061052   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
4061053   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
4061054   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
4061055   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
4061056   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
4061057   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
4061058   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
4061059   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
4061060   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
4061061   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
4061062   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
4061063   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
4061064   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
4061065   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
4061066   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
4061067   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
4061068   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
4061069   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
4061070   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
4061071   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
4061072   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
4061073   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
4061074   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
4061075   +          +    -1.33377871643323 * Marital_StatusDivorced
4061076   +          +    -0.87184228840898 * Marital_StatusMarried
4061077   +          +     1.41223186340257 * Marital_StatusSingle
4061078   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
4061079   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
4061080   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
4061081   +        EducationGraduation  +     0.38341272155343 * EducationMaster
4061082   +          +    -0.21479890935233 * Marital_StatusDivorced
4061083   +          +     -0.0025459519579 * Marital_StatusMarried
4061084   +          +     1.33900491702264 * Marital_StatusSingle
4061085   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
4061086   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
4061087   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
4061088   +        EducationGraduation  +     0.60739269725685 * EducationMaster
4061089   +          +    -0.38307267471999 * Marital_StatusDivorced
4061090   +          +     0.97088969451415 * Marital_StatusMarried
4061091   +          +    -0.28578224473381 * Marital_StatusSingle
4061092   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
4061093   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
4061094   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
4061095   +        EducationGraduation  +     0.14160673378252 * EducationMaster
4061096   +          +    -1.42229401093569 * Marital_StatusDivorced
4061097   +          +      0.7234508382397 * Marital_StatusMarried
4061098   +          +    -0.29062202974628 * Marital_StatusSingle
4061099   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
4061100   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
4061101   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
4061102   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
4061103   +          +    -0.99067637207205 * Marital_StatusDivorced
4061104   +          +    -0.50245902142079 * Marital_StatusMarried
4061105   +          +     0.54214494533793 * Marital_StatusSingle
4061106   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
4061107   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
4061108   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
4061109   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
4061110   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
4061111   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
4061112   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
4061113   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
4061114   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4061115   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4061116   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4061117   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4061118   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4061119   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4061120   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4061121   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4061122   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4061123   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4061124   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4061125   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4061126   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4061127   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4061128   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4061129   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4061130   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4061131   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4061132   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4061133   +END;
MPRINT(EM_DIAGRAM):   END;
4061134   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4061135   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4061136   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4061137   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4061138   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4061139   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4061140   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4061141   +END;
MPRINT(EM_DIAGRAM):   END;
4061142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061143   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4061144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061145   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4061146   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
4061147   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
4061148   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
4061149   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
4061150   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
4061151   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
4061152   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
4061153   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
4061154   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
4061155   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
4061156   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
4061157   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
4061158   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
4061159   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
4061160   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
4061161   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
4061162   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
4061163   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
4061164   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
4061165   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
4061166   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
4061167   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
4061168   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
4061169   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
4061170   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
4061171   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
4061172   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
4061173   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
4061174   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
4061175   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
4061176   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
4061177   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
4061178   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
4061179   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
4061180   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
4061181   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
4061182   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
4061183   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
4061184   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
4061185   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
4061186   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
4061187   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
4061188   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
4061189   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
4061190   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
4061191   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
4061192   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
4061193   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
4061194   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4061195   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4061196   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4061197   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4061198   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4061199   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
4061200   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
4061201   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
4061202   +END;
MPRINT(EM_DIAGRAM):   END;
4061203   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4061204   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4061205   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4061206   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4061207   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4061208   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4061209   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4061210   +END;
MPRINT(EM_DIAGRAM):   END;
4061211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061212   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4061213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061214   +
4061215   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4061216   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4061217   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4061218   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4061219   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4061220   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4061221   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4061222   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4061223   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4061224   +end;
MPRINT(EM_DIAGRAM):   end;
4061225   +else do;
MPRINT(EM_DIAGRAM):   else do;
4061226   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4061227   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4061228   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4061229   +   end;
MPRINT(EM_DIAGRAM):   end;
4061230   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4061231   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4061232   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4061233   +   end;
MPRINT(EM_DIAGRAM):   end;
4061234   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4061235   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4061236   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4061237   +   end;
MPRINT(EM_DIAGRAM):   end;
4061238   +end;
MPRINT(EM_DIAGRAM):   end;
4061239   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4061240   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
4061241   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
4061242   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
4061243   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
4061244   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4061245   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4061246   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4061247   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4061248   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4061249   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4061250   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4061251   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4061252   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4061253   +END;
MPRINT(EM_DIAGRAM):   END;
4061254   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4061255   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4061256   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4061257   +END;
MPRINT(EM_DIAGRAM):   END;
4061258   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4061259   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4061260   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4061261   +END;
MPRINT(EM_DIAGRAM):   END;
4061262   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4061263   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4061264   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4061265   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4061266   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4061267   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4061268   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4061269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061270   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4061271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061272   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4061273   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4061274   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4061275   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4061276   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4061277   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4061278   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4061279   +END;
MPRINT(EM_DIAGRAM):   END;
4061280   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4061281   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4061282   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4061283   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4061284   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
4061285   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4061286   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
4061287   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4061288   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
4061289   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
4061290   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
4061291   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
4061292   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4061293   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
4061294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4061295   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
4061296   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
4061297   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
4061298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4061299   +* Ensmbl36: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 7 of 7;
4061300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4061301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4061302   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4061303   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4061304   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
4061305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4061306   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4061307   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4061308   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4061309   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4061310   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4061311   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4061312   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4061313   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4061314   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4061315   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4061316   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4061317   +LENGTH _WARN_ $4
4061318   +      F_DepVar  $ 12
4061319   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4061320   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4061321   +
4061322   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4061323   +
4061324   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4061325   +
4061326   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4061327   +
4061328   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4061329   +
4061330   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4061331   +
4061332   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4061333   +
4061334   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4061335   +
4061336   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4061337   +
4061338   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4061339   +
4061340   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4061341   +
4061342   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4061343   +
4061344   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4061345   +
4061346   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4061347   +
4061348   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4061349   +
4061350   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4061351   +
4061352   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4061353   +
4061354   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4061355   +
4061356   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4061357   +
4061358   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4061359   +
4061360   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4061361   +
4061362   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4061363   +
4061364   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4061365   +
4061366   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4061367   +
4061368   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4061369   +
4061370   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4061371   +
4061372   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4061373   +
4061374   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4061375   +
4061376   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4061377   +
4061378   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4061379   +
4061380   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4061381   +
4061382   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4061383   +
4061384   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4061385   +
4061386   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4061387   +
4061388   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4061389   +
4061390   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4061391   +
4061392   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4061393   +
4061394   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4061395   +
4061396   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4061397   +
4061398   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4061399   +
4061400   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4061401   +
4061402   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4061403   +
4061404   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4061405   +
4061406   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4061407   +
4061408   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
4061409   +
4061410   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4061411   +
4061412   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4061413   +
4061414   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4061415   +
4061416   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4061417   +
4061418   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4061419   +
4061420   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4061421   +
4061422   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
4061423   +
4061424   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4061425   +
4061426   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4061427   +
4061428   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4061429   +
4061430   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4061431   +
4061432   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4061433   +
4061434   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4061435   +
4061436   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
4061437   +
4061438   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4061439   +
4061440   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4061441   +
4061442   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4061443   +
4061444   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4061445   +
4061446   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4061447   +
4061448   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4061449   +
4061450   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4061451   +
4061452   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4061453   +
4061454   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4061455   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4061456   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4061457   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4061458   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4061459   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061460   +end;
MPRINT(EM_DIAGRAM):   end;
4061461   +else do;
MPRINT(EM_DIAGRAM):   else do;
4061462   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4061463   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4061464   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4061465   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4061466   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4061467   +   end;
MPRINT(EM_DIAGRAM):   end;
4061468   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4061469   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4061470   +   end;
MPRINT(EM_DIAGRAM):   end;
4061471   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4061472   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4061473   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4061474   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061475   +   end;
MPRINT(EM_DIAGRAM):   end;
4061476   +end;
MPRINT(EM_DIAGRAM):   end;
4061477   +
4061478   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4061479   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4061480   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4061481   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4061482   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4061483   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061484   +end;
MPRINT(EM_DIAGRAM):   end;
4061485   +else do;
MPRINT(EM_DIAGRAM):   else do;
4061486   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4061487   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4061488   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4061489   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4061490   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4061491   +   end;
MPRINT(EM_DIAGRAM):   end;
4061492   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4061493   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4061494   +   end;
MPRINT(EM_DIAGRAM):   end;
4061495   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4061496   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4061497   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4061498   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061499   +   end;
MPRINT(EM_DIAGRAM):   end;
4061500   +end;
MPRINT(EM_DIAGRAM):   end;
4061501   +
4061502   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4061503   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4061504   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4061505   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4061506   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4061507   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061508   +end;
MPRINT(EM_DIAGRAM):   end;
4061509   +else do;
MPRINT(EM_DIAGRAM):   else do;
4061510   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4061511   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4061512   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4061513   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4061514   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4061515   +   end;
MPRINT(EM_DIAGRAM):   end;
4061516   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4061517   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4061518   +   end;
MPRINT(EM_DIAGRAM):   end;
4061519   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4061520   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4061521   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4061522   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061523   +   end;
MPRINT(EM_DIAGRAM):   end;
4061524   +end;
MPRINT(EM_DIAGRAM):   end;
4061525   +
4061526   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4061527   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4061528   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4061529   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4061530   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4061531   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061532   +end;
MPRINT(EM_DIAGRAM):   end;
4061533   +else do;
MPRINT(EM_DIAGRAM):   else do;
4061534   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4061535   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4061536   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4061537   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4061538   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4061539   +   end;
MPRINT(EM_DIAGRAM):   end;
4061540   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4061541   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4061542   +   end;
MPRINT(EM_DIAGRAM):   end;
4061543   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4061544   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4061545   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4061546   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061547   +   end;
MPRINT(EM_DIAGRAM):   end;
4061548   +end;
MPRINT(EM_DIAGRAM):   end;
4061549   +
4061550   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4061551   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4061552   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4061553   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4061554   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4061555   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061556   +end;
MPRINT(EM_DIAGRAM):   end;
4061557   +else do;
MPRINT(EM_DIAGRAM):   else do;
4061558   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4061559   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4061560   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4061561   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4061562   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4061563   +   end;
MPRINT(EM_DIAGRAM):   end;
4061564   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4061565   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4061566   +   end;
MPRINT(EM_DIAGRAM):   end;
4061567   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4061568   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4061569   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4061570   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061571   +   end;
MPRINT(EM_DIAGRAM):   end;
4061572   +end;
MPRINT(EM_DIAGRAM):   end;
4061573   +
4061574   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4061575   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4061576   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4061577   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4061578   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4061579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061580   +end;
MPRINT(EM_DIAGRAM):   end;
4061581   +else do;
MPRINT(EM_DIAGRAM):   else do;
4061582   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4061583   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4061584   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4061585   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4061586   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4061587   +   end;
MPRINT(EM_DIAGRAM):   end;
4061588   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4061589   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4061590   +   end;
MPRINT(EM_DIAGRAM):   end;
4061591   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4061592   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4061593   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4061594   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061595   +   end;
MPRINT(EM_DIAGRAM):   end;
4061596   +end;
MPRINT(EM_DIAGRAM):   end;
4061597   +
4061598   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4061599   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4061600   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4061601   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4061602   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4061603   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061604   +end;
MPRINT(EM_DIAGRAM):   end;
4061605   +else do;
MPRINT(EM_DIAGRAM):   else do;
4061606   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4061607   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4061608   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4061609   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4061610   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4061611   +   end;
MPRINT(EM_DIAGRAM):   end;
4061612   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4061613   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4061614   +   end;
MPRINT(EM_DIAGRAM):   end;
4061615   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4061616   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4061617   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4061618   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061619   +   end;
MPRINT(EM_DIAGRAM):   end;
4061620   +end;
MPRINT(EM_DIAGRAM):   end;
4061621   +
4061622   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4061623   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4061624   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4061625   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4061626   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4061627   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4061628   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4061629   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4061630   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4061631   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4061632   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4061633   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4061634   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4061635   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061636   +end;
MPRINT(EM_DIAGRAM):   end;
4061637   +else do;
MPRINT(EM_DIAGRAM):   else do;
4061638   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4061639   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4061640   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4061641   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4061642   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4061643   +   end;
MPRINT(EM_DIAGRAM):   end;
4061644   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4061645   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4061646   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4061647   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4061648   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4061649   +   end;
MPRINT(EM_DIAGRAM):   end;
4061650   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4061651   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4061652   +   end;
MPRINT(EM_DIAGRAM):   end;
4061653   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4061654   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4061655   +   end;
MPRINT(EM_DIAGRAM):   end;
4061656   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4061657   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4061658   +   end;
MPRINT(EM_DIAGRAM):   end;
4061659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4061660   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4061661   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4061662   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4061663   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4061664   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4061665   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061666   +   end;
MPRINT(EM_DIAGRAM):   end;
4061667   +end;
MPRINT(EM_DIAGRAM):   end;
4061668   +
4061669   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4061670   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4061671   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4061672   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4061673   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4061674   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4061675   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4061676   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4061677   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4061678   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4061679   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4061680   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4061681   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4061682   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4061683   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061684   +end;
MPRINT(EM_DIAGRAM):   end;
4061685   +else do;
MPRINT(EM_DIAGRAM):   else do;
4061686   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4061687   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4061688   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4061689   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4061690   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4061691   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4061692   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4061693   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4061694   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4061695   +         end;
MPRINT(EM_DIAGRAM):   end;
4061696   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4061697   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4061698   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4061699   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4061700   +            end;
MPRINT(EM_DIAGRAM):   end;
4061701   +         end;
MPRINT(EM_DIAGRAM):   end;
4061702   +      end;
MPRINT(EM_DIAGRAM):   end;
4061703   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4061704   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4061705   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4061706   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4061707   +         end;
MPRINT(EM_DIAGRAM):   end;
4061708   +      end;
MPRINT(EM_DIAGRAM):   end;
4061709   +   end;
MPRINT(EM_DIAGRAM):   end;
4061710   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4061711   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4061712   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4061713   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4061714   +      end;
MPRINT(EM_DIAGRAM):   end;
4061715   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4061716   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4061717   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4061718   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4061719   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4061720   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4061721   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4061722   +         end;
MPRINT(EM_DIAGRAM):   end;
4061723   +      end;
MPRINT(EM_DIAGRAM):   end;
4061724   +   end;
MPRINT(EM_DIAGRAM):   end;
4061725   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4061726   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4061727   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4061728   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4061729   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4061730   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4061731   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061732   +   end;
MPRINT(EM_DIAGRAM):   end;
4061733   +end;
MPRINT(EM_DIAGRAM):   end;
4061734   +
4061735   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061736   +*** Checking missing input Interval
4061737   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4061738   +
4061739   +IF NMISS(
4061740   +   AcceptedCmpTotal ,
4061741   +   Age ,
4061742   +   Frq ,
4061743   +   Income ,
4061744   +   Kidhome ,
4061745   +   Mnt ,
4061746   +   MntFishProducts ,
4061747   +   MntFruits ,
4061748   +   MntGoldProds ,
4061749   +   MntMeatProducts ,
4061750   +   MntSweetProducts ,
4061751   +   MntWines ,
4061752   +   MonthsAsCustomer ,
4061753   +   NumCatalogPurchases ,
4061754   +   NumDealsPurchases ,
4061755   +   NumDistPurchases ,
4061756   +   NumStorePurchases ,
4061757   +   NumWebPurchases ,
4061758   +   NumWebVisitsMonth ,
4061759   +   RFMstat ,
4061760   +   RMntFrq ,
4061761   +   Recency ,
4061762   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4061763   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4061764   +
4061765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4061766   +END;
MPRINT(EM_DIAGRAM):   END;
4061767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061768   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4061769   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061770   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4061771   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4061772   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4061773   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4061774   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4061775   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4061776   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4061777   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4061778   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4061779   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4061780   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4061781   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4061782   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4061783   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4061784   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4061785   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4061786   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4061787   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4061788   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4061789   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4061790   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4061791   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4061792   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4061793   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4061794   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4061795   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4061796   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4061797   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4061798   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4061799   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4061800   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4061801   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4061802   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4061803   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4061804   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4061805   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4061806   +END;
MPRINT(EM_DIAGRAM):   END;
4061807   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4061808   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4061809   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4061810   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4061811   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4061812   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4061813   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4061814   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4061815   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4061816   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4061817   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4061818   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4061819   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4061820   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4061821   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4061822   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4061823   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4061824   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4061825   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4061826   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4061827   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4061828   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4061829   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4061830   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4061831   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4061832   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4061833   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4061834   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4061835   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4061836   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4061837   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4061838   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4061839   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4061840   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4061841   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4061842   +   ELSE S_NumCatalogPurchases
4061843   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4061844   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4061845   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4061846   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4061847   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4061848   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4061849   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4061850   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4061851   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4061852   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4061853   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4061854   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4061855   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4061856   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4061857   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4061858   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4061859   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4061860   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4061861   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4061862   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4061863   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4061864   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4061865   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4061866   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4061867   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4061868   +END;
MPRINT(EM_DIAGRAM):   END;
4061869   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061870   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4061871   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061873   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4061874   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061876   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4061877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4061878   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4061879   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
4061880   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
4061881   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
4061882   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
4061883   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
4061884   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
4061885   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
4061886   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
4061887   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
4061888   +          +     1.17276395296242 * S_NumDealsPurchases
4061889   +          +     0.26632768295477 * S_NumDistPurchases
4061890   +          +    -1.26575615903579 * S_NumStorePurchases
4061891   +          +    -0.95316107557927 * S_NumWebPurchases
4061892   +          +     1.01828574356487 * S_NumWebVisitsMonth
4061893   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
4061894   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
4061895   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 *
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 *
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts +
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 *
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 *
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 *
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 *
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq +
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
4061896   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
4061897   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
4061898   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
4061899   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
4061900   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
4061901   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
4061902   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
4061903   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
4061904   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
4061905   +          +     1.14485571201233 * S_NumDealsPurchases
4061906   +          +     0.21414266588987 * S_NumDistPurchases
4061907   +          +    -0.10530090074297 * S_NumStorePurchases
4061908   +          +    -0.41712321238458 * S_NumWebPurchases
4061909   +          +    -0.99760766791108 * S_NumWebVisitsMonth
4061910   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
4061911   +        S_RMntFrq  +     1.10040128548883 * S_Recency
4061912   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 *
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 *
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts +
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 *
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 *
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 *
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 *
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq +
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
4061913   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
4061914   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
4061915   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
4061916   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
4061917   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
4061918   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
4061919   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
4061920   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
4061921   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
4061922   +          +      0.7196418967437 * S_NumDealsPurchases
4061923   +          +     0.69035286374177 * S_NumDistPurchases
4061924   +          +     0.38027656631135 * S_NumStorePurchases
4061925   +          +    -0.18878358997924 * S_NumWebPurchases
4061926   +          +     1.61962062004798 * S_NumWebVisitsMonth
4061927   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
4061928   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
4061929   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 *
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 *
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts +
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 *
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 *
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 *
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 *
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq +
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
4061930   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
4061931   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
4061932   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
4061933   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
4061934   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
4061935   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
4061936   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
4061937   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
4061938   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
4061939   +          +    -0.00642902007204 * S_NumDealsPurchases
4061940   +          +     0.29785069480367 * S_NumDistPurchases
4061941   +          +    -0.42243322063147 * S_NumStorePurchases
4061942   +          +     0.54880896338383 * S_NumWebPurchases
4061943   +          +    -0.12525846016886 * S_NumWebVisitsMonth
4061944   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
4061945   +        S_RMntFrq  +     0.10252211581449 * S_Recency
4061946   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 *
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 *
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts +
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 *
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines +
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases +
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases +
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases +
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 *
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
4061947   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
4061948   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
4061949   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
4061950   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
4061951   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
4061952   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
4061953   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
4061954   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
4061955   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
4061956   +          +    -0.48404738328225 * S_NumDealsPurchases
4061957   +          +    -0.02464180457879 * S_NumDistPurchases
4061958   +          +     1.17201831082067 * S_NumStorePurchases
4061959   +          +     0.57453655167516 * S_NumWebPurchases
4061960   +          +    -1.94417019790248 * S_NumWebVisitsMonth
4061961   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
4061962   +        S_RMntFrq  +      1.6169916658132 * S_Recency
4061963   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 *
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 *
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts +
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 *
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 *
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 *
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 *
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq +
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
4061964   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
4061965   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
4061966   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
4061967   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
4061968   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
4061969   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
4061970   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
4061971   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
4061972   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
4061973   +          +    -1.49850531967483 * S_NumDealsPurchases
4061974   +          +    -0.82105466264223 * S_NumDistPurchases
4061975   +          +     0.29984603642824 * S_NumStorePurchases
4061976   +          +     0.06557123721611 * S_NumWebPurchases
4061977   +          +     1.04754749365002 * S_NumWebVisitsMonth
4061978   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
4061979   +        S_RMntFrq  +     0.12396789666359 * S_Recency
4061980   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 *
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 *
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts +
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 *
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 *
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 *
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 *
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq +
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
4061981   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
4061982   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
4061983   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
4061984   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
4061985   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 *
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 +
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 *
HigherEducationBinary0 ;
4061986   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
4061987   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
4061988   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
4061989   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
4061990   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 *
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 +
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 *
HigherEducationBinary0 ;
4061991   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
4061992   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
4061993   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
4061994   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
4061995   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 +
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 *
HigherEducationBinary0 ;
4061996   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
4061997   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
4061998   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
4061999   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
4062000   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 *
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 +
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 *
HigherEducationBinary0 ;
4062001   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
4062002   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
4062003   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
4062004   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
4062005   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 *
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 +
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 *
HigherEducationBinary0 ;
4062006   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
4062007   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
4062008   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
4062009   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
4062010   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 +
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 *
HigherEducationBinary0 ;
4062011   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
4062012   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
4062013   +        EducationGraduation  +     0.07595631354847 * EducationMaster
4062014   +          +     0.24583509957712 * Marital_StatusDivorced
4062015   +          +    -0.22681931588361 * Marital_StatusMarried
4062016   +          +    -0.12924106229536 * Marital_StatusSingle
4062017   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried +
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
4062018   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
4062019   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
4062020   +        EducationGraduation  +     0.23015089246655 * EducationMaster
4062021   +          +    -0.12585334311068 * Marital_StatusDivorced
4062022   +          +    -0.20835502467207 * Marital_StatusMarried
4062023   +          +    -0.13839534449368 * Marital_StatusSingle
4062024   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle +
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 *
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 *
Marital_StatusTogether ;
4062025   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
4062026   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
4062027   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
4062028   +          +     0.35106363238113 * Marital_StatusDivorced
4062029   +          +     -1.3414808583918 * Marital_StatusMarried
4062030   +          +     1.40835320798486 * Marital_StatusSingle
4062031   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle +
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation +
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced +
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle +
-1.26805917396788 * Marital_StatusTogether ;
4062032   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
4062033   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
4062034   +        EducationGraduation  +      0.1746658332011 * EducationMaster
4062035   +          +     0.48174546958393 * Marital_StatusDivorced
4062036   +          +    -0.41416978858191 * Marital_StatusMarried
4062037   +          +    -0.23376801546265 * Marital_StatusSingle
4062038   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle +
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 *
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 *
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 *
Marital_StatusTogether ;
4062039   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
4062040   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
4062041   +        EducationGraduation  +     0.68875064631577 * EducationMaster
4062042   +          +    -0.67557643774246 * Marital_StatusDivorced
4062043   +          +     1.63844045917367 * Marital_StatusMarried
4062044   +          +    -0.70320960247699 * Marital_StatusSingle
4062045   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle +
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 *
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 *
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 *
Marital_StatusTogether ;
4062046   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
4062047   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
4062048   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
4062049   +          +    -0.11371453086883 * Marital_StatusDivorced
4062050   +          +    -0.34226997176291 * Marital_StatusMarried
4062051   +          +    -1.01568676685754 * Marital_StatusSingle
4062052   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle +
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation +
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced +
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle +
-0.07673228755579 * Marital_StatusTogether ;
4062053   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
4062054   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
4062055   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
4062056   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
4062057   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
4062058   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
4062059   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
4062060   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
4062061   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
4062062   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4062063   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4062064   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4062065   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4062066   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4062067   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4062068   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4062069   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4062070   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4062071   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4062072   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4062073   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4062074   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4062075   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
4062076   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
4062077   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4062078   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4062079   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4062080   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4062081   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4062082   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4062083   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
4062084   +END;
MPRINT(EM_DIAGRAM):   END;
4062085   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4062086   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4062087   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4062088   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4062089   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4062090   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4062091   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4062092   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
4062093   +END;
MPRINT(EM_DIAGRAM):   END;
4062094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4062095   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4062096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4062097   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4062098   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
4062099   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
4062100   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
4062101   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
4062102   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
4062103   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
4062104   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
4062105   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
4062106   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
4062107   +          +    -0.87259051567474 * S_NumDealsPurchases
4062108   +          +    -0.36454149529139 * S_NumDistPurchases
4062109   +          +     0.12447759925061 * S_NumStorePurchases
4062110   +          +    -1.08133487947367 * S_NumWebPurchases
4062111   +          +    -0.49882157745454 * S_NumWebVisitsMonth
4062112   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
4062113   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
4062114   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 *
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 *
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts +
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 *
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 *
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 *
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 *
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq +
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
4062115   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
4062116   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
4062117   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
4062118   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
4062119   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
4062120   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
4062121   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
4062122   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
4062123   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
4062124   +          +     2.23121497416403 * S_NumDealsPurchases
4062125   +          +    -0.48674842191071 * S_NumDistPurchases
4062126   +          +     1.77510728607544 * S_NumStorePurchases
4062127   +          +     0.14647433155436 * S_NumWebPurchases
4062128   +          +    -0.95892686924419 * S_NumWebVisitsMonth
4062129   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
4062130   +        S_RMntFrq  +     2.46497777428475 * S_Recency
4062131   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 *
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 *
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts +
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 *
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 *
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 *
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 *
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq +
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
4062132   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
4062133   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
4062134   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
4062135   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
4062136   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
4062137   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
4062138   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
4062139   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
4062140   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
4062141   +          +     0.14338855349611 * S_NumDealsPurchases
4062142   +          +    -2.21071010829235 * S_NumDistPurchases
4062143   +          +    -0.21795889348002 * S_NumStorePurchases
4062144   +          +     1.98825087883535 * S_NumWebPurchases
4062145   +          +     1.02482442531149 * S_NumWebVisitsMonth
4062146   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
4062147   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
4062148   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 *
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 *
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts +
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 *
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 *
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 *
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 *
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq +
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
4062149   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
4062150   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
4062151   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
4062152   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
4062153   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
4062154   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
4062155   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
4062156   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
4062157   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
4062158   +          +     0.30041205661012 * S_NumDealsPurchases
4062159   +          +    -0.63499849986918 * S_NumDistPurchases
4062160   +          +    -0.34155713433714 * S_NumStorePurchases
4062161   +          +    -1.14183354933936 * S_NumWebPurchases
4062162   +          +    -0.42681980262973 * S_NumWebVisitsMonth
4062163   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
4062164   +        S_RMntFrq  +     1.25852246467612 * S_Recency
4062165   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 *
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 *
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts +
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 *
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 *
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 *
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 *
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq +
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
4062166   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
4062167   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
4062168   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
4062169   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
4062170   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
4062171   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
4062172   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
4062173   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
4062174   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
4062175   +          +    -0.21237915559831 * S_NumDealsPurchases
4062176   +          +     0.48256923764182 * S_NumDistPurchases
4062177   +          +    -0.45553093140641 * S_NumStorePurchases
4062178   +          +      0.5593655963659 * S_NumWebPurchases
4062179   +          +     0.27943768691188 * S_NumWebVisitsMonth
4062180   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
4062181   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
4062182   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 *
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome +
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 *
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts +
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 *
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 *
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 *
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 *
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq +
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
4062183   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
4062184   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
4062185   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
4062186   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
4062187   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
4062188   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
4062189   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
4062190   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
4062191   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
4062192   +          +     2.38967021388062 * S_NumDealsPurchases
4062193   +          +    -0.97722398866481 * S_NumDistPurchases
4062194   +          +     1.57612333191312 * S_NumStorePurchases
4062195   +          +    -0.75968679115983 * S_NumWebPurchases
4062196   +          +    -0.64207187757251 * S_NumWebVisitsMonth
4062197   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
4062198   +        S_RMntFrq  +     1.71313869798331 * S_Recency
4062199   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 *
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome +
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 *
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts +
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 *
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 *
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 *
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 *
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq +
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
4062200   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
4062201   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
4062202   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
4062203   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
4062204   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 +
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 *
HigherEducationBinary0 ;
4062205   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
4062206   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
4062207   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
4062208   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
4062209   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 *
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 +
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 *
HigherEducationBinary0 ;
4062210   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
4062211   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
4062212   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
4062213   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
4062214   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 *
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 +
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 *
HigherEducationBinary0 ;
4062215   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
4062216   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
4062217   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
4062218   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
4062219   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 *
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 +
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 *
HigherEducationBinary0 ;
4062220   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
4062221   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
4062222   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
4062223   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
4062224   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 *
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 +
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 *
HigherEducationBinary0 ;
4062225   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
4062226   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
4062227   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
4062228   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
4062229   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 *
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 +
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 *
HigherEducationBinary0 ;
4062230   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
4062231   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
4062232   +        EducationGraduation  +      0.1073450284316 * EducationMaster
4062233   +          +     0.96470902298142 * Marital_StatusDivorced
4062234   +          +     0.94805959268314 * Marital_StatusMarried
4062235   +          +     -0.6523948769616 * Marital_StatusSingle
4062236   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle +
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 *
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 *
Marital_StatusTogether ;
4062237   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
4062238   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
4062239   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
4062240   +          +      0.3918249505531 * Marital_StatusDivorced
4062241   +          +    -0.00968091979586 * Marital_StatusMarried
4062242   +          +     0.84615379885071 * Marital_StatusSingle
4062243   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle +
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation +
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced +
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle +
0.34817324570682 * Marital_StatusTogether ;
4062244   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
4062245   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
4062246   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
4062247   +          +     1.14335160313191 * Marital_StatusDivorced
4062248   +          +     0.50580517192175 * Marital_StatusMarried
4062249   +          +     0.17264295020921 * Marital_StatusSingle
4062250   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle +
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 *
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 *
Marital_StatusTogether ;
4062251   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
4062252   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
4062253   +        EducationGraduation  +     1.95818378342783 * EducationMaster
4062254   +          +    -0.11238504444225 * Marital_StatusDivorced
4062255   +          +    -0.81348274043749 * Marital_StatusMarried
4062256   +          +     0.46075415610001 * Marital_StatusSingle
4062257   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle +
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 *
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 *
Marital_StatusTogether ;
4062258   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
4062259   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
4062260   +        EducationGraduation  +     0.08396135672504 * EducationMaster
4062261   +          +    -0.46342068701431 * Marital_StatusDivorced
4062262   +          +    -0.41667845270204 * Marital_StatusMarried
4062263   +          +    -0.47166707496281 * Marital_StatusSingle
4062264   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle +
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 *
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 *
Marital_StatusTogether ;
4062265   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
4062266   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
4062267   +        EducationGraduation  +     0.36656103863186 * EducationMaster
4062268   +          +    -0.45376613787812 * Marital_StatusDivorced
4062269   +          +     0.01337046049801 * Marital_StatusMarried
4062270   +          +    -0.92811489484121 * Marital_StatusSingle
4062271   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle +
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 *
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 *
Marital_StatusTogether ;
4062272   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
4062273   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
4062274   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
4062275   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
4062276   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
4062277   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
4062278   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
4062279   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
4062280   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
4062281   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4062282   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4062283   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4062284   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4062285   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4062286   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4062287   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4062288   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4062289   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4062290   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4062291   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4062292   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4062293   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4062294   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
4062295   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
4062296   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4062297   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4062298   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4062299   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4062300   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4062301   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4062302   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
4062303   +END;
MPRINT(EM_DIAGRAM):   END;
4062304   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4062305   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4062306   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4062307   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4062308   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4062309   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4062310   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4062311   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
4062312   +END;
MPRINT(EM_DIAGRAM):   END;
4062313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4062314   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4062315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4062316   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4062317   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
4062318   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
4062319   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
4062320   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 +
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 +
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
4062321   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
4062322   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
4062323   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
4062324   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 +
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 +
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
4062325   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
4062326   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
4062327   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
4062328   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 +
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 +
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
4062329   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
4062330   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
4062331   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
4062332   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 +
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 +
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
4062333   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
4062334   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
4062335   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
4062336   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 +
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 +
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
4062337   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
4062338   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
4062339   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
4062340   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 +
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 +
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
4062341   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
4062342   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
4062343   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
4062344   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 +
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
4062345   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
4062346   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
4062347   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
4062348   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 +
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
4062349   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
4062350   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
4062351   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
4062352   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 +
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
4062353   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
4062354   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
4062355   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
4062356   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 +
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
4062357   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
4062358   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
4062359   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
4062360   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 +
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
4062361   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
4062362   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
4062363   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
4062364   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 +
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
4062365   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
4062366   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
4062367   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
4062368   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
4062369   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
4062370   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
4062371   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
4062372   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
4062373   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
4062374   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4062375   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4062376   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4062377   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4062378   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4062379   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4062380   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4062381   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4062382   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4062383   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4062384   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4062385   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
4062386   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
4062387   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
4062388   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
4062389   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4062390   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4062391   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4062392   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4062393   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4062394   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
4062395   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
4062396   +END;
MPRINT(EM_DIAGRAM):   END;
4062397   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4062398   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4062399   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4062400   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4062401   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4062402   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4062403   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4062404   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
4062405   +END;
MPRINT(EM_DIAGRAM):   END;
4062406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4062407   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4062408   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4062409   +
4062410   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4062411   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4062412   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4062413   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4062414   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4062415   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4062416   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4062417   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4062418   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4062419   +end;
MPRINT(EM_DIAGRAM):   end;
4062420   +else do;
MPRINT(EM_DIAGRAM):   else do;
4062421   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4062422   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4062423   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4062424   +   end;
MPRINT(EM_DIAGRAM):   end;
4062425   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4062426   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4062427   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4062428   +   end;
MPRINT(EM_DIAGRAM):   end;
4062429   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4062430   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4062431   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4062432   +   end;
MPRINT(EM_DIAGRAM):   end;
4062433   +end;
MPRINT(EM_DIAGRAM):   end;
4062434   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4062435   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
4062436   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
4062437   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
4062438   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 +
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 +
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
4062439   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
4062440   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4062441   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4062442   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4062443   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4062444   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4062445   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4062446   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4062447   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4062448   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4062449   +END;
MPRINT(EM_DIAGRAM):   END;
4062450   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4062451   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4062452   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4062453   +END;
MPRINT(EM_DIAGRAM):   END;
4062454   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4062455   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4062456   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4062457   +END;
MPRINT(EM_DIAGRAM):   END;
4062458   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4062459   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4062460   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4062461   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4062462   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4062463   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4062464   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4062465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4062466   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4062467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4062468   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4062469   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4062470   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4062471   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4062472   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4062473   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4062474   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4062475   +END;
MPRINT(EM_DIAGRAM):   END;
4062476   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4062477   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4062478   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4062479   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4062480   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
4062481   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062482   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
4062483   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062484   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
4062485   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
4062486   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
4062487   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
4062488   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062489   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
4062490   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062491   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
4062492   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
4062493   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
4062494   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062495   +* Ensmbl36: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Average Posteriors of 7 models;
4062496   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062497   +P_DepVar1 = (
4062498   +AutoNeural6_P_DepVar1 +
4062499   +AutoNeural7_P_DepVar1 +
4062500   +AutoNeural8_P_DepVar1 +
4062501   +AutoNeural10_P_DepVar1 +
4062502   +AutoNeural9_P_DepVar1 +
4062503   +AutoNeural11_P_DepVar1 +
4062504   +AutoNeural12_P_DepVar1
4062505   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural6_P_DepVar1 + AutoNeural7_P_DepVar1 +
AutoNeural8_P_DepVar1 + AutoNeural10_P_DepVar1 + AutoNeural9_P_DepVar1 +
AutoNeural11_P_DepVar1 + AutoNeural12_P_DepVar1 )/7;
4062506   +P_DepVar0 = (
4062507   +AutoNeural6_P_DepVar0 +
4062508   +AutoNeural7_P_DepVar0 +
4062509   +AutoNeural8_P_DepVar0 +
4062510   +AutoNeural10_P_DepVar0 +
4062511   +AutoNeural9_P_DepVar0 +
4062512   +AutoNeural11_P_DepVar0 +
4062513   +AutoNeural12_P_DepVar0
4062514   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural6_P_DepVar0 + AutoNeural7_P_DepVar0 +
AutoNeural8_P_DepVar0 + AutoNeural10_P_DepVar0 + AutoNeural9_P_DepVar0 +
AutoNeural11_P_DepVar0 + AutoNeural12_P_DepVar0 )/7;
4062515   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062516   +* Ensmbl36: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Classification Vars;
4062517   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062518   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
4062519   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
4062520   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
4062521   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
4062522   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
4062523   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
4062524   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
4062525   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
4062526   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
4062527   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
4062528   +end;
MPRINT(EM_DIAGRAM):   end;
4062529   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
4062530   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
4062531   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
4062532   +end;
MPRINT(EM_DIAGRAM):   end;
4062533   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4062534   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062535   +* Ensmbl36: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Producing Unformatted variable;
4062536   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062537   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
4062538   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
4062539   +else
4062540   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
4062541   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062542   +* Ensmbl36: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing _WARN_ Variable;
4062543   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062544   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
4062545   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
4062546   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
4062547   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4062547  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4062548   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4062548  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4062549   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4062549  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4062550   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4062550  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4062551   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4062551  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4062552   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4062552  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4062553   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4062553  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4062554   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4062554  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4062555   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4062555  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4062556   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4062556  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4062557   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4062557  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4062558   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4062558  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4062559   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4062559  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4062560   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4062560  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4062561   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4062561  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4062562   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4062562  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4062563   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4062563  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4062564   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4062564  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4062565   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4062565  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4062566   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4062566  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4062567   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4062567  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4062568   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4062568  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4062569   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4062569  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4062570   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4062570  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4062571   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4062571  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4062572   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4062572  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4062573   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4062573  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4062574   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4062574  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4062575   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062576   +* Ensmbl36: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Residual Vars;
4062577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062578   +if
4062579   +F_DepVar NE '1'
4062580   +AND F_DepVar NE '0'
4062581   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
4062582   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
4062583   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
4062584   +end;
MPRINT(EM_DIAGRAM):   end;
4062585   +else do;
MPRINT(EM_DIAGRAM):   else do;
4062586   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
4062587   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
4062588   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
4062589   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
4062590   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
4062591   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
4062592   +END;
MPRINT(EM_DIAGRAM):   END;
4062593   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4062594    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL36_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.21 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4062595    quit;
4062596    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
4062597    filename emflow
4062597  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring AUTONEURAL6_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062598    *------------------------------------------------------------*;
4062599    * Ensmbl36: Scoring AUTONEURAL6_VALIDATE data;
4062600    *------------------------------------------------------------*;
4062601    data EMWS8.Ensmbl36_VALIDATE
4062602    / view=EMWS8.Ensmbl36_VALIDATE
4062603    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_VALIDATE / view=EMWS8.Ensmbl36_VALIDATE ;
4062604    set EMWS8.AutoNeural6_VALIDATE
4062605    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_VALIDATE ;
4062606    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMFLOWSCORE.sas.
4062607   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062608   +* Ensmbl36: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Combine model for DepVar;
4062609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062610   +* Ensmbl36: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 1 of 7;
4062611   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062612   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062613   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
4062614   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
4062615   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
4062616   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062617   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062618   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
4062619   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
4062620   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
4062621   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062622   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062623   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
4062624   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
4062625   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
4062626   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062627   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062628   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
4062629   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
4062630   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
4062631   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062632   +
4062633   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4062634   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4062634  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4062635   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4062636   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4062637   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4062638   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4062639   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
4062640   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062641   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
4062642   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
4062643   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
4062644   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062645   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062646   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4062647   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062648   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4062649   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4062650   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
4062651   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062652   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
4062653   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
4062654   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
4062655   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062656   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062657   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
4062658   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
4062659   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
4062660   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062661   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062662   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4062663   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4062664   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
4062665   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4062666   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4062667   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4062668   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4062669   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4062670   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4062671   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4062672   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4062673   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4062674   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4062675   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4062676   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4062677   +LENGTH _WARN_ $4
4062678   +      F_DepVar  $ 12
4062679   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4062680   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4062681   +
4062682   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4062683   +
4062684   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4062685   +
4062686   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4062687   +
4062688   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4062689   +
4062690   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4062691   +
4062692   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4062693   +
4062694   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4062695   +
4062696   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4062697   +
4062698   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4062699   +
4062700   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4062701   +
4062702   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4062703   +
4062704   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4062705   +
4062706   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4062707   +
4062708   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4062709   +
4062710   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4062711   +
4062712   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4062713   +
4062714   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4062715   +
4062716   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4062717   +
4062718   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4062719   +
4062720   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4062721   +
4062722   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4062723   +
4062724   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4062725   +
4062726   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4062727   +
4062728   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4062729   +
4062730   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4062731   +
4062732   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4062733   +
4062734   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4062735   +
4062736   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4062737   +
4062738   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4062739   +
4062740   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4062741   +
4062742   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4062743   +
4062744   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4062745   +
4062746   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4062747   +
4062748   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4062749   +
4062750   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4062751   +
4062752   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4062753   +
4062754   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4062755   +
4062756   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4062757   +
4062758   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4062759   +
4062760   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4062761   +
4062762   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4062763   +
4062764   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4062765   +
4062766   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4062767   +
4062768   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4062769   +
4062770   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4062771   +
4062772   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4062773   +
4062774   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4062775   +
4062776   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4062777   +
4062778   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4062779   +
4062780   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4062781   +
4062782   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4062783   +
4062784   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4062785   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4062786   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4062787   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4062788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4062789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062790   +end;
MPRINT(EM_DIAGRAM):   end;
4062791   +else do;
MPRINT(EM_DIAGRAM):   else do;
4062792   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4062793   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4062794   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4062795   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4062796   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4062797   +   end;
MPRINT(EM_DIAGRAM):   end;
4062798   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4062799   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4062800   +   end;
MPRINT(EM_DIAGRAM):   end;
4062801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4062802   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4062803   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4062804   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062805   +   end;
MPRINT(EM_DIAGRAM):   end;
4062806   +end;
MPRINT(EM_DIAGRAM):   end;
4062807   +
4062808   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4062809   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4062810   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4062811   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4062812   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4062813   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062814   +end;
MPRINT(EM_DIAGRAM):   end;
4062815   +else do;
MPRINT(EM_DIAGRAM):   else do;
4062816   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4062817   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4062818   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4062819   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4062820   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4062821   +   end;
MPRINT(EM_DIAGRAM):   end;
4062822   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4062823   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4062824   +   end;
MPRINT(EM_DIAGRAM):   end;
4062825   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4062826   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4062827   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4062828   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062829   +   end;
MPRINT(EM_DIAGRAM):   end;
4062830   +end;
MPRINT(EM_DIAGRAM):   end;
4062831   +
4062832   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4062833   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4062834   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4062835   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4062836   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4062837   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062838   +end;
MPRINT(EM_DIAGRAM):   end;
4062839   +else do;
MPRINT(EM_DIAGRAM):   else do;
4062840   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4062841   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4062842   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4062843   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4062844   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4062845   +   end;
MPRINT(EM_DIAGRAM):   end;
4062846   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4062847   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4062848   +   end;
MPRINT(EM_DIAGRAM):   end;
4062849   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4062850   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4062851   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4062852   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062853   +   end;
MPRINT(EM_DIAGRAM):   end;
4062854   +end;
MPRINT(EM_DIAGRAM):   end;
4062855   +
4062856   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4062857   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4062858   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4062859   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4062860   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4062861   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062862   +end;
MPRINT(EM_DIAGRAM):   end;
4062863   +else do;
MPRINT(EM_DIAGRAM):   else do;
4062864   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4062865   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4062866   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4062867   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4062868   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4062869   +   end;
MPRINT(EM_DIAGRAM):   end;
4062870   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4062871   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4062872   +   end;
MPRINT(EM_DIAGRAM):   end;
4062873   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4062874   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4062875   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4062876   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062877   +   end;
MPRINT(EM_DIAGRAM):   end;
4062878   +end;
MPRINT(EM_DIAGRAM):   end;
4062879   +
4062880   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4062881   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4062882   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4062883   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4062884   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4062885   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062886   +end;
MPRINT(EM_DIAGRAM):   end;
4062887   +else do;
MPRINT(EM_DIAGRAM):   else do;
4062888   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4062889   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4062890   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4062891   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4062892   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4062893   +   end;
MPRINT(EM_DIAGRAM):   end;
4062894   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4062895   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4062896   +   end;
MPRINT(EM_DIAGRAM):   end;
4062897   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4062898   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4062899   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4062900   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062901   +   end;
MPRINT(EM_DIAGRAM):   end;
4062902   +end;
MPRINT(EM_DIAGRAM):   end;
4062903   +
4062904   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4062905   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4062906   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4062907   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4062908   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4062909   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062910   +end;
MPRINT(EM_DIAGRAM):   end;
4062911   +else do;
MPRINT(EM_DIAGRAM):   else do;
4062912   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4062913   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4062914   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4062915   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4062916   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4062917   +   end;
MPRINT(EM_DIAGRAM):   end;
4062918   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4062919   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4062920   +   end;
MPRINT(EM_DIAGRAM):   end;
4062921   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4062922   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4062923   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4062924   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062925   +   end;
MPRINT(EM_DIAGRAM):   end;
4062926   +end;
MPRINT(EM_DIAGRAM):   end;
4062927   +
4062928   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4062929   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4062930   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4062931   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4062932   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4062933   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062934   +end;
MPRINT(EM_DIAGRAM):   end;
4062935   +else do;
MPRINT(EM_DIAGRAM):   else do;
4062936   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4062937   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4062938   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4062939   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4062940   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4062941   +   end;
MPRINT(EM_DIAGRAM):   end;
4062942   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4062943   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4062944   +   end;
MPRINT(EM_DIAGRAM):   end;
4062945   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4062946   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4062947   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4062948   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062949   +   end;
MPRINT(EM_DIAGRAM):   end;
4062950   +end;
MPRINT(EM_DIAGRAM):   end;
4062951   +
4062952   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4062953   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4062954   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4062955   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4062956   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4062957   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4062958   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4062959   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4062960   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4062961   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4062962   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4062963   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4062964   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4062965   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062966   +end;
MPRINT(EM_DIAGRAM):   end;
4062967   +else do;
MPRINT(EM_DIAGRAM):   else do;
4062968   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4062969   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4062970   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4062971   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4062972   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4062973   +   end;
MPRINT(EM_DIAGRAM):   end;
4062974   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4062975   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4062976   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4062977   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4062978   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4062979   +   end;
MPRINT(EM_DIAGRAM):   end;
4062980   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4062981   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4062982   +   end;
MPRINT(EM_DIAGRAM):   end;
4062983   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4062984   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4062985   +   end;
MPRINT(EM_DIAGRAM):   end;
4062986   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4062987   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4062988   +   end;
MPRINT(EM_DIAGRAM):   end;
4062989   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4062990   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4062991   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4062992   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4062993   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4062994   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4062995   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4062996   +   end;
MPRINT(EM_DIAGRAM):   end;
4062997   +end;
MPRINT(EM_DIAGRAM):   end;
4062998   +
4062999   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4063000   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4063001   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4063002   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4063003   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4063004   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4063005   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4063006   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4063007   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4063008   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4063009   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4063010   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4063011   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4063012   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4063013   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063014   +end;
MPRINT(EM_DIAGRAM):   end;
4063015   +else do;
MPRINT(EM_DIAGRAM):   else do;
4063016   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4063017   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4063018   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4063019   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4063020   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4063021   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4063022   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4063023   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4063024   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4063025   +         end;
MPRINT(EM_DIAGRAM):   end;
4063026   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4063027   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4063028   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4063029   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4063030   +            end;
MPRINT(EM_DIAGRAM):   end;
4063031   +         end;
MPRINT(EM_DIAGRAM):   end;
4063032   +      end;
MPRINT(EM_DIAGRAM):   end;
4063033   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4063034   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4063035   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4063036   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4063037   +         end;
MPRINT(EM_DIAGRAM):   end;
4063038   +      end;
MPRINT(EM_DIAGRAM):   end;
4063039   +   end;
MPRINT(EM_DIAGRAM):   end;
4063040   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4063041   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4063042   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4063043   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4063044   +      end;
MPRINT(EM_DIAGRAM):   end;
4063045   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4063046   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4063047   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4063048   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4063049   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4063050   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4063051   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4063052   +         end;
MPRINT(EM_DIAGRAM):   end;
4063053   +      end;
MPRINT(EM_DIAGRAM):   end;
4063054   +   end;
MPRINT(EM_DIAGRAM):   end;
4063055   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4063056   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4063057   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4063058   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4063059   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4063060   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4063061   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063062   +   end;
MPRINT(EM_DIAGRAM):   end;
4063063   +end;
MPRINT(EM_DIAGRAM):   end;
4063064   +
4063065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063066   +*** Checking missing input Interval
4063067   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4063068   +
4063069   +IF NMISS(
4063070   +   AcceptedCmpTotal ,
4063071   +   Age ,
4063072   +   Frq ,
4063073   +   Income ,
4063074   +   Kidhome ,
4063075   +   Mnt ,
4063076   +   MntFishProducts ,
4063077   +   MntFruits ,
4063078   +   MntGoldProds ,
4063079   +   MntMeatProducts ,
4063080   +   MntSweetProducts ,
4063081   +   MntWines ,
4063082   +   MonthsAsCustomer ,
4063083   +   NumCatalogPurchases ,
4063084   +   NumDealsPurchases ,
4063085   +   NumDistPurchases ,
4063086   +   NumStorePurchases ,
4063087   +   NumWebPurchases ,
4063088   +   NumWebVisitsMonth ,
4063089   +   RFMstat ,
4063090   +   RMntFrq ,
4063091   +   Recency ,
4063092   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4063093   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4063094   +
4063095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063096   +END;
MPRINT(EM_DIAGRAM):   END;
4063097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063098   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4063099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063100   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4063101   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4063102   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4063103   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4063104   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4063105   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4063106   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4063107   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4063108   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4063109   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4063110   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4063111   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4063112   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4063113   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4063114   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4063115   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4063116   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4063117   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4063118   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4063119   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4063120   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4063121   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4063122   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4063123   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4063124   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4063125   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4063126   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4063127   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4063128   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4063129   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4063130   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4063131   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4063132   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4063133   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4063134   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4063135   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4063136   +END;
MPRINT(EM_DIAGRAM):   END;
4063137   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4063138   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4063139   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4063140   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4063141   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4063142   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4063143   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4063144   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4063145   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4063146   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4063147   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4063148   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4063149   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4063150   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4063151   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4063152   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4063153   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4063154   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4063155   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4063156   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4063157   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4063158   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4063159   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4063160   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4063161   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4063162   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4063163   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4063164   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4063165   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4063166   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4063167   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4063168   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4063169   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4063170   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4063171   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4063172   +   ELSE S_NumCatalogPurchases
4063173   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4063174   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4063175   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4063176   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4063177   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4063178   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4063179   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4063180   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4063181   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4063182   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4063183   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4063184   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4063185   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4063186   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4063187   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4063188   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4063189   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4063190   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4063191   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4063192   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4063193   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4063194   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4063195   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4063196   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4063197   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4063198   +END;
MPRINT(EM_DIAGRAM):   END;
4063199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063200   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4063201   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063203   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4063204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063206   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4063207   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063208   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4063209   +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
4063210   +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
4063211   +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
4063212   +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
4063213   +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
4063214   +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
4063215   +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
4063216   +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
4063217   +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
4063218   +          +     -0.4295354470932 * S_NumDealsPurchases
4063219   +          +    -0.08226280459837 * S_NumDistPurchases
4063220   +          +      0.2932815275833 * S_NumStorePurchases
4063221   +          +     0.19049189042599 * S_NumWebPurchases
4063222   +          +    -0.98799339280673 * S_NumWebVisitsMonth
4063223   +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
4063224   +        S_RMntFrq  +     1.04348870032296 * S_Recency
4063225   +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 *
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 *
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts +
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 *
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 *
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 *
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 *
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq +
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
4063226   +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
4063227   +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
4063228   +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
4063229   +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
4063230   +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 *
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 +
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 *
HigherEducationBinary0 ;
4063231   +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
4063232   +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
4063233   +        EducationGraduation  +    -0.06446100461656 * EducationMaster
4063234   +          +    -0.78551174413278 * Marital_StatusDivorced
4063235   +          +     1.14162836709205 * Marital_StatusMarried
4063236   +          +    -0.85471695548675 * Marital_StatusSingle
4063237   +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle +
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 *
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 *
Marital_StatusTogether ;
4063238   +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
4063239   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4063240   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4063241   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4063242   +END;
MPRINT(EM_DIAGRAM):   END;
4063243   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4063244   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4063245   +END;
MPRINT(EM_DIAGRAM):   END;
4063246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063247   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4063248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063249   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4063250   +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
4063251   +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
4063252   +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
4063253   +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
4063254   +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
4063255   +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
4063256   +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
4063257   +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
4063258   +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
4063259   +          +      0.1710743409836 * S_NumDealsPurchases
4063260   +          +     1.10019178495427 * S_NumDistPurchases
4063261   +          +     0.06701301620472 * S_NumStorePurchases
4063262   +          +    -1.47240374003368 * S_NumWebPurchases
4063263   +          +     0.38443387640949 * S_NumWebVisitsMonth
4063264   +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
4063265   +        S_RMntFrq  +    -0.01383257292281 * S_Recency
4063266   +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 *
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 *
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts +
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 *
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines +
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases +
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases +
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases +
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 *
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
4063267   +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
4063268   +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
4063269   +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
4063270   +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
4063271   +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 *
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 +
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 *
HigherEducationBinary0 ;
4063272   +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
4063273   +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
4063274   +        EducationGraduation  +    -0.84396607413409 * EducationMaster
4063275   +          +    -0.36835980184757 * Marital_StatusDivorced
4063276   +          +     0.71718933679692 * Marital_StatusMarried
4063277   +          +    -0.35767236657055 * Marital_StatusSingle
4063278   +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle +
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation +
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced +
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle +
0.87230634846649 * Marital_StatusTogether ;
4063279   +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
4063280   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4063281   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4063282   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4063283   +END;
MPRINT(EM_DIAGRAM):   END;
4063284   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4063285   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4063286   +END;
MPRINT(EM_DIAGRAM):   END;
4063287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063288   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4063289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063290   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4063291   +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
4063292   +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
4063293   +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
4063294   +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
4063295   +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
4063296   +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
4063297   +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
4063298   +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
4063299   +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
4063300   +          +    -1.99858075809796 * S_NumDealsPurchases
4063301   +          +    -0.37353682448701 * S_NumDistPurchases
4063302   +          +     1.16275863071649 * S_NumStorePurchases
4063303   +          +       -0.75936809253 * S_NumWebPurchases
4063304   +          +     2.17936226306026 * S_NumWebVisitsMonth
4063305   +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
4063306   +        S_RMntFrq  +    -1.06566929523903 * S_Recency
4063307   +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 *
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 *
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts +
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 *
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 *
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 *
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 *
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq +
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
4063308   +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
4063309   +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
4063310   +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
4063311   +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
4063312   +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 *
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 +
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 *
HigherEducationBinary0 ;
4063313   +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
4063314   +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
4063315   +        EducationGraduation  +    -0.90489876056203 * EducationMaster
4063316   +          +     0.60036315441483 * Marital_StatusDivorced
4063317   +          +    -0.94084946353672 * Marital_StatusMarried
4063318   +          +     0.34594388147374 * Marital_StatusSingle
4063319   +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle +
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 *
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 *
Marital_StatusTogether ;
4063320   +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
4063321   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4063322   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4063323   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4063324   +END;
MPRINT(EM_DIAGRAM):   END;
4063325   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4063326   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4063327   +END;
MPRINT(EM_DIAGRAM):   END;
4063328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063329   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4063330   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063331   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4063332   +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
4063333   +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
4063334   +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
4063335   +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
4063336   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
4063337   +END;
MPRINT(EM_DIAGRAM):   END;
4063338   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4063339   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4063340   +END;
MPRINT(EM_DIAGRAM):   END;
4063341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063342   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4063343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063344   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4063345   +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
4063346   +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
4063347   +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
4063348   +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
4063349   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
4063350   +END;
MPRINT(EM_DIAGRAM):   END;
4063351   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4063352   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4063353   +END;
MPRINT(EM_DIAGRAM):   END;
4063354   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063355   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4063356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063357   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4063358   +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
4063359   +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
4063360   +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
4063361   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4063362   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4063363   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
4063364   +END;
MPRINT(EM_DIAGRAM):   END;
4063365   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4063366   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4063367   +END;
MPRINT(EM_DIAGRAM):   END;
4063368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063369   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4063370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063371   +
4063372   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4063373   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4063374   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4063375   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4063376   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4063377   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4063378   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4063379   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4063380   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4063381   +end;
MPRINT(EM_DIAGRAM):   end;
4063382   +else do;
MPRINT(EM_DIAGRAM):   else do;
4063383   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4063384   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4063385   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4063386   +   end;
MPRINT(EM_DIAGRAM):   end;
4063387   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4063388   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4063389   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4063390   +   end;
MPRINT(EM_DIAGRAM):   end;
4063391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4063392   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4063393   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4063394   +   end;
MPRINT(EM_DIAGRAM):   end;
4063395   +end;
MPRINT(EM_DIAGRAM):   end;
4063396   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4063397   +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
4063398   +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
4063399   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4063400   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4063401   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4063402   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4063403   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4063404   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4063405   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4063406   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4063407   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4063408   +END;
MPRINT(EM_DIAGRAM):   END;
4063409   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4063410   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4063411   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4063412   +END;
MPRINT(EM_DIAGRAM):   END;
4063413   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4063414   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4063415   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4063416   +END;
MPRINT(EM_DIAGRAM):   END;
4063417   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4063418   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4063419   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4063420   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4063421   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4063422   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4063423   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4063424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063425   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4063426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063427   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4063428   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4063429   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4063430   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4063431   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4063432   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4063433   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4063434   +END;
MPRINT(EM_DIAGRAM):   END;
4063435   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4063436   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4063437   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4063438   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4063439   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
4063440   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4063441   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
4063442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4063443   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
4063444   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
4063445   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
4063446   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
4063447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4063448   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
4063449   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4063450   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
4063451   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
4063452   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
4063453   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4063454   +* Ensmbl36: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 2 of 7;
4063455   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4063456   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4063457   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4063458   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4063459   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
4063460   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4063461   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4063462   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4063463   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4063464   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4063465   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4063466   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4063467   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4063468   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4063469   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4063470   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4063471   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4063472   +LENGTH _WARN_ $4
4063473   +      F_DepVar  $ 12
4063474   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4063475   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4063476   +
4063477   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4063478   +
4063479   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4063480   +
4063481   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4063482   +
4063483   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4063484   +
4063485   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4063486   +
4063487   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4063488   +
4063489   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4063490   +
4063491   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4063492   +
4063493   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4063494   +
4063495   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4063496   +
4063497   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4063498   +
4063499   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4063500   +
4063501   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4063502   +
4063503   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4063504   +
4063505   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4063506   +
4063507   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4063508   +
4063509   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4063510   +
4063511   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4063512   +
4063513   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4063514   +
4063515   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4063516   +
4063517   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4063518   +
4063519   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4063520   +
4063521   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4063522   +
4063523   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4063524   +
4063525   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4063526   +
4063527   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4063528   +
4063529   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4063530   +
4063531   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4063532   +
4063533   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4063534   +
4063535   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4063536   +
4063537   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4063538   +
4063539   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4063540   +
4063541   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4063542   +
4063543   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4063544   +
4063545   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4063546   +
4063547   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4063548   +
4063549   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4063550   +
4063551   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4063552   +
4063553   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4063554   +
4063555   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4063556   +
4063557   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4063558   +
4063559   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4063560   +
4063561   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4063562   +
4063563   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4063564   +
4063565   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4063566   +
4063567   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4063568   +
4063569   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4063570   +
4063571   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4063572   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4063573   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4063574   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4063575   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4063576   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063577   +end;
MPRINT(EM_DIAGRAM):   end;
4063578   +else do;
MPRINT(EM_DIAGRAM):   else do;
4063579   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4063580   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4063581   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4063582   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4063583   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4063584   +   end;
MPRINT(EM_DIAGRAM):   end;
4063585   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4063586   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4063587   +   end;
MPRINT(EM_DIAGRAM):   end;
4063588   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4063589   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4063590   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4063591   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063592   +   end;
MPRINT(EM_DIAGRAM):   end;
4063593   +end;
MPRINT(EM_DIAGRAM):   end;
4063594   +
4063595   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4063596   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4063597   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4063598   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4063599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4063600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063601   +end;
MPRINT(EM_DIAGRAM):   end;
4063602   +else do;
MPRINT(EM_DIAGRAM):   else do;
4063603   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4063604   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4063605   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4063606   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4063607   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4063608   +   end;
MPRINT(EM_DIAGRAM):   end;
4063609   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4063610   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4063611   +   end;
MPRINT(EM_DIAGRAM):   end;
4063612   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4063613   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4063614   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4063615   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063616   +   end;
MPRINT(EM_DIAGRAM):   end;
4063617   +end;
MPRINT(EM_DIAGRAM):   end;
4063618   +
4063619   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4063620   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4063621   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4063622   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4063623   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4063624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063625   +end;
MPRINT(EM_DIAGRAM):   end;
4063626   +else do;
MPRINT(EM_DIAGRAM):   else do;
4063627   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4063628   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4063629   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4063630   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4063631   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4063632   +   end;
MPRINT(EM_DIAGRAM):   end;
4063633   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4063634   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4063635   +   end;
MPRINT(EM_DIAGRAM):   end;
4063636   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4063637   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4063638   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4063639   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063640   +   end;
MPRINT(EM_DIAGRAM):   end;
4063641   +end;
MPRINT(EM_DIAGRAM):   end;
4063642   +
4063643   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4063644   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4063645   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4063646   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4063647   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4063648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063649   +end;
MPRINT(EM_DIAGRAM):   end;
4063650   +else do;
MPRINT(EM_DIAGRAM):   else do;
4063651   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4063652   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4063653   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4063654   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4063655   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4063656   +   end;
MPRINT(EM_DIAGRAM):   end;
4063657   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4063658   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4063659   +   end;
MPRINT(EM_DIAGRAM):   end;
4063660   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4063661   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4063662   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4063663   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063664   +   end;
MPRINT(EM_DIAGRAM):   end;
4063665   +end;
MPRINT(EM_DIAGRAM):   end;
4063666   +
4063667   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4063668   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4063669   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4063670   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4063671   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4063672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063673   +end;
MPRINT(EM_DIAGRAM):   end;
4063674   +else do;
MPRINT(EM_DIAGRAM):   else do;
4063675   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4063676   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4063677   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4063678   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4063679   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4063680   +   end;
MPRINT(EM_DIAGRAM):   end;
4063681   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4063682   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4063683   +   end;
MPRINT(EM_DIAGRAM):   end;
4063684   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4063685   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4063686   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4063687   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063688   +   end;
MPRINT(EM_DIAGRAM):   end;
4063689   +end;
MPRINT(EM_DIAGRAM):   end;
4063690   +
4063691   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4063692   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4063693   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4063694   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4063695   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4063696   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063697   +end;
MPRINT(EM_DIAGRAM):   end;
4063698   +else do;
MPRINT(EM_DIAGRAM):   else do;
4063699   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4063700   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4063701   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
The SAS System
 
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4063702   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4063703   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4063704   +   end;
MPRINT(EM_DIAGRAM):   end;
4063705   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4063706   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4063707   +   end;
MPRINT(EM_DIAGRAM):   end;
4063708   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4063709   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4063710   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4063711   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063712   +   end;
MPRINT(EM_DIAGRAM):   end;
4063713   +end;
MPRINT(EM_DIAGRAM):   end;
4063714   +
4063715   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4063716   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4063717   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4063718   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4063719   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4063720   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063721   +end;
MPRINT(EM_DIAGRAM):   end;
4063722   +else do;
MPRINT(EM_DIAGRAM):   else do;
4063723   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4063724   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4063725   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4063726   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4063727   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4063728   +   end;
MPRINT(EM_DIAGRAM):   end;
4063729   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4063730   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4063731   +   end;
MPRINT(EM_DIAGRAM):   end;
4063732   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4063733   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4063734   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4063735   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063736   +   end;
MPRINT(EM_DIAGRAM):   end;
4063737   +end;
MPRINT(EM_DIAGRAM):   end;
4063738   +
4063739   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4063740   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4063741   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4063742   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4063743   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4063744   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4063745   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4063746   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4063747   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4063748   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4063749   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4063750   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4063751   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4063752   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063753   +end;
MPRINT(EM_DIAGRAM):   end;
4063754   +else do;
MPRINT(EM_DIAGRAM):   else do;
4063755   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4063756   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4063757   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4063758   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4063759   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4063760   +   end;
MPRINT(EM_DIAGRAM):   end;
4063761   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4063762   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4063763   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4063764   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4063765   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4063766   +   end;
MPRINT(EM_DIAGRAM):   end;
4063767   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4063768   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4063769   +   end;
MPRINT(EM_DIAGRAM):   end;
4063770   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4063771   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4063772   +   end;
MPRINT(EM_DIAGRAM):   end;
4063773   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4063774   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4063775   +   end;
MPRINT(EM_DIAGRAM):   end;
4063776   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4063777   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4063778   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4063779   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4063780   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4063781   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4063782   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063783   +   end;
MPRINT(EM_DIAGRAM):   end;
4063784   +end;
MPRINT(EM_DIAGRAM):   end;
4063785   +
4063786   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4063787   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4063788   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4063789   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4063790   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4063791   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4063792   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4063793   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4063794   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4063795   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4063796   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4063797   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4063798   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4063799   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4063800   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063801   +end;
MPRINT(EM_DIAGRAM):   end;
4063802   +else do;
MPRINT(EM_DIAGRAM):   else do;
4063803   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4063804   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4063805   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4063806   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4063807   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4063808   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4063809   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4063810   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4063811   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4063812   +         end;
MPRINT(EM_DIAGRAM):   end;
4063813   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4063814   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4063815   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4063816   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4063817   +            end;
MPRINT(EM_DIAGRAM):   end;
4063818   +         end;
MPRINT(EM_DIAGRAM):   end;
4063819   +      end;
MPRINT(EM_DIAGRAM):   end;
4063820   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4063821   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4063822   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4063823   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4063824   +         end;
MPRINT(EM_DIAGRAM):   end;
4063825   +      end;
MPRINT(EM_DIAGRAM):   end;
4063826   +   end;
MPRINT(EM_DIAGRAM):   end;
4063827   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4063828   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4063829   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4063830   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4063831   +      end;
MPRINT(EM_DIAGRAM):   end;
4063832   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4063833   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4063834   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4063835   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4063836   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4063837   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4063838   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4063839   +         end;
MPRINT(EM_DIAGRAM):   end;
4063840   +      end;
MPRINT(EM_DIAGRAM):   end;
4063841   +   end;
MPRINT(EM_DIAGRAM):   end;
4063842   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4063843   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4063844   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4063845   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4063846   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4063847   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4063848   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063849   +   end;
MPRINT(EM_DIAGRAM):   end;
4063850   +end;
MPRINT(EM_DIAGRAM):   end;
4063851   +
4063852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063853   +*** Checking missing input Interval
4063854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4063855   +
4063856   +IF NMISS(
4063857   +   AcceptedCmpTotal ,
4063858   +   Age ,
4063859   +   Frq ,
4063860   +   Income ,
4063861   +   Kidhome ,
4063862   +   Mnt ,
4063863   +   MntFishProducts ,
4063864   +   MntFruits ,
4063865   +   MntGoldProds ,
4063866   +   MntMeatProducts ,
4063867   +   MntSweetProducts ,
4063868   +   MntWines ,
4063869   +   MonthsAsCustomer ,
4063870   +   NumCatalogPurchases ,
4063871   +   NumDealsPurchases ,
4063872   +   NumDistPurchases ,
4063873   +   NumStorePurchases ,
4063874   +   NumWebPurchases ,
4063875   +   NumWebVisitsMonth ,
4063876   +   RFMstat ,
4063877   +   RMntFrq ,
4063878   +   Recency ,
4063879   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4063880   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4063881   +
4063882   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4063883   +END;
MPRINT(EM_DIAGRAM):   END;
4063884   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063885   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4063886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063887   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4063888   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4063889   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4063890   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4063891   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4063892   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4063893   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4063894   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4063895   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4063896   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4063897   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4063898   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4063899   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4063900   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4063901   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4063902   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4063903   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4063904   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4063905   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4063906   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4063907   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4063908   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4063909   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4063910   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4063911   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4063912   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4063913   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4063914   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4063915   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4063916   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4063917   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4063918   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4063919   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4063920   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4063921   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4063922   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4063923   +END;
MPRINT(EM_DIAGRAM):   END;
4063924   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4063925   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4063926   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4063927   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4063928   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4063929   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4063930   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4063931   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4063932   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4063933   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4063934   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4063935   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4063936   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4063937   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4063938   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4063939   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4063940   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4063941   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4063942   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4063943   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4063944   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4063945   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4063946   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4063947   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4063948   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4063949   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4063950   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4063951   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4063952   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4063953   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4063954   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4063955   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4063956   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4063957   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4063958   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4063959   +   ELSE S_NumCatalogPurchases
4063960   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4063961   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4063962   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4063963   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4063964   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4063965   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4063966   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4063967   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4063968   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4063969   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4063970   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4063971   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4063972   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4063973   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4063974   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4063975   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4063976   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4063977   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4063978   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4063979   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4063980   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4063981   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4063982   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4063983   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4063984   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4063985   +END;
MPRINT(EM_DIAGRAM):   END;
4063986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063987   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4063988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063990   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4063991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063993   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4063994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4063995   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4063996   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
4063997   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
4063998   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
4063999   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
4064000   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
4064001   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
4064002   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
4064003   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
4064004   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
4064005   +          +     0.09708841024031 * S_NumDealsPurchases
4064006   +          +    -0.29075561032014 * S_NumDistPurchases
4064007   +          +    -0.14495394259873 * S_NumStorePurchases
4064008   +          +     0.11890705145732 * S_NumWebPurchases
4064009   +          +    -0.16954189911344 * S_NumWebVisitsMonth
4064010   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
4064011   +        S_RMntFrq  +     0.17150719398884 * S_Recency
4064012   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 *
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 *
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts +
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 *
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines +
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases +
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases +
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases +
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 *
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
4064013   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
4064014   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
4064015   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
4064016   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
4064017   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
4064018   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
4064019   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
4064020   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
4064021   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
4064022   +          +     0.16274478997892 * S_NumDealsPurchases
4064023   +          +     0.03966958784582 * S_NumDistPurchases
4064024   +          +    -0.04714110726598 * S_NumStorePurchases
4064025   +          +    -0.02124229528082 * S_NumWebPurchases
4064026   +          +     0.29753299776832 * S_NumWebVisitsMonth
4064027   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
4064028   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
4064029   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 *
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 *
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts +
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 *
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines +
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases +
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases +
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases +
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 *
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
4064030   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
4064031   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
4064032   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
4064033   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
4064034   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 *
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 +
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 *
HigherEducationBinary0 ;
4064035   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
4064036   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
4064037   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
4064038   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
4064039   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 *
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 +
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 *
HigherEducationBinary0 ;
4064040   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
4064041   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
4064042   +        EducationGraduation  +     0.00619669837452 * EducationMaster
4064043   +          +    -0.05037639679806 * Marital_StatusDivorced
4064044   +          +     0.28781968727878 * Marital_StatusMarried
4064045   +          +    -0.20382417074384 * Marital_StatusSingle
4064046   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle +
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 *
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 *
Marital_StatusTogether ;
4064047   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
4064048   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
4064049   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
4064050   +          +     0.06970969219123 * Marital_StatusDivorced
4064051   +          +    -0.15787475744986 * Marital_StatusMarried
4064052   +          +     0.14345344072192 * Marital_StatusSingle
4064053   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 *
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 *
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 *
Marital_StatusTogether ;
4064054   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
4064055   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
4064056   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
4064057   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
4064058   +END;
MPRINT(EM_DIAGRAM):   END;
4064059   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4064060   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4064061   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4064062   +END;
MPRINT(EM_DIAGRAM):   END;
4064063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064064   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4064065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064066   +
4064067   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4064068   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4064069   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4064070   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4064071   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4064072   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4064073   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4064074   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4064075   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4064076   +end;
MPRINT(EM_DIAGRAM):   end;
4064077   +else do;
MPRINT(EM_DIAGRAM):   else do;
4064078   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4064079   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4064080   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4064081   +   end;
MPRINT(EM_DIAGRAM):   end;
4064082   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4064083   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4064084   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4064085   +   end;
MPRINT(EM_DIAGRAM):   end;
4064086   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4064087   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4064088   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4064089   +   end;
MPRINT(EM_DIAGRAM):   end;
4064090   +end;
MPRINT(EM_DIAGRAM):   end;
4064091   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4064092   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
4064093   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
4064094   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
4064095   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4064096   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4064097   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4064098   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4064099   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4064100   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4064101   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4064102   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4064103   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4064104   +END;
MPRINT(EM_DIAGRAM):   END;
4064105   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4064106   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4064107   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4064108   +END;
MPRINT(EM_DIAGRAM):   END;
4064109   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4064110   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4064111   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4064112   +END;
MPRINT(EM_DIAGRAM):   END;
4064113   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4064114   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4064115   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4064116   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4064117   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4064118   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4064119   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4064120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064121   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4064122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064123   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4064124   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4064125   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4064126   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4064127   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4064128   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4064129   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4064130   +END;
MPRINT(EM_DIAGRAM):   END;
4064131   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4064132   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4064133   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4064134   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4064135   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
4064136   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064137   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
4064138   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064139   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
4064140   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
4064141   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
4064142   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
4064143   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064144   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
4064145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064146   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
4064147   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
4064148   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
4064149   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064150   +* Ensmbl36: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 3 of 7;
4064151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064153   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4064154   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4064155   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
4064156   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064157   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4064158   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4064159   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4064160   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4064161   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4064162   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4064163   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4064164   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4064165   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4064166   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4064167   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4064168   +LENGTH _WARN_ $4
4064169   +      F_DepVar  $ 12
4064170   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4064171   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4064172   +
4064173   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4064174   +
4064175   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4064176   +
4064177   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4064178   +
4064179   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4064180   +
4064181   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4064182   +
4064183   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4064184   +
4064185   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4064186   +
4064187   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4064188   +
4064189   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4064190   +
4064191   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4064192   +
4064193   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4064194   +
4064195   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4064196   +
4064197   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4064198   +
4064199   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4064200   +
4064201   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4064202   +
4064203   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4064204   +
4064205   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4064206   +
4064207   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4064208   +
4064209   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4064210   +
4064211   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4064212   +
4064213   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4064214   +
4064215   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4064216   +
4064217   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4064218   +
4064219   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4064220   +
4064221   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4064222   +
4064223   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4064224   +
4064225   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4064226   +
4064227   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4064228   +
4064229   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4064230   +
4064231   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4064232   +
4064233   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4064234   +
4064235   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4064236   +
4064237   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4064238   +
4064239   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4064240   +
4064241   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4064242   +
4064243   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4064244   +
4064245   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4064246   +
4064247   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4064248   +
4064249   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4064250   +
4064251   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4064252   +
4064253   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4064254   +
4064255   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4064256   +
4064257   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4064258   +
4064259   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4064260   +
4064261   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4064262   +
4064263   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4064264   +
4064265   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4064266   +
4064267   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4064268   +
4064269   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4064270   +
4064271   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4064272   +
4064273   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4064274   +
4064275   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4064276   +
4064277   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4064278   +
4064279   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4064280   +
4064281   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4064282   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4064283   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4064284   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4064285   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4064286   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064287   +end;
MPRINT(EM_DIAGRAM):   end;
4064288   +else do;
MPRINT(EM_DIAGRAM):   else do;
4064289   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4064290   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4064291   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4064292   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4064293   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4064294   +   end;
MPRINT(EM_DIAGRAM):   end;
4064295   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4064296   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4064297   +   end;
MPRINT(EM_DIAGRAM):   end;
4064298   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4064299   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4064300   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4064301   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064302   +   end;
MPRINT(EM_DIAGRAM):   end;
4064303   +end;
MPRINT(EM_DIAGRAM):   end;
4064304   +
4064305   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4064306   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4064307   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4064308   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4064309   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4064310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064311   +end;
MPRINT(EM_DIAGRAM):   end;
4064312   +else do;
MPRINT(EM_DIAGRAM):   else do;
4064313   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4064314   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4064315   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4064316   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4064317   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4064318   +   end;
MPRINT(EM_DIAGRAM):   end;
4064319   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4064320   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4064321   +   end;
MPRINT(EM_DIAGRAM):   end;
4064322   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4064323   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4064324   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4064325   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064326   +   end;
MPRINT(EM_DIAGRAM):   end;
4064327   +end;
MPRINT(EM_DIAGRAM):   end;
4064328   +
4064329   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4064330   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4064331   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4064332   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4064333   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4064334   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064335   +end;
MPRINT(EM_DIAGRAM):   end;
4064336   +else do;
MPRINT(EM_DIAGRAM):   else do;
4064337   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4064338   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4064339   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4064340   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4064341   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4064342   +   end;
MPRINT(EM_DIAGRAM):   end;
4064343   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4064344   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4064345   +   end;
MPRINT(EM_DIAGRAM):   end;
4064346   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4064347   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4064348   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4064349   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064350   +   end;
MPRINT(EM_DIAGRAM):   end;
4064351   +end;
MPRINT(EM_DIAGRAM):   end;
4064352   +
4064353   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4064354   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4064355   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4064356   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4064357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4064358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064359   +end;
MPRINT(EM_DIAGRAM):   end;
4064360   +else do;
MPRINT(EM_DIAGRAM):   else do;
4064361   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4064362   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4064363   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4064364   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4064365   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4064366   +   end;
MPRINT(EM_DIAGRAM):   end;
4064367   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4064368   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4064369   +   end;
MPRINT(EM_DIAGRAM):   end;
4064370   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4064371   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4064372   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4064373   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064374   +   end;
MPRINT(EM_DIAGRAM):   end;
4064375   +end;
MPRINT(EM_DIAGRAM):   end;
4064376   +
4064377   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4064378   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4064379   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4064380   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4064381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4064382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064383   +end;
MPRINT(EM_DIAGRAM):   end;
4064384   +else do;
MPRINT(EM_DIAGRAM):   else do;
4064385   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4064386   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4064387   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4064388   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4064389   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4064390   +   end;
MPRINT(EM_DIAGRAM):   end;
4064391   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4064392   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4064393   +   end;
MPRINT(EM_DIAGRAM):   end;
4064394   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4064395   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4064396   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4064397   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064398   +   end;
MPRINT(EM_DIAGRAM):   end;
4064399   +end;
MPRINT(EM_DIAGRAM):   end;
4064400   +
4064401   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4064402   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4064403   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4064404   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4064405   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4064406   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064407   +end;
MPRINT(EM_DIAGRAM):   end;
4064408   +else do;
MPRINT(EM_DIAGRAM):   else do;
4064409   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4064410   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4064411   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4064412   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4064413   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4064414   +   end;
MPRINT(EM_DIAGRAM):   end;
4064415   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4064416   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4064417   +   end;
MPRINT(EM_DIAGRAM):   end;
4064418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4064419   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4064420   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4064421   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064422   +   end;
MPRINT(EM_DIAGRAM):   end;
4064423   +end;
MPRINT(EM_DIAGRAM):   end;
4064424   +
4064425   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4064426   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4064427   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4064428   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4064429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4064430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064431   +end;
MPRINT(EM_DIAGRAM):   end;
4064432   +else do;
MPRINT(EM_DIAGRAM):   else do;
4064433   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4064434   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4064435   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4064436   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4064437   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4064438   +   end;
MPRINT(EM_DIAGRAM):   end;
4064439   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4064440   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4064441   +   end;
MPRINT(EM_DIAGRAM):   end;
4064442   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4064443   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4064444   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4064445   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064446   +   end;
MPRINT(EM_DIAGRAM):   end;
4064447   +end;
MPRINT(EM_DIAGRAM):   end;
4064448   +
4064449   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4064450   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4064451   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4064452   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4064453   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4064454   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4064455   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4064456   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4064457   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4064458   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4064459   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4064460   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4064461   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4064462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064463   +end;
MPRINT(EM_DIAGRAM):   end;
4064464   +else do;
MPRINT(EM_DIAGRAM):   else do;
4064465   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4064466   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4064467   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4064468   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4064469   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4064470   +   end;
MPRINT(EM_DIAGRAM):   end;
4064471   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4064472   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4064473   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4064474   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4064475   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4064476   +   end;
MPRINT(EM_DIAGRAM):   end;
4064477   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4064478   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4064479   +   end;
MPRINT(EM_DIAGRAM):   end;
4064480   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4064481   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4064482   +   end;
MPRINT(EM_DIAGRAM):   end;
4064483   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4064484   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4064485   +   end;
MPRINT(EM_DIAGRAM):   end;
4064486   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4064487   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4064488   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4064489   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4064490   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4064491   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4064492   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064493   +   end;
MPRINT(EM_DIAGRAM):   end;
4064494   +end;
MPRINT(EM_DIAGRAM):   end;
4064495   +
4064496   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4064497   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4064498   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4064499   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4064500   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4064501   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4064502   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4064503   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4064504   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4064505   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4064506   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4064507   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4064508   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4064509   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4064510   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064511   +end;
MPRINT(EM_DIAGRAM):   end;
4064512   +else do;
MPRINT(EM_DIAGRAM):   else do;
4064513   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4064514   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4064515   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4064516   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4064517   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4064518   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4064519   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4064520   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4064521   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4064522   +         end;
MPRINT(EM_DIAGRAM):   end;
4064523   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4064524   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4064525   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4064526   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4064527   +            end;
MPRINT(EM_DIAGRAM):   end;
4064528   +         end;
MPRINT(EM_DIAGRAM):   end;
4064529   +      end;
MPRINT(EM_DIAGRAM):   end;
4064530   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4064531   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4064532   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4064533   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4064534   +         end;
MPRINT(EM_DIAGRAM):   end;
4064535   +      end;
MPRINT(EM_DIAGRAM):   end;
4064536   +   end;
MPRINT(EM_DIAGRAM):   end;
4064537   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4064538   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4064539   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4064540   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4064541   +      end;
MPRINT(EM_DIAGRAM):   end;
4064542   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4064543   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4064544   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4064545   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4064546   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4064547   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4064548   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4064549   +         end;
MPRINT(EM_DIAGRAM):   end;
4064550   +      end;
MPRINT(EM_DIAGRAM):   end;
4064551   +   end;
MPRINT(EM_DIAGRAM):   end;
4064552   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4064553   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4064554   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4064555   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4064556   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4064557   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4064558   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064559   +   end;
MPRINT(EM_DIAGRAM):   end;
4064560   +end;
MPRINT(EM_DIAGRAM):   end;
4064561   +
4064562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064563   +*** Checking missing input Interval
4064564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4064565   +
4064566   +IF NMISS(
4064567   +   AcceptedCmpTotal ,
4064568   +   Age ,
4064569   +   Frq ,
4064570   +   Income ,
4064571   +   Kidhome ,
4064572   +   Mnt ,
4064573   +   MntFishProducts ,
4064574   +   MntFruits ,
4064575   +   MntGoldProds ,
4064576   +   MntMeatProducts ,
4064577   +   MntSweetProducts ,
4064578   +   MntWines ,
4064579   +   MonthsAsCustomer ,
4064580   +   NumCatalogPurchases ,
4064581   +   NumDealsPurchases ,
4064582   +   NumDistPurchases ,
4064583   +   NumStorePurchases ,
4064584   +   NumWebPurchases ,
4064585   +   NumWebVisitsMonth ,
4064586   +   RFMstat ,
4064587   +   RMntFrq ,
4064588   +   Recency ,
4064589   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4064590   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4064591   +
4064592   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4064593   +END;
MPRINT(EM_DIAGRAM):   END;
4064594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064595   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4064596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064597   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4064598   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4064599   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4064600   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4064601   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4064602   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4064603   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4064604   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4064605   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4064606   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4064607   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4064608   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4064609   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4064610   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4064611   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4064612   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4064613   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4064614   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4064615   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4064616   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4064617   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4064618   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4064619   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4064620   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4064621   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4064622   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4064623   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4064624   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4064625   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4064626   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4064627   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4064628   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4064629   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4064630   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4064631   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4064632   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4064633   +END;
MPRINT(EM_DIAGRAM):   END;
4064634   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4064635   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4064636   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4064637   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4064638   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4064639   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4064640   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4064641   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4064642   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4064643   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4064644   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4064645   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4064646   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4064647   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4064648   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4064649   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4064650   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4064651   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4064652   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4064653   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4064654   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4064655   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4064656   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4064657   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4064658   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4064659   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4064660   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4064661   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4064662   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4064663   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4064664   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4064665   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4064666   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4064667   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4064668   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4064669   +   ELSE S_NumCatalogPurchases
4064670   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4064671   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4064672   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4064673   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4064674   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4064675   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4064676   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4064677   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4064678   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4064679   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4064680   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4064681   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4064682   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4064683   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4064684   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4064685   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4064686   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4064687   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4064688   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4064689   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4064690   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4064691   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4064692   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4064693   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4064694   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4064695   +END;
MPRINT(EM_DIAGRAM):   END;
4064696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064697   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4064698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064700   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4064701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064703   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4064704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064705   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4064706   +   H1x1_1  =    -1.49223555176068 * S_AcceptedCmpTotal
4064707   +          +    -0.32281831453238 * S_Age  +     0.28120825505194 * S_Frq
4064708   +          +    -0.39842787806973 * S_Income  +     0.36430856665979 *
4064709   +        S_Kidhome  +    -0.25637228568962 * S_Mnt  +     0.24110438184349 *
4064710   +        S_MntFishProducts  +     0.13701085804118 * S_MntFruits
4064711   +          +     0.11223882829002 * S_MntGoldProds  +     -1.6663458930199 *
4064712   +        S_MntMeatProducts  +      0.0702185455839 * S_MntSweetProducts
4064713   +          +    -0.01371828795287 * S_MntWines  +    -0.15983998015164 *
4064714   +        S_MonthsAsCustomer  +    -0.71296831037224 * S_NumCatalogPurchases
4064715   +          +     0.76573417773216 * S_NumDealsPurchases
4064716   +          +     0.22648400529885 * S_NumDistPurchases
4064717   +          +     1.21720286527592 * S_NumStorePurchases
4064718   +          +     0.60948566229097 * S_NumWebPurchases
4064719   +          +    -2.18126452011089 * S_NumWebVisitsMonth
4064720   +          +     0.32447158734618 * S_RFMstat  +     2.09718739448286 *
4064721   +        S_RMntFrq  +     2.00816730203973 * S_Recency
4064722   +          +     0.71721312404607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.49223555176068 * S_AcceptedCmpTotal + -0.32281831453238 *
S_Age + 0.28120825505194 * S_Frq + -0.39842787806973 * S_Income + 0.36430856665979 * S_Kidhome
+ -0.25637228568962 * S_Mnt + 0.24110438184349 * S_MntFishProducts + 0.13701085804118 *
S_MntFruits + 0.11223882829002 * S_MntGoldProds + -1.6663458930199 * S_MntMeatProducts +
0.0702185455839 * S_MntSweetProducts + -0.01371828795287 * S_MntWines + -0.15983998015164 *
S_MonthsAsCustomer + -0.71296831037224 * S_NumCatalogPurchases + 0.76573417773216 *
S_NumDealsPurchases + 0.22648400529885 * S_NumDistPurchases + 1.21720286527592 *
S_NumStorePurchases + 0.60948566229097 * S_NumWebPurchases + -2.18126452011089 *
S_NumWebVisitsMonth + 0.32447158734618 * S_RFMstat + 2.09718739448286 * S_RMntFrq +
2.00816730203973 * S_Recency + 0.71721312404607 * S_Teenhome ;
4064723   +   H1x1_2  =    -3.95102659899455 * S_AcceptedCmpTotal
4064724   +          +    -0.08322758955502 * S_Age  +     0.48219484564503 * S_Frq
4064725   +          +    -0.47312016087921 * S_Income  +    -0.28936610485406 *
4064726   +        S_Kidhome  +    -1.88029814405677 * S_Mnt  +     1.82010433926021 *
4064727   +        S_MntFishProducts  +     0.24350362722041 * S_MntFruits
4064728   +          +     -0.0982980353358 * S_MntGoldProds  +     -8.1095841881459 *
4064729   +        S_MntMeatProducts  +    -0.08364558784797 * S_MntSweetProducts
4064730   +          +     2.19205303691707 * S_MntWines  +    -0.00045011863954 *
4064731   +        S_MonthsAsCustomer  +    -1.63167878295586 * S_NumCatalogPurchases
4064732   +          +    -1.52828428070828 * S_NumDealsPurchases
4064733   +          +    -0.01775178145113 * S_NumDistPurchases
4064734   +          +     1.11531198663491 * S_NumStorePurchases
4064735   +          +     1.79501098452904 * S_NumWebPurchases
4064736   +          +     -0.7392686013605 * S_NumWebVisitsMonth
4064737   +          +    -1.44559350209967 * S_RFMstat  +     1.21221378487873 *
4064738   +        S_RMntFrq  +     0.68917175969495 * S_Recency
4064739   +          +      0.3873784466888 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.95102659899455 * S_AcceptedCmpTotal + -0.08322758955502 *
S_Age + 0.48219484564503 * S_Frq + -0.47312016087921 * S_Income + -0.28936610485406 *
S_Kidhome + -1.88029814405677 * S_Mnt + 1.82010433926021 * S_MntFishProducts +
0.24350362722041 * S_MntFruits + -0.0982980353358 * S_MntGoldProds + -8.1095841881459 *
S_MntMeatProducts + -0.08364558784797 * S_MntSweetProducts + 2.19205303691707 * S_MntWines +
-0.00045011863954 * S_MonthsAsCustomer + -1.63167878295586 * S_NumCatalogPurchases +
-1.52828428070828 * S_NumDealsPurchases + -0.01775178145113 * S_NumDistPurchases +
1.11531198663491 * S_NumStorePurchases + 1.79501098452904 * S_NumWebPurchases +
-0.7392686013605 * S_NumWebVisitsMonth + -1.44559350209967 * S_RFMstat + 1.21221378487873 *
S_RMntFrq + 0.68917175969495 * S_Recency + 0.3873784466888 * S_Teenhome ;
4064740   +   H1x1_1  = H1x1_1  +    -0.51533233697482 * AcceptedCmp10
4064741   +          +    -0.34752733433815 * AcceptedCmp20  +     0.22125035216356 *
4064742   +        AcceptedCmp30  +     0.05379844837275 * AcceptedCmp40
4064743   +          +    -0.20445562216782 * AcceptedCmp50  +    -0.30276475879877 *
4064744   +        Complain0  +     0.06619165480602 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51533233697482 * AcceptedCmp10 + -0.34752733433815
* AcceptedCmp20 + 0.22125035216356 * AcceptedCmp30 + 0.05379844837275 * AcceptedCmp40 +
-0.20445562216782 * AcceptedCmp50 + -0.30276475879877 * Complain0 + 0.06619165480602 *
HigherEducationBinary0 ;
4064745   +   H1x1_2  = H1x1_2  +     4.56470093348771 * AcceptedCmp10
4064746   +          +    -2.57910461209778 * AcceptedCmp20  +     -2.5693819769014 *
4064747   +        AcceptedCmp30  +    -1.94278577333227 * AcceptedCmp40
4064748   +          +     2.05860438228037 * AcceptedCmp50  +     0.25089930568051 *
4064749   +        Complain0  +      0.2603214054608 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.56470093348771 * AcceptedCmp10 + -2.57910461209778 *
AcceptedCmp20 + -2.5693819769014 * AcceptedCmp30 + -1.94278577333227 * AcceptedCmp40 +
2.05860438228037 * AcceptedCmp50 + 0.25089930568051 * Complain0 + 0.2603214054608 *
HigherEducationBinary0 ;
4064750   +   H1x1_1  = H1x1_1  +    -0.49828378489244 * Education2n_Cycle
4064751   +          +     0.39089624737534 * EducationBasic  +    -0.48226710339977 *
4064752   +        EducationGraduation  +    -0.06304916771632 * EducationMaster
4064753   +          +    -1.56926331102732 * Marital_StatusDivorced
4064754   +          +     2.38562782588323 * Marital_StatusMarried
4064755   +          +    -1.91012008029228 * Marital_StatusSingle
4064756   +          +     2.35299228753934 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.49828378489244 * Education2n_Cycle +
0.39089624737534 * EducationBasic + -0.48226710339977 * EducationGraduation +
-0.06304916771632 * EducationMaster + -1.56926331102732 * Marital_StatusDivorced +
2.38562782588323 * Marital_StatusMarried + -1.91012008029228 * Marital_StatusSingle +
2.35299228753934 * Marital_StatusTogether ;
4064757   +   H1x1_2  = H1x1_2  +    -0.32482988110182 * Education2n_Cycle
4064758   +          +    -0.31705264382373 * EducationBasic  +    -0.14073222836204 *
4064759   +        EducationGraduation  +    -0.14552128560395 * EducationMaster
4064760   +          +     0.39329538853368 * Marital_StatusDivorced
4064761   +          +       0.055543492668 * Marital_StatusMarried
4064762   +          +    -0.36260663573441 * Marital_StatusSingle
4064763   +          +     0.16563783024817 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.32482988110182 * Education2n_Cycle +
-0.31705264382373 * EducationBasic + -0.14073222836204 * EducationGraduation +
-0.14552128560395 * EducationMaster + 0.39329538853368 * Marital_StatusDivorced +
0.055543492668 * Marital_StatusMarried + -0.36260663573441 * Marital_StatusSingle +
0.16563783024817 * Marital_StatusTogether ;
4064764   +   H1x1_1  =     0.82901515254061 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.82901515254061 + H1x1_1 ;
4064765   +   H1x1_2  =     -1.6113683532078 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.6113683532078 + H1x1_2 ;
4064766   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
4064767   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
4064768   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4064769   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4064770   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4064771   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4064772   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4064773   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4064774   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4064775   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4064776   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4064777   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4064778   +END;
MPRINT(EM_DIAGRAM):   END;
4064779   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4064780   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4064781   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4064782   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4064783   +END;
MPRINT(EM_DIAGRAM):   END;
4064784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064785   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4064786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064787   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4064788   +   H1x2_1  =     -1.1749963769098 * S_AcceptedCmpTotal
4064789   +          +      0.0835452152484 * S_Age  +     0.29627839234992 * S_Frq
4064790   +          +    -0.11493797334082 * S_Income  +    -1.11510356366657 *
4064791   +        S_Kidhome  +     0.18185063757674 * S_Mnt  +    -0.17631127507692 *
4064792   +        S_MntFishProducts  +     1.24365107847098 * S_MntFruits
4064793   +          +     0.16504711681039 * S_MntGoldProds  +     0.99592906524599 *
4064794   +        S_MntMeatProducts  +     0.07387543627707 * S_MntSweetProducts
4064795   +          +    -0.00693664828192 * S_MntWines  +    -0.14413765189074 *
4064796   +        S_MonthsAsCustomer  +    -0.36632511301344 * S_NumCatalogPurchases
4064797   +          +    -0.41717905931734 * S_NumDealsPurchases
4064798   +          +    -0.48750443671176 * S_NumDistPurchases
4064799   +          +      1.9775770151507 * S_NumStorePurchases
4064800   +          +    -0.43534422425416 * S_NumWebPurchases
4064801   +          +    -1.48049451059329 * S_NumWebVisitsMonth
4064802   +          +     1.55056718888347 * S_RFMstat  +    -1.96774244937803 *
4064803   +        S_RMntFrq  +     -1.0977291490167 * S_Recency
4064804   +          +    -1.73756201871547 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.1749963769098 * S_AcceptedCmpTotal + 0.0835452152484 * S_Age
+ 0.29627839234992 * S_Frq + -0.11493797334082 * S_Income + -1.11510356366657 * S_Kidhome +
0.18185063757674 * S_Mnt + -0.17631127507692 * S_MntFishProducts + 1.24365107847098 *
S_MntFruits + 0.16504711681039 * S_MntGoldProds + 0.99592906524599 * S_MntMeatProducts +
0.07387543627707 * S_MntSweetProducts + -0.00693664828192 * S_MntWines + -0.14413765189074 *
S_MonthsAsCustomer + -0.36632511301344 * S_NumCatalogPurchases + -0.41717905931734 *
S_NumDealsPurchases + -0.48750443671176 * S_NumDistPurchases + 1.9775770151507 *
S_NumStorePurchases + -0.43534422425416 * S_NumWebPurchases + -1.48049451059329 *
S_NumWebVisitsMonth + 1.55056718888347 * S_RFMstat + -1.96774244937803 * S_RMntFrq +
-1.0977291490167 * S_Recency + -1.73756201871547 * S_Teenhome ;
4064805   +   H1x2_2  =     0.87479703138918 * S_AcceptedCmpTotal
4064806   +          +    -0.61917505429247 * S_Age  +     0.18385580137989 * S_Frq
4064807   +          +     0.30709491132909 * S_Income  +      1.6244568354812 *
4064808   +        S_Kidhome  +     0.77673205123801 * S_Mnt  +    -0.00950889578201 *
4064809   +        S_MntFishProducts  +    -0.47007254592819 * S_MntFruits
4064810   +          +      0.6454406759241 * S_MntGoldProds  +     0.78795218230384 *
4064811   +        S_MntMeatProducts  +    -1.18230648640376 * S_MntSweetProducts
4064812   +          +     1.41552316954503 * S_MntWines  +    -0.46565264346633 *
4064813   +        S_MonthsAsCustomer  +     0.48368171409283 * S_NumCatalogPurchases
4064814   +          +     0.76267091632012 * S_NumDealsPurchases
4064815   +          +     1.55118513069849 * S_NumDistPurchases
4064816   +          +       1.649962776028 * S_NumStorePurchases
4064817   +          +    -0.27453335733875 * S_NumWebPurchases
4064818   +          +     0.26599210649756 * S_NumWebVisitsMonth
4064819   +          +     0.00143802909271 * S_RFMstat  +    -0.62161550917558 *
4064820   +        S_RMntFrq  +    -0.60215803586133 * S_Recency
4064821   +          +     0.22509643762583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.87479703138918 * S_AcceptedCmpTotal + -0.61917505429247 *
S_Age + 0.18385580137989 * S_Frq + 0.30709491132909 * S_Income + 1.6244568354812 * S_Kidhome +
0.77673205123801 * S_Mnt + -0.00950889578201 * S_MntFishProducts + -0.47007254592819 *
S_MntFruits + 0.6454406759241 * S_MntGoldProds + 0.78795218230384 * S_MntMeatProducts +
-1.18230648640376 * S_MntSweetProducts + 1.41552316954503 * S_MntWines + -0.46565264346633 *
S_MonthsAsCustomer + 0.48368171409283 * S_NumCatalogPurchases + 0.76267091632012 *
S_NumDealsPurchases + 1.55118513069849 * S_NumDistPurchases + 1.649962776028 *
S_NumStorePurchases + -0.27453335733875 * S_NumWebPurchases + 0.26599210649756 *
S_NumWebVisitsMonth + 0.00143802909271 * S_RFMstat + -0.62161550917558 * S_RMntFrq +
-0.60215803586133 * S_Recency + 0.22509643762583 * S_Teenhome ;
4064822   +   H1x2_1  = H1x2_1  +    -0.22417594551449 * AcceptedCmp10
4064823   +          +    -0.55200708632393 * AcceptedCmp20  +     1.04226929662396 *
4064824   +        AcceptedCmp30  +    -0.43983724759528 * AcceptedCmp40
4064825   +          +    -0.97319667842772 * AcceptedCmp50  +     2.14592283316473 *
4064826   +        Complain0  +     0.00148996042832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.22417594551449 * AcceptedCmp10 + -0.55200708632393
* AcceptedCmp20 + 1.04226929662396 * AcceptedCmp30 + -0.43983724759528 * AcceptedCmp40 +
-0.97319667842772 * AcceptedCmp50 + 2.14592283316473 * Complain0 + 0.00148996042832 *
HigherEducationBinary0 ;
4064827   +   H1x2_2  = H1x2_2  +     1.02054806337451 * AcceptedCmp10
4064828   +          +      2.0527957252179 * AcceptedCmp20  +     0.15243342547701 *
4064829   +        AcceptedCmp30  +    -2.55108921567655 * AcceptedCmp40
4064830   +          +    -0.66084381908537 * AcceptedCmp50  +    -0.15574677370344 *
4064831   +        Complain0  +    -0.89833811964409 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.02054806337451 * AcceptedCmp10 + 2.0527957252179 *
AcceptedCmp20 + 0.15243342547701 * AcceptedCmp30 + -2.55108921567655 * AcceptedCmp40 +
-0.66084381908537 * AcceptedCmp50 + -0.15574677370344 * Complain0 + -0.89833811964409 *
HigherEducationBinary0 ;
4064832   +   H1x2_1  = H1x2_1  +     0.47883438771897 * Education2n_Cycle
4064833   +          +     1.28689916550347 * EducationBasic  +    -1.05405263417007 *
4064834   +        EducationGraduation  +     0.24617525366101 * EducationMaster
4064835   +          +    -1.84502099308633 * Marital_StatusDivorced
4064836   +          +     0.16524535969204 * Marital_StatusMarried
4064837   +          +     0.01375012857393 * Marital_StatusSingle
4064838   +          +     0.33752759564982 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.47883438771897 * Education2n_Cycle +
1.28689916550347 * EducationBasic + -1.05405263417007 * EducationGraduation + 0.24617525366101
* EducationMaster + -1.84502099308633 * Marital_StatusDivorced + 0.16524535969204 *
Marital_StatusMarried + 0.01375012857393 * Marital_StatusSingle + 0.33752759564982 *
Marital_StatusTogether ;
4064839   +   H1x2_2  = H1x2_2  +     -0.4088130246632 * Education2n_Cycle
4064840   +          +    -0.51383473075458 * EducationBasic  +     0.81399641406825 *
4064841   +        EducationGraduation  +      0.6427794380992 * EducationMaster
4064842   +          +     0.18210930140238 * Marital_StatusDivorced
4064843   +          +    -1.49615662968181 * Marital_StatusMarried
4064844   +          +     1.61043484549536 * Marital_StatusSingle
4064845   +          +    -1.22593755313209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.4088130246632 * Education2n_Cycle +
-0.51383473075458 * EducationBasic + 0.81399641406825 * EducationGraduation + 0.6427794380992
* EducationMaster + 0.18210930140238 * Marital_StatusDivorced + -1.49615662968181 *
Marital_StatusMarried + 1.61043484549536 * Marital_StatusSingle + -1.22593755313209 *
Marital_StatusTogether ;
4064846   +   H1x2_1  =    -1.87516498734281 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.87516498734281 + H1x2_1 ;
4064847   +   H1x2_2  =     -1.2865444436051 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.2865444436051 + H1x2_2 ;
4064848   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
4064849   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
4064850   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4064851   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4064852   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4064853   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4064854   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4064855   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4064856   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4064857   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4064858   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4064859   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4064860   +END;
MPRINT(EM_DIAGRAM):   END;
4064861   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4064862   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4064863   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4064864   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4064865   +END;
MPRINT(EM_DIAGRAM):   END;
4064866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064867   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4064868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064869   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4064870   +   H2x1_1  =     1.23576217175305 * H1x1_1  +     4.19315123860009 * H1x1_2
4064871   +          +    -3.85498900364115 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.23576217175305 * H1x1_1 + 4.19315123860009 * H1x1_2 +
-3.85498900364115 * H1x1_3 ;
4064872   +   H2x1_2  =        0.24209158888 * H1x1_1  +     0.59735252655183 * H1x1_2
4064873   +          +     1.27545750114528 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.24209158888 * H1x1_1 + 0.59735252655183 * H1x1_2 +
1.27545750114528 * H1x1_3 ;
4064874   +   H2x1_3  =     1.36411346566831 * H1x1_1  +     4.19709046572946 * H1x1_2
4064875   +          +    -4.50940237896172 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.36411346566831 * H1x1_1 + 4.19709046572946 * H1x1_2 +
-4.50940237896172 * H1x1_3 ;
4064876   +   H2x1_1  = H2x1_1  +     0.65417285199474 * H1x2_1
4064877   +          +      2.5072311354855 * H1x2_2  +     -2.0438449895367 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.65417285199474 * H1x2_1 + 2.5072311354855 * H1x2_2 +
-2.0438449895367 * H1x2_3 ;
4064878   +   H2x1_2  = H2x1_2  +      0.4352357645315 * H1x2_1
4064879   +          +     -0.9643467516424 * H1x2_2  +     0.46452403975724 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.4352357645315 * H1x2_1 + -0.9643467516424 * H1x2_2 +
0.46452403975724 * H1x2_3 ;
4064880   +   H2x1_3  = H2x1_3  +     0.13671643242806 * H1x2_1
4064881   +          +     1.59797252596846 * H1x2_2  +    -2.67821815632058 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.13671643242806 * H1x2_1 + 1.59797252596846 * H1x2_2
+ -2.67821815632058 * H1x2_3 ;
4064882   +   H2x1_1  =     0.15805888658617 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.15805888658617 + H2x1_1 ;
4064883   +   H2x1_2  =     1.42566993600015 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.42566993600015 + H2x1_2 ;
4064884   +   H2x1_3  =     1.00076706282181 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.00076706282181 + H2x1_3 ;
4064885   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4064886   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4064887   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4064888   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4064889   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4064890   +END;
MPRINT(EM_DIAGRAM):   END;
4064891   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4064892   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4064893   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4064894   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4064895   +END;
MPRINT(EM_DIAGRAM):   END;
4064896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064897   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4064898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064899   +
4064900   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4064901   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4064902   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4064903   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4064904   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4064905   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4064906   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4064907   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4064908   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4064909   +end;
MPRINT(EM_DIAGRAM):   end;
4064910   +else do;
MPRINT(EM_DIAGRAM):   else do;
4064911   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4064912   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4064913   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4064914   +   end;
MPRINT(EM_DIAGRAM):   end;
4064915   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4064916   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4064917   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4064918   +   end;
MPRINT(EM_DIAGRAM):   end;
4064919   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4064920   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4064921   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4064922   +   end;
MPRINT(EM_DIAGRAM):   end;
4064923   +end;
MPRINT(EM_DIAGRAM):   end;
4064924   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4064925   +   P_DepVar1  =    -6.91101516234847 * H2x1_1  +     1.76281132920385 * H2x1_2
4064926   +          +     -7.2624751055034 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.91101516234847 * H2x1_1 + 1.76281132920385 * H2x1_2 +
-7.2624751055034 * H2x1_3 ;
4064927   +   P_DepVar1  =     -0.0724356806648 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.0724356806648 + P_DepVar1 ;
4064928   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4064929   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4064930   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4064931   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4064932   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4064933   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4064934   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4064935   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4064936   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4064937   +END;
MPRINT(EM_DIAGRAM):   END;
4064938   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4064939   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4064940   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4064941   +END;
MPRINT(EM_DIAGRAM):   END;
4064942   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4064943   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4064944   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4064945   +END;
MPRINT(EM_DIAGRAM):   END;
4064946   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4064947   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4064948   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4064949   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4064950   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4064951   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4064952   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4064953   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064954   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4064955   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4064956   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4064957   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4064958   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4064959   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4064960   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4064961   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4064962   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4064963   +END;
MPRINT(EM_DIAGRAM):   END;
4064964   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4064965   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4064966   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4064967   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4064968   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
4064969   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064970   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
4064971   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064972   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
4064973   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
4064974   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
4064975   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
4064976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064977   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
4064978   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064979   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
4064980   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
4064981   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
4064982   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064983   +* Ensmbl36: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 4 of 7;
4064984   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064985   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064986   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4064987   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4064988   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
4064989   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4064990   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4064991   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4064992   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4064993   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4064994   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4064995   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4064996   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4064997   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4064998   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4064999   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4065000   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4065001   +LENGTH _WARN_ $4
4065002   +      F_DepVar  $ 12
4065003   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4065004   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4065005   +
4065006   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4065007   +
4065008   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4065009   +
4065010   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4065011   +
4065012   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4065013   +
4065014   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4065015   +
4065016   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4065017   +
4065018   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4065019   +
4065020   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4065021   +
4065022   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4065023   +
4065024   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4065025   +
4065026   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4065027   +
4065028   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4065029   +
4065030   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4065031   +
4065032   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4065033   +
4065034   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4065035   +
4065036   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4065037   +
4065038   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4065039   +
4065040   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4065041   +
4065042   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4065043   +
4065044   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4065045   +
4065046   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4065047   +
4065048   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4065049   +
4065050   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4065051   +
4065052   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4065053   +
4065054   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4065055   +
4065056   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4065057   +
4065058   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4065059   +
4065060   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4065061   +
4065062   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4065063   +
4065064   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4065065   +
4065066   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4065067   +
4065068   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4065069   +
4065070   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4065071   +
4065072   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4065073   +
4065074   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4065075   +
4065076   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4065077   +
4065078   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4065079   +
4065080   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4065081   +
4065082   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4065083   +
4065084   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4065085   +
4065086   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4065087   +
4065088   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4065089   +
4065090   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4065091   +
4065092   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4065093   +
4065094   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4065095   +
4065096   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4065097   +
4065098   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4065099   +
4065100   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4065101   +
4065102   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
4065103   +
4065104   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
4065105   +
4065106   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
4065107   +
4065108   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
4065109   +
4065110   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4065111   +
4065112   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4065113   +
4065114   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4065115   +
4065116   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4065117   +
4065118   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4065119   +
4065120   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4065121   +
4065122   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
4065123   +
4065124   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
4065125   +
4065126   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
4065127   +
4065128   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
4065129   +
4065130   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4065131   +
4065132   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
4065133   +
4065134   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
4065135   +
4065136   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
4065137   +
4065138   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
4065139   +
4065140   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4065141   +
4065142   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4065143   +
4065144   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4065145   +
4065146   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4065147   +
4065148   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4065149   +
4065150   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4065151   +
4065152   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4065153   +
4065154   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4065155   +
4065156   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4065157   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4065158   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4065159   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4065160   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4065161   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065162   +end;
MPRINT(EM_DIAGRAM):   end;
4065163   +else do;
MPRINT(EM_DIAGRAM):   else do;
4065164   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4065165   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4065166   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4065167   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4065168   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4065169   +   end;
MPRINT(EM_DIAGRAM):   end;
4065170   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4065171   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4065172   +   end;
MPRINT(EM_DIAGRAM):   end;
4065173   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4065174   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4065175   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4065176   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065177   +   end;
MPRINT(EM_DIAGRAM):   end;
4065178   +end;
MPRINT(EM_DIAGRAM):   end;
4065179   +
4065180   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4065181   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4065182   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4065183   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4065184   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4065185   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065186   +end;
MPRINT(EM_DIAGRAM):   end;
4065187   +else do;
MPRINT(EM_DIAGRAM):   else do;
4065188   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4065189   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4065190   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4065191   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4065192   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4065193   +   end;
MPRINT(EM_DIAGRAM):   end;
4065194   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4065195   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4065196   +   end;
MPRINT(EM_DIAGRAM):   end;
4065197   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4065198   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4065199   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4065200   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065201   +   end;
MPRINT(EM_DIAGRAM):   end;
4065202   +end;
MPRINT(EM_DIAGRAM):   end;
4065203   +
4065204   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4065205   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4065206   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4065207   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4065208   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4065209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065210   +end;
MPRINT(EM_DIAGRAM):   end;
4065211   +else do;
MPRINT(EM_DIAGRAM):   else do;
4065212   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4065213   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4065214   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4065215   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4065216   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4065217   +   end;
MPRINT(EM_DIAGRAM):   end;
4065218   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4065219   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4065220   +   end;
MPRINT(EM_DIAGRAM):   end;
4065221   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4065222   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4065223   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4065224   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065225   +   end;
MPRINT(EM_DIAGRAM):   end;
4065226   +end;
MPRINT(EM_DIAGRAM):   end;
4065227   +
4065228   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4065229   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4065230   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4065231   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4065232   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4065233   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065234   +end;
MPRINT(EM_DIAGRAM):   end;
4065235   +else do;
MPRINT(EM_DIAGRAM):   else do;
4065236   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4065237   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4065238   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4065239   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4065240   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4065241   +   end;
MPRINT(EM_DIAGRAM):   end;
4065242   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4065243   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4065244   +   end;
MPRINT(EM_DIAGRAM):   end;
4065245   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4065246   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4065247   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4065248   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065249   +   end;
MPRINT(EM_DIAGRAM):   end;
4065250   +end;
MPRINT(EM_DIAGRAM):   end;
4065251   +
4065252   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4065253   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4065254   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4065255   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4065256   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4065257   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065258   +end;
MPRINT(EM_DIAGRAM):   end;
4065259   +else do;
MPRINT(EM_DIAGRAM):   else do;
4065260   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4065261   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4065262   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4065263   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4065264   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4065265   +   end;
MPRINT(EM_DIAGRAM):   end;
4065266   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4065267   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4065268   +   end;
MPRINT(EM_DIAGRAM):   end;
4065269   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4065270   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4065271   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4065272   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065273   +   end;
MPRINT(EM_DIAGRAM):   end;
4065274   +end;
MPRINT(EM_DIAGRAM):   end;
4065275   +
4065276   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4065277   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4065278   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4065279   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4065280   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4065281   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065282   +end;
MPRINT(EM_DIAGRAM):   end;
4065283   +else do;
MPRINT(EM_DIAGRAM):   else do;
4065284   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4065285   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4065286   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4065287   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4065288   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4065289   +   end;
MPRINT(EM_DIAGRAM):   end;
4065290   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4065291   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4065292   +   end;
MPRINT(EM_DIAGRAM):   end;
4065293   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4065294   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4065295   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4065296   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065297   +   end;
MPRINT(EM_DIAGRAM):   end;
4065298   +end;
MPRINT(EM_DIAGRAM):   end;
4065299   +
4065300   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4065301   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4065302   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4065303   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4065304   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4065305   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065306   +end;
MPRINT(EM_DIAGRAM):   end;
4065307   +else do;
MPRINT(EM_DIAGRAM):   else do;
4065308   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4065309   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4065310   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4065311   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4065312   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4065313   +   end;
MPRINT(EM_DIAGRAM):   end;
4065314   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4065315   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4065316   +   end;
MPRINT(EM_DIAGRAM):   end;
4065317   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4065318   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4065319   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4065320   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065321   +   end;
MPRINT(EM_DIAGRAM):   end;
4065322   +end;
MPRINT(EM_DIAGRAM):   end;
4065323   +
4065324   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4065325   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4065326   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4065327   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4065328   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4065329   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4065330   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4065331   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4065332   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4065333   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4065334   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4065335   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4065336   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4065337   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065338   +end;
MPRINT(EM_DIAGRAM):   end;
4065339   +else do;
MPRINT(EM_DIAGRAM):   else do;
4065340   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4065341   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4065342   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4065343   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4065344   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4065345   +   end;
MPRINT(EM_DIAGRAM):   end;
4065346   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4065347   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4065348   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4065349   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4065350   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4065351   +   end;
MPRINT(EM_DIAGRAM):   end;
4065352   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4065353   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4065354   +   end;
MPRINT(EM_DIAGRAM):   end;
4065355   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4065356   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4065357   +   end;
MPRINT(EM_DIAGRAM):   end;
4065358   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4065359   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4065360   +   end;
MPRINT(EM_DIAGRAM):   end;
4065361   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4065362   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4065363   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4065364   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4065365   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4065366   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4065367   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065368   +   end;
MPRINT(EM_DIAGRAM):   end;
4065369   +end;
MPRINT(EM_DIAGRAM):   end;
4065370   +
4065371   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4065372   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4065373   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4065374   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4065375   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4065376   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4065377   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4065378   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4065379   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4065380   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4065381   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4065382   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4065383   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4065384   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4065385   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065386   +end;
MPRINT(EM_DIAGRAM):   end;
4065387   +else do;
MPRINT(EM_DIAGRAM):   else do;
4065388   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4065389   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4065390   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4065391   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4065392   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4065393   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4065394   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4065395   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4065396   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4065397   +         end;
MPRINT(EM_DIAGRAM):   end;
4065398   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4065399   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4065400   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4065401   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4065402   +            end;
MPRINT(EM_DIAGRAM):   end;
4065403   +         end;
MPRINT(EM_DIAGRAM):   end;
4065404   +      end;
MPRINT(EM_DIAGRAM):   end;
4065405   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4065406   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4065407   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4065408   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4065409   +         end;
MPRINT(EM_DIAGRAM):   end;
4065410   +      end;
MPRINT(EM_DIAGRAM):   end;
4065411   +   end;
MPRINT(EM_DIAGRAM):   end;
4065412   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4065413   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4065414   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4065415   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4065416   +      end;
MPRINT(EM_DIAGRAM):   end;
4065417   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4065418   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4065419   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4065420   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4065421   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4065422   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4065423   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4065424   +         end;
MPRINT(EM_DIAGRAM):   end;
4065425   +      end;
MPRINT(EM_DIAGRAM):   end;
4065426   +   end;
MPRINT(EM_DIAGRAM):   end;
4065427   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4065428   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4065429   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4065430   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4065431   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4065432   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4065433   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065434   +   end;
MPRINT(EM_DIAGRAM):   end;
4065435   +end;
MPRINT(EM_DIAGRAM):   end;
4065436   +
4065437   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4065438   +*** Checking missing input Interval
4065439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4065440   +
4065441   +IF NMISS(
4065442   +   AcceptedCmpTotal ,
4065443   +   Age ,
4065444   +   Frq ,
4065445   +   Income ,
4065446   +   Kidhome ,
4065447   +   Mnt ,
4065448   +   MntFishProducts ,
4065449   +   MntFruits ,
4065450   +   MntGoldProds ,
4065451   +   MntMeatProducts ,
4065452   +   MntSweetProducts ,
4065453   +   MntWines ,
4065454   +   MonthsAsCustomer ,
4065455   +   NumCatalogPurchases ,
4065456   +   NumDealsPurchases ,
4065457   +   NumDistPurchases ,
4065458   +   NumStorePurchases ,
4065459   +   NumWebPurchases ,
4065460   +   NumWebVisitsMonth ,
4065461   +   RFMstat ,
4065462   +   RMntFrq ,
4065463   +   Recency ,
4065464   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4065465   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4065466   +
4065467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4065468   +END;
MPRINT(EM_DIAGRAM):   END;
4065469   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4065470   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4065471   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4065472   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4065473   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4065474   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4065475   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4065476   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4065477   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4065478   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4065479   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4065480   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4065481   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4065482   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4065483   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4065484   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4065485   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4065486   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4065487   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4065488   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4065489   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4065490   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4065491   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4065492   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4065493   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4065494   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4065495   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4065496   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4065497   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4065498   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4065499   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4065500   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4065501   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4065502   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4065503   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4065504   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4065505   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4065506   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4065507   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4065508   +END;
MPRINT(EM_DIAGRAM):   END;
4065509   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4065510   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4065511   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4065512   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4065513   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4065514   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4065515   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4065516   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4065517   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4065518   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4065519   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4065520   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4065521   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4065522   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4065523   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4065524   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4065525   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4065526   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4065527   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4065528   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4065529   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4065530   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4065531   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4065532   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4065533   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4065534   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4065535   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4065536   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4065537   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4065538   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4065539   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4065540   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4065541   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4065542   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4065543   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4065544   +   ELSE S_NumCatalogPurchases
4065545   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4065546   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4065547   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4065548   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4065549   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4065550   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4065551   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4065552   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4065553   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4065554   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4065555   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4065556   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4065557   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4065558   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4065559   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4065560   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4065561   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4065562   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4065563   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4065564   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4065565   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4065566   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4065567   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4065568   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4065569   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4065570   +END;
MPRINT(EM_DIAGRAM):   END;
4065571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4065572   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4065573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4065574   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4065575   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4065576   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4065577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4065578   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4065579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4065580   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4065581   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
4065582   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
4065583   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
4065584   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
4065585   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
4065586   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
4065587   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
4065588   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
4065589   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
4065590   +          +     3.45371614080196 * S_NumDealsPurchases
4065591   +          +     0.19118374544537 * S_NumDistPurchases
4065592   +          +    -2.45138001446793 * S_NumStorePurchases
4065593   +          +    -0.11424280244155 * S_NumWebPurchases
4065594   +          +    -2.31770357716565 * S_NumWebVisitsMonth
4065595   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
4065596   +        S_RMntFrq  +     0.26870809438679 * S_Recency
4065597   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
4065598   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
4065599   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
4065600   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
4065601   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
4065602   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
4065603   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
4065604   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
4065605   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
4065606   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
4065607   +          +    -1.28390925647659 * S_NumDealsPurchases
4065608   +          +     0.82669177239926 * S_NumDistPurchases
4065609   +          +     1.71678585204511 * S_NumStorePurchases
4065610   +          +     1.49226295608046 * S_NumWebPurchases
4065611   +          +     -4.0105103018388 * S_NumWebVisitsMonth
4065612   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
4065613   +        S_RMntFrq  +     4.74241121363086 * S_Recency
4065614   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
4065615   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
4065616   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
4065617   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
4065618   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
4065619   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
4065620   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
4065621   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
4065622   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
4065623   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
4065624   +          +     0.22958626391725 * S_NumDealsPurchases
4065625   +          +    -0.02046515813996 * S_NumDistPurchases
4065626   +          +      0.8618502050837 * S_NumStorePurchases
4065627   +          +     1.45175370326009 * S_NumWebPurchases
4065628   +          +    -0.86122442436156 * S_NumWebVisitsMonth
4065629   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
4065630   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
4065631   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
4065632   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
4065633   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
4065634   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
4065635   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
4065636   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
4065637   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
4065638   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
4065639   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
4065640   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
4065641   +          +     1.25310034610344 * S_NumDealsPurchases
4065642   +          +     0.92141098602176 * S_NumDistPurchases
4065643   +          +    -0.08806509391473 * S_NumStorePurchases
4065644   +          +     -1.0533787624668 * S_NumWebPurchases
4065645   +          +     3.07050739830585 * S_NumWebVisitsMonth
4065646   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
4065647   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
4065648   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
4065649   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
4065650   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
4065651   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
4065652   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
4065653   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
4065654   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
4065655   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
4065656   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
4065657   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
4065658   +          +    -1.68259553608287 * S_NumDealsPurchases
4065659   +          +    -0.53835572290445 * S_NumDistPurchases
4065660   +          +     1.25833922835446 * S_NumStorePurchases
4065661   +          +     0.48300830623998 * S_NumWebPurchases
4065662   +          +    -2.20119275236582 * S_NumWebVisitsMonth
4065663   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
4065664   +        S_RMntFrq  +     0.35692712879409 * S_Recency
4065665   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
4065666   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
4065667   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
4065668   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
4065669   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
4065670   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
4065671   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
4065672   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
4065673   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
4065674   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
4065675   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
4065676   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
4065677   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
4065678   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
4065679   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
4065680   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
4065681   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
4065682   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
4065683   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
4065684   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
4065685   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
4065686   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
4065687   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
4065688   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
4065689   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
4065690   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
4065691   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
4065692   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
4065693   +        EducationGraduation  +     1.25189584055994 * EducationMaster
4065694   +          +     0.26230568150721 * Marital_StatusDivorced
4065695   +          +     0.27563523967756 * Marital_StatusMarried
4065696   +          +     0.54464481618478 * Marital_StatusSingle
4065697   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
4065698   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
4065699   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
4065700   +        EducationGraduation  +     0.29772013614284 * EducationMaster
4065701   +          +    -0.06750661313108 * Marital_StatusDivorced
4065702   +          +     1.48628445854207 * Marital_StatusMarried
4065703   +          +    -0.52197797291165 * Marital_StatusSingle
4065704   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
4065705   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
4065706   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
4065707   +        EducationGraduation  +     0.45665087056809 * EducationMaster
4065708   +          +     0.03219453957597 * Marital_StatusDivorced
4065709   +          +    -0.73835008216677 * Marital_StatusMarried
4065710   +          +     0.11212575818086 * Marital_StatusSingle
4065711   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
4065712   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
4065713   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
4065714   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
4065715   +          +    -0.95055539413405 * Marital_StatusDivorced
4065716   +          +    -1.65922419336067 * Marital_StatusMarried
4065717   +          +     0.78727538125107 * Marital_StatusSingle
4065718   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
4065719   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
4065720   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
4065721   +        EducationGraduation  +     0.46710355433642 * EducationMaster
4065722   +          +     -4.1747415035634 * Marital_StatusDivorced
4065723   +          +     3.61194282451968 * Marital_StatusMarried
4065724   +          +     -3.2800495365546 * Marital_StatusSingle
4065725   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
4065726   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
4065727   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
4065728   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
4065729   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
4065730   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
4065731   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4065732   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4065733   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4065734   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
4065735   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
4065736   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
4065737   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
4065738   +END;
MPRINT(EM_DIAGRAM):   END;
4065739   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4065740   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4065741   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4065742   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4065743   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4065744   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4065745   +END;
MPRINT(EM_DIAGRAM):   END;
4065746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4065747   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4065748   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4065749   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4065750   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
4065751   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
4065752   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
4065753   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
4065754   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
4065755   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
4065756   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
4065757   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
4065758   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
4065759   +          +     1.29727972396867 * S_NumDealsPurchases
4065760   +          +     -0.4796144286007 * S_NumDistPurchases
4065761   +          +     0.88365985808591 * S_NumStorePurchases
4065762   +          +     0.68522096892804 * S_NumWebPurchases
4065763   +          +     0.54931043107798 * S_NumWebVisitsMonth
4065764   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
4065765   +        S_RMntFrq  +     2.35704770144328 * S_Recency
4065766   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
4065767   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
4065768   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
4065769   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
4065770   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
4065771   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
4065772   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
4065773   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
4065774   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
4065775   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
4065776   +          +     0.26997834581422 * S_NumDealsPurchases
4065777   +          +      1.4974894627406 * S_NumDistPurchases
4065778   +          +     0.20577850505638 * S_NumStorePurchases
4065779   +          +     0.67578530037026 * S_NumWebPurchases
4065780   +          +     1.48893165613941 * S_NumWebVisitsMonth
4065781   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
4065782   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
4065783   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
4065784   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
4065785   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
4065786   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
4065787   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
4065788   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
4065789   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
4065790   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
4065791   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
4065792   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
4065793   +          +    -0.75474919633886 * S_NumDealsPurchases
4065794   +          +     2.21872386475638 * S_NumDistPurchases
4065795   +          +    -0.36191460108989 * S_NumStorePurchases
4065796   +          +     0.03160010932412 * S_NumWebPurchases
4065797   +          +     0.00984650739909 * S_NumWebVisitsMonth
4065798   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
4065799   +        S_RMntFrq  +     0.97890474913417 * S_Recency
4065800   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
4065801   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
4065802   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
4065803   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
4065804   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
4065805   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
4065806   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
4065807   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
4065808   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
4065809   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
4065810   +          +    -1.12057357865269 * S_NumDealsPurchases
4065811   +          +    -0.70841760614521 * S_NumDistPurchases
4065812   +          +    -1.39174816270404 * S_NumStorePurchases
4065813   +          +    -1.62343249380806 * S_NumWebPurchases
4065814   +          +    -0.73097954508465 * S_NumWebVisitsMonth
4065815   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
4065816   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
4065817   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
4065818   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
4065819   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
4065820   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
4065821   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
4065822   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
4065823   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
4065824   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
4065825   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
4065826   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
4065827   +          +     0.66880481485557 * S_NumDealsPurchases
4065828   +          +     0.69540174544859 * S_NumDistPurchases
4065829   +          +     1.68246546921736 * S_NumStorePurchases
4065830   +          +     1.85958176898295 * S_NumWebPurchases
4065831   +          +    -0.23815810306565 * S_NumWebVisitsMonth
4065832   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
4065833   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
4065834   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
4065835   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
4065836   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
4065837   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
4065838   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
4065839   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
4065840   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
4065841   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
4065842   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
4065843   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
4065844   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
4065845   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
4065846   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
4065847   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
4065848   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
4065849   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
4065850   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
4065851   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
4065852   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
4065853   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
4065854   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
4065855   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
4065856   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
4065857   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
4065858   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
4065859   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
4065860   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
4065861   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
4065862   +        EducationGraduation  +     0.32623787352656 * EducationMaster
4065863   +          +      0.2766977476799 * Marital_StatusDivorced
4065864   +          +     0.99585126449473 * Marital_StatusMarried
4065865   +          +    -0.71244490682808 * Marital_StatusSingle
4065866   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
4065867   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
4065868   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
4065869   +        EducationGraduation  +     0.47239961039918 * EducationMaster
4065870   +          +     0.04724779113048 * Marital_StatusDivorced
4065871   +          +    -0.80186231440666 * Marital_StatusMarried
4065872   +          +    -0.02226793584171 * Marital_StatusSingle
4065873   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
4065874   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
4065875   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
4065876   +        EducationGraduation  +     0.41284540548646 * EducationMaster
4065877   +          +     0.28206835683721 * Marital_StatusDivorced
4065878   +          +     0.46500886756532 * Marital_StatusMarried
4065879   +          +     0.35327545255503 * Marital_StatusSingle
4065880   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
4065881   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
4065882   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
4065883   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
4065884   +          +     1.22291788006392 * Marital_StatusDivorced
4065885   +          +    -2.27040720272432 * Marital_StatusMarried
4065886   +          +     1.13606780043773 * Marital_StatusSingle
4065887   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
4065888   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
4065889   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
4065890   +        EducationGraduation  +      0.4909097120378 * EducationMaster
4065891   +          +     -0.3999800759199 * Marital_StatusDivorced
4065892   +          +    -0.40978271635345 * Marital_StatusMarried
4065893   +          +    -0.55524279444227 * Marital_StatusSingle
4065894   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
4065895   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
4065896   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
4065897   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
4065898   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
4065899   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
4065900   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4065901   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4065902   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4065903   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
4065904   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
4065905   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
4065906   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
4065907   +END;
MPRINT(EM_DIAGRAM):   END;
4065908   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4065909   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4065910   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4065911   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4065912   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4065913   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4065914   +END;
MPRINT(EM_DIAGRAM):   END;
4065915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4065916   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4065917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4065918   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4065919   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
4065920   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
4065921   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
4065922   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
4065923   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
4065924   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
4065925   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
4065926   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
4065927   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
4065928   +          +     0.15783958682465 * S_NumDealsPurchases
4065929   +          +     1.52124708558457 * S_NumDistPurchases
4065930   +          +     -1.3804418313581 * S_NumStorePurchases
4065931   +          +    -1.29570111649272 * S_NumWebPurchases
4065932   +          +    -0.64280706056547 * S_NumWebVisitsMonth
4065933   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
4065934   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
4065935   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
4065936   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
4065937   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
4065938   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
4065939   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
4065940   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
4065941   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
4065942   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
4065943   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
4065944   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
4065945   +          +     0.12337111358286 * S_NumDealsPurchases
4065946   +          +     -2.3848926094027 * S_NumDistPurchases
4065947   +          +    -1.20666646996433 * S_NumStorePurchases
4065948   +          +     0.89549302881365 * S_NumWebPurchases
4065949   +          +     0.95359042569947 * S_NumWebVisitsMonth
4065950   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
4065951   +        S_RMntFrq  +     0.17682790616815 * S_Recency
4065952   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
4065953   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
4065954   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
4065955   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
4065956   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
4065957   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
4065958   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
4065959   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
4065960   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
4065961   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
4065962   +          +    -1.05383642674948 * S_NumDealsPurchases
4065963   +          +     1.71861984509369 * S_NumDistPurchases
4065964   +          +     1.47595181536047 * S_NumStorePurchases
4065965   +          +    -1.64165005491178 * S_NumWebPurchases
4065966   +          +    -2.35130004742828 * S_NumWebVisitsMonth
4065967   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
4065968   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
4065969   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
4065970   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
4065971   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
4065972   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
4065973   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
4065974   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
4065975   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
4065976   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
4065977   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
4065978   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
4065979   +          +     0.13347794794222 * S_NumDealsPurchases
4065980   +          +     0.30533639886561 * S_NumDistPurchases
4065981   +          +     1.63892955540526 * S_NumStorePurchases
4065982   +          +     0.43734586516446 * S_NumWebPurchases
4065983   +          +     1.79260779802864 * S_NumWebVisitsMonth
4065984   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
4065985   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
4065986   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
4065987   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
4065988   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
4065989   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
4065990   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
4065991   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
4065992   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
4065993   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
4065994   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
4065995   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
4065996   +          +     1.64209094349557 * S_NumDealsPurchases
4065997   +          +    -0.38876870460627 * S_NumDistPurchases
4065998   +          +    -0.48559309584971 * S_NumStorePurchases
4065999   +          +     0.21254626353218 * S_NumWebPurchases
4066000   +          +    -0.71484448532542 * S_NumWebVisitsMonth
4066001   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
4066002   +        S_RMntFrq  +     0.44893411588775 * S_Recency
4066003   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
4066004   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
4066005   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
4066006   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
4066007   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
4066008   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
4066009   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
4066010   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
4066011   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
4066012   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
4066013   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
4066014   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
4066015   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
4066016   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
4066017   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
4066018   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
4066019   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
4066020   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
4066021   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
4066022   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
4066023   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
4066024   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
4066025   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
4066026   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
4066027   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
4066028   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
4066029   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
4066030   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
4066031   +        EducationGraduation  +     0.46887304015863 * EducationMaster
4066032   +          +     1.33953173091973 * Marital_StatusDivorced
4066033   +          +    -0.26253208073262 * Marital_StatusMarried
4066034   +          +    -0.00960552682431 * Marital_StatusSingle
4066035   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
4066036   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
4066037   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
4066038   +        EducationGraduation  +     1.05325310300372 * EducationMaster
4066039   +          +     1.43150850334311 * Marital_StatusDivorced
4066040   +          +    -0.69239127844934 * Marital_StatusMarried
4066041   +          +     2.08477562471559 * Marital_StatusSingle
4066042   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
4066043   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
4066044   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
4066045   +        EducationGraduation  +     1.80436924796338 * EducationMaster
4066046   +          +     1.08387556786168 * Marital_StatusDivorced
4066047   +          +      1.0283506000217 * Marital_StatusMarried
4066048   +          +    -0.87069431107983 * Marital_StatusSingle
4066049   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
4066050   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
4066051   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
4066052   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
4066053   +          +      -1.347780188307 * Marital_StatusDivorced
4066054   +          +    -0.53911983240372 * Marital_StatusMarried
4066055   +          +     0.22083074159185 * Marital_StatusSingle
4066056   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
4066057   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
4066058   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
4066059   +        EducationGraduation  +      1.6087631135774 * EducationMaster
4066060   +          +     1.46582538311384 * Marital_StatusDivorced
4066061   +          +     0.05256161016002 * Marital_StatusMarried
4066062   +          +    -1.21402967626877 * Marital_StatusSingle
4066063   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
4066064   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
4066065   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
4066066   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
4066067   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
4066068   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
4066069   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4066070   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4066071   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4066072   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
4066073   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
4066074   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
4066075   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
4066076   +END;
MPRINT(EM_DIAGRAM):   END;
4066077   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4066078   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4066079   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
4066080   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
4066081   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
4066082   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
4066083   +END;
MPRINT(EM_DIAGRAM):   END;
4066084   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066085   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4066086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066087   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4066088   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
4066089   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
4066090   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
4066091   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
4066092   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
4066093   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
4066094   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
4066095   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
4066096   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
4066097   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
4066098   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
4066099   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
4066100   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
4066101   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
4066102   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
4066103   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
4066104   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
4066105   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
4066106   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
4066107   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
4066108   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
4066109   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
4066110   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
4066111   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
4066112   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
4066113   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
4066114   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
4066115   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
4066116   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
4066117   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
4066118   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
4066119   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
4066120   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
4066121   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
4066122   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
4066123   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
4066124   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
4066125   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
4066126   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
4066127   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
4066128   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
4066129   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
4066130   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4066131   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4066132   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4066133   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4066134   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4066135   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4066136   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4066137   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4066138   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4066139   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4066140   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4066141   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4066142   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4066143   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4066144   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4066145   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4066146   +END;
MPRINT(EM_DIAGRAM):   END;
4066147   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4066148   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4066149   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4066150   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4066151   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4066152   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4066153   +END;
MPRINT(EM_DIAGRAM):   END;
4066154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066155   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4066156   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066157   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4066158   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
4066159   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
4066160   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
4066161   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
4066162   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
4066163   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
4066164   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
4066165   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
4066166   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
4066167   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
4066168   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
4066169   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
4066170   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
4066171   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
4066172   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
4066173   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
4066174   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
4066175   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
4066176   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
4066177   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
4066178   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
4066179   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
4066180   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
4066181   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
4066182   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
4066183   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
4066184   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
4066185   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
4066186   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
4066187   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
4066188   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
4066189   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
4066190   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
4066191   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
4066192   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
4066193   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
4066194   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
4066195   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
4066196   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
4066197   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
4066198   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
4066199   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
4066200   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4066201   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
4066202   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
4066203   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
4066204   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
4066205   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
4066206   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
4066207   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
4066208   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
4066209   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
4066210   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
4066211   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
4066212   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
4066213   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
4066214   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
4066215   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
4066216   +END;
MPRINT(EM_DIAGRAM):   END;
4066217   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4066218   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4066219   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
4066220   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
4066221   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
4066222   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
4066223   +END;
MPRINT(EM_DIAGRAM):   END;
4066224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066225   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4066226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066227   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4066228   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
4066229   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
4066230   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
4066231   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
4066232   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
4066233   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
4066234   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
4066235   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
4066236   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
4066237   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
4066238   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
4066239   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
4066240   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
4066241   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
4066242   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
4066243   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
4066244   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
4066245   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
4066246   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
4066247   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
4066248   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
4066249   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
4066250   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
4066251   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
4066252   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
4066253   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
4066254   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
4066255   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
4066256   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
4066257   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
4066258   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4066259   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
4066260   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
4066261   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
4066262   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
4066263   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
4066264   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
4066265   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
4066266   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
4066267   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
4066268   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
4066269   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
4066270   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
4066271   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
4066272   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
4066273   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
4066274   +END;
MPRINT(EM_DIAGRAM):   END;
4066275   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4066276   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4066277   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
4066278   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
4066279   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
4066280   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
4066281   +END;
MPRINT(EM_DIAGRAM):   END;
4066282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066283   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4066284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066285   +
4066286   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4066287   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4066288   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4066289   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4066290   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4066291   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4066292   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4066293   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4066294   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4066295   +end;
MPRINT(EM_DIAGRAM):   end;
4066296   +else do;
MPRINT(EM_DIAGRAM):   else do;
4066297   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4066298   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4066299   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4066300   +   end;
MPRINT(EM_DIAGRAM):   end;
4066301   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4066302   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4066303   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4066304   +   end;
MPRINT(EM_DIAGRAM):   end;
4066305   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4066306   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4066307   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4066308   +   end;
MPRINT(EM_DIAGRAM):   end;
4066309   +end;
MPRINT(EM_DIAGRAM):   end;
4066310   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4066311   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
4066312   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
4066313   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
4066314   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
4066315   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4066316   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4066317   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4066318   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4066319   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4066320   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4066321   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4066322   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4066323   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4066324   +END;
MPRINT(EM_DIAGRAM):   END;
4066325   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4066326   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4066327   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4066328   +END;
MPRINT(EM_DIAGRAM):   END;
4066329   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4066330   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4066331   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4066332   +END;
MPRINT(EM_DIAGRAM):   END;
4066333   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4066334   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4066335   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4066336   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4066337   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4066338   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4066339   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4066340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066341   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4066342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066343   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4066344   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4066345   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4066346   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4066347   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4066348   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4066349   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4066350   +END;
MPRINT(EM_DIAGRAM):   END;
4066351   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4066352   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4066353   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4066354   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4066355   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
4066356   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4066357   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
4066358   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4066359   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
4066360   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
4066361   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
4066362   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
4066363   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4066364   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
4066365   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4066366   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
4066367   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
4066368   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
4066369   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4066370   +* Ensmbl36: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 5 of 7;
4066371   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4066372   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4066373   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4066374   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4066375   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
4066376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4066377   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4066378   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4066379   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4066380   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4066381   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4066382   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4066383   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4066384   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4066385   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4066386   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4066387   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4066388   +LENGTH _WARN_ $4
4066389   +      F_DepVar  $ 12
4066390   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4066391   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4066392   +
4066393   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4066394   +
4066395   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4066396   +
4066397   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4066398   +
4066399   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4066400   +
4066401   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4066402   +
4066403   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4066404   +
4066405   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4066406   +
4066407   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4066408   +
4066409   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4066410   +
4066411   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4066412   +
4066413   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4066414   +
4066415   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4066416   +
4066417   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4066418   +
4066419   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4066420   +
4066421   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4066422   +
4066423   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4066424   +
4066425   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4066426   +
4066427   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4066428   +
4066429   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4066430   +
4066431   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4066432   +
4066433   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4066434   +
4066435   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4066436   +
4066437   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4066438   +
4066439   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4066440   +
4066441   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4066442   +
4066443   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4066444   +
4066445   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4066446   +
4066447   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4066448   +
4066449   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4066450   +
4066451   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4066452   +
4066453   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4066454   +
4066455   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4066456   +
4066457   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4066458   +
4066459   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4066460   +
4066461   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4066462   +
4066463   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4066464   +
4066465   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4066466   +
4066467   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4066468   +
4066469   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4066470   +
4066471   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4066472   +
4066473   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4066474   +
4066475   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4066476   +
4066477   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4066478   +
4066479   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4066480   +
4066481   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4066482   +
4066483   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4066484   +
4066485   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4066486   +
4066487   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4066488   +
4066489   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4066490   +
4066491   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4066492   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4066493   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4066494   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4066495   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4066496   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066497   +end;
MPRINT(EM_DIAGRAM):   end;
4066498   +else do;
MPRINT(EM_DIAGRAM):   else do;
4066499   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4066500   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4066501   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4066502   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4066503   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4066504   +   end;
MPRINT(EM_DIAGRAM):   end;
4066505   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4066506   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4066507   +   end;
MPRINT(EM_DIAGRAM):   end;
4066508   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4066509   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4066510   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4066511   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066512   +   end;
MPRINT(EM_DIAGRAM):   end;
4066513   +end;
MPRINT(EM_DIAGRAM):   end;
4066514   +
4066515   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4066516   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4066517   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4066518   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4066519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4066520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066521   +end;
MPRINT(EM_DIAGRAM):   end;
4066522   +else do;
MPRINT(EM_DIAGRAM):   else do;
4066523   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4066524   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4066525   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4066526   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4066527   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4066528   +   end;
MPRINT(EM_DIAGRAM):   end;
4066529   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4066530   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4066531   +   end;
MPRINT(EM_DIAGRAM):   end;
4066532   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4066533   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4066534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4066535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066536   +   end;
MPRINT(EM_DIAGRAM):   end;
4066537   +end;
MPRINT(EM_DIAGRAM):   end;
4066538   +
4066539   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4066540   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4066541   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4066542   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4066543   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4066544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066545   +end;
MPRINT(EM_DIAGRAM):   end;
4066546   +else do;
MPRINT(EM_DIAGRAM):   else do;
4066547   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4066548   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4066549   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4066550   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4066551   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4066552   +   end;
MPRINT(EM_DIAGRAM):   end;
4066553   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4066554   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4066555   +   end;
MPRINT(EM_DIAGRAM):   end;
4066556   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4066557   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4066558   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4066559   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066560   +   end;
MPRINT(EM_DIAGRAM):   end;
4066561   +end;
MPRINT(EM_DIAGRAM):   end;
4066562   +
4066563   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4066564   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4066565   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4066566   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4066567   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4066568   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066569   +end;
MPRINT(EM_DIAGRAM):   end;
4066570   +else do;
MPRINT(EM_DIAGRAM):   else do;
4066571   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4066572   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4066573   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4066574   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4066575   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4066576   +   end;
MPRINT(EM_DIAGRAM):   end;
4066577   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4066578   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4066579   +   end;
MPRINT(EM_DIAGRAM):   end;
4066580   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4066581   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4066582   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4066583   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066584   +   end;
MPRINT(EM_DIAGRAM):   end;
4066585   +end;
MPRINT(EM_DIAGRAM):   end;
4066586   +
4066587   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4066588   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4066589   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4066590   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4066591   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4066592   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066593   +end;
MPRINT(EM_DIAGRAM):   end;
4066594   +else do;
MPRINT(EM_DIAGRAM):   else do;
4066595   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4066596   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4066597   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4066598   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4066599   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4066600   +   end;
MPRINT(EM_DIAGRAM):   end;
4066601   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4066602   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4066603   +   end;
MPRINT(EM_DIAGRAM):   end;
4066604   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4066605   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4066606   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4066607   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066608   +   end;
MPRINT(EM_DIAGRAM):   end;
4066609   +end;
MPRINT(EM_DIAGRAM):   end;
4066610   +
4066611   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4066612   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4066613   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4066614   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4066615   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4066616   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066617   +end;
MPRINT(EM_DIAGRAM):   end;
4066618   +else do;
MPRINT(EM_DIAGRAM):   else do;
4066619   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4066620   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4066621   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4066622   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4066623   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4066624   +   end;
MPRINT(EM_DIAGRAM):   end;
4066625   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4066626   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4066627   +   end;
MPRINT(EM_DIAGRAM):   end;
4066628   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4066629   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4066630   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4066631   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066632   +   end;
MPRINT(EM_DIAGRAM):   end;
4066633   +end;
MPRINT(EM_DIAGRAM):   end;
4066634   +
4066635   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4066636   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4066637   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4066638   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4066639   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4066640   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066641   +end;
MPRINT(EM_DIAGRAM):   end;
4066642   +else do;
MPRINT(EM_DIAGRAM):   else do;
4066643   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4066644   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4066645   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4066646   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4066647   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4066648   +   end;
MPRINT(EM_DIAGRAM):   end;
4066649   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4066650   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4066651   +   end;
MPRINT(EM_DIAGRAM):   end;
4066652   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4066653   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4066654   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4066655   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066656   +   end;
MPRINT(EM_DIAGRAM):   end;
4066657   +end;
MPRINT(EM_DIAGRAM):   end;
4066658   +
4066659   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4066660   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4066661   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4066662   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4066663   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4066664   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4066665   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4066666   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4066667   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4066668   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4066669   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4066670   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4066671   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4066672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066673   +end;
MPRINT(EM_DIAGRAM):   end;
4066674   +else do;
MPRINT(EM_DIAGRAM):   else do;
4066675   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4066676   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4066677   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4066678   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4066679   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4066680   +   end;
MPRINT(EM_DIAGRAM):   end;
4066681   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4066682   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4066683   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4066684   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4066685   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4066686   +   end;
MPRINT(EM_DIAGRAM):   end;
4066687   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4066688   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4066689   +   end;
MPRINT(EM_DIAGRAM):   end;
4066690   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4066691   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4066692   +   end;
MPRINT(EM_DIAGRAM):   end;
4066693   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4066694   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4066695   +   end;
MPRINT(EM_DIAGRAM):   end;
4066696   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4066697   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4066698   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4066699   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4066700   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4066701   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4066702   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066703   +   end;
MPRINT(EM_DIAGRAM):   end;
4066704   +end;
MPRINT(EM_DIAGRAM):   end;
4066705   +
4066706   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4066707   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4066708   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4066709   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4066710   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4066711   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4066712   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4066713   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4066714   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4066715   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4066716   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4066717   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4066718   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4066719   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4066720   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066721   +end;
MPRINT(EM_DIAGRAM):   end;
4066722   +else do;
MPRINT(EM_DIAGRAM):   else do;
4066723   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4066724   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4066725   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4066726   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4066727   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4066728   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4066729   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4066730   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4066731   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4066732   +         end;
MPRINT(EM_DIAGRAM):   end;
4066733   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4066734   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4066735   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4066736   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4066737   +            end;
MPRINT(EM_DIAGRAM):   end;
4066738   +         end;
MPRINT(EM_DIAGRAM):   end;
4066739   +      end;
MPRINT(EM_DIAGRAM):   end;
4066740   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4066741   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4066742   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4066743   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4066744   +         end;
MPRINT(EM_DIAGRAM):   end;
4066745   +      end;
MPRINT(EM_DIAGRAM):   end;
4066746   +   end;
MPRINT(EM_DIAGRAM):   end;
4066747   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4066748   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4066749   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4066750   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4066751   +      end;
MPRINT(EM_DIAGRAM):   end;
4066752   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4066753   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4066754   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4066755   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4066756   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4066757   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4066758   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4066759   +         end;
MPRINT(EM_DIAGRAM):   end;
4066760   +      end;
MPRINT(EM_DIAGRAM):   end;
4066761   +   end;
MPRINT(EM_DIAGRAM):   end;
4066762   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4066763   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4066764   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4066765   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4066766   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4066767   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4066768   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066769   +   end;
MPRINT(EM_DIAGRAM):   end;
4066770   +end;
MPRINT(EM_DIAGRAM):   end;
4066771   +
4066772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066773   +*** Checking missing input Interval
4066774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4066775   +
4066776   +IF NMISS(
4066777   +   AcceptedCmpTotal ,
4066778   +   Age ,
4066779   +   Frq ,
4066780   +   Income ,
4066781   +   Kidhome ,
4066782   +   Mnt ,
4066783   +   MntFishProducts ,
4066784   +   MntFruits ,
4066785   +   MntGoldProds ,
4066786   +   MntMeatProducts ,
4066787   +   MntSweetProducts ,
4066788   +   MntWines ,
4066789   +   MonthsAsCustomer ,
4066790   +   NumCatalogPurchases ,
4066791   +   NumDealsPurchases ,
4066792   +   NumDistPurchases ,
4066793   +   NumStorePurchases ,
4066794   +   NumWebPurchases ,
4066795   +   NumWebVisitsMonth ,
4066796   +   RFMstat ,
4066797   +   RMntFrq ,
4066798   +   Recency ,
4066799   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4066800   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4066801   +
4066802   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4066803   +END;
MPRINT(EM_DIAGRAM):   END;
4066804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066805   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4066806   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066807   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4066808   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4066809   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4066810   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4066811   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4066812   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4066813   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4066814   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4066815   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4066816   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4066817   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4066818   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4066819   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4066820   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4066821   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4066822   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4066823   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4066824   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4066825   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4066826   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4066827   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4066828   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4066829   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4066830   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4066831   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4066832   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4066833   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4066834   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4066835   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4066836   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4066837   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4066838   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4066839   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4066840   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4066841   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4066842   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4066843   +END;
MPRINT(EM_DIAGRAM):   END;
4066844   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4066845   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4066846   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4066847   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4066848   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4066849   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4066850   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4066851   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4066852   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4066853   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4066854   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4066855   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4066856   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4066857   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4066858   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4066859   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4066860   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4066861   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4066862   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4066863   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4066864   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4066865   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4066866   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4066867   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4066868   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4066869   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4066870   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4066871   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4066872   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4066873   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4066874   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4066875   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4066876   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4066877   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4066878   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4066879   +   ELSE S_NumCatalogPurchases
4066880   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4066881   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4066882   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4066883   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4066884   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4066885   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4066886   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4066887   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4066888   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4066889   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4066890   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4066891   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4066892   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4066893   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4066894   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4066895   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4066896   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4066897   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4066898   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4066899   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4066900   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4066901   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4066902   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4066903   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4066904   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4066905   +END;
MPRINT(EM_DIAGRAM):   END;
4066906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066907   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4066908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066910   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4066911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066913   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4066914   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4066915   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4066916   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
4066917   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
4066918   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
4066919   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
4066920   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
4066921   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
4066922   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
4066923   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
4066924   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
4066925   +          +    -1.14704878034134 * S_NumDealsPurchases
4066926   +          +    -0.17763404274659 * S_NumDistPurchases
4066927   +          +     0.08894400267969 * S_NumStorePurchases
4066928   +          +     0.59283747891957 * S_NumWebPurchases
4066929   +          +     0.85268274682505 * S_NumWebVisitsMonth
4066930   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
4066931   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
4066932   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 *
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 *
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts +
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 *
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines +
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases +
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases +
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases +
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 *
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
4066933   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
4066934   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
4066935   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
4066936   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
4066937   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
4066938   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
4066939   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
4066940   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
4066941   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
4066942   +          +    -0.80841566068716 * S_NumDealsPurchases
4066943   +          +    -0.17995640033768 * S_NumDistPurchases
4066944   +          +     0.00713417460936 * S_NumStorePurchases
4066945   +          +     0.57881024323076 * S_NumWebPurchases
4066946   +          +    -1.35134224257365 * S_NumWebVisitsMonth
4066947   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
4066948   +        S_RMntFrq  +     1.16978656262499 * S_Recency
4066949   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 *
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 *
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts +
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 *
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 *
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 *
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 *
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq +
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
4066950   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
4066951   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
4066952   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
4066953   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
4066954   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
4066955   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
4066956   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
4066957   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
4066958   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
4066959   +          +     0.57891364118717 * S_NumDealsPurchases
4066960   +          +    -0.31024556838688 * S_NumDistPurchases
4066961   +          +    -1.48708542986704 * S_NumStorePurchases
4066962   +          +    -0.93009875249206 * S_NumWebPurchases
4066963   +          +     2.01900039122935 * S_NumWebVisitsMonth
4066964   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
4066965   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
4066966   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 *
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 *
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts +
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 *
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 *
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 *
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 *
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq +
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
4066967   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
4066968   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
4066969   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
4066970   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
4066971   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 *
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 +
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 *
HigherEducationBinary0 ;
4066972   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
4066973   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
4066974   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
4066975   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
4066976   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 *
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 +
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 *
HigherEducationBinary0 ;
4066977   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
4066978   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
4066979   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
4066980   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
4066981   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 +
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 *
HigherEducationBinary0 ;
4066982   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
4066983   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
4066984   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
4066985   +          +     0.55883606830033 * Marital_StatusDivorced
4066986   +          +    -0.54530037567066 * Marital_StatusMarried
4066987   +          +    -0.52994736075753 * Marital_StatusSingle
4066988   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle +
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation +
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced +
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle +
-0.53882341831078 * Marital_StatusTogether ;
4066989   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
4066990   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
4066991   +        EducationGraduation  +     0.31201349236277 * EducationMaster
4066992   +          +    -1.07368484057033 * Marital_StatusDivorced
4066993   +          +     2.73313504711262 * Marital_StatusMarried
4066994   +          +    -2.18530462876058 * Marital_StatusSingle
4066995   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle +
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 *
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 *
Marital_StatusTogether ;
4066996   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
4066997   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
4066998   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
4066999   +          +     0.49993144243043 * Marital_StatusDivorced
4067000   +          +    -0.38953339116829 * Marital_StatusMarried
4067001   +          +    -0.10836287319942 * Marital_StatusSingle
4067002   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle +
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation +
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced +
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle +
-0.42049990939036 * Marital_StatusTogether ;
4067003   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
4067004   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
4067005   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
4067006   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
4067007   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
4067008   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4067009   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4067010   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4067011   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4067012   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4067013   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4067014   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4067015   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4067016   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4067017   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4067018   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4067019   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4067020   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4067021   +END;
MPRINT(EM_DIAGRAM):   END;
4067022   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4067023   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4067024   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4067025   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4067026   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4067027   +END;
MPRINT(EM_DIAGRAM):   END;
4067028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067029   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4067030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067031   +
4067032   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4067033   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4067034   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4067035   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4067036   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4067037   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4067038   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4067039   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4067040   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4067041   +end;
MPRINT(EM_DIAGRAM):   end;
4067042   +else do;
MPRINT(EM_DIAGRAM):   else do;
4067043   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4067044   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4067045   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4067046   +   end;
MPRINT(EM_DIAGRAM):   end;
4067047   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4067048   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4067049   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4067050   +   end;
MPRINT(EM_DIAGRAM):   end;
4067051   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4067052   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4067053   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4067054   +   end;
MPRINT(EM_DIAGRAM):   end;
4067055   +end;
MPRINT(EM_DIAGRAM):   end;
4067056   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4067057   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
4067058   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 +
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
4067059   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
4067060   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4067061   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4067062   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4067063   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4067064   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4067065   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4067066   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4067067   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4067068   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4067069   +END;
MPRINT(EM_DIAGRAM):   END;
4067070   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4067071   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4067072   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4067073   +END;
MPRINT(EM_DIAGRAM):   END;
4067074   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4067075   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4067076   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4067077   +END;
MPRINT(EM_DIAGRAM):   END;
4067078   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4067079   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4067080   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4067081   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4067082   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4067083   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4067084   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4067085   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067086   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4067087   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067088   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4067089   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4067090   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4067091   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4067092   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4067093   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4067094   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4067095   +END;
MPRINT(EM_DIAGRAM):   END;
4067096   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4067097   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4067098   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4067099   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4067100   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
4067101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4067102   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
4067103   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4067104   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
4067105   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
4067106   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
4067107   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
4067108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4067109   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
4067110   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4067111   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
4067112   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
4067113   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
4067114   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4067115   +* Ensmbl36: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 6 of 7;
4067116   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4067117   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4067118   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4067119   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4067120   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
4067121   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4067122   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4067123   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4067124   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4067125   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4067126   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4067127   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4067128   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4067129   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4067130   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4067131   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4067132   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4067133   +LENGTH _WARN_ $4
4067134   +      F_DepVar  $ 12
4067135   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4067136   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4067137   +
4067138   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4067139   +
4067140   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4067141   +
4067142   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4067143   +
4067144   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4067145   +
4067146   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4067147   +
4067148   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4067149   +
4067150   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4067151   +
4067152   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4067153   +
4067154   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4067155   +
4067156   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4067157   +
4067158   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4067159   +
4067160   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4067161   +
4067162   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4067163   +
4067164   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4067165   +
4067166   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4067167   +
4067168   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4067169   +
4067170   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4067171   +
4067172   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4067173   +
4067174   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4067175   +
4067176   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4067177   +
4067178   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4067179   +
4067180   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4067181   +
4067182   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4067183   +
4067184   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4067185   +
4067186   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4067187   +
4067188   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4067189   +
4067190   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4067191   +
4067192   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4067193   +
4067194   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4067195   +
4067196   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4067197   +
4067198   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4067199   +
4067200   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4067201   +
4067202   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4067203   +
4067204   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4067205   +
4067206   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4067207   +
4067208   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4067209   +
4067210   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4067211   +
4067212   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4067213   +
4067214   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4067215   +
4067216   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4067217   +
4067218   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4067219   +
4067220   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4067221   +
4067222   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4067223   +
4067224   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4067225   +
4067226   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4067227   +
4067228   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4067229   +
4067230   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4067231   +
4067232   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4067233   +
4067234   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4067235   +
4067236   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4067237   +
4067238   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4067239   +
4067240   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4067241   +
4067242   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4067243   +
4067244   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4067245   +
4067246   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4067247   +
4067248   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4067249   +
4067250   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4067251   +
4067252   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4067253   +
4067254   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4067255   +
4067256   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4067257   +
4067258   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4067259   +
4067260   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4067261   +
4067262   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4067263   +
4067264   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4067265   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4067266   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4067267   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4067268   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4067269   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067270   +end;
MPRINT(EM_DIAGRAM):   end;
4067271   +else do;
MPRINT(EM_DIAGRAM):   else do;
4067272   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4067273   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4067274   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4067275   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4067276   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4067277   +   end;
MPRINT(EM_DIAGRAM):   end;
4067278   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4067279   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4067280   +   end;
MPRINT(EM_DIAGRAM):   end;
4067281   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4067282   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4067283   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4067284   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067285   +   end;
MPRINT(EM_DIAGRAM):   end;
4067286   +end;
MPRINT(EM_DIAGRAM):   end;
4067287   +
4067288   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4067289   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4067290   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4067291   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4067292   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4067293   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067294   +end;
MPRINT(EM_DIAGRAM):   end;
4067295   +else do;
MPRINT(EM_DIAGRAM):   else do;
4067296   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4067297   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4067298   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4067299   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4067300   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4067301   +   end;
MPRINT(EM_DIAGRAM):   end;
4067302   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4067303   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4067304   +   end;
MPRINT(EM_DIAGRAM):   end;
4067305   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4067306   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4067307   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4067308   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067309   +   end;
MPRINT(EM_DIAGRAM):   end;
4067310   +end;
MPRINT(EM_DIAGRAM):   end;
4067311   +
4067312   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4067313   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4067314   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4067315   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4067316   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4067317   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067318   +end;
MPRINT(EM_DIAGRAM):   end;
4067319   +else do;
MPRINT(EM_DIAGRAM):   else do;
4067320   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4067321   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4067322   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4067323   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4067324   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4067325   +   end;
MPRINT(EM_DIAGRAM):   end;
4067326   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4067327   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4067328   +   end;
MPRINT(EM_DIAGRAM):   end;
4067329   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4067330   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4067331   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4067332   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067333   +   end;
MPRINT(EM_DIAGRAM):   end;
4067334   +end;
MPRINT(EM_DIAGRAM):   end;
4067335   +
4067336   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4067337   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4067338   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4067339   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4067340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4067341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067342   +end;
MPRINT(EM_DIAGRAM):   end;
4067343   +else do;
MPRINT(EM_DIAGRAM):   else do;
4067344   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4067345   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4067346   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4067347   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4067348   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4067349   +   end;
MPRINT(EM_DIAGRAM):   end;
4067350   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4067351   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4067352   +   end;
MPRINT(EM_DIAGRAM):   end;
4067353   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4067354   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4067355   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4067356   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067357   +   end;
MPRINT(EM_DIAGRAM):   end;
4067358   +end;
MPRINT(EM_DIAGRAM):   end;
4067359   +
4067360   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4067361   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4067362   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4067363   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4067364   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4067365   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067366   +end;
MPRINT(EM_DIAGRAM):   end;
4067367   +else do;
MPRINT(EM_DIAGRAM):   else do;
4067368   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4067369   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4067370   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4067371   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4067372   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4067373   +   end;
MPRINT(EM_DIAGRAM):   end;
4067374   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4067375   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4067376   +   end;
MPRINT(EM_DIAGRAM):   end;
4067377   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4067378   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4067379   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4067380   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067381   +   end;
MPRINT(EM_DIAGRAM):   end;
4067382   +end;
MPRINT(EM_DIAGRAM):   end;
4067383   +
4067384   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4067385   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4067386   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4067387   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4067388   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4067389   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067390   +end;
MPRINT(EM_DIAGRAM):   end;
4067391   +else do;
MPRINT(EM_DIAGRAM):   else do;
4067392   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4067393   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4067394   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4067395   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4067396   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4067397   +   end;
MPRINT(EM_DIAGRAM):   end;
4067398   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4067399   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4067400   +   end;
MPRINT(EM_DIAGRAM):   end;
4067401   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4067402   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4067403   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4067404   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067405   +   end;
MPRINT(EM_DIAGRAM):   end;
4067406   +end;
MPRINT(EM_DIAGRAM):   end;
4067407   +
4067408   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4067409   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4067410   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4067411   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4067412   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4067413   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067414   +end;
MPRINT(EM_DIAGRAM):   end;
4067415   +else do;
MPRINT(EM_DIAGRAM):   else do;
4067416   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4067417   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4067418   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4067419   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4067420   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4067421   +   end;
MPRINT(EM_DIAGRAM):   end;
4067422   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4067423   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4067424   +   end;
MPRINT(EM_DIAGRAM):   end;
4067425   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4067426   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4067427   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4067428   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067429   +   end;
MPRINT(EM_DIAGRAM):   end;
4067430   +end;
MPRINT(EM_DIAGRAM):   end;
4067431   +
4067432   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4067433   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4067434   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4067435   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4067436   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4067437   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4067438   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4067439   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4067440   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4067441   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4067442   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4067443   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4067444   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4067445   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067446   +end;
MPRINT(EM_DIAGRAM):   end;
4067447   +else do;
MPRINT(EM_DIAGRAM):   else do;
4067448   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4067449   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4067450   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4067451   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4067452   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4067453   +   end;
MPRINT(EM_DIAGRAM):   end;
4067454   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4067455   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4067456   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4067457   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4067458   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4067459   +   end;
MPRINT(EM_DIAGRAM):   end;
4067460   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4067461   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4067462   +   end;
MPRINT(EM_DIAGRAM):   end;
4067463   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4067464   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4067465   +   end;
MPRINT(EM_DIAGRAM):   end;
4067466   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4067467   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4067468   +   end;
MPRINT(EM_DIAGRAM):   end;
4067469   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4067470   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4067471   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4067472   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4067473   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4067474   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4067475   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067476   +   end;
MPRINT(EM_DIAGRAM):   end;
4067477   +end;
MPRINT(EM_DIAGRAM):   end;
4067478   +
4067479   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4067480   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4067481   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4067482   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4067483   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4067484   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4067485   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4067486   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4067487   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4067488   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4067489   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4067490   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4067491   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4067492   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4067493   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067494   +end;
MPRINT(EM_DIAGRAM):   end;
4067495   +else do;
MPRINT(EM_DIAGRAM):   else do;
4067496   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4067497   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4067498   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4067499   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4067500   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4067501   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4067502   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4067503   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4067504   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4067505   +         end;
MPRINT(EM_DIAGRAM):   end;
4067506   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4067507   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4067508   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4067509   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4067510   +            end;
MPRINT(EM_DIAGRAM):   end;
4067511   +         end;
MPRINT(EM_DIAGRAM):   end;
4067512   +      end;
MPRINT(EM_DIAGRAM):   end;
4067513   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4067514   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4067515   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4067516   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4067517   +         end;
MPRINT(EM_DIAGRAM):   end;
4067518   +      end;
MPRINT(EM_DIAGRAM):   end;
4067519   +   end;
MPRINT(EM_DIAGRAM):   end;
4067520   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4067521   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4067522   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4067523   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4067524   +      end;
MPRINT(EM_DIAGRAM):   end;
4067525   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4067526   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4067527   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4067528   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4067529   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4067530   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4067531   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4067532   +         end;
MPRINT(EM_DIAGRAM):   end;
4067533   +      end;
MPRINT(EM_DIAGRAM):   end;
4067534   +   end;
MPRINT(EM_DIAGRAM):   end;
4067535   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4067536   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4067537   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4067538   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4067539   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4067540   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4067541   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067542   +   end;
MPRINT(EM_DIAGRAM):   end;
4067543   +end;
MPRINT(EM_DIAGRAM):   end;
4067544   +
4067545   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067546   +*** Checking missing input Interval
4067547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4067548   +
4067549   +IF NMISS(
4067550   +   AcceptedCmpTotal ,
4067551   +   Age ,
4067552   +   Frq ,
4067553   +   Income ,
4067554   +   Kidhome ,
4067555   +   Mnt ,
4067556   +   MntFishProducts ,
4067557   +   MntFruits ,
4067558   +   MntGoldProds ,
4067559   +   MntMeatProducts ,
4067560   +   MntSweetProducts ,
4067561   +   MntWines ,
4067562   +   MonthsAsCustomer ,
4067563   +   NumCatalogPurchases ,
4067564   +   NumDealsPurchases ,
4067565   +   NumDistPurchases ,
4067566   +   NumStorePurchases ,
4067567   +   NumWebPurchases ,
4067568   +   NumWebVisitsMonth ,
4067569   +   RFMstat ,
4067570   +   RMntFrq ,
4067571   +   Recency ,
4067572   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4067573   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4067574   +
4067575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4067576   +END;
MPRINT(EM_DIAGRAM):   END;
4067577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067578   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4067579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067580   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4067581   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4067582   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4067583   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4067584   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4067585   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4067586   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4067587   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4067588   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4067589   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4067590   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4067591   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4067592   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4067593   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4067594   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4067595   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4067596   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4067597   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4067598   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4067599   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4067600   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4067601   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4067602   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4067603   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4067604   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4067605   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4067606   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4067607   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4067608   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4067609   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4067610   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4067611   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4067612   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4067613   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4067614   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4067615   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4067616   +END;
MPRINT(EM_DIAGRAM):   END;
4067617   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4067618   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4067619   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4067620   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4067621   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4067622   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4067623   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4067624   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4067625   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4067626   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4067627   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4067628   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4067629   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4067630   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4067631   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4067632   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4067633   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4067634   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4067635   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4067636   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4067637   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4067638   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4067639   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4067640   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4067641   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4067642   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4067643   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4067644   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4067645   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4067646   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4067647   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4067648   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4067649   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4067650   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4067651   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4067652   +   ELSE S_NumCatalogPurchases
4067653   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4067654   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4067655   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4067656   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4067657   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4067658   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4067659   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4067660   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4067661   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4067662   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4067663   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4067664   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4067665   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4067666   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4067667   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4067668   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4067669   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4067670   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4067671   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4067672   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4067673   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4067674   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4067675   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4067676   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4067677   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4067678   +END;
MPRINT(EM_DIAGRAM):   END;
4067679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067680   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4067681   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067682   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067683   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4067684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067686   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4067687   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067688   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4067689   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
4067690   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
4067691   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
4067692   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
4067693   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
4067694   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
4067695   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
4067696   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
4067697   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
4067698   +          +     0.89422627895323 * S_NumDealsPurchases
4067699   +          +    -0.13304125929765 * S_NumDistPurchases
4067700   +          +    -1.04568442570811 * S_NumStorePurchases
4067701   +          +    -0.28677765126751 * S_NumWebPurchases
4067702   +          +      1.2327638737509 * S_NumWebVisitsMonth
4067703   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
4067704   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
4067705   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
4067706   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
4067707   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
4067708   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
4067709   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
4067710   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
4067711   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
4067712   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
4067713   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
4067714   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
4067715   +          +     0.04224590196535 * S_NumDealsPurchases
4067716   +          +     0.76554742700113 * S_NumDistPurchases
4067717   +          +    -0.49155496870812 * S_NumStorePurchases
4067718   +          +     0.59606812744403 * S_NumWebPurchases
4067719   +          +     1.86809286276405 * S_NumWebVisitsMonth
4067720   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
4067721   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
4067722   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
4067723   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
4067724   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
4067725   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
4067726   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
4067727   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
4067728   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
4067729   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
4067730   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
4067731   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
4067732   +          +    -0.04866536993486 * S_NumDealsPurchases
4067733   +          +    -0.53535979020214 * S_NumDistPurchases
4067734   +          +     2.20634071253676 * S_NumStorePurchases
4067735   +          +      0.6164564989007 * S_NumWebPurchases
4067736   +          +    -0.43396314395263 * S_NumWebVisitsMonth
4067737   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
4067738   +        S_RMntFrq  +     2.37293441098349 * S_Recency
4067739   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
4067740   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
4067741   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
4067742   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
4067743   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
4067744   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
4067745   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
4067746   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
4067747   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
4067748   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
4067749   +          +     1.37461255707863 * S_NumDealsPurchases
4067750   +          +    -0.17684775000818 * S_NumDistPurchases
4067751   +          +    -0.62755623855535 * S_NumStorePurchases
4067752   +          +    -1.46551649022657 * S_NumWebPurchases
4067753   +          +     3.35784247878638 * S_NumWebVisitsMonth
4067754   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
4067755   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
4067756   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
4067757   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
4067758   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
4067759   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
4067760   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
4067761   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
4067762   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
4067763   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
4067764   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
4067765   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
4067766   +          +    -0.76256677907121 * S_NumDealsPurchases
4067767   +          +    -0.31591571751692 * S_NumDistPurchases
4067768   +          +      0.0506832614089 * S_NumStorePurchases
4067769   +          +      1.4636796923764 * S_NumWebPurchases
4067770   +          +     0.37743519705036 * S_NumWebVisitsMonth
4067771   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
4067772   +        S_RMntFrq  +     0.16854775832723 * S_Recency
4067773   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
4067774   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
4067775   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
4067776   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
4067777   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
4067778   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
4067779   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
4067780   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
4067781   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
4067782   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
4067783   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
4067784   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
4067785   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
4067786   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
4067787   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
4067788   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
4067789   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
4067790   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
4067791   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
4067792   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
4067793   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
4067794   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
4067795   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
4067796   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
4067797   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
4067798   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
4067799   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
4067800   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
4067801   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
4067802   +          +     0.68641668264565 * Marital_StatusDivorced
4067803   +          +    -0.81586871439732 * Marital_StatusMarried
4067804   +          +     0.63758920518451 * Marital_StatusSingle
4067805   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
4067806   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
4067807   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
4067808   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
4067809   +          +     0.05137560133238 * Marital_StatusDivorced
4067810   +          +    -2.24401993266209 * Marital_StatusMarried
4067811   +          +     1.57359386216115 * Marital_StatusSingle
4067812   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
4067813   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
4067814   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
4067815   +        EducationGraduation  +     0.61492669859334 * EducationMaster
4067816   +          +     -1.0649987815942 * Marital_StatusDivorced
4067817   +          +     0.76065111692388 * Marital_StatusMarried
4067818   +          +    -0.21694149754801 * Marital_StatusSingle
4067819   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
4067820   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
4067821   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
4067822   +        EducationGraduation  +     0.04208620358211 * EducationMaster
4067823   +          +     2.02155453548328 * Marital_StatusDivorced
4067824   +          +    -2.60190649735306 * Marital_StatusMarried
4067825   +          +     1.09149388354927 * Marital_StatusSingle
4067826   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
4067827   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
4067828   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
4067829   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
4067830   +          +     0.66315970650309 * Marital_StatusDivorced
4067831   +          +    -1.20476729758152 * Marital_StatusMarried
4067832   +          +     0.56175027826397 * Marital_StatusSingle
4067833   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
4067834   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
4067835   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
4067836   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
4067837   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
4067838   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
4067839   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
4067840   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
4067841   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4067842   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4067843   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4067844   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4067845   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4067846   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4067847   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4067848   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4067849   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4067850   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4067851   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4067852   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4067853   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4067854   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4067855   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4067856   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4067857   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4067858   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4067859   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4067860   +END;
MPRINT(EM_DIAGRAM):   END;
4067861   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4067862   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4067863   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4067864   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4067865   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4067866   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4067867   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4067868   +END;
MPRINT(EM_DIAGRAM):   END;
4067869   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067870   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4067871   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4067872   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4067873   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
4067874   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
4067875   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
4067876   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
4067877   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
4067878   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
4067879   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
4067880   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
4067881   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
4067882   +          +     1.50005927423985 * S_NumDealsPurchases
4067883   +          +      0.5590536933569 * S_NumDistPurchases
4067884   +          +    -0.61757824339318 * S_NumStorePurchases
4067885   +          +     0.37259686538158 * S_NumWebPurchases
4067886   +          +     2.59725437895564 * S_NumWebVisitsMonth
4067887   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
4067888   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
4067889   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
4067890   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
4067891   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
4067892   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
4067893   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
4067894   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
4067895   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
4067896   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
4067897   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
4067898   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
4067899   +          +    -0.09282222088797 * S_NumDealsPurchases
4067900   +          +     0.10726247938321 * S_NumDistPurchases
4067901   +          +     -1.1235971458527 * S_NumStorePurchases
4067902   +          +    -0.78304387839877 * S_NumWebPurchases
4067903   +          +    -0.44139243179956 * S_NumWebVisitsMonth
4067904   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
4067905   +        S_RMntFrq  +     2.19072220135069 * S_Recency
4067906   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
4067907   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
4067908   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
4067909   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
4067910   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
4067911   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
4067912   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
4067913   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
4067914   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
4067915   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
4067916   +          +     0.35349185459988 * S_NumDealsPurchases
4067917   +          +     0.06853677714859 * S_NumDistPurchases
4067918   +          +    -1.47546012999338 * S_NumStorePurchases
4067919   +          +     0.20926435398916 * S_NumWebPurchases
4067920   +          +    -1.00535683639093 * S_NumWebVisitsMonth
4067921   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
4067922   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
4067923   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
4067924   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
4067925   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
4067926   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
4067927   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
4067928   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
4067929   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
4067930   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
4067931   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
4067932   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
4067933   +          +      0.3873586120272 * S_NumDealsPurchases
4067934   +          +     0.25911651157596 * S_NumDistPurchases
4067935   +          +     1.58922489084287 * S_NumStorePurchases
4067936   +          +     0.49041797743368 * S_NumWebPurchases
4067937   +          +     -1.5425586871929 * S_NumWebVisitsMonth
4067938   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
4067939   +        S_RMntFrq  +     1.03099569333498 * S_Recency
4067940   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
4067941   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
4067942   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
4067943   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
4067944   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
4067945   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
4067946   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
4067947   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
4067948   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
4067949   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
4067950   +          +    -0.60830880287865 * S_NumDealsPurchases
4067951   +          +      0.0745331267194 * S_NumDistPurchases
4067952   +          +    -1.39472448256952 * S_NumStorePurchases
4067953   +          +     1.95372179969087 * S_NumWebPurchases
4067954   +          +    -0.63307356390404 * S_NumWebVisitsMonth
4067955   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
4067956   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
4067957   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
4067958   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
4067959   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
4067960   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
4067961   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
4067962   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
4067963   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
4067964   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
4067965   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
4067966   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
4067967   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
4067968   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
4067969   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
4067970   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
4067971   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
4067972   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
4067973   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
4067974   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
4067975   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
4067976   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
4067977   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
4067978   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
4067979   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
4067980   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
4067981   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
4067982   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
4067983   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
4067984   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
4067985   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
4067986   +          +    -1.33377871643323 * Marital_StatusDivorced
4067987   +          +    -0.87184228840898 * Marital_StatusMarried
4067988   +          +     1.41223186340257 * Marital_StatusSingle
4067989   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
4067990   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
4067991   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
4067992   +        EducationGraduation  +     0.38341272155343 * EducationMaster
4067993   +          +    -0.21479890935233 * Marital_StatusDivorced
4067994   +          +     -0.0025459519579 * Marital_StatusMarried
4067995   +          +     1.33900491702264 * Marital_StatusSingle
4067996   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
4067997   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
4067998   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
4067999   +        EducationGraduation  +     0.60739269725685 * EducationMaster
4068000   +          +    -0.38307267471999 * Marital_StatusDivorced
4068001   +          +     0.97088969451415 * Marital_StatusMarried
4068002   +          +    -0.28578224473381 * Marital_StatusSingle
4068003   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
4068004   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
4068005   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
4068006   +        EducationGraduation  +     0.14160673378252 * EducationMaster
4068007   +          +    -1.42229401093569 * Marital_StatusDivorced
4068008   +          +      0.7234508382397 * Marital_StatusMarried
4068009   +          +    -0.29062202974628 * Marital_StatusSingle
4068010   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
4068011   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
4068012   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
4068013   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
4068014   +          +    -0.99067637207205 * Marital_StatusDivorced
4068015   +          +    -0.50245902142079 * Marital_StatusMarried
4068016   +          +     0.54214494533793 * Marital_StatusSingle
4068017   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
4068018   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
4068019   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
4068020   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
4068021   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
4068022   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
4068023   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
4068024   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
4068025   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4068026   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4068027   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4068028   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4068029   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4068030   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4068031   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4068032   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4068033   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4068034   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4068035   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4068036   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4068037   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4068038   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4068039   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4068040   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4068041   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4068042   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4068043   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4068044   +END;
MPRINT(EM_DIAGRAM):   END;
4068045   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4068046   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4068047   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4068048   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4068049   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4068050   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4068051   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4068052   +END;
MPRINT(EM_DIAGRAM):   END;
4068053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068054   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4068055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068056   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4068057   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
4068058   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
4068059   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
4068060   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
4068061   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
4068062   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
4068063   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
4068064   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
4068065   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
4068066   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
4068067   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
4068068   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
4068069   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
4068070   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
4068071   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
4068072   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
4068073   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
4068074   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
4068075   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
4068076   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
4068077   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
4068078   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
4068079   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
4068080   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
4068081   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
4068082   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
4068083   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
4068084   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
4068085   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
4068086   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
4068087   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
4068088   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
4068089   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
4068090   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
4068091   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
4068092   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
4068093   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
4068094   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
4068095   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
4068096   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
4068097   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
4068098   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
4068099   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
4068100   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
4068101   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
4068102   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
4068103   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
4068104   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
4068105   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4068106   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4068107   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4068108   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4068109   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4068110   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
4068111   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
4068112   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
4068113   +END;
MPRINT(EM_DIAGRAM):   END;
4068114   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4068115   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4068116   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4068117   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4068118   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4068119   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4068120   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4068121   +END;
MPRINT(EM_DIAGRAM):   END;
4068122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068123   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4068124   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068125   +
4068126   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4068127   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4068128   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4068129   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4068130   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4068131   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4068132   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4068133   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4068134   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4068135   +end;
MPRINT(EM_DIAGRAM):   end;
4068136   +else do;
MPRINT(EM_DIAGRAM):   else do;
4068137   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4068138   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4068139   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4068140   +   end;
MPRINT(EM_DIAGRAM):   end;
4068141   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4068142   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4068143   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4068144   +   end;
MPRINT(EM_DIAGRAM):   end;
4068145   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4068146   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4068147   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4068148   +   end;
MPRINT(EM_DIAGRAM):   end;
4068149   +end;
MPRINT(EM_DIAGRAM):   end;
4068150   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4068151   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
4068152   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
4068153   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
4068154   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
4068155   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4068156   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4068157   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4068158   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4068159   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4068160   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4068161   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4068162   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4068163   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4068164   +END;
MPRINT(EM_DIAGRAM):   END;
4068165   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4068166   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4068167   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4068168   +END;
MPRINT(EM_DIAGRAM):   END;
4068169   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4068170   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4068171   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4068172   +END;
MPRINT(EM_DIAGRAM):   END;
4068173   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4068174   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4068175   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4068176   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4068177   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4068178   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4068179   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4068180   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068181   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4068182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068183   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4068184   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4068185   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4068186   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4068187   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4068188   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4068189   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4068190   +END;
MPRINT(EM_DIAGRAM):   END;
4068191   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4068192   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4068193   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4068194   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4068195   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
4068196   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4068197   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
4068198   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4068199   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
4068200   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
4068201   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
4068202   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
4068203   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4068204   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
4068205   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4068206   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
4068207   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
4068208   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
4068209   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4068210   +* Ensmbl36: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 7 of 7;
4068211   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4068212   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4068213   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4068214   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4068215   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
4068216   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4068217   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4068218   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4068219   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4068220   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4068221   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4068222   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4068223   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4068224   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4068225   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4068226   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4068227   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4068228   +LENGTH _WARN_ $4
4068229   +      F_DepVar  $ 12
4068230   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4068231   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4068232   +
4068233   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4068234   +
4068235   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4068236   +
4068237   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4068238   +
4068239   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4068240   +
4068241   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4068242   +
4068243   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4068244   +
4068245   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4068246   +
4068247   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4068248   +
4068249   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4068250   +
4068251   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4068252   +
4068253   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4068254   +
4068255   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4068256   +
4068257   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4068258   +
4068259   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4068260   +
4068261   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4068262   +
4068263   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4068264   +
4068265   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4068266   +
4068267   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4068268   +
4068269   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4068270   +
4068271   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4068272   +
4068273   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4068274   +
4068275   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4068276   +
4068277   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4068278   +
4068279   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4068280   +
4068281   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4068282   +
4068283   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4068284   +
4068285   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4068286   +
4068287   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4068288   +
4068289   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4068290   +
4068291   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4068292   +
4068293   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4068294   +
4068295   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4068296   +
4068297   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4068298   +
4068299   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4068300   +
4068301   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4068302   +
4068303   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4068304   +
4068305   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4068306   +
4068307   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4068308   +
4068309   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4068310   +
4068311   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4068312   +
4068313   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4068314   +
4068315   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4068316   +
4068317   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4068318   +
4068319   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
4068320   +
4068321   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4068322   +
4068323   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4068324   +
4068325   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4068326   +
4068327   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4068328   +
4068329   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4068330   +
4068331   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4068332   +
4068333   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
4068334   +
4068335   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4068336   +
4068337   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4068338   +
4068339   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4068340   +
4068341   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4068342   +
4068343   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4068344   +
4068345   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4068346   +
4068347   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
4068348   +
4068349   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4068350   +
4068351   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4068352   +
4068353   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4068354   +
4068355   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4068356   +
4068357   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4068358   +
4068359   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4068360   +
4068361   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4068362   +
4068363   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4068364   +
4068365   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4068366   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4068367   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4068368   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4068369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4068370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068371   +end;
MPRINT(EM_DIAGRAM):   end;
4068372   +else do;
MPRINT(EM_DIAGRAM):   else do;
4068373   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4068374   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4068375   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4068376   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4068377   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4068378   +   end;
MPRINT(EM_DIAGRAM):   end;
4068379   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4068380   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4068381   +   end;
MPRINT(EM_DIAGRAM):   end;
4068382   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4068383   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4068384   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4068385   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068386   +   end;
MPRINT(EM_DIAGRAM):   end;
4068387   +end;
MPRINT(EM_DIAGRAM):   end;
4068388   +
4068389   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4068390   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4068391   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4068392   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4068393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4068394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068395   +end;
MPRINT(EM_DIAGRAM):   end;
4068396   +else do;
MPRINT(EM_DIAGRAM):   else do;
4068397   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4068398   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4068399   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4068400   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4068401   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4068402   +   end;
MPRINT(EM_DIAGRAM):   end;
4068403   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4068404   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4068405   +   end;
MPRINT(EM_DIAGRAM):   end;
4068406   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4068407   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4068408   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4068409   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068410   +   end;
MPRINT(EM_DIAGRAM):   end;
4068411   +end;
MPRINT(EM_DIAGRAM):   end;
4068412   +
4068413   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4068414   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4068415   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4068416   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4068417   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4068418   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068419   +end;
MPRINT(EM_DIAGRAM):   end;
4068420   +else do;
MPRINT(EM_DIAGRAM):   else do;
4068421   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4068422   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4068423   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4068424   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4068425   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4068426   +   end;
MPRINT(EM_DIAGRAM):   end;
4068427   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4068428   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4068429   +   end;
MPRINT(EM_DIAGRAM):   end;
4068430   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4068431   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4068432   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4068433   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068434   +   end;
MPRINT(EM_DIAGRAM):   end;
4068435   +end;
MPRINT(EM_DIAGRAM):   end;
4068436   +
4068437   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4068438   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4068439   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4068440   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4068441   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4068442   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068443   +end;
MPRINT(EM_DIAGRAM):   end;
4068444   +else do;
MPRINT(EM_DIAGRAM):   else do;
4068445   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4068446   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4068447   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4068448   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4068449   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4068450   +   end;
MPRINT(EM_DIAGRAM):   end;
4068451   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4068452   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4068453   +   end;
MPRINT(EM_DIAGRAM):   end;
4068454   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4068455   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4068456   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4068457   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068458   +   end;
MPRINT(EM_DIAGRAM):   end;
4068459   +end;
MPRINT(EM_DIAGRAM):   end;
4068460   +
4068461   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4068462   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4068463   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4068464   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4068465   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4068466   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068467   +end;
MPRINT(EM_DIAGRAM):   end;
4068468   +else do;
MPRINT(EM_DIAGRAM):   else do;
4068469   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4068470   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4068471   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4068472   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4068473   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4068474   +   end;
MPRINT(EM_DIAGRAM):   end;
4068475   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4068476   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4068477   +   end;
MPRINT(EM_DIAGRAM):   end;
4068478   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4068479   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4068480   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4068481   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068482   +   end;
MPRINT(EM_DIAGRAM):   end;
4068483   +end;
MPRINT(EM_DIAGRAM):   end;
4068484   +
4068485   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4068486   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4068487   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4068488   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4068489   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4068490   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068491   +end;
MPRINT(EM_DIAGRAM):   end;
4068492   +else do;
MPRINT(EM_DIAGRAM):   else do;
4068493   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4068494   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4068495   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4068496   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4068497   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4068498   +   end;
MPRINT(EM_DIAGRAM):   end;
4068499   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4068500   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4068501   +   end;
MPRINT(EM_DIAGRAM):   end;
4068502   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4068503   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4068504   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4068505   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068506   +   end;
MPRINT(EM_DIAGRAM):   end;
4068507   +end;
MPRINT(EM_DIAGRAM):   end;
4068508   +
4068509   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4068510   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4068511   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4068512   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4068513   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4068514   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068515   +end;
MPRINT(EM_DIAGRAM):   end;
4068516   +else do;
MPRINT(EM_DIAGRAM):   else do;
4068517   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4068518   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4068519   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4068520   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4068521   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4068522   +   end;
MPRINT(EM_DIAGRAM):   end;
4068523   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4068524   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4068525   +   end;
MPRINT(EM_DIAGRAM):   end;
4068526   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4068527   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4068528   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4068529   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068530   +   end;
MPRINT(EM_DIAGRAM):   end;
4068531   +end;
MPRINT(EM_DIAGRAM):   end;
4068532   +
4068533   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4068534   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4068535   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4068536   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4068537   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4068538   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4068539   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4068540   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4068541   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4068542   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4068543   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4068544   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4068545   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4068546   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068547   +end;
MPRINT(EM_DIAGRAM):   end;
4068548   +else do;
MPRINT(EM_DIAGRAM):   else do;
4068549   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4068550   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4068551   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4068552   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4068553   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4068554   +   end;
MPRINT(EM_DIAGRAM):   end;
4068555   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4068556   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4068557   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4068558   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4068559   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4068560   +   end;
MPRINT(EM_DIAGRAM):   end;
4068561   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4068562   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4068563   +   end;
MPRINT(EM_DIAGRAM):   end;
4068564   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4068565   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4068566   +   end;
MPRINT(EM_DIAGRAM):   end;
4068567   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4068568   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4068569   +   end;
MPRINT(EM_DIAGRAM):   end;
4068570   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4068571   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4068572   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4068573   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4068574   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4068575   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4068576   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068577   +   end;
MPRINT(EM_DIAGRAM):   end;
4068578   +end;
MPRINT(EM_DIAGRAM):   end;
4068579   +
4068580   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4068581   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4068582   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4068583   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4068584   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4068585   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4068586   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4068587   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4068588   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4068589   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4068590   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4068591   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4068592   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4068593   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4068594   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068595   +end;
MPRINT(EM_DIAGRAM):   end;
4068596   +else do;
MPRINT(EM_DIAGRAM):   else do;
4068597   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4068598   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4068599   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4068600   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4068601   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4068602   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4068603   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4068604   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4068605   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4068606   +         end;
MPRINT(EM_DIAGRAM):   end;
4068607   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4068608   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4068609   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4068610   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4068611   +            end;
MPRINT(EM_DIAGRAM):   end;
4068612   +         end;
MPRINT(EM_DIAGRAM):   end;
4068613   +      end;
MPRINT(EM_DIAGRAM):   end;
4068614   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4068615   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4068616   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4068617   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4068618   +         end;
MPRINT(EM_DIAGRAM):   end;
4068619   +      end;
MPRINT(EM_DIAGRAM):   end;
4068620   +   end;
MPRINT(EM_DIAGRAM):   end;
4068621   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4068622   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4068623   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4068624   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4068625   +      end;
MPRINT(EM_DIAGRAM):   end;
4068626   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4068627   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4068628   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4068629   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4068630   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4068631   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4068632   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4068633   +         end;
MPRINT(EM_DIAGRAM):   end;
4068634   +      end;
MPRINT(EM_DIAGRAM):   end;
4068635   +   end;
MPRINT(EM_DIAGRAM):   end;
4068636   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4068637   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4068638   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4068639   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4068640   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4068641   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4068642   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068643   +   end;
MPRINT(EM_DIAGRAM):   end;
4068644   +end;
MPRINT(EM_DIAGRAM):   end;
4068645   +
4068646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068647   +*** Checking missing input Interval
4068648   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4068649   +
4068650   +IF NMISS(
4068651   +   AcceptedCmpTotal ,
4068652   +   Age ,
4068653   +   Frq ,
4068654   +   Income ,
4068655   +   Kidhome ,
4068656   +   Mnt ,
4068657   +   MntFishProducts ,
4068658   +   MntFruits ,
4068659   +   MntGoldProds ,
4068660   +   MntMeatProducts ,
4068661   +   MntSweetProducts ,
4068662   +   MntWines ,
4068663   +   MonthsAsCustomer ,
4068664   +   NumCatalogPurchases ,
4068665   +   NumDealsPurchases ,
4068666   +   NumDistPurchases ,
4068667   +   NumStorePurchases ,
4068668   +   NumWebPurchases ,
4068669   +   NumWebVisitsMonth ,
4068670   +   RFMstat ,
4068671   +   RMntFrq ,
4068672   +   Recency ,
4068673   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4068674   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4068675   +
4068676   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4068677   +END;
MPRINT(EM_DIAGRAM):   END;
4068678   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068679   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4068680   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068681   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4068682   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4068683   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4068684   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4068685   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4068686   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4068687   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4068688   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4068689   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4068690   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4068691   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4068692   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4068693   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4068694   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4068695   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4068696   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4068697   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4068698   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4068699   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4068700   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4068701   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4068702   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4068703   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4068704   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4068705   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4068706   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4068707   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4068708   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4068709   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4068710   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4068711   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4068712   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4068713   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4068714   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4068715   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4068716   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4068717   +END;
MPRINT(EM_DIAGRAM):   END;
4068718   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4068719   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4068720   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4068721   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4068722   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4068723   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4068724   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4068725   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4068726   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4068727   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4068728   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4068729   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4068730   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4068731   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4068732   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4068733   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4068734   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4068735   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4068736   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4068737   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4068738   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4068739   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4068740   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4068741   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4068742   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4068743   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4068744   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4068745   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4068746   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4068747   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4068748   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4068749   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4068750   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4068751   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4068752   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4068753   +   ELSE S_NumCatalogPurchases
4068754   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4068755   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4068756   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4068757   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4068758   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4068759   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4068760   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4068761   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4068762   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4068763   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4068764   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4068765   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4068766   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4068767   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4068768   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4068769   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4068770   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4068771   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4068772   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4068773   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4068774   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4068775   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4068776   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4068777   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4068778   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4068779   +END;
MPRINT(EM_DIAGRAM):   END;
4068780   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068781   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4068782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068783   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068784   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4068785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068787   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4068788   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4068789   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4068790   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
4068791   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
4068792   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
4068793   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
4068794   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
4068795   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
4068796   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
4068797   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
4068798   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
4068799   +          +     1.17276395296242 * S_NumDealsPurchases
4068800   +          +     0.26632768295477 * S_NumDistPurchases
4068801   +          +    -1.26575615903579 * S_NumStorePurchases
4068802   +          +    -0.95316107557927 * S_NumWebPurchases
4068803   +          +     1.01828574356487 * S_NumWebVisitsMonth
4068804   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
4068805   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
4068806   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 *
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 *
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts +
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 *
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 *
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 *
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 *
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq +
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
4068807   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
4068808   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
4068809   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
4068810   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
4068811   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
4068812   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
4068813   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
4068814   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
4068815   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
4068816   +          +     1.14485571201233 * S_NumDealsPurchases
4068817   +          +     0.21414266588987 * S_NumDistPurchases
4068818   +          +    -0.10530090074297 * S_NumStorePurchases
4068819   +          +    -0.41712321238458 * S_NumWebPurchases
4068820   +          +    -0.99760766791108 * S_NumWebVisitsMonth
4068821   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
4068822   +        S_RMntFrq  +     1.10040128548883 * S_Recency
4068823   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 *
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 *
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts +
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 *
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 *
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 *
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 *
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq +
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
4068824   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
4068825   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
4068826   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
4068827   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
4068828   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
4068829   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
4068830   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
4068831   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
4068832   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
4068833   +          +      0.7196418967437 * S_NumDealsPurchases
4068834   +          +     0.69035286374177 * S_NumDistPurchases
4068835   +          +     0.38027656631135 * S_NumStorePurchases
4068836   +          +    -0.18878358997924 * S_NumWebPurchases
4068837   +          +     1.61962062004798 * S_NumWebVisitsMonth
4068838   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
4068839   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
4068840   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 *
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 *
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts +
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 *
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 *
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 *
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 *
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq +
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
4068841   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
4068842   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
4068843   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
4068844   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
4068845   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
4068846   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
4068847   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
4068848   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
4068849   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
4068850   +          +    -0.00642902007204 * S_NumDealsPurchases
4068851   +          +     0.29785069480367 * S_NumDistPurchases
4068852   +          +    -0.42243322063147 * S_NumStorePurchases
4068853   +          +     0.54880896338383 * S_NumWebPurchases
4068854   +          +    -0.12525846016886 * S_NumWebVisitsMonth
4068855   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
4068856   +        S_RMntFrq  +     0.10252211581449 * S_Recency
4068857   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 *
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 *
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts +
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 *
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines +
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases +
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases +
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases +
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 *
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
4068858   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
4068859   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
4068860   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
4068861   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
4068862   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
4068863   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
4068864   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
4068865   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
4068866   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
4068867   +          +    -0.48404738328225 * S_NumDealsPurchases
4068868   +          +    -0.02464180457879 * S_NumDistPurchases
4068869   +          +     1.17201831082067 * S_NumStorePurchases
4068870   +          +     0.57453655167516 * S_NumWebPurchases
4068871   +          +    -1.94417019790248 * S_NumWebVisitsMonth
4068872   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
4068873   +        S_RMntFrq  +      1.6169916658132 * S_Recency
4068874   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 *
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 *
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts +
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 *
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 *
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 *
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 *
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq +
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
4068875   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
4068876   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
4068877   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
4068878   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
4068879   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
4068880   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
4068881   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
4068882   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
4068883   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
4068884   +          +    -1.49850531967483 * S_NumDealsPurchases
4068885   +          +    -0.82105466264223 * S_NumDistPurchases
4068886   +          +     0.29984603642824 * S_NumStorePurchases
4068887   +          +     0.06557123721611 * S_NumWebPurchases
4068888   +          +     1.04754749365002 * S_NumWebVisitsMonth
4068889   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
4068890   +        S_RMntFrq  +     0.12396789666359 * S_Recency
4068891   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 *
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 *
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts +
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 *
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 *
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 *
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 *
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq +
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
4068892   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
4068893   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
4068894   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
4068895   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
4068896   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 *
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 +
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 *
HigherEducationBinary0 ;
4068897   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
4068898   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
4068899   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
4068900   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
4068901   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 *
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 +
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 *
HigherEducationBinary0 ;
4068902   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
4068903   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
4068904   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
4068905   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
4068906   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 +
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 *
HigherEducationBinary0 ;
4068907   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
4068908   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
4068909   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
4068910   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
4068911   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 *
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 +
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 *
HigherEducationBinary0 ;
4068912   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
4068913   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
4068914   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
4068915   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
4068916   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 *
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 +
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 *
HigherEducationBinary0 ;
4068917   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
4068918   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
4068919   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
4068920   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
4068921   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 +
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 *
HigherEducationBinary0 ;
4068922   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
4068923   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
4068924   +        EducationGraduation  +     0.07595631354847 * EducationMaster
4068925   +          +     0.24583509957712 * Marital_StatusDivorced
4068926   +          +    -0.22681931588361 * Marital_StatusMarried
4068927   +          +    -0.12924106229536 * Marital_StatusSingle
4068928   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried +
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
4068929   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
4068930   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
4068931   +        EducationGraduation  +     0.23015089246655 * EducationMaster
4068932   +          +    -0.12585334311068 * Marital_StatusDivorced
4068933   +          +    -0.20835502467207 * Marital_StatusMarried
4068934   +          +    -0.13839534449368 * Marital_StatusSingle
4068935   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle +
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 *
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 *
Marital_StatusTogether ;
4068936   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
4068937   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
4068938   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
4068939   +          +     0.35106363238113 * Marital_StatusDivorced
4068940   +          +     -1.3414808583918 * Marital_StatusMarried
4068941   +          +     1.40835320798486 * Marital_StatusSingle
4068942   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle +
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation +
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced +
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle +
-1.26805917396788 * Marital_StatusTogether ;
4068943   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
4068944   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
4068945   +        EducationGraduation  +      0.1746658332011 * EducationMaster
4068946   +          +     0.48174546958393 * Marital_StatusDivorced
4068947   +          +    -0.41416978858191 * Marital_StatusMarried
4068948   +          +    -0.23376801546265 * Marital_StatusSingle
4068949   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle +
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 *
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 *
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 *
Marital_StatusTogether ;
4068950   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
4068951   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
4068952   +        EducationGraduation  +     0.68875064631577 * EducationMaster
4068953   +          +    -0.67557643774246 * Marital_StatusDivorced
4068954   +          +     1.63844045917367 * Marital_StatusMarried
4068955   +          +    -0.70320960247699 * Marital_StatusSingle
4068956   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle +
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 *
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 *
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 *
Marital_StatusTogether ;
4068957   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
4068958   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
4068959   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
4068960   +          +    -0.11371453086883 * Marital_StatusDivorced
4068961   +          +    -0.34226997176291 * Marital_StatusMarried
4068962   +          +    -1.01568676685754 * Marital_StatusSingle
4068963   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle +
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation +
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced +
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle +
-0.07673228755579 * Marital_StatusTogether ;
4068964   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
4068965   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
4068966   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
4068967   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
4068968   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
4068969   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
4068970   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
4068971   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
4068972   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
4068973   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4068974   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4068975   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4068976   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4068977   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4068978   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4068979   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4068980   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4068981   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4068982   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4068983   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4068984   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4068985   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4068986   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
4068987   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
4068988   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4068989   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4068990   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4068991   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4068992   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4068993   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4068994   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
4068995   +END;
MPRINT(EM_DIAGRAM):   END;
4068996   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4068997   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4068998   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4068999   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4069000   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4069001   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4069002   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4069003   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
4069004   +END;
MPRINT(EM_DIAGRAM):   END;
4069005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4069006   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4069007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4069008   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4069009   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
4069010   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
4069011   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
4069012   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
4069013   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
4069014   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
4069015   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
4069016   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
4069017   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
4069018   +          +    -0.87259051567474 * S_NumDealsPurchases
4069019   +          +    -0.36454149529139 * S_NumDistPurchases
4069020   +          +     0.12447759925061 * S_NumStorePurchases
4069021   +          +    -1.08133487947367 * S_NumWebPurchases
4069022   +          +    -0.49882157745454 * S_NumWebVisitsMonth
4069023   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
4069024   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
4069025   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 *
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 *
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts +
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 *
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 *
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 *
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 *
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq +
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
4069026   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
4069027   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
4069028   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
4069029   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
4069030   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
4069031   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
4069032   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
4069033   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
4069034   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
4069035   +          +     2.23121497416403 * S_NumDealsPurchases
4069036   +          +    -0.48674842191071 * S_NumDistPurchases
4069037   +          +     1.77510728607544 * S_NumStorePurchases
4069038   +          +     0.14647433155436 * S_NumWebPurchases
4069039   +          +    -0.95892686924419 * S_NumWebVisitsMonth
4069040   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
4069041   +        S_RMntFrq  +     2.46497777428475 * S_Recency
4069042   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 *
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 *
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts +
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 *
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 *
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 *
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 *
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq +
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
4069043   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
4069044   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
4069045   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
4069046   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
4069047   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
4069048   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
4069049   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
4069050   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
4069051   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
4069052   +          +     0.14338855349611 * S_NumDealsPurchases
4069053   +          +    -2.21071010829235 * S_NumDistPurchases
4069054   +          +    -0.21795889348002 * S_NumStorePurchases
4069055   +          +     1.98825087883535 * S_NumWebPurchases
4069056   +          +     1.02482442531149 * S_NumWebVisitsMonth
4069057   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
4069058   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
4069059   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 *
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 *
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts +
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 *
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 *
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 *
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 *
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq +
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
4069060   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
4069061   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
4069062   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
4069063   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
4069064   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
4069065   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
4069066   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
4069067   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
4069068   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
4069069   +          +     0.30041205661012 * S_NumDealsPurchases
4069070   +          +    -0.63499849986918 * S_NumDistPurchases
4069071   +          +    -0.34155713433714 * S_NumStorePurchases
4069072   +          +    -1.14183354933936 * S_NumWebPurchases
4069073   +          +    -0.42681980262973 * S_NumWebVisitsMonth
4069074   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
4069075   +        S_RMntFrq  +     1.25852246467612 * S_Recency
4069076   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 *
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 *
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts +
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 *
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 *
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 *
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 *
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq +
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
4069077   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
4069078   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
4069079   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
4069080   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
4069081   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
4069082   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
4069083   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
4069084   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
4069085   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
4069086   +          +    -0.21237915559831 * S_NumDealsPurchases
4069087   +          +     0.48256923764182 * S_NumDistPurchases
4069088   +          +    -0.45553093140641 * S_NumStorePurchases
4069089   +          +      0.5593655963659 * S_NumWebPurchases
4069090   +          +     0.27943768691188 * S_NumWebVisitsMonth
4069091   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
4069092   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
4069093   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 *
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome +
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 *
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts +
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 *
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 *
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 *
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 *
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq +
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
4069094   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
4069095   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
4069096   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
4069097   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
4069098   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
4069099   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
4069100   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
4069101   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
4069102   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
4069103   +          +     2.38967021388062 * S_NumDealsPurchases
4069104   +          +    -0.97722398866481 * S_NumDistPurchases
4069105   +          +     1.57612333191312 * S_NumStorePurchases
4069106   +          +    -0.75968679115983 * S_NumWebPurchases
4069107   +          +    -0.64207187757251 * S_NumWebVisitsMonth
4069108   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
4069109   +        S_RMntFrq  +     1.71313869798331 * S_Recency
4069110   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 *
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome +
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 *
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts +
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 *
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 *
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 *
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 *
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq +
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
4069111   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
4069112   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
4069113   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
4069114   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
4069115   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 +
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 *
HigherEducationBinary0 ;
4069116   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
4069117   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
4069118   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
4069119   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
4069120   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 *
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 +
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 *
HigherEducationBinary0 ;
4069121   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
4069122   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
4069123   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
4069124   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
The SAS System
 
4069125   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 *
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 +
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 *
HigherEducationBinary0 ;
4069126   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
4069127   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
4069128   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
4069129   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
4069130   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 *
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 +
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 *
HigherEducationBinary0 ;
4069131   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
4069132   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
4069133   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
4069134   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
4069135   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 *
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 +
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 *
HigherEducationBinary0 ;
4069136   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
4069137   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
4069138   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
4069139   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
4069140   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 *
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 +
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 *
HigherEducationBinary0 ;
4069141   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
4069142   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
4069143   +        EducationGraduation  +      0.1073450284316 * EducationMaster
4069144   +          +     0.96470902298142 * Marital_StatusDivorced
4069145   +          +     0.94805959268314 * Marital_StatusMarried
4069146   +          +     -0.6523948769616 * Marital_StatusSingle
4069147   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle +
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 *
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 *
Marital_StatusTogether ;
4069148   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
4069149   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
4069150   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
4069151   +          +      0.3918249505531 * Marital_StatusDivorced
4069152   +          +    -0.00968091979586 * Marital_StatusMarried
4069153   +          +     0.84615379885071 * Marital_StatusSingle
4069154   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle +
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation +
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced +
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle +
0.34817324570682 * Marital_StatusTogether ;
4069155   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
4069156   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
4069157   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
4069158   +          +     1.14335160313191 * Marital_StatusDivorced
4069159   +          +     0.50580517192175 * Marital_StatusMarried
4069160   +          +     0.17264295020921 * Marital_StatusSingle
4069161   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle +
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 *
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 *
Marital_StatusTogether ;
4069162   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
4069163   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
4069164   +        EducationGraduation  +     1.95818378342783 * EducationMaster
4069165   +          +    -0.11238504444225 * Marital_StatusDivorced
4069166   +          +    -0.81348274043749 * Marital_StatusMarried
4069167   +          +     0.46075415610001 * Marital_StatusSingle
4069168   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle +
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 *
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 *
Marital_StatusTogether ;
4069169   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
4069170   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
4069171   +        EducationGraduation  +     0.08396135672504 * EducationMaster
4069172   +          +    -0.46342068701431 * Marital_StatusDivorced
4069173   +          +    -0.41667845270204 * Marital_StatusMarried
4069174   +          +    -0.47166707496281 * Marital_StatusSingle
4069175   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle +
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 *
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 *
Marital_StatusTogether ;
4069176   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
4069177   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
4069178   +        EducationGraduation  +     0.36656103863186 * EducationMaster
4069179   +          +    -0.45376613787812 * Marital_StatusDivorced
4069180   +          +     0.01337046049801 * Marital_StatusMarried
4069181   +          +    -0.92811489484121 * Marital_StatusSingle
4069182   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle +
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 *
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 *
Marital_StatusTogether ;
4069183   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
4069184   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
4069185   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
4069186   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
4069187   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
4069188   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
4069189   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
4069190   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
4069191   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
4069192   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4069193   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4069194   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4069195   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4069196   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4069197   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4069198   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4069199   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4069200   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4069201   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4069202   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4069203   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4069204   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4069205   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
4069206   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
4069207   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4069208   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4069209   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4069210   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4069211   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4069212   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4069213   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
4069214   +END;
MPRINT(EM_DIAGRAM):   END;
4069215   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4069216   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4069217   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4069218   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4069219   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4069220   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4069221   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4069222   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
4069223   +END;
MPRINT(EM_DIAGRAM):   END;
4069224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4069225   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4069226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4069227   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4069228   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
4069229   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
4069230   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
4069231   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 +
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 +
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
4069232   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
4069233   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
4069234   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
4069235   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 +
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 +
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
4069236   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
4069237   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
4069238   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
4069239   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 +
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 +
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
4069240   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
4069241   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
4069242   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
4069243   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 +
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 +
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
4069244   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
4069245   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
4069246   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
4069247   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 +
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 +
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
4069248   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
4069249   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
4069250   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
4069251   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 +
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 +
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
4069252   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
4069253   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
4069254   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
4069255   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 +
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
4069256   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
4069257   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
4069258   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
4069259   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 +
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
4069260   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
4069261   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
4069262   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
4069263   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 +
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
4069264   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
4069265   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
4069266   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
4069267   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 +
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
4069268   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
4069269   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
4069270   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
4069271   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 +
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
4069272   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
4069273   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
4069274   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
4069275   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 +
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
4069276   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
4069277   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
4069278   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
4069279   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
4069280   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
4069281   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
4069282   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
4069283   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
4069284   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
4069285   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4069286   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4069287   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4069288   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4069289   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4069290   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4069291   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4069292   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4069293   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4069294   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4069295   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4069296   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
4069297   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
4069298   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
4069299   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
4069300   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4069301   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4069302   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4069303   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4069304   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4069305   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
4069306   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
4069307   +END;
MPRINT(EM_DIAGRAM):   END;
4069308   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4069309   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4069310   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4069311   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4069312   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4069313   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4069314   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4069315   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
4069316   +END;
MPRINT(EM_DIAGRAM):   END;
4069317   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4069318   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4069319   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4069320   +
4069321   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4069322   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4069323   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4069324   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4069325   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4069326   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4069327   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4069328   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4069329   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4069330   +end;
MPRINT(EM_DIAGRAM):   end;
4069331   +else do;
MPRINT(EM_DIAGRAM):   else do;
4069332   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4069333   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4069334   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4069335   +   end;
MPRINT(EM_DIAGRAM):   end;
4069336   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4069337   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4069338   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4069339   +   end;
MPRINT(EM_DIAGRAM):   end;
4069340   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4069341   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4069342   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4069343   +   end;
MPRINT(EM_DIAGRAM):   end;
4069344   +end;
MPRINT(EM_DIAGRAM):   end;
4069345   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4069346   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
4069347   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
4069348   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
4069349   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 +
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 +
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
4069350   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
4069351   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4069352   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4069353   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4069354   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4069355   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4069356   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4069357   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4069358   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4069359   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4069360   +END;
MPRINT(EM_DIAGRAM):   END;
4069361   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4069362   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4069363   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4069364   +END;
MPRINT(EM_DIAGRAM):   END;
4069365   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4069366   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4069367   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4069368   +END;
MPRINT(EM_DIAGRAM):   END;
4069369   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4069370   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4069371   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4069372   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4069373   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4069374   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4069375   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4069376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4069377   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4069378   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4069379   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4069380   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4069381   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4069382   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4069383   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4069384   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4069385   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4069386   +END;
MPRINT(EM_DIAGRAM):   END;
4069387   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4069388   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4069389   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4069390   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4069391   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
4069392   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4069393   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
4069394   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4069395   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
4069396   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
4069397   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
4069398   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
4069399   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4069400   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
4069401   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4069402   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
4069403   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
4069404   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
4069405   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4069406   +* Ensmbl36: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Average Posteriors of 7 models;
4069407   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4069408   +P_DepVar1 = (
4069409   +AutoNeural6_P_DepVar1 +
4069410   +AutoNeural7_P_DepVar1 +
4069411   +AutoNeural8_P_DepVar1 +
4069412   +AutoNeural10_P_DepVar1 +
4069413   +AutoNeural9_P_DepVar1 +
4069414   +AutoNeural11_P_DepVar1 +
4069415   +AutoNeural12_P_DepVar1
4069416   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural6_P_DepVar1 + AutoNeural7_P_DepVar1 +
AutoNeural8_P_DepVar1 + AutoNeural10_P_DepVar1 + AutoNeural9_P_DepVar1 +
AutoNeural11_P_DepVar1 + AutoNeural12_P_DepVar1 )/7;
4069417   +P_DepVar0 = (
4069418   +AutoNeural6_P_DepVar0 +
4069419   +AutoNeural7_P_DepVar0 +
4069420   +AutoNeural8_P_DepVar0 +
4069421   +AutoNeural10_P_DepVar0 +
4069422   +AutoNeural9_P_DepVar0 +
4069423   +AutoNeural11_P_DepVar0 +
4069424   +AutoNeural12_P_DepVar0
4069425   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural6_P_DepVar0 + AutoNeural7_P_DepVar0 +
AutoNeural8_P_DepVar0 + AutoNeural10_P_DepVar0 + AutoNeural9_P_DepVar0 +
AutoNeural11_P_DepVar0 + AutoNeural12_P_DepVar0 )/7;
4069426   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4069427   +* Ensmbl36: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Classification Vars;
4069428   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4069429   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
4069430   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
4069431   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
4069432   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
4069433   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
4069434   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
4069435   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
4069436   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
4069437   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
4069438   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
4069439   +end;
MPRINT(EM_DIAGRAM):   end;
4069440   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
4069441   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
4069442   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
4069443   +end;
MPRINT(EM_DIAGRAM):   end;
4069444   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4069445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4069446   +* Ensmbl36: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Producing Unformatted variable;
4069447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4069448   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
4069449   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
4069450   +else
4069451   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
4069452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4069453   +* Ensmbl36: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing _WARN_ Variable;
4069454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4069455   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
4069456   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
4069457   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
4069458   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4069458  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4069459   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4069459  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4069460   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4069460  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4069461   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4069461  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4069462   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4069462  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4069463   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4069463  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4069464   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4069464  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4069465   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4069465  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4069466   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4069466  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4069467   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4069467  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4069468   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4069468  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4069469   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4069469  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4069470   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4069470  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4069471   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4069471  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4069472   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4069472  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4069473   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4069473  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4069474   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4069474  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4069475   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4069475  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4069476   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4069476  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4069477   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4069477  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4069478   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4069478  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4069479   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4069479  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4069480   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4069480  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4069481   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4069481  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4069482   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4069482  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
4069483   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4069483  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
4069484   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4069484  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
4069485   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4069485  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
4069486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4069487   +* Ensmbl36: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Residual Vars;
4069488   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4069489   +if
4069490   +F_DepVar NE '1'
4069491   +AND F_DepVar NE '0'
4069492   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
4069493   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
4069494   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
4069495   +end;
MPRINT(EM_DIAGRAM):   end;
4069496   +else do;
MPRINT(EM_DIAGRAM):   else do;
4069497   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
4069498   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
4069499   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
4069500   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
4069501   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
4069502   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
4069503   +END;
MPRINT(EM_DIAGRAM):   END;
4069504   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4069505    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL36_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.26 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.25 seconds
      cpu time            0.26 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4069506    quit;
4069507    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl36_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl36_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl36_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
4069567    filename _pref
4069567  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
4069568    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4069569    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas.
4069570   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4069571   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4069572   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4069573   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4069574   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4069575   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4069576   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4069577   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4069578   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4069579   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4069580   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4069581   +LENGTH _WARN_ $4
4069582   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4069583   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4069584   +
4069585   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4069586   +
4069587   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4069588   +
4069589   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4069590   +
4069591   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4069592   +
4069593   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4069594   +
4069595   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4069596   +
4069597   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4069598   +
4069599   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4069600   +
4069601   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4069602   +
4069603   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4069604   +
4069605   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4069606   +
4069607   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4069608   +
4069609   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4069610   +
4069611   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4069612   +
4069613   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4069614   +
4069615   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4069616   +
4069617   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4069618   +
4069619   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4069620   +
4069621   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4069622   +
4069623   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4069624   +
4069625   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4069626   +
4069627   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4069628   +
4069629   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4069630   +
4069631   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4069632   +
4069633   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4069634   +
4069635   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4069636   +
4069637   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4069638   +
4069639   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4069640   +
4069641   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4069642   +
4069643   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4069644   +
4069645   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4069646   +
4069647   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4069648   +
4069649   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4069650   +
4069651   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4069652   +
4069653   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4069654   +
4069655   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4069656   +
4069657   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4069658   +
4069659   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4069660   +
4069661   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4069662   +
4069663   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4069664   +
4069665   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4069666   +
4069667   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4069668   +
4069669   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4069670   +
4069671   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4069672   +
4069673   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4069674   +
4069675   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4069676   +
4069677   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4069678   +
4069679   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4069680   +
4069681   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4069682   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4069683   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4069684   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4069685   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4069686   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069687   +end;
MPRINT(EM_DIAGRAM):   end;
4069688   +else do;
MPRINT(EM_DIAGRAM):   else do;
4069689   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4069690   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4069691   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4069692   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4069693   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4069694   +   end;
MPRINT(EM_DIAGRAM):   end;
4069695   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4069696   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4069697   +   end;
MPRINT(EM_DIAGRAM):   end;
4069698   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4069699   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4069700   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4069701   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069702   +   end;
MPRINT(EM_DIAGRAM):   end;
4069703   +end;
MPRINT(EM_DIAGRAM):   end;
4069704   +
4069705   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4069706   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4069707   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4069708   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4069709   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4069710   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069711   +end;
MPRINT(EM_DIAGRAM):   end;
4069712   +else do;
MPRINT(EM_DIAGRAM):   else do;
4069713   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4069714   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4069715   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4069716   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4069717   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4069718   +   end;
MPRINT(EM_DIAGRAM):   end;
4069719   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4069720   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4069721   +   end;
MPRINT(EM_DIAGRAM):   end;
4069722   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4069723   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4069724   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4069725   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069726   +   end;
MPRINT(EM_DIAGRAM):   end;
4069727   +end;
MPRINT(EM_DIAGRAM):   end;
4069728   +
4069729   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4069730   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4069731   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4069732   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4069733   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4069734   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069735   +end;
MPRINT(EM_DIAGRAM):   end;
4069736   +else do;
MPRINT(EM_DIAGRAM):   else do;
4069737   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4069738   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4069739   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4069740   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4069741   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4069742   +   end;
MPRINT(EM_DIAGRAM):   end;
4069743   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4069744   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4069745   +   end;
MPRINT(EM_DIAGRAM):   end;
4069746   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4069747   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4069748   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4069749   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069750   +   end;
MPRINT(EM_DIAGRAM):   end;
4069751   +end;
MPRINT(EM_DIAGRAM):   end;
4069752   +
4069753   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4069754   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4069755   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4069756   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4069757   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4069758   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069759   +end;
MPRINT(EM_DIAGRAM):   end;
4069760   +else do;
MPRINT(EM_DIAGRAM):   else do;
4069761   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4069762   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4069763   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4069764   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4069765   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4069766   +   end;
MPRINT(EM_DIAGRAM):   end;
4069767   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4069768   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4069769   +   end;
MPRINT(EM_DIAGRAM):   end;
4069770   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4069771   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4069772   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4069773   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069774   +   end;
MPRINT(EM_DIAGRAM):   end;
4069775   +end;
MPRINT(EM_DIAGRAM):   end;
4069776   +
4069777   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4069778   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4069779   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4069780   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4069781   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4069782   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069783   +end;
MPRINT(EM_DIAGRAM):   end;
4069784   +else do;
MPRINT(EM_DIAGRAM):   else do;
4069785   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4069786   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4069787   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4069788   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4069789   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4069790   +   end;
MPRINT(EM_DIAGRAM):   end;
4069791   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4069792   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4069793   +   end;
MPRINT(EM_DIAGRAM):   end;
4069794   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4069795   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4069796   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4069797   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069798   +   end;
MPRINT(EM_DIAGRAM):   end;
4069799   +end;
MPRINT(EM_DIAGRAM):   end;
4069800   +
4069801   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4069802   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4069803   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4069804   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4069805   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4069806   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069807   +end;
MPRINT(EM_DIAGRAM):   end;
4069808   +else do;
MPRINT(EM_DIAGRAM):   else do;
4069809   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4069810   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4069811   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4069812   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4069813   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4069814   +   end;
MPRINT(EM_DIAGRAM):   end;
4069815   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4069816   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4069817   +   end;
MPRINT(EM_DIAGRAM):   end;
4069818   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4069819   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4069820   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4069821   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069822   +   end;
MPRINT(EM_DIAGRAM):   end;
4069823   +end;
MPRINT(EM_DIAGRAM):   end;
4069824   +
4069825   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4069826   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4069827   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4069828   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4069829   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4069830   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069831   +end;
MPRINT(EM_DIAGRAM):   end;
4069832   +else do;
MPRINT(EM_DIAGRAM):   else do;
4069833   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4069834   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4069835   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4069836   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4069837   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4069838   +   end;
MPRINT(EM_DIAGRAM):   end;
4069839   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4069840   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4069841   +   end;
MPRINT(EM_DIAGRAM):   end;
4069842   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4069843   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4069844   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4069845   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069846   +   end;
MPRINT(EM_DIAGRAM):   end;
4069847   +end;
MPRINT(EM_DIAGRAM):   end;
4069848   +
4069849   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4069850   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4069851   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4069852   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4069853   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4069854   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4069855   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4069856   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4069857   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4069858   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4069859   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4069860   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4069861   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4069862   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069863   +end;
MPRINT(EM_DIAGRAM):   end;
4069864   +else do;
MPRINT(EM_DIAGRAM):   else do;
4069865   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4069866   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4069867   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4069868   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4069869   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4069870   +   end;
MPRINT(EM_DIAGRAM):   end;
4069871   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4069872   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4069873   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4069874   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4069875   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4069876   +   end;
MPRINT(EM_DIAGRAM):   end;
4069877   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4069878   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4069879   +   end;
MPRINT(EM_DIAGRAM):   end;
4069880   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4069881   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4069882   +   end;
MPRINT(EM_DIAGRAM):   end;
4069883   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4069884   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4069885   +   end;
MPRINT(EM_DIAGRAM):   end;
4069886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4069887   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4069888   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4069889   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4069890   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4069891   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4069892   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069893   +   end;
MPRINT(EM_DIAGRAM):   end;
4069894   +end;
MPRINT(EM_DIAGRAM):   end;
4069895   +
4069896   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4069897   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4069898   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4069899   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4069900   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4069901   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4069902   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4069903   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4069904   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4069905   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4069906   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4069907   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4069908   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4069909   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4069910   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069911   +end;
MPRINT(EM_DIAGRAM):   end;
4069912   +else do;
MPRINT(EM_DIAGRAM):   else do;
4069913   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4069914   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4069915   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4069916   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4069917   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4069918   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4069919   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4069920   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4069921   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4069922   +         end;
MPRINT(EM_DIAGRAM):   end;
4069923   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4069924   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4069925   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4069926   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4069927   +            end;
MPRINT(EM_DIAGRAM):   end;
4069928   +         end;
MPRINT(EM_DIAGRAM):   end;
4069929   +      end;
MPRINT(EM_DIAGRAM):   end;
4069930   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4069931   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4069932   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4069933   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4069934   +         end;
MPRINT(EM_DIAGRAM):   end;
4069935   +      end;
MPRINT(EM_DIAGRAM):   end;
4069936   +   end;
MPRINT(EM_DIAGRAM):   end;
4069937   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4069938   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4069939   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4069940   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4069941   +      end;
MPRINT(EM_DIAGRAM):   end;
4069942   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4069943   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4069944   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4069945   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4069946   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4069947   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4069948   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4069949   +         end;
MPRINT(EM_DIAGRAM):   end;
4069950   +      end;
MPRINT(EM_DIAGRAM):   end;
4069951   +   end;
MPRINT(EM_DIAGRAM):   end;
4069952   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4069953   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4069954   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4069955   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4069956   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4069957   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4069958   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069959   +   end;
MPRINT(EM_DIAGRAM):   end;
4069960   +end;
MPRINT(EM_DIAGRAM):   end;
4069961   +
4069962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4069963   +*** Checking missing input Interval
4069964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4069965   +
4069966   +IF NMISS(
4069967   +   AcceptedCmpTotal ,
4069968   +   Age ,
4069969   +   Frq ,
4069970   +   Income ,
4069971   +   Kidhome ,
4069972   +   Mnt ,
4069973   +   MntFishProducts ,
4069974   +   MntFruits ,
4069975   +   MntGoldProds ,
4069976   +   MntMeatProducts ,
4069977   +   MntSweetProducts ,
4069978   +   MntWines ,
4069979   +   MonthsAsCustomer ,
4069980   +   NumCatalogPurchases ,
4069981   +   NumDealsPurchases ,
4069982   +   NumDistPurchases ,
4069983   +   NumStorePurchases ,
4069984   +   NumWebPurchases ,
4069985   +   NumWebVisitsMonth ,
4069986   +   RFMstat ,
4069987   +   RMntFrq ,
4069988   +   Recency ,
4069989   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4069990   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4069991   +
4069992   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4069993   +END;
MPRINT(EM_DIAGRAM):   END;
4069994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4069995   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4069996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4069997   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4069998   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4069999   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4070000   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4070001   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4070002   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4070003   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4070004   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4070005   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4070006   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4070007   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4070008   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4070009   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4070010   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4070011   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4070012   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4070013   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4070014   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4070015   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4070016   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4070017   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4070018   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4070019   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4070020   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4070021   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4070022   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4070023   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4070024   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4070025   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4070026   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4070027   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4070028   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4070029   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4070030   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4070031   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4070032   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4070033   +END;
MPRINT(EM_DIAGRAM):   END;
4070034   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4070035   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4070036   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4070037   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4070038   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4070039   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4070040   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4070041   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4070042   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4070043   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4070044   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4070045   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4070046   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4070047   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4070048   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4070049   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4070050   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4070051   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4070052   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4070053   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4070054   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4070055   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4070056   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4070057   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4070058   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4070059   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4070060   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4070061   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4070062   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4070063   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4070064   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4070065   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4070066   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4070067   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4070068   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4070069   +   ELSE S_NumCatalogPurchases
4070070   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4070071   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4070072   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4070073   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4070074   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4070075   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4070076   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4070077   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4070078   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4070079   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4070080   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4070081   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4070082   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4070083   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4070084   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4070085   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4070086   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4070087   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4070088   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4070089   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4070090   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4070091   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4070092   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4070093   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4070094   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4070095   +END;
MPRINT(EM_DIAGRAM):   END;
4070096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070097   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4070098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070100   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4070101   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070103   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4070104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070105   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4070106   +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
4070107   +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
4070108   +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
4070109   +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
4070110   +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
4070111   +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
4070112   +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
4070113   +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
4070114   +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
4070115   +          +     -0.4295354470932 * S_NumDealsPurchases
4070116   +          +    -0.08226280459837 * S_NumDistPurchases
4070117   +          +      0.2932815275833 * S_NumStorePurchases
4070118   +          +     0.19049189042599 * S_NumWebPurchases
4070119   +          +    -0.98799339280673 * S_NumWebVisitsMonth
4070120   +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
4070121   +        S_RMntFrq  +     1.04348870032296 * S_Recency
4070122   +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 *
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 *
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts +
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 *
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 *
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 *
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 *
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq +
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
4070123   +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
4070124   +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
4070125   +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
4070126   +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
4070127   +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 *
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 +
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 *
HigherEducationBinary0 ;
4070128   +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
4070129   +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
4070130   +        EducationGraduation  +    -0.06446100461656 * EducationMaster
4070131   +          +    -0.78551174413278 * Marital_StatusDivorced
4070132   +          +     1.14162836709205 * Marital_StatusMarried
4070133   +          +    -0.85471695548675 * Marital_StatusSingle
4070134   +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle +
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 *
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 *
Marital_StatusTogether ;
4070135   +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
4070136   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4070137   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4070138   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4070139   +END;
MPRINT(EM_DIAGRAM):   END;
4070140   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4070141   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4070142   +END;
MPRINT(EM_DIAGRAM):   END;
4070143   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070144   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4070145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070146   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4070147   +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
4070148   +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
4070149   +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
4070150   +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
4070151   +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
4070152   +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
4070153   +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
4070154   +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
4070155   +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
4070156   +          +      0.1710743409836 * S_NumDealsPurchases
4070157   +          +     1.10019178495427 * S_NumDistPurchases
4070158   +          +     0.06701301620472 * S_NumStorePurchases
4070159   +          +    -1.47240374003368 * S_NumWebPurchases
4070160   +          +     0.38443387640949 * S_NumWebVisitsMonth
4070161   +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
4070162   +        S_RMntFrq  +    -0.01383257292281 * S_Recency
4070163   +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 *
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 *
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts +
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 *
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines +
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases +
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases +
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases +
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 *
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
4070164   +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
4070165   +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
4070166   +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
4070167   +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
4070168   +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 *
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 +
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 *
HigherEducationBinary0 ;
4070169   +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
4070170   +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
4070171   +        EducationGraduation  +    -0.84396607413409 * EducationMaster
4070172   +          +    -0.36835980184757 * Marital_StatusDivorced
4070173   +          +     0.71718933679692 * Marital_StatusMarried
4070174   +          +    -0.35767236657055 * Marital_StatusSingle
4070175   +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle +
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation +
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced +
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle +
0.87230634846649 * Marital_StatusTogether ;
4070176   +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
4070177   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4070178   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4070179   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4070180   +END;
MPRINT(EM_DIAGRAM):   END;
4070181   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4070182   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4070183   +END;
MPRINT(EM_DIAGRAM):   END;
4070184   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070185   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4070186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070187   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4070188   +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
4070189   +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
4070190   +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
4070191   +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
4070192   +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
4070193   +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
4070194   +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
4070195   +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
4070196   +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
4070197   +          +    -1.99858075809796 * S_NumDealsPurchases
4070198   +          +    -0.37353682448701 * S_NumDistPurchases
4070199   +          +     1.16275863071649 * S_NumStorePurchases
4070200   +          +       -0.75936809253 * S_NumWebPurchases
4070201   +          +     2.17936226306026 * S_NumWebVisitsMonth
4070202   +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
4070203   +        S_RMntFrq  +    -1.06566929523903 * S_Recency
4070204   +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 *
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 *
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts +
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 *
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 *
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 *
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 *
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq +
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
4070205   +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
4070206   +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
4070207   +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
4070208   +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
4070209   +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 *
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 +
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 *
HigherEducationBinary0 ;
4070210   +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
4070211   +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
4070212   +        EducationGraduation  +    -0.90489876056203 * EducationMaster
4070213   +          +     0.60036315441483 * Marital_StatusDivorced
4070214   +          +    -0.94084946353672 * Marital_StatusMarried
4070215   +          +     0.34594388147374 * Marital_StatusSingle
4070216   +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle +
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 *
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 *
Marital_StatusTogether ;
4070217   +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
4070218   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4070219   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4070220   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4070221   +END;
MPRINT(EM_DIAGRAM):   END;
4070222   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4070223   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4070224   +END;
MPRINT(EM_DIAGRAM):   END;
4070225   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070226   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4070227   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070228   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4070229   +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
4070230   +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
4070231   +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
4070232   +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
4070233   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
4070234   +END;
MPRINT(EM_DIAGRAM):   END;
4070235   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4070236   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4070237   +END;
MPRINT(EM_DIAGRAM):   END;
4070238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070239   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4070240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070241   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4070242   +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
4070243   +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
4070244   +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
4070245   +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
4070246   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
4070247   +END;
MPRINT(EM_DIAGRAM):   END;
4070248   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4070249   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4070250   +END;
MPRINT(EM_DIAGRAM):   END;
4070251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070252   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4070253   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070254   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4070255   +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
4070256   +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
4070257   +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
4070258   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4070259   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4070260   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
4070261   +END;
MPRINT(EM_DIAGRAM):   END;
4070262   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4070263   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4070264   +END;
MPRINT(EM_DIAGRAM):   END;
4070265   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070266   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4070267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070268   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4070269   +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
4070270   +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
4070271   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4070272   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4070273   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4070274   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4070275   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4070276   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4070277   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4070278   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4070279   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4070280   +END;
MPRINT(EM_DIAGRAM):   END;
4070281   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4070282   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4070283   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4070284   +END;
MPRINT(EM_DIAGRAM):   END;
4070285   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4070286   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4070287   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4070288   +END;
MPRINT(EM_DIAGRAM):   END;
4070289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070290   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4070291   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4070292   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4070293   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4070294   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4070295   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4070296   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4070297   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4070298   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4070299   +END;
MPRINT(EM_DIAGRAM):   END;
4070300   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4070301   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4070302   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4070303   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4070304    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4070305    quit;
4070306    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4070307    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4070308    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4070309    retain ID 2 Node "AutoNeural6";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural6";
4070310    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4070311    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2979 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2979 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070312    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4070313    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070314    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2979 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2979 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4070315    proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME
CREATOR);
4070316    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070317    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL6_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070318    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4070319    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4070320    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4070321    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4070322    proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
4070323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4070324    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4070325    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070326    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070327    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4070328    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4070329    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070330    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4070331    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4070332    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4070332  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1717 rows and 5 columns.
 
4070333    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070334    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4070335    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1717 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1717 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070336    filename _pref
4070336  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4070337    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4070338    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4070339   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4070340   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4070341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4070342   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4070343   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4070344   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4070345    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4070346    quit;
4070347    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4070348    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4070349    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4070350    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4070351    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4070352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070353    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4070354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070355    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070356    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4070357    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070358    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4070359    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4070360    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4070361    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4070362    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070363    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4070364    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
4070365    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4070366    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070367    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070368    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4070369    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4070370    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070371    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070372    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4070373    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4070373  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
4070374    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070375    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4070376    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1721 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070377    filename _pref
4070377  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4070378    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4070379    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4070380   +
4070381   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4070382   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4070382  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4070383   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4070384   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4070385   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4070386   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4070387   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4070388    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4070389    quit;
4070390    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4070391    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4070392    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4070393    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4070394    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4070395    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070396    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4070397    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070398    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4070399    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4070400    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070401    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070402    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4070403    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4070404    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4070405    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070406    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4070407    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070408    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4070409    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070410    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4070411    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4070412    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4070413    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070414    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070415    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4070416    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4070416  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
4070417    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4070418    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4070419    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1760 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070420    filename _pref
4070420  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4070421    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4070422    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4070423   +
4070424   +
4070425   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4070426   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4070427   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4070428   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4070429   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4070430   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4070431   +
4070432   +
4070433   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4070434   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4070435   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4070436   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4070437   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4070438   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4070439   +
4070440   +
4070441   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4070442   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4070443   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4070444   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4070445   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4070446   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4070447   +
4070448   +
4070449   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4070450   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4070451   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4070452   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4070453   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4070454   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4070455   +
4070456   +
4070457   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4070458   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4070459   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4070460   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4070461   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4070462   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4070463   +
4070464   +
4070465   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4070466   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4070467   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4070468   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4070469   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4070470   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4070471   +
4070472   +
4070473   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4070474   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4070475   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4070476   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4070477   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4070478   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4070479   +
4070480   +
4070481   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4070482   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4070483   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4070484   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4070485   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4070486   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4070487   +if
4070488   +_FILTERNORM1 not in ( '.')
4070489   + and
4070490   +_FILTERNORM2 not in ( '.')
4070491   + and
4070492   +_FILTERNORM3 not in ( '.')
4070493   + and
4070494   +_FILTERNORM4 not in ( '.')
4070495   + and
4070496   +_FILTERNORM5 not in ( '.')
4070497   + and
4070498   +_FILTERNORM6 not in ( '.')
4070499   + and
4070500   +_FILTERNORM7 not in ( ' ')
4070501   + and
4070502   +_FILTERNORM8 not in ( ' ')
4070503   +and
4070504   +( Dt_Customer ne .)
4070505   +and ( Income ne . and (Income<=107000))
4070506   +and ( Kidhome ne .)
4070507   +and ( MntFishProducts ne .)
4070508   +and ( MntFruits ne .)
4070509   +and ( MntGoldProds ne .)
4070510   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4070511   +and ( MntSweetProducts ne .)
4070512   +and ( MntWines ne .)
4070513   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4070514   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4070515   +and ( NumStorePurchases ne .)
4070516   +and ( NumWebPurchases ne .)
4070517   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4070518   +and ( Recency ne .)
4070519   +and ( Teenhome ne .)
4070520   +and ( Year_Birth ne .)
4070521   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
4070522   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4070523   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4070524   +end;
MPRINT(EM_DIAGRAM):   end;
4070525   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4070526   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4070527    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4070528    quit;
4070529    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4070530    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4070531    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4070532    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4070533    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4070534    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4070535    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4070536    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070537    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070538    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4070539    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070540    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4070541    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4070542    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4070543    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4070544    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070545    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4070546    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
4070547    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4070548    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070549    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4070550    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4070551    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4070552    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4070553    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070554    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4070555    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4070555  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
4070556    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4070557    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4070558    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1826 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070559    %macro varDept(fcmpdata=,id=);
4070560    %global nobs&id scoreFlag&id;
4070561    %let scoreFlag&id = 0;
4070562    %if &id=1 or ^&fcmpStart %then %do;
4070563    proc sort data=&fcmpdata out=_temp&id nodupkey;
4070564    by NAME;
4070565    where id=&id and LHS in( %let j=1;
4070566    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4070567    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4070568    "&var" %let j = %eval(&j+1);
4070569    %end;
4070570    );
4070571    run;
4070572    %let dsid = %sysfunc(open(_temp&id));
4070573    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4070574    %let dsid = %sysfunc(close(&dsid));
4070575    %if &&nobs&id %then %do;
4070576    %let scoreFlag&id = 1;
4070577    %let fcmpStart = 1;
4070578    %end;
4070579    %else %let fcmpStart = 0;
4070580    %end;
4070581    %else %do;
4070582    proc sort data=&fcmpdata out=_tempid;
4070583    where id=&id;
4070584    by LHS;
4070585    run;
4070586    %let dsid = %sysfunc(open(_tempid));
4070587    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4070588    %let dsid = %sysfunc(close(&dsid));
4070589    %if ^&&nobs&id %then %do;
4070590    proc datasets lib=work nolist;
4070591    delete _tempid;
4070592    run;
4070593    quit;
4070594    %end;
4070595    %else %do;
4070596    data _tempAll;
4070597    set %let j=%eval(&id-1);
4070598    %do x=1 %to &j;
4070599    %if &&nobs&x %then %do;
4070600    _temp&x %end;
4070601    %end;
4070602    ;
4070603    run;
4070604    proc sql;
4070605    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4070605  ! work._tempid p2 where p.name=p2.lhs;
4070606    quit;
4070607    data _temp&id;
4070608    set _temp&id;
4070609    where LHS ne '' and NAME ne '' and Node ne '';
4070610    run;
4070611    proc datasets lib=work nolist;
4070612    delete _tempAll;
4070613    run;
4070614    %let dsid = %sysfunc(open(_temp&id));
4070615    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4070616    %let dsid = %sysfunc(close(&dsid));
4070617    %if ^&&nobs&id %then %do;
4070618    proc datasets lib=work nolist;
4070619    delete _temp&id;
4070620    run;
4070621    quit;
4070622    %end;
4070623    %else %do;
4070624    %let scoreFlag&id = 1;
4070625    data _temp&id;
4070626    set _temp&id;
4070627    where LHS ne NAME and node ne '';
4070628    run;
4070629    %let dsid = %sysfunc(open(_temp&id));
4070630    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4070631    %let dsid = %sysfunc(close(&dsid));
4070632    %if ^&&nobs&id %then %do;
4070633    proc datasets lib=work nolist;
4070634    delete _temp&id;
4070635    run;
4070636    quit;
4070637    %end;
4070638    %else %do;
4070639    proc sort data=_temp&id nodupkey;
4070640    by LHS NAME;
4070641    run;
4070642    %end;
4070643    %end;
4070644    %end;
4070645    %end;
4070646    %mend varDept;
4070647    %macro optCode(outdata=fcmpdata);
4070648    %global fcmpStart;
4070649    %let fcmpStart = 0;
4070650    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4070651    %let NumNodes=9;
4070652    %do k=1 %to &NumNodes;
4070653    %vardept(fcmpdata=&outdata, id=&k);
4070654    %end;
4070655    %mend optCode;
4070656    %optcode(outData=EMWS8.Ensmbl36_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 152 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 112 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 40 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 44 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 83 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
4070657    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4070658    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4070659    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4070660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070661    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4070662    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4070663    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4070664    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070665    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4070666    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4070666  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
4070667    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4070668    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4070669    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4070670    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4070671    filename _pref
4070671  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
4070672    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4070673    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
4070674   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4070675   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4070676   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4070677   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4070678   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4070679   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4070680   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4070681   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4070682   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4070683   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4070684   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4070685   +LENGTH _WARN_ $4
4070686   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4070687   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4070688   +
4070689   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4070690   +
4070691   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4070692   +
4070693   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4070694   +
4070695   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4070696   +
4070697   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4070698   +
4070699   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4070700   +
4070701   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4070702   +
4070703   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4070704   +
4070705   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4070706   +
4070707   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4070708   +
4070709   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4070710   +
4070711   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4070712   +
4070713   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4070714   +
4070715   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4070716   +
4070717   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4070718   +
4070719   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4070720   +
4070721   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4070722   +
4070723   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4070724   +
4070725   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4070726   +
4070727   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4070728   +
4070729   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4070730   +
4070731   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4070732   +
4070733   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4070734   +
4070735   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4070736   +
4070737   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4070738   +
4070739   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4070740   +
4070741   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4070742   +
4070743   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4070744   +
4070745   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4070746   +
4070747   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4070748   +
4070749   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4070750   +
4070751   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4070752   +
4070753   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4070754   +
4070755   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4070756   +
4070757   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4070758   +
4070759   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4070760   +
4070761   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4070762   +
4070763   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4070764   +
4070765   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4070766   +
4070767   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4070768   +
4070769   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4070770   +
4070771   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4070772   +
4070773   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4070774   +
4070775   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4070776   +
4070777   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4070778   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4070779   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4070780   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4070781   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4070782   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070783   +end;
MPRINT(EM_DIAGRAM):   end;
4070784   +else do;
MPRINT(EM_DIAGRAM):   else do;
4070785   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4070786   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4070787   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4070788   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4070789   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4070790   +   end;
MPRINT(EM_DIAGRAM):   end;
4070791   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4070792   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4070793   +   end;
MPRINT(EM_DIAGRAM):   end;
4070794   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4070795   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4070796   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4070797   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070798   +   end;
MPRINT(EM_DIAGRAM):   end;
4070799   +end;
MPRINT(EM_DIAGRAM):   end;
4070800   +
4070801   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4070802   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4070803   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4070804   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4070805   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4070806   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070807   +end;
MPRINT(EM_DIAGRAM):   end;
4070808   +else do;
MPRINT(EM_DIAGRAM):   else do;
4070809   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4070810   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4070811   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4070812   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4070813   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4070814   +   end;
MPRINT(EM_DIAGRAM):   end;
4070815   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4070816   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4070817   +   end;
MPRINT(EM_DIAGRAM):   end;
4070818   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4070819   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4070820   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4070821   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070822   +   end;
MPRINT(EM_DIAGRAM):   end;
4070823   +end;
MPRINT(EM_DIAGRAM):   end;
4070824   +
4070825   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4070826   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4070827   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4070828   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4070829   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4070830   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070831   +end;
MPRINT(EM_DIAGRAM):   end;
4070832   +else do;
MPRINT(EM_DIAGRAM):   else do;
4070833   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4070834   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4070835   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4070836   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4070837   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4070838   +   end;
MPRINT(EM_DIAGRAM):   end;
4070839   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4070840   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4070841   +   end;
MPRINT(EM_DIAGRAM):   end;
4070842   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4070843   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4070844   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4070845   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070846   +   end;
MPRINT(EM_DIAGRAM):   end;
4070847   +end;
MPRINT(EM_DIAGRAM):   end;
4070848   +
4070849   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4070850   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4070851   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4070852   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4070853   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4070854   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070855   +end;
MPRINT(EM_DIAGRAM):   end;
4070856   +else do;
MPRINT(EM_DIAGRAM):   else do;
4070857   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4070858   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4070859   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4070860   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4070861   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4070862   +   end;
MPRINT(EM_DIAGRAM):   end;
4070863   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4070864   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4070865   +   end;
MPRINT(EM_DIAGRAM):   end;
4070866   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4070867   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4070868   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4070869   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070870   +   end;
MPRINT(EM_DIAGRAM):   end;
4070871   +end;
MPRINT(EM_DIAGRAM):   end;
4070872   +
4070873   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4070874   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4070875   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4070876   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4070877   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4070878   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070879   +end;
MPRINT(EM_DIAGRAM):   end;
4070880   +else do;
MPRINT(EM_DIAGRAM):   else do;
4070881   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4070882   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4070883   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4070884   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4070885   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4070886   +   end;
MPRINT(EM_DIAGRAM):   end;
4070887   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4070888   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4070889   +   end;
MPRINT(EM_DIAGRAM):   end;
4070890   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4070891   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4070892   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4070893   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070894   +   end;
MPRINT(EM_DIAGRAM):   end;
4070895   +end;
MPRINT(EM_DIAGRAM):   end;
4070896   +
4070897   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4070898   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4070899   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4070900   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4070901   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4070902   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070903   +end;
MPRINT(EM_DIAGRAM):   end;
4070904   +else do;
MPRINT(EM_DIAGRAM):   else do;
4070905   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4070906   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4070907   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4070908   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4070909   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4070910   +   end;
MPRINT(EM_DIAGRAM):   end;
4070911   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4070912   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4070913   +   end;
MPRINT(EM_DIAGRAM):   end;
4070914   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4070915   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4070916   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4070917   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070918   +   end;
MPRINT(EM_DIAGRAM):   end;
4070919   +end;
MPRINT(EM_DIAGRAM):   end;
4070920   +
4070921   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4070922   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4070923   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4070924   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4070925   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4070926   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070927   +end;
MPRINT(EM_DIAGRAM):   end;
4070928   +else do;
MPRINT(EM_DIAGRAM):   else do;
4070929   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4070930   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4070931   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4070932   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4070933   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4070934   +   end;
MPRINT(EM_DIAGRAM):   end;
4070935   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4070936   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4070937   +   end;
MPRINT(EM_DIAGRAM):   end;
4070938   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4070939   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4070940   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4070941   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070942   +   end;
MPRINT(EM_DIAGRAM):   end;
4070943   +end;
MPRINT(EM_DIAGRAM):   end;
4070944   +
4070945   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4070946   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4070947   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4070948   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4070949   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4070950   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4070951   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4070952   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4070953   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4070954   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4070955   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4070956   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4070957   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4070958   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070959   +end;
MPRINT(EM_DIAGRAM):   end;
4070960   +else do;
MPRINT(EM_DIAGRAM):   else do;
4070961   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4070962   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4070963   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4070964   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4070965   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4070966   +   end;
MPRINT(EM_DIAGRAM):   end;
4070967   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4070968   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4070969   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4070970   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4070971   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4070972   +   end;
MPRINT(EM_DIAGRAM):   end;
4070973   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4070974   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4070975   +   end;
MPRINT(EM_DIAGRAM):   end;
4070976   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4070977   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4070978   +   end;
MPRINT(EM_DIAGRAM):   end;
4070979   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4070980   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4070981   +   end;
MPRINT(EM_DIAGRAM):   end;
4070982   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4070983   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4070984   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4070985   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4070986   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4070987   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4070988   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4070989   +   end;
MPRINT(EM_DIAGRAM):   end;
4070990   +end;
MPRINT(EM_DIAGRAM):   end;
4070991   +
4070992   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4070993   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4070994   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4070995   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4070996   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4070997   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4070998   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4070999   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4071000   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4071001   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4071002   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4071003   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4071004   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4071005   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4071006   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071007   +end;
MPRINT(EM_DIAGRAM):   end;
4071008   +else do;
MPRINT(EM_DIAGRAM):   else do;
4071009   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4071010   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4071011   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4071012   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4071013   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4071014   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4071015   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4071016   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4071017   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4071018   +         end;
MPRINT(EM_DIAGRAM):   end;
4071019   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4071020   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4071021   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4071022   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4071023   +            end;
MPRINT(EM_DIAGRAM):   end;
4071024   +         end;
MPRINT(EM_DIAGRAM):   end;
4071025   +      end;
MPRINT(EM_DIAGRAM):   end;
4071026   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4071027   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4071028   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4071029   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4071030   +         end;
MPRINT(EM_DIAGRAM):   end;
4071031   +      end;
MPRINT(EM_DIAGRAM):   end;
4071032   +   end;
MPRINT(EM_DIAGRAM):   end;
4071033   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4071034   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4071035   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4071036   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4071037   +      end;
MPRINT(EM_DIAGRAM):   end;
4071038   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4071039   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4071040   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4071041   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4071042   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4071043   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4071044   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4071045   +         end;
MPRINT(EM_DIAGRAM):   end;
4071046   +      end;
MPRINT(EM_DIAGRAM):   end;
4071047   +   end;
MPRINT(EM_DIAGRAM):   end;
4071048   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4071049   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4071050   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4071051   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4071052   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4071053   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4071054   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071055   +   end;
MPRINT(EM_DIAGRAM):   end;
4071056   +end;
MPRINT(EM_DIAGRAM):   end;
4071057   +
4071058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4071059   +*** Checking missing input Interval
4071060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4071061   +
4071062   +IF NMISS(
4071063   +   AcceptedCmpTotal ,
4071064   +   Age ,
4071065   +   Frq ,
4071066   +   Income ,
4071067   +   Kidhome ,
4071068   +   Mnt ,
4071069   +   MntFishProducts ,
4071070   +   MntFruits ,
4071071   +   MntGoldProds ,
4071072   +   MntMeatProducts ,
4071073   +   MntSweetProducts ,
4071074   +   MntWines ,
4071075   +   MonthsAsCustomer ,
4071076   +   NumCatalogPurchases ,
4071077   +   NumDealsPurchases ,
4071078   +   NumDistPurchases ,
4071079   +   NumStorePurchases ,
4071080   +   NumWebPurchases ,
4071081   +   NumWebVisitsMonth ,
4071082   +   RFMstat ,
4071083   +   RMntFrq ,
4071084   +   Recency ,
4071085   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4071086   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4071087   +
4071088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071089   +END;
MPRINT(EM_DIAGRAM):   END;
4071090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4071091   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4071092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4071093   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4071094   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4071095   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4071096   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4071097   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4071098   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4071099   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4071100   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4071101   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4071102   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4071103   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4071104   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4071105   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4071106   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4071107   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4071108   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4071109   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4071110   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4071111   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4071112   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4071113   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4071114   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4071115   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4071116   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4071117   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4071118   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4071119   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4071120   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4071121   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4071122   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4071123   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4071124   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4071125   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4071126   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4071127   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4071128   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4071129   +END;
MPRINT(EM_DIAGRAM):   END;
4071130   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4071131   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4071132   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4071133   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4071134   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4071135   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4071136   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4071137   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4071138   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4071139   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4071140   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4071141   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4071142   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4071143   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4071144   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4071145   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4071146   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4071147   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4071148   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4071149   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4071150   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4071151   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4071152   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4071153   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4071154   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4071155   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4071156   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4071157   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4071158   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4071159   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4071160   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4071161   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4071162   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4071163   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4071164   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4071165   +   ELSE S_NumCatalogPurchases
4071166   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4071167   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4071168   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4071169   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4071170   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4071171   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4071172   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4071173   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4071174   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4071175   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4071176   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4071177   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4071178   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4071179   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4071180   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4071181   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4071182   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4071183   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4071184   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4071185   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4071186   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4071187   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4071188   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4071189   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4071190   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4071191   +END;
MPRINT(EM_DIAGRAM):   END;
4071192   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4071193   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4071194   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4071195   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4071196   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4071197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4071198   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4071199   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4071200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4071201   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4071202   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
4071203   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
4071204   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
4071205   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
4071206   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
4071207   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
4071208   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
4071209   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
4071210   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
4071211   +          +     0.09708841024031 * S_NumDealsPurchases
4071212   +          +    -0.29075561032014 * S_NumDistPurchases
4071213   +          +    -0.14495394259873 * S_NumStorePurchases
4071214   +          +     0.11890705145732 * S_NumWebPurchases
4071215   +          +    -0.16954189911344 * S_NumWebVisitsMonth
4071216   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
4071217   +        S_RMntFrq  +     0.17150719398884 * S_Recency
4071218   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 *
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 *
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts +
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 *
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines +
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases +
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases +
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases +
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 *
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
4071219   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
4071220   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
4071221   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
4071222   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
4071223   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
4071224   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
4071225   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
4071226   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
4071227   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
4071228   +          +     0.16274478997892 * S_NumDealsPurchases
4071229   +          +     0.03966958784582 * S_NumDistPurchases
4071230   +          +    -0.04714110726598 * S_NumStorePurchases
4071231   +          +    -0.02124229528082 * S_NumWebPurchases
4071232   +          +     0.29753299776832 * S_NumWebVisitsMonth
4071233   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
4071234   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
4071235   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 *
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 *
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts +
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 *
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines +
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases +
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases +
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases +
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 *
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
4071236   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
4071237   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
4071238   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
4071239   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
4071240   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 *
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 +
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 *
HigherEducationBinary0 ;
4071241   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
4071242   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
4071243   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
4071244   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
4071245   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 *
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 +
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 *
HigherEducationBinary0 ;
4071246   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
4071247   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
4071248   +        EducationGraduation  +     0.00619669837452 * EducationMaster
4071249   +          +    -0.05037639679806 * Marital_StatusDivorced
4071250   +          +     0.28781968727878 * Marital_StatusMarried
4071251   +          +    -0.20382417074384 * Marital_StatusSingle
4071252   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle +
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 *
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 *
Marital_StatusTogether ;
4071253   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
4071254   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
4071255   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
4071256   +          +     0.06970969219123 * Marital_StatusDivorced
4071257   +          +    -0.15787475744986 * Marital_StatusMarried
4071258   +          +     0.14345344072192 * Marital_StatusSingle
4071259   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 *
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 *
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 *
Marital_StatusTogether ;
4071260   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
4071261   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
4071262   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
4071263   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
4071264   +END;
MPRINT(EM_DIAGRAM):   END;
4071265   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4071266   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4071267   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4071268   +END;
MPRINT(EM_DIAGRAM):   END;
4071269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4071270   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4071271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4071272   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4071273   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
4071274   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
4071275   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
4071276   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4071277   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4071278   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4071279   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4071280   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4071281   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4071282   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4071283   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4071284   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4071285   +END;
MPRINT(EM_DIAGRAM):   END;
4071286   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4071287   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4071288   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4071289   +END;
MPRINT(EM_DIAGRAM):   END;
4071290   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4071291   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4071292   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4071293   +END;
MPRINT(EM_DIAGRAM):   END;
4071294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4071295   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4071296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4071297   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4071298   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4071299   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4071300   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4071301   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4071302   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4071303   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4071304   +END;
MPRINT(EM_DIAGRAM):   END;
4071305   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4071306   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4071307   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4071308   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4071309    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4071310    quit;
4071311    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4071312    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4071313    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4071314    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
4071315    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4071316    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071317    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4071318    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071319    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4071320    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME
CREATOR);
4071321    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071322    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071323    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4071324    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4071325    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4071326    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4071327    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
4071328    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
4071329    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4071330    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071331    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071332    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4071333    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4071334    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071335    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071336    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4071337    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4071337  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.
 
4071338    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071339    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4071340    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4071341    filename _pref
4071341  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4071342    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4071343    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4071344   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4071345   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4071346   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4071347   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4071348   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4071349   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4071350    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4071351    quit;
4071352    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4071353    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4071354    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4071355    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4071356    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4071357    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4071358    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4071359    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071360    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071361    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4071362    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071363    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071364    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4071365    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4071366    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4071367    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071368    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4071369    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4071370    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4071371    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071372    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4071373    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4071374    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4071375    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071376    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071377    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4071378    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4071378  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
4071379    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071380    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4071381    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071382    filename _pref
4071382  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4071383    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4071384    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4071385   +
4071386   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4071387   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4071387  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4071388   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4071389   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4071390   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4071391   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4071392   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4071393    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4071394    quit;
4071395    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4071396    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4071397    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4071398    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4071399    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4071400    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071401    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4071402    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071403    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4071404    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4071405    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071406    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071407    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4071408    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4071409    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4071410    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071411    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4071412    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4071413    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4071414    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071415    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071416    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4071417    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4071418    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071419    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4071420    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4071421    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4071421  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
4071422    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071423    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4071424    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071425    filename _pref
4071425  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4071426    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4071427    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4071428   +
4071429   +
4071430   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4071431   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4071432   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4071433   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4071434   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4071435   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4071436   +
4071437   +
4071438   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4071439   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4071440   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4071441   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4071442   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4071443   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4071444   +
4071445   +
4071446   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4071447   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4071448   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4071449   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4071450   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4071451   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4071452   +
4071453   +
4071454   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4071455   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4071456   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4071457   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4071458   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4071459   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4071460   +
4071461   +
4071462   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4071463   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4071464   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4071465   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4071466   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4071467   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4071468   +
4071469   +
4071470   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4071471   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4071472   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4071473   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4071474   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4071475   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4071476   +
4071477   +
4071478   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4071479   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4071480   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4071481   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4071482   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4071483   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4071484   +
4071485   +
4071486   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4071487   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4071488   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4071489   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4071490   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4071491   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4071492   +if
4071493   +_FILTERNORM1 not in ( '.')
4071494   + and
4071495   +_FILTERNORM2 not in ( '.')
4071496   + and
4071497   +_FILTERNORM3 not in ( '.')
4071498   + and
4071499   +_FILTERNORM4 not in ( '.')
4071500   + and
4071501   +_FILTERNORM5 not in ( '.')
4071502   + and
4071503   +_FILTERNORM6 not in ( '.')
4071504   + and
4071505   +_FILTERNORM7 not in ( ' ')
4071506   + and
4071507   +_FILTERNORM8 not in ( ' ')
4071508   +and
4071509   +( Dt_Customer ne .)
4071510   +and ( Income ne . and (Income<=107000))
4071511   +and ( Kidhome ne .)
4071512   +and ( MntFishProducts ne .)
4071513   +and ( MntFruits ne .)
4071514   +and ( MntGoldProds ne .)
4071515   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4071516   +and ( MntSweetProducts ne .)
4071517   +and ( MntWines ne .)
4071518   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4071519   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4071520   +and ( NumStorePurchases ne .)
4071521   +and ( NumWebPurchases ne .)
4071522   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4071523   +and ( Recency ne .)
4071524   +and ( Teenhome ne .)
4071525   +and ( Year_Birth ne .)
4071526   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
4071527   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4071528   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4071529   +end;
MPRINT(EM_DIAGRAM):   end;
4071530   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4071531   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4071532    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4071533    quit;
4071534    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4071535    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4071536    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4071537    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4071538    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4071539    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071540    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4071541    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071542    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071543    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4071544    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071545    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071546    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4071547    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4071548    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4071549    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071550    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4071551    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4071552    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4071553    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071554    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4071555    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4071556    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4071557    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4071558    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071559    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4071560    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4071560  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
4071561    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071562    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4071563    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071564    %macro varDept(fcmpdata=,id=);
4071565    %global nobs&id scoreFlag&id;
4071566    %let scoreFlag&id = 0;
4071567    %if &id=1 or ^&fcmpStart %then %do;
4071568    proc sort data=&fcmpdata out=_temp&id nodupkey;
4071569    by NAME;
4071570    where id=&id and LHS in( %let j=1;
4071571    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4071572    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4071573    "&var" %let j = %eval(&j+1);
4071574    %end;
4071575    );
4071576    run;
4071577    %let dsid = %sysfunc(open(_temp&id));
4071578    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4071579    %let dsid = %sysfunc(close(&dsid));
4071580    %if &&nobs&id %then %do;
4071581    %let scoreFlag&id = 1;
4071582    %let fcmpStart = 1;
4071583    %end;
4071584    %else %let fcmpStart = 0;
4071585    %end;
4071586    %else %do;
4071587    proc sort data=&fcmpdata out=_tempid;
4071588    where id=&id;
4071589    by LHS;
4071590    run;
4071591    %let dsid = %sysfunc(open(_tempid));
4071592    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4071593    %let dsid = %sysfunc(close(&dsid));
4071594    %if ^&&nobs&id %then %do;
4071595    proc datasets lib=work nolist;
4071596    delete _tempid;
4071597    run;
4071598    quit;
4071599    %end;
4071600    %else %do;
4071601    data _tempAll;
4071602    set %let j=%eval(&id-1);
4071603    %do x=1 %to &j;
4071604    %if &&nobs&x %then %do;
4071605    _temp&x %end;
4071606    %end;
4071607    ;
4071608    run;
4071609    proc sql;
4071610    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4071610  ! work._tempid p2 where p.name=p2.lhs;
4071611    quit;
4071612    data _temp&id;
4071613    set _temp&id;
4071614    where LHS ne '' and NAME ne '' and Node ne '';
4071615    run;
4071616    proc datasets lib=work nolist;
4071617    delete _tempAll;
4071618    run;
4071619    %let dsid = %sysfunc(open(_temp&id));
4071620    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4071621    %let dsid = %sysfunc(close(&dsid));
4071622    %if ^&&nobs&id %then %do;
4071623    proc datasets lib=work nolist;
4071624    delete _temp&id;
4071625    run;
4071626    quit;
4071627    %end;
4071628    %else %do;
4071629    %let scoreFlag&id = 1;
4071630    data _temp&id;
4071631    set _temp&id;
4071632    where LHS ne NAME and node ne '';
4071633    run;
4071634    %let dsid = %sysfunc(open(_temp&id));
4071635    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4071636    %let dsid = %sysfunc(close(&dsid));
4071637    %if ^&&nobs&id %then %do;
4071638    proc datasets lib=work nolist;
4071639    delete _temp&id;
4071640    run;
4071641    quit;
4071642    %end;
4071643    %else %do;
4071644    proc sort data=_temp&id nodupkey;
4071645    by LHS NAME;
4071646    run;
4071647    %end;
4071648    %end;
4071649    %end;
4071650    %end;
4071651    %mend varDept;
4071652    %macro optCode(outdata=fcmpdata);
4071653    %global fcmpStart;
4071654    %let fcmpStart = 0;
4071655    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4071656    %let NumNodes=9;
4071657    %do k=1 %to &NumNodes;
4071658    %vardept(fcmpdata=&outdata, id=&k);
4071659    %end;
4071660    %mend optCode;
4071661    %optcode(outData=EMWS8.Ensmbl36_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 140 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
4071662    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4071663    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4071664    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4071665    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071666    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4071667    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4071668    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4071669    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4071670    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4071671    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4071671  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
4071672    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4071673    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4071674    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4071675    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4071676    filename _pref
4071676  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
4071677    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4071678    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas.
4071679   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4071680   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4071681   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4071682   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4071683   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4071684   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4071685   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4071686   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4071687   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4071688   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4071689   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4071690   +LENGTH _WARN_ $4
4071691   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4071692   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4071693   +
4071694   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4071695   +
4071696   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4071697   +
4071698   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4071699   +
4071700   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4071701   +
4071702   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4071703   +
4071704   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4071705   +
4071706   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4071707   +
4071708   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4071709   +
4071710   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4071711   +
4071712   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4071713   +
4071714   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4071715   +
4071716   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4071717   +
4071718   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4071719   +
4071720   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4071721   +
4071722   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4071723   +
4071724   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4071725   +
4071726   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4071727   +
4071728   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4071729   +
4071730   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4071731   +
4071732   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4071733   +
4071734   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4071735   +
4071736   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4071737   +
4071738   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4071739   +
4071740   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4071741   +
4071742   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4071743   +
4071744   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4071745   +
4071746   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4071747   +
4071748   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4071749   +
4071750   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4071751   +
4071752   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4071753   +
4071754   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4071755   +
4071756   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4071757   +
4071758   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4071759   +
4071760   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4071761   +
4071762   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4071763   +
4071764   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4071765   +
4071766   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4071767   +
4071768   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4071769   +
4071770   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4071771   +
4071772   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4071773   +
4071774   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4071775   +
4071776   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4071777   +
4071778   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4071779   +
4071780   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4071781   +
4071782   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4071783   +
4071784   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4071785   +
4071786   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4071787   +
4071788   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4071789   +
4071790   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4071791   +
4071792   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4071793   +
4071794   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4071795   +
4071796   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4071797   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4071798   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4071799   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4071800   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4071801   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071802   +end;
MPRINT(EM_DIAGRAM):   end;
4071803   +else do;
MPRINT(EM_DIAGRAM):   else do;
4071804   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4071805   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4071806   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4071807   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4071808   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4071809   +   end;
MPRINT(EM_DIAGRAM):   end;
4071810   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4071811   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4071812   +   end;
MPRINT(EM_DIAGRAM):   end;
4071813   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4071814   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4071815   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4071816   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071817   +   end;
MPRINT(EM_DIAGRAM):   end;
4071818   +end;
MPRINT(EM_DIAGRAM):   end;
4071819   +
4071820   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4071821   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4071822   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4071823   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4071824   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4071825   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071826   +end;
MPRINT(EM_DIAGRAM):   end;
4071827   +else do;
MPRINT(EM_DIAGRAM):   else do;
4071828   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4071829   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4071830   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4071831   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4071832   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4071833   +   end;
MPRINT(EM_DIAGRAM):   end;
4071834   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4071835   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4071836   +   end;
MPRINT(EM_DIAGRAM):   end;
4071837   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4071838   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4071839   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4071840   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071841   +   end;
MPRINT(EM_DIAGRAM):   end;
4071842   +end;
MPRINT(EM_DIAGRAM):   end;
4071843   +
4071844   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4071845   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4071846   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4071847   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4071848   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4071849   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071850   +end;
MPRINT(EM_DIAGRAM):   end;
4071851   +else do;
MPRINT(EM_DIAGRAM):   else do;
4071852   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4071853   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4071854   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4071855   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4071856   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4071857   +   end;
MPRINT(EM_DIAGRAM):   end;
4071858   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4071859   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4071860   +   end;
MPRINT(EM_DIAGRAM):   end;
4071861   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4071862   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4071863   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4071864   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071865   +   end;
MPRINT(EM_DIAGRAM):   end;
4071866   +end;
MPRINT(EM_DIAGRAM):   end;
4071867   +
4071868   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4071869   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4071870   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4071871   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4071872   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4071873   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071874   +end;
MPRINT(EM_DIAGRAM):   end;
4071875   +else do;
MPRINT(EM_DIAGRAM):   else do;
4071876   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4071877   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4071878   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4071879   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4071880   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4071881   +   end;
MPRINT(EM_DIAGRAM):   end;
4071882   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4071883   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4071884   +   end;
MPRINT(EM_DIAGRAM):   end;
4071885   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4071886   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4071887   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4071888   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071889   +   end;
MPRINT(EM_DIAGRAM):   end;
4071890   +end;
MPRINT(EM_DIAGRAM):   end;
4071891   +
4071892   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4071893   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4071894   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4071895   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4071896   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4071897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071898   +end;
MPRINT(EM_DIAGRAM):   end;
4071899   +else do;
MPRINT(EM_DIAGRAM):   else do;
4071900   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4071901   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4071902   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4071903   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4071904   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4071905   +   end;
MPRINT(EM_DIAGRAM):   end;
4071906   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4071907   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4071908   +   end;
MPRINT(EM_DIAGRAM):   end;
4071909   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4071910   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4071911   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4071912   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071913   +   end;
MPRINT(EM_DIAGRAM):   end;
4071914   +end;
MPRINT(EM_DIAGRAM):   end;
4071915   +
4071916   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4071917   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4071918   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4071919   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4071920   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4071921   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071922   +end;
MPRINT(EM_DIAGRAM):   end;
4071923   +else do;
MPRINT(EM_DIAGRAM):   else do;
4071924   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4071925   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4071926   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4071927   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4071928   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4071929   +   end;
MPRINT(EM_DIAGRAM):   end;
4071930   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4071931   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4071932   +   end;
MPRINT(EM_DIAGRAM):   end;
4071933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4071934   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4071935   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4071936   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071937   +   end;
MPRINT(EM_DIAGRAM):   end;
4071938   +end;
MPRINT(EM_DIAGRAM):   end;
4071939   +
4071940   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4071941   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4071942   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4071943   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4071944   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4071945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071946   +end;
MPRINT(EM_DIAGRAM):   end;
4071947   +else do;
MPRINT(EM_DIAGRAM):   else do;
4071948   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4071949   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4071950   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4071951   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4071952   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4071953   +   end;
MPRINT(EM_DIAGRAM):   end;
4071954   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4071955   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4071956   +   end;
MPRINT(EM_DIAGRAM):   end;
4071957   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4071958   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4071959   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4071960   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071961   +   end;
MPRINT(EM_DIAGRAM):   end;
4071962   +end;
MPRINT(EM_DIAGRAM):   end;
4071963   +
4071964   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4071965   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4071966   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4071967   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4071968   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4071969   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4071970   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4071971   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4071972   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4071973   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4071974   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4071975   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4071976   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4071977   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4071978   +end;
MPRINT(EM_DIAGRAM):   end;
4071979   +else do;
MPRINT(EM_DIAGRAM):   else do;
4071980   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4071981   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4071982   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4071983   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4071984   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4071985   +   end;
MPRINT(EM_DIAGRAM):   end;
4071986   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4071987   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4071988   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4071989   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4071990   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4071991   +   end;
MPRINT(EM_DIAGRAM):   end;
4071992   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4071993   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4071994   +   end;
MPRINT(EM_DIAGRAM):   end;
4071995   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4071996   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4071997   +   end;
MPRINT(EM_DIAGRAM):   end;
4071998   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4071999   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4072000   +   end;
MPRINT(EM_DIAGRAM):   end;
4072001   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4072002   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4072003   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4072004   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4072005   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4072006   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4072007   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4072008   +   end;
MPRINT(EM_DIAGRAM):   end;
4072009   +end;
MPRINT(EM_DIAGRAM):   end;
4072010   +
4072011   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4072012   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4072013   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4072014   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4072015   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4072016   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4072017   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4072018   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4072019   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4072020   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4072021   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4072022   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4072023   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4072024   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4072025   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4072026   +end;
MPRINT(EM_DIAGRAM):   end;
4072027   +else do;
MPRINT(EM_DIAGRAM):   else do;
4072028   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4072029   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4072030   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4072031   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4072032   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4072033   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4072034   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4072035   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4072036   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4072037   +         end;
MPRINT(EM_DIAGRAM):   end;
4072038   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4072039   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4072040   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4072041   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4072042   +            end;
MPRINT(EM_DIAGRAM):   end;
4072043   +         end;
MPRINT(EM_DIAGRAM):   end;
4072044   +      end;
MPRINT(EM_DIAGRAM):   end;
4072045   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4072046   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4072047   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4072048   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4072049   +         end;
MPRINT(EM_DIAGRAM):   end;
4072050   +      end;
MPRINT(EM_DIAGRAM):   end;
4072051   +   end;
MPRINT(EM_DIAGRAM):   end;
4072052   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4072053   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4072054   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4072055   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4072056   +      end;
MPRINT(EM_DIAGRAM):   end;
4072057   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4072058   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4072059   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4072060   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4072061   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4072062   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4072063   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4072064   +         end;
MPRINT(EM_DIAGRAM):   end;
4072065   +      end;
MPRINT(EM_DIAGRAM):   end;
4072066   +   end;
MPRINT(EM_DIAGRAM):   end;
4072067   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4072068   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4072069   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4072070   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4072071   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4072072   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4072073   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4072074   +   end;
MPRINT(EM_DIAGRAM):   end;
4072075   +end;
MPRINT(EM_DIAGRAM):   end;
4072076   +
4072077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072078   +*** Checking missing input Interval
4072079   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4072080   +
4072081   +IF NMISS(
4072082   +   AcceptedCmpTotal ,
4072083   +   Age ,
4072084   +   Frq ,
4072085   +   Income ,
4072086   +   Kidhome ,
4072087   +   Mnt ,
4072088   +   MntFishProducts ,
4072089   +   MntFruits ,
4072090   +   MntGoldProds ,
4072091   +   MntMeatProducts ,
4072092   +   MntSweetProducts ,
4072093   +   MntWines ,
4072094   +   MonthsAsCustomer ,
4072095   +   NumCatalogPurchases ,
4072096   +   NumDealsPurchases ,
4072097   +   NumDistPurchases ,
4072098   +   NumStorePurchases ,
4072099   +   NumWebPurchases ,
4072100   +   NumWebVisitsMonth ,
4072101   +   RFMstat ,
4072102   +   RMntFrq ,
4072103   +   Recency ,
4072104   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4072105   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4072106   +
4072107   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4072108   +END;
MPRINT(EM_DIAGRAM):   END;
4072109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072110   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4072111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072112   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4072113   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4072114   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4072115   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4072116   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4072117   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4072118   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4072119   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4072120   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4072121   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4072122   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4072123   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4072124   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4072125   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4072126   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4072127   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4072128   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4072129   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4072130   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4072131   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4072132   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4072133   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4072134   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4072135   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4072136   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4072137   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4072138   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4072139   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4072140   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4072141   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4072142   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4072143   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4072144   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4072145   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4072146   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4072147   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4072148   +END;
MPRINT(EM_DIAGRAM):   END;
4072149   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4072150   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4072151   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4072152   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4072153   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4072154   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4072155   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4072156   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4072157   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4072158   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4072159   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4072160   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4072161   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4072162   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4072163   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4072164   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4072165   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4072166   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4072167   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4072168   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4072169   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4072170   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4072171   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4072172   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4072173   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4072174   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4072175   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4072176   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4072177   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4072178   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4072179   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4072180   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4072181   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4072182   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4072183   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4072184   +   ELSE S_NumCatalogPurchases
4072185   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4072186   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4072187   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4072188   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4072189   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4072190   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4072191   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4072192   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4072193   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4072194   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4072195   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4072196   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4072197   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4072198   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4072199   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4072200   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4072201   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4072202   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4072203   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4072204   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4072205   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4072206   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4072207   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4072208   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4072209   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4072210   +END;
MPRINT(EM_DIAGRAM):   END;
4072211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072212   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4072213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072215   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4072216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072218   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4072219   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072220   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4072221   +   H1x1_1  =    -1.49223555176068 * S_AcceptedCmpTotal
4072222   +          +    -0.32281831453238 * S_Age  +     0.28120825505194 * S_Frq
4072223   +          +    -0.39842787806973 * S_Income  +     0.36430856665979 *
4072224   +        S_Kidhome  +    -0.25637228568962 * S_Mnt  +     0.24110438184349 *
4072225   +        S_MntFishProducts  +     0.13701085804118 * S_MntFruits
4072226   +          +     0.11223882829002 * S_MntGoldProds  +     -1.6663458930199 *
4072227   +        S_MntMeatProducts  +      0.0702185455839 * S_MntSweetProducts
4072228   +          +    -0.01371828795287 * S_MntWines  +    -0.15983998015164 *
4072229   +        S_MonthsAsCustomer  +    -0.71296831037224 * S_NumCatalogPurchases
4072230   +          +     0.76573417773216 * S_NumDealsPurchases
4072231   +          +     0.22648400529885 * S_NumDistPurchases
4072232   +          +     1.21720286527592 * S_NumStorePurchases
4072233   +          +     0.60948566229097 * S_NumWebPurchases
4072234   +          +    -2.18126452011089 * S_NumWebVisitsMonth
4072235   +          +     0.32447158734618 * S_RFMstat  +     2.09718739448286 *
4072236   +        S_RMntFrq  +     2.00816730203973 * S_Recency
4072237   +          +     0.71721312404607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.49223555176068 * S_AcceptedCmpTotal + -0.32281831453238 *
S_Age + 0.28120825505194 * S_Frq + -0.39842787806973 * S_Income + 0.36430856665979 * S_Kidhome
+ -0.25637228568962 * S_Mnt + 0.24110438184349 * S_MntFishProducts + 0.13701085804118 *
S_MntFruits + 0.11223882829002 * S_MntGoldProds + -1.6663458930199 * S_MntMeatProducts +
0.0702185455839 * S_MntSweetProducts + -0.01371828795287 * S_MntWines + -0.15983998015164 *
S_MonthsAsCustomer + -0.71296831037224 * S_NumCatalogPurchases + 0.76573417773216 *
S_NumDealsPurchases + 0.22648400529885 * S_NumDistPurchases + 1.21720286527592 *
S_NumStorePurchases + 0.60948566229097 * S_NumWebPurchases + -2.18126452011089 *
S_NumWebVisitsMonth + 0.32447158734618 * S_RFMstat + 2.09718739448286 * S_RMntFrq +
2.00816730203973 * S_Recency + 0.71721312404607 * S_Teenhome ;
4072238   +   H1x1_2  =    -3.95102659899455 * S_AcceptedCmpTotal
4072239   +          +    -0.08322758955502 * S_Age  +     0.48219484564503 * S_Frq
4072240   +          +    -0.47312016087921 * S_Income  +    -0.28936610485406 *
4072241   +        S_Kidhome  +    -1.88029814405677 * S_Mnt  +     1.82010433926021 *
4072242   +        S_MntFishProducts  +     0.24350362722041 * S_MntFruits
4072243   +          +     -0.0982980353358 * S_MntGoldProds  +     -8.1095841881459 *
4072244   +        S_MntMeatProducts  +    -0.08364558784797 * S_MntSweetProducts
4072245   +          +     2.19205303691707 * S_MntWines  +    -0.00045011863954 *
4072246   +        S_MonthsAsCustomer  +    -1.63167878295586 * S_NumCatalogPurchases
4072247   +          +    -1.52828428070828 * S_NumDealsPurchases
4072248   +          +    -0.01775178145113 * S_NumDistPurchases
4072249   +          +     1.11531198663491 * S_NumStorePurchases
4072250   +          +     1.79501098452904 * S_NumWebPurchases
4072251   +          +     -0.7392686013605 * S_NumWebVisitsMonth
4072252   +          +    -1.44559350209967 * S_RFMstat  +     1.21221378487873 *
4072253   +        S_RMntFrq  +     0.68917175969495 * S_Recency
4072254   +          +      0.3873784466888 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.95102659899455 * S_AcceptedCmpTotal + -0.08322758955502 *
S_Age + 0.48219484564503 * S_Frq + -0.47312016087921 * S_Income + -0.28936610485406 *
S_Kidhome + -1.88029814405677 * S_Mnt + 1.82010433926021 * S_MntFishProducts +
0.24350362722041 * S_MntFruits + -0.0982980353358 * S_MntGoldProds + -8.1095841881459 *
S_MntMeatProducts + -0.08364558784797 * S_MntSweetProducts + 2.19205303691707 * S_MntWines +
-0.00045011863954 * S_MonthsAsCustomer + -1.63167878295586 * S_NumCatalogPurchases +
-1.52828428070828 * S_NumDealsPurchases + -0.01775178145113 * S_NumDistPurchases +
1.11531198663491 * S_NumStorePurchases + 1.79501098452904 * S_NumWebPurchases +
-0.7392686013605 * S_NumWebVisitsMonth + -1.44559350209967 * S_RFMstat + 1.21221378487873 *
S_RMntFrq + 0.68917175969495 * S_Recency + 0.3873784466888 * S_Teenhome ;
4072255   +   H1x1_1  = H1x1_1  +    -0.51533233697482 * AcceptedCmp10
4072256   +          +    -0.34752733433815 * AcceptedCmp20  +     0.22125035216356 *
4072257   +        AcceptedCmp30  +     0.05379844837275 * AcceptedCmp40
4072258   +          +    -0.20445562216782 * AcceptedCmp50  +    -0.30276475879877 *
4072259   +        Complain0  +     0.06619165480602 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51533233697482 * AcceptedCmp10 + -0.34752733433815
* AcceptedCmp20 + 0.22125035216356 * AcceptedCmp30 + 0.05379844837275 * AcceptedCmp40 +
-0.20445562216782 * AcceptedCmp50 + -0.30276475879877 * Complain0 + 0.06619165480602 *
HigherEducationBinary0 ;
4072260   +   H1x1_2  = H1x1_2  +     4.56470093348771 * AcceptedCmp10
4072261   +          +    -2.57910461209778 * AcceptedCmp20  +     -2.5693819769014 *
4072262   +        AcceptedCmp30  +    -1.94278577333227 * AcceptedCmp40
4072263   +          +     2.05860438228037 * AcceptedCmp50  +     0.25089930568051 *
4072264   +        Complain0  +      0.2603214054608 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.56470093348771 * AcceptedCmp10 + -2.57910461209778 *
AcceptedCmp20 + -2.5693819769014 * AcceptedCmp30 + -1.94278577333227 * AcceptedCmp40 +
2.05860438228037 * AcceptedCmp50 + 0.25089930568051 * Complain0 + 0.2603214054608 *
HigherEducationBinary0 ;
4072265   +   H1x1_1  = H1x1_1  +    -0.49828378489244 * Education2n_Cycle
4072266   +          +     0.39089624737534 * EducationBasic  +    -0.48226710339977 *
4072267   +        EducationGraduation  +    -0.06304916771632 * EducationMaster
4072268   +          +    -1.56926331102732 * Marital_StatusDivorced
4072269   +          +     2.38562782588323 * Marital_StatusMarried
4072270   +          +    -1.91012008029228 * Marital_StatusSingle
4072271   +          +     2.35299228753934 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.49828378489244 * Education2n_Cycle +
0.39089624737534 * EducationBasic + -0.48226710339977 * EducationGraduation +
-0.06304916771632 * EducationMaster + -1.56926331102732 * Marital_StatusDivorced +
2.38562782588323 * Marital_StatusMarried + -1.91012008029228 * Marital_StatusSingle +
2.35299228753934 * Marital_StatusTogether ;
4072272   +   H1x1_2  = H1x1_2  +    -0.32482988110182 * Education2n_Cycle
4072273   +          +    -0.31705264382373 * EducationBasic  +    -0.14073222836204 *
4072274   +        EducationGraduation  +    -0.14552128560395 * EducationMaster
4072275   +          +     0.39329538853368 * Marital_StatusDivorced
4072276   +          +       0.055543492668 * Marital_StatusMarried
4072277   +          +    -0.36260663573441 * Marital_StatusSingle
4072278   +          +     0.16563783024817 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.32482988110182 * Education2n_Cycle +
-0.31705264382373 * EducationBasic + -0.14073222836204 * EducationGraduation +
-0.14552128560395 * EducationMaster + 0.39329538853368 * Marital_StatusDivorced +
0.055543492668 * Marital_StatusMarried + -0.36260663573441 * Marital_StatusSingle +
0.16563783024817 * Marital_StatusTogether ;
4072279   +   H1x1_1  =     0.82901515254061 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.82901515254061 + H1x1_1 ;
4072280   +   H1x1_2  =     -1.6113683532078 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.6113683532078 + H1x1_2 ;
4072281   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
4072282   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
4072283   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4072284   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4072285   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4072286   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4072287   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4072288   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4072289   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4072290   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4072291   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4072292   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4072293   +END;
MPRINT(EM_DIAGRAM):   END;
4072294   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4072295   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4072296   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4072297   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4072298   +END;
MPRINT(EM_DIAGRAM):   END;
4072299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072300   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4072301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072302   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4072303   +   H1x2_1  =     -1.1749963769098 * S_AcceptedCmpTotal
4072304   +          +      0.0835452152484 * S_Age  +     0.29627839234992 * S_Frq
4072305   +          +    -0.11493797334082 * S_Income  +    -1.11510356366657 *
4072306   +        S_Kidhome  +     0.18185063757674 * S_Mnt  +    -0.17631127507692 *
4072307   +        S_MntFishProducts  +     1.24365107847098 * S_MntFruits
4072308   +          +     0.16504711681039 * S_MntGoldProds  +     0.99592906524599 *
4072309   +        S_MntMeatProducts  +     0.07387543627707 * S_MntSweetProducts
4072310   +          +    -0.00693664828192 * S_MntWines  +    -0.14413765189074 *
4072311   +        S_MonthsAsCustomer  +    -0.36632511301344 * S_NumCatalogPurchases
4072312   +          +    -0.41717905931734 * S_NumDealsPurchases
4072313   +          +    -0.48750443671176 * S_NumDistPurchases
4072314   +          +      1.9775770151507 * S_NumStorePurchases
4072315   +          +    -0.43534422425416 * S_NumWebPurchases
4072316   +          +    -1.48049451059329 * S_NumWebVisitsMonth
4072317   +          +     1.55056718888347 * S_RFMstat  +    -1.96774244937803 *
4072318   +        S_RMntFrq  +     -1.0977291490167 * S_Recency
4072319   +          +    -1.73756201871547 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.1749963769098 * S_AcceptedCmpTotal + 0.0835452152484 * S_Age
+ 0.29627839234992 * S_Frq + -0.11493797334082 * S_Income + -1.11510356366657 * S_Kidhome +
0.18185063757674 * S_Mnt + -0.17631127507692 * S_MntFishProducts + 1.24365107847098 *
S_MntFruits + 0.16504711681039 * S_MntGoldProds + 0.99592906524599 * S_MntMeatProducts +
0.07387543627707 * S_MntSweetProducts + -0.00693664828192 * S_MntWines + -0.14413765189074 *
S_MonthsAsCustomer + -0.36632511301344 * S_NumCatalogPurchases + -0.41717905931734 *
S_NumDealsPurchases + -0.48750443671176 * S_NumDistPurchases + 1.9775770151507 *
S_NumStorePurchases + -0.43534422425416 * S_NumWebPurchases + -1.48049451059329 *
S_NumWebVisitsMonth + 1.55056718888347 * S_RFMstat + -1.96774244937803 * S_RMntFrq +
-1.0977291490167 * S_Recency + -1.73756201871547 * S_Teenhome ;
4072320   +   H1x2_2  =     0.87479703138918 * S_AcceptedCmpTotal
4072321   +          +    -0.61917505429247 * S_Age  +     0.18385580137989 * S_Frq
4072322   +          +     0.30709491132909 * S_Income  +      1.6244568354812 *
4072323   +        S_Kidhome  +     0.77673205123801 * S_Mnt  +    -0.00950889578201 *
4072324   +        S_MntFishProducts  +    -0.47007254592819 * S_MntFruits
4072325   +          +      0.6454406759241 * S_MntGoldProds  +     0.78795218230384 *
4072326   +        S_MntMeatProducts  +    -1.18230648640376 * S_MntSweetProducts
4072327   +          +     1.41552316954503 * S_MntWines  +    -0.46565264346633 *
4072328   +        S_MonthsAsCustomer  +     0.48368171409283 * S_NumCatalogPurchases
4072329   +          +     0.76267091632012 * S_NumDealsPurchases
4072330   +          +     1.55118513069849 * S_NumDistPurchases
4072331   +          +       1.649962776028 * S_NumStorePurchases
4072332   +          +    -0.27453335733875 * S_NumWebPurchases
4072333   +          +     0.26599210649756 * S_NumWebVisitsMonth
4072334   +          +     0.00143802909271 * S_RFMstat  +    -0.62161550917558 *
4072335   +        S_RMntFrq  +    -0.60215803586133 * S_Recency
4072336   +          +     0.22509643762583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.87479703138918 * S_AcceptedCmpTotal + -0.61917505429247 *
S_Age + 0.18385580137989 * S_Frq + 0.30709491132909 * S_Income + 1.6244568354812 * S_Kidhome +
0.77673205123801 * S_Mnt + -0.00950889578201 * S_MntFishProducts + -0.47007254592819 *
S_MntFruits + 0.6454406759241 * S_MntGoldProds + 0.78795218230384 * S_MntMeatProducts +
-1.18230648640376 * S_MntSweetProducts + 1.41552316954503 * S_MntWines + -0.46565264346633 *
S_MonthsAsCustomer + 0.48368171409283 * S_NumCatalogPurchases + 0.76267091632012 *
S_NumDealsPurchases + 1.55118513069849 * S_NumDistPurchases + 1.649962776028 *
S_NumStorePurchases + -0.27453335733875 * S_NumWebPurchases + 0.26599210649756 *
S_NumWebVisitsMonth + 0.00143802909271 * S_RFMstat + -0.62161550917558 * S_RMntFrq +
-0.60215803586133 * S_Recency + 0.22509643762583 * S_Teenhome ;
4072337   +   H1x2_1  = H1x2_1  +    -0.22417594551449 * AcceptedCmp10
4072338   +          +    -0.55200708632393 * AcceptedCmp20  +     1.04226929662396 *
4072339   +        AcceptedCmp30  +    -0.43983724759528 * AcceptedCmp40
4072340   +          +    -0.97319667842772 * AcceptedCmp50  +     2.14592283316473 *
4072341   +        Complain0  +     0.00148996042832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.22417594551449 * AcceptedCmp10 + -0.55200708632393
* AcceptedCmp20 + 1.04226929662396 * AcceptedCmp30 + -0.43983724759528 * AcceptedCmp40 +
-0.97319667842772 * AcceptedCmp50 + 2.14592283316473 * Complain0 + 0.00148996042832 *
HigherEducationBinary0 ;
4072342   +   H1x2_2  = H1x2_2  +     1.02054806337451 * AcceptedCmp10
4072343   +          +      2.0527957252179 * AcceptedCmp20  +     0.15243342547701 *
4072344   +        AcceptedCmp30  +    -2.55108921567655 * AcceptedCmp40
4072345   +          +    -0.66084381908537 * AcceptedCmp50  +    -0.15574677370344 *
4072346   +        Complain0  +    -0.89833811964409 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.02054806337451 * AcceptedCmp10 + 2.0527957252179 *
AcceptedCmp20 + 0.15243342547701 * AcceptedCmp30 + -2.55108921567655 * AcceptedCmp40 +
-0.66084381908537 * AcceptedCmp50 + -0.15574677370344 * Complain0 + -0.89833811964409 *
HigherEducationBinary0 ;
4072347   +   H1x2_1  = H1x2_1  +     0.47883438771897 * Education2n_Cycle
4072348   +          +     1.28689916550347 * EducationBasic  +    -1.05405263417007 *
4072349   +        EducationGraduation  +     0.24617525366101 * EducationMaster
4072350   +          +    -1.84502099308633 * Marital_StatusDivorced
4072351   +          +     0.16524535969204 * Marital_StatusMarried
4072352   +          +     0.01375012857393 * Marital_StatusSingle
4072353   +          +     0.33752759564982 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.47883438771897 * Education2n_Cycle +
1.28689916550347 * EducationBasic + -1.05405263417007 * EducationGraduation + 0.24617525366101
* EducationMaster + -1.84502099308633 * Marital_StatusDivorced + 0.16524535969204 *
Marital_StatusMarried + 0.01375012857393 * Marital_StatusSingle + 0.33752759564982 *
Marital_StatusTogether ;
4072354   +   H1x2_2  = H1x2_2  +     -0.4088130246632 * Education2n_Cycle
4072355   +          +    -0.51383473075458 * EducationBasic  +     0.81399641406825 *
4072356   +        EducationGraduation  +      0.6427794380992 * EducationMaster
4072357   +          +     0.18210930140238 * Marital_StatusDivorced
4072358   +          +    -1.49615662968181 * Marital_StatusMarried
4072359   +          +     1.61043484549536 * Marital_StatusSingle
4072360   +          +    -1.22593755313209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.4088130246632 * Education2n_Cycle +
-0.51383473075458 * EducationBasic + 0.81399641406825 * EducationGraduation + 0.6427794380992
* EducationMaster + 0.18210930140238 * Marital_StatusDivorced + -1.49615662968181 *
Marital_StatusMarried + 1.61043484549536 * Marital_StatusSingle + -1.22593755313209 *
Marital_StatusTogether ;
4072361   +   H1x2_1  =    -1.87516498734281 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.87516498734281 + H1x2_1 ;
4072362   +   H1x2_2  =     -1.2865444436051 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.2865444436051 + H1x2_2 ;
4072363   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
4072364   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
4072365   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4072366   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4072367   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4072368   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4072369   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4072370   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4072371   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4072372   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4072373   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4072374   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4072375   +END;
MPRINT(EM_DIAGRAM):   END;
4072376   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4072377   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4072378   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4072379   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4072380   +END;
MPRINT(EM_DIAGRAM):   END;
4072381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072382   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4072383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072384   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4072385   +   H2x1_1  =     1.23576217175305 * H1x1_1  +     4.19315123860009 * H1x1_2
4072386   +          +    -3.85498900364115 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.23576217175305 * H1x1_1 + 4.19315123860009 * H1x1_2 +
-3.85498900364115 * H1x1_3 ;
4072387   +   H2x1_2  =        0.24209158888 * H1x1_1  +     0.59735252655183 * H1x1_2
4072388   +          +     1.27545750114528 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.24209158888 * H1x1_1 + 0.59735252655183 * H1x1_2 +
1.27545750114528 * H1x1_3 ;
4072389   +   H2x1_3  =     1.36411346566831 * H1x1_1  +     4.19709046572946 * H1x1_2
4072390   +          +    -4.50940237896172 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.36411346566831 * H1x1_1 + 4.19709046572946 * H1x1_2 +
-4.50940237896172 * H1x1_3 ;
4072391   +   H2x1_1  = H2x1_1  +     0.65417285199474 * H1x2_1
4072392   +          +      2.5072311354855 * H1x2_2  +     -2.0438449895367 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.65417285199474 * H1x2_1 + 2.5072311354855 * H1x2_2 +
-2.0438449895367 * H1x2_3 ;
4072393   +   H2x1_2  = H2x1_2  +      0.4352357645315 * H1x2_1
4072394   +          +     -0.9643467516424 * H1x2_2  +     0.46452403975724 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.4352357645315 * H1x2_1 + -0.9643467516424 * H1x2_2 +
0.46452403975724 * H1x2_3 ;
4072395   +   H2x1_3  = H2x1_3  +     0.13671643242806 * H1x2_1
4072396   +          +     1.59797252596846 * H1x2_2  +    -2.67821815632058 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.13671643242806 * H1x2_1 + 1.59797252596846 * H1x2_2
+ -2.67821815632058 * H1x2_3 ;
4072397   +   H2x1_1  =     0.15805888658617 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.15805888658617 + H2x1_1 ;
4072398   +   H2x1_2  =     1.42566993600015 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.42566993600015 + H2x1_2 ;
4072399   +   H2x1_3  =     1.00076706282181 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.00076706282181 + H2x1_3 ;
4072400   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4072401   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4072402   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4072403   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4072404   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4072405   +END;
MPRINT(EM_DIAGRAM):   END;
4072406   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4072407   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4072408   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4072409   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4072410   +END;
MPRINT(EM_DIAGRAM):   END;
4072411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072412   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4072413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072414   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4072415   +   P_DepVar1  =    -6.91101516234847 * H2x1_1  +     1.76281132920385 * H2x1_2
4072416   +          +     -7.2624751055034 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.91101516234847 * H2x1_1 + 1.76281132920385 * H2x1_2 +
-7.2624751055034 * H2x1_3 ;
4072417   +   P_DepVar1  =     -0.0724356806648 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.0724356806648 + P_DepVar1 ;
4072418   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4072419   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4072420   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4072421   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4072422   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4072423   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4072424   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4072425   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4072426   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4072427   +END;
MPRINT(EM_DIAGRAM):   END;
4072428   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4072429   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4072430   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4072431   +END;
MPRINT(EM_DIAGRAM):   END;
4072432   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4072433   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4072434   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4072435   +END;
MPRINT(EM_DIAGRAM):   END;
4072436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072437   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4072438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4072439   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4072440   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4072441   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4072442   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4072443   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4072444   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4072445   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4072446   +END;
MPRINT(EM_DIAGRAM):   END;
4072447   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4072448   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4072449   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4072450   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4072451    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4072452    quit;
4072453    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4072454    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4072455    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4072456    retain ID 2 Node "AutoNeural8";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural8";
4072457    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4072458    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3877 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3877 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072459    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4072460    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072461    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3877 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3877 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4072462    proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME
CREATOR);
4072463    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072464    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL8_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4072465    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4072466    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4072467    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4072468    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072469    proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
4072470    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 62 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
4072471    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4072472    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072473    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 62 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 62 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4072474    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4072475    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4072476    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072477    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 62 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 62 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072478    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4072479    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4072479  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2103 rows and 5 columns.
 
4072480    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4072481    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4072482    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2103 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 2103 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072483    filename _pref
4072483  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4072484    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4072485    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4072486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4072487   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4072488   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4072489   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4072490   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4072491   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4072492    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4072493    quit;
4072494    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4072495    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4072496    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4072497    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4072498    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4072499    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4072500    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4072501    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072502    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072503    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4072504    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072506    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4072507    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4072508    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4072509    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072510    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4072511    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4072512    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4072513    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072514    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4072515    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4072516    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4072517    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072518    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072519    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4072520    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4072520  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
4072521    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4072522    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4072523    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 2107 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072524    filename _pref
4072524  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4072525    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4072526    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4072527   +
4072528   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4072529   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4072529  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4072530   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4072531   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4072532   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4072533   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4072534   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4072535    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4072536    quit;
4072537    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4072538    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4072539    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4072540    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4072541    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4072542    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072543    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4072544    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072545    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072546    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4072547    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072548    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072549    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4072550    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4072551    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4072552    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072553    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4072554    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072555    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4072556    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072557    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072558    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4072559    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4072560    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072561    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072562    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4072563    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4072563  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
4072564    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072565    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4072566    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 2146 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4072567    filename _pref
4072567  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4072568    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4072569    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4072570   +
4072571   +
4072572   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4072573   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4072574   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4072575   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4072576   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4072577   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4072578   +
4072579   +
4072580   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4072581   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4072582   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4072583   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4072584   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4072585   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4072586   +
4072587   +
4072588   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4072589   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4072590   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4072591   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4072592   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4072593   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4072594   +
4072595   +
4072596   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4072597   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4072598   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4072599   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4072600   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4072601   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4072602   +
4072603   +
4072604   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4072605   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4072606   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4072607   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4072608   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4072609   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4072610   +
4072611   +
4072612   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4072613   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4072614   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4072615   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4072616   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4072617   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4072618   +
4072619   +
4072620   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4072621   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4072622   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4072623   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4072624   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4072625   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4072626   +
4072627   +
4072628   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4072629   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4072630   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4072631   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4072632   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4072633   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4072634   +if
4072635   +_FILTERNORM1 not in ( '.')
4072636   + and
4072637   +_FILTERNORM2 not in ( '.')
4072638   + and
4072639   +_FILTERNORM3 not in ( '.')
4072640   + and
4072641   +_FILTERNORM4 not in ( '.')
4072642   + and
4072643   +_FILTERNORM5 not in ( '.')
4072644   + and
4072645   +_FILTERNORM6 not in ( '.')
4072646   + and
4072647   +_FILTERNORM7 not in ( ' ')
4072648   + and
4072649   +_FILTERNORM8 not in ( ' ')
4072650   +and
4072651   +( Dt_Customer ne .)
4072652   +and ( Income ne . and (Income<=107000))
4072653   +and ( Kidhome ne .)
4072654   +and ( MntFishProducts ne .)
4072655   +and ( MntFruits ne .)
4072656   +and ( MntGoldProds ne .)
4072657   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4072658   +and ( MntSweetProducts ne .)
4072659   +and ( MntWines ne .)
4072660   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4072661   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4072662   +and ( NumStorePurchases ne .)
4072663   +and ( NumWebPurchases ne .)
4072664   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4072665   +and ( Recency ne .)
4072666   +and ( Teenhome ne .)
4072667   +and ( Year_Birth ne .)
4072668   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
4072669   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4072670   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4072671   +end;
MPRINT(EM_DIAGRAM):   end;
4072672   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4072673   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4072674    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4072675    quit;
4072676    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4072677    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4072678    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4072679    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4072680    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4072681    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072682    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4072683    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072684    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072685    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4072686    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072687    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072688    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4072689    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4072690    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4072691    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4072692    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4072693    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4072694    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4072695    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072696    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4072697    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4072698    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4072699    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4072700    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072701    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4072702    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4072702  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
4072703    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072704    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4072705    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 2212 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072706    %macro varDept(fcmpdata=,id=);
4072707    %global nobs&id scoreFlag&id;
4072708    %let scoreFlag&id = 0;
4072709    %if &id=1 or ^&fcmpStart %then %do;
4072710    proc sort data=&fcmpdata out=_temp&id nodupkey;
4072711    by NAME;
4072712    where id=&id and LHS in( %let j=1;
4072713    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4072714    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4072715    "&var" %let j = %eval(&j+1);
4072716    %end;
4072717    );
4072718    run;
4072719    %let dsid = %sysfunc(open(_temp&id));
4072720    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4072721    %let dsid = %sysfunc(close(&dsid));
4072722    %if &&nobs&id %then %do;
4072723    %let scoreFlag&id = 1;
4072724    %let fcmpStart = 1;
4072725    %end;
4072726    %else %let fcmpStart = 0;
4072727    %end;
4072728    %else %do;
4072729    proc sort data=&fcmpdata out=_tempid;
4072730    where id=&id;
4072731    by LHS;
4072732    run;
4072733    %let dsid = %sysfunc(open(_tempid));
4072734    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4072735    %let dsid = %sysfunc(close(&dsid));
4072736    %if ^&&nobs&id %then %do;
4072737    proc datasets lib=work nolist;
4072738    delete _tempid;
4072739    run;
4072740    quit;
4072741    %end;
4072742    %else %do;
4072743    data _tempAll;
4072744    set %let j=%eval(&id-1);
4072745    %do x=1 %to &j;
4072746    %if &&nobs&x %then %do;
4072747    _temp&x %end;
4072748    %end;
4072749    ;
4072750    run;
4072751    proc sql;
4072752    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4072752  ! work._tempid p2 where p.name=p2.lhs;
4072753    quit;
4072754    data _temp&id;
4072755    set _temp&id;
4072756    where LHS ne '' and NAME ne '' and Node ne '';
4072757    run;
4072758    proc datasets lib=work nolist;
4072759    delete _tempAll;
4072760    run;
4072761    %let dsid = %sysfunc(open(_temp&id));
4072762    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4072763    %let dsid = %sysfunc(close(&dsid));
4072764    %if ^&&nobs&id %then %do;
4072765    proc datasets lib=work nolist;
4072766    delete _temp&id;
4072767    run;
4072768    quit;
4072769    %end;
4072770    %else %do;
4072771    %let scoreFlag&id = 1;
4072772    data _temp&id;
4072773    set _temp&id;
4072774    where LHS ne NAME and node ne '';
4072775    run;
4072776    %let dsid = %sysfunc(open(_temp&id));
4072777    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4072778    %let dsid = %sysfunc(close(&dsid));
4072779    %if ^&&nobs&id %then %do;
4072780    proc datasets lib=work nolist;
4072781    delete _temp&id;
4072782    run;
4072783    quit;
4072784    %end;
4072785    %else %do;
4072786    proc sort data=_temp&id nodupkey;
4072787    by LHS NAME;
4072788    run;
4072789    %end;
4072790    %end;
4072791    %end;
4072792    %end;
4072793    %mend varDept;
4072794    %macro optCode(outdata=fcmpdata);
4072795    %global fcmpStart;
4072796    %let fcmpStart = 0;
4072797    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4072798    %let NumNodes=9;
4072799    %do k=1 %to &NumNodes;
4072800    %vardept(fcmpdata=&outdata, id=&k);
4072801    %end;
4072802    %mend optCode;
4072803    %optcode(outData=EMWS8.Ensmbl36_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 161 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 118 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 43 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 43 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 43 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 43 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 47 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 43 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 86 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
4072804    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4072805    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4072806    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4072807    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4072808    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4072809    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4072810    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4072811    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072812    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4072813    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4072813  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
4072814    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4072815    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4072816    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4072817    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4072818    filename _pref
4072818  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
4072819    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4072820    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
4072821   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4072822   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4072823   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4072824   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4072825   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4072826   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4072827   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4072828   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4072829   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4072830   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4072831   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4072832   +LENGTH _WARN_ $4
4072833   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4072834   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4072835   +
4072836   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4072837   +
4072838   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4072839   +
4072840   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4072841   +
4072842   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4072843   +
4072844   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4072845   +
4072846   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4072847   +
4072848   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4072849   +
4072850   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4072851   +
4072852   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4072853   +
4072854   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4072855   +
4072856   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4072857   +
4072858   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4072859   +
4072860   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4072861   +
4072862   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4072863   +
4072864   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4072865   +
4072866   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4072867   +
4072868   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4072869   +
4072870   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4072871   +
4072872   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4072873   +
4072874   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4072875   +
4072876   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4072877   +
4072878   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4072879   +
4072880   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4072881   +
4072882   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4072883   +
4072884   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4072885   +
4072886   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4072887   +
4072888   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4072889   +
4072890   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4072891   +
4072892   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4072893   +
4072894   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4072895   +
4072896   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4072897   +
4072898   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4072899   +
4072900   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4072901   +
4072902   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4072903   +
4072904   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4072905   +
4072906   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4072907   +
4072908   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4072909   +
4072910   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4072911   +
4072912   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4072913   +
4072914   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4072915   +
4072916   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4072917   +
4072918   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4072919   +
4072920   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4072921   +
4072922   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4072923   +
4072924   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4072925   +
4072926   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4072927   +
4072928   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4072929   +
4072930   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4072931   +
4072932   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
4072933   +
4072934   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
4072935   +
4072936   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
4072937   +
4072938   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
4072939   +
4072940   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4072941   +
4072942   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4072943   +
4072944   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4072945   +
4072946   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4072947   +
4072948   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4072949   +
4072950   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4072951   +
4072952   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
4072953   +
4072954   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
4072955   +
4072956   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
4072957   +
4072958   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
4072959   +
4072960   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4072961   +
4072962   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
4072963   +
4072964   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
4072965   +
4072966   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
4072967   +
4072968   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
4072969   +
4072970   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4072971   +
4072972   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4072973   +
4072974   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4072975   +
4072976   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4072977   +
4072978   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4072979   +
4072980   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4072981   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4072982   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4072983   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4072984   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4072985   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4072986   +end;
MPRINT(EM_DIAGRAM):   end;
4072987   +else do;
MPRINT(EM_DIAGRAM):   else do;
4072988   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4072989   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4072990   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4072991   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4072992   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4072993   +   end;
MPRINT(EM_DIAGRAM):   end;
4072994   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4072995   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4072996   +   end;
MPRINT(EM_DIAGRAM):   end;
4072997   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4072998   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4072999   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4073000   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073001   +   end;
MPRINT(EM_DIAGRAM):   end;
4073002   +end;
MPRINT(EM_DIAGRAM):   end;
4073003   +
4073004   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4073005   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4073006   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4073007   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4073008   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4073009   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073010   +end;
MPRINT(EM_DIAGRAM):   end;
4073011   +else do;
MPRINT(EM_DIAGRAM):   else do;
4073012   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4073013   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4073014   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4073015   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4073016   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4073017   +   end;
MPRINT(EM_DIAGRAM):   end;
4073018   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4073019   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4073020   +   end;
MPRINT(EM_DIAGRAM):   end;
4073021   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4073022   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4073023   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4073024   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073025   +   end;
MPRINT(EM_DIAGRAM):   end;
4073026   +end;
MPRINT(EM_DIAGRAM):   end;
4073027   +
4073028   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4073029   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4073030   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4073031   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4073032   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4073033   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073034   +end;
MPRINT(EM_DIAGRAM):   end;
4073035   +else do;
MPRINT(EM_DIAGRAM):   else do;
4073036   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4073037   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4073038   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4073039   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4073040   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4073041   +   end;
MPRINT(EM_DIAGRAM):   end;
4073042   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4073043   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4073044   +   end;
MPRINT(EM_DIAGRAM):   end;
4073045   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4073046   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4073047   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4073048   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073049   +   end;
MPRINT(EM_DIAGRAM):   end;
4073050   +end;
MPRINT(EM_DIAGRAM):   end;
4073051   +
4073052   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4073053   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4073054   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4073055   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4073056   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4073057   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073058   +end;
MPRINT(EM_DIAGRAM):   end;
4073059   +else do;
MPRINT(EM_DIAGRAM):   else do;
4073060   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4073061   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4073062   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4073063   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4073064   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4073065   +   end;
MPRINT(EM_DIAGRAM):   end;
4073066   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4073067   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4073068   +   end;
MPRINT(EM_DIAGRAM):   end;
4073069   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4073070   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4073071   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4073072   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073073   +   end;
MPRINT(EM_DIAGRAM):   end;
4073074   +end;
MPRINT(EM_DIAGRAM):   end;
4073075   +
4073076   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4073077   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4073078   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4073079   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4073080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4073081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073082   +end;
MPRINT(EM_DIAGRAM):   end;
4073083   +else do;
MPRINT(EM_DIAGRAM):   else do;
4073084   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4073085   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4073086   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4073087   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4073088   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4073089   +   end;
MPRINT(EM_DIAGRAM):   end;
4073090   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4073091   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4073092   +   end;
MPRINT(EM_DIAGRAM):   end;
4073093   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4073094   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4073095   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4073096   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073097   +   end;
MPRINT(EM_DIAGRAM):   end;
4073098   +end;
MPRINT(EM_DIAGRAM):   end;
4073099   +
4073100   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4073101   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4073102   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4073103   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4073104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4073105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073106   +end;
MPRINT(EM_DIAGRAM):   end;
4073107   +else do;
MPRINT(EM_DIAGRAM):   else do;
4073108   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4073109   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4073110   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4073111   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4073112   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4073113   +   end;
MPRINT(EM_DIAGRAM):   end;
4073114   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4073115   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4073116   +   end;
MPRINT(EM_DIAGRAM):   end;
4073117   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4073118   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4073119   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4073120   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073121   +   end;
MPRINT(EM_DIAGRAM):   end;
4073122   +end;
MPRINT(EM_DIAGRAM):   end;
4073123   +
4073124   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4073125   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4073126   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4073127   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4073128   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4073129   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073130   +end;
MPRINT(EM_DIAGRAM):   end;
4073131   +else do;
MPRINT(EM_DIAGRAM):   else do;
4073132   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4073133   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4073134   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4073135   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4073136   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4073137   +   end;
MPRINT(EM_DIAGRAM):   end;
4073138   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4073139   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4073140   +   end;
MPRINT(EM_DIAGRAM):   end;
4073141   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4073142   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4073143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4073144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073145   +   end;
MPRINT(EM_DIAGRAM):   end;
4073146   +end;
MPRINT(EM_DIAGRAM):   end;
4073147   +
4073148   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4073149   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4073150   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4073151   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4073152   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4073153   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4073154   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4073155   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4073156   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4073157   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4073158   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4073159   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4073160   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4073161   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073162   +end;
MPRINT(EM_DIAGRAM):   end;
4073163   +else do;
MPRINT(EM_DIAGRAM):   else do;
4073164   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4073165   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4073166   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4073167   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4073168   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4073169   +   end;
MPRINT(EM_DIAGRAM):   end;
4073170   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4073171   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4073172   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4073173   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4073174   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4073175   +   end;
MPRINT(EM_DIAGRAM):   end;
4073176   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4073177   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4073178   +   end;
MPRINT(EM_DIAGRAM):   end;
4073179   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4073180   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4073181   +   end;
MPRINT(EM_DIAGRAM):   end;
4073182   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4073183   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4073184   +   end;
MPRINT(EM_DIAGRAM):   end;
4073185   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4073186   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4073187   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4073188   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4073189   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4073190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4073191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073192   +   end;
MPRINT(EM_DIAGRAM):   end;
4073193   +end;
MPRINT(EM_DIAGRAM):   end;
4073194   +
4073195   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4073196   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4073197   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4073198   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4073199   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4073200   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4073201   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4073202   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4073203   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4073204   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4073205   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4073206   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4073207   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4073208   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4073209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073210   +end;
MPRINT(EM_DIAGRAM):   end;
4073211   +else do;
MPRINT(EM_DIAGRAM):   else do;
4073212   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4073213   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4073214   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4073215   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4073216   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4073217   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4073218   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4073219   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4073220   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4073221   +         end;
MPRINT(EM_DIAGRAM):   end;
4073222   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4073223   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4073224   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4073225   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4073226   +            end;
MPRINT(EM_DIAGRAM):   end;
4073227   +         end;
MPRINT(EM_DIAGRAM):   end;
4073228   +      end;
MPRINT(EM_DIAGRAM):   end;
4073229   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4073230   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4073231   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4073232   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4073233   +         end;
MPRINT(EM_DIAGRAM):   end;
4073234   +      end;
MPRINT(EM_DIAGRAM):   end;
4073235   +   end;
MPRINT(EM_DIAGRAM):   end;
4073236   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4073237   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4073238   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4073239   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4073240   +      end;
MPRINT(EM_DIAGRAM):   end;
4073241   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4073242   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4073243   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4073244   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4073245   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4073246   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4073247   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4073248   +         end;
MPRINT(EM_DIAGRAM):   end;
4073249   +      end;
MPRINT(EM_DIAGRAM):   end;
4073250   +   end;
MPRINT(EM_DIAGRAM):   end;
4073251   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4073252   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4073253   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4073254   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4073255   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4073256   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4073257   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073258   +   end;
MPRINT(EM_DIAGRAM):   end;
4073259   +end;
MPRINT(EM_DIAGRAM):   end;
4073260   +
4073261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073262   +*** Checking missing input Interval
4073263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4073264   +
4073265   +IF NMISS(
4073266   +   AcceptedCmpTotal ,
4073267   +   Age ,
4073268   +   Frq ,
4073269   +   Income ,
4073270   +   Kidhome ,
4073271   +   Mnt ,
4073272   +   MntFishProducts ,
4073273   +   MntFruits ,
4073274   +   MntGoldProds ,
4073275   +   MntMeatProducts ,
4073276   +   MntSweetProducts ,
4073277   +   MntWines ,
4073278   +   MonthsAsCustomer ,
4073279   +   NumCatalogPurchases ,
4073280   +   NumDealsPurchases ,
4073281   +   NumDistPurchases ,
4073282   +   NumStorePurchases ,
4073283   +   NumWebPurchases ,
4073284   +   NumWebVisitsMonth ,
4073285   +   RFMstat ,
4073286   +   RMntFrq ,
4073287   +   Recency ,
4073288   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4073289   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4073290   +
4073291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4073292   +END;
The SAS System
 
MPRINT(EM_DIAGRAM):   END;
4073293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073294   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4073295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073296   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4073297   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4073298   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4073299   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4073300   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4073301   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4073302   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4073303   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4073304   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4073305   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4073306   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4073307   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4073308   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4073309   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4073310   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4073311   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4073312   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4073313   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4073314   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4073315   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4073316   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4073317   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4073318   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4073319   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4073320   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4073321   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4073322   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4073323   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4073324   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4073325   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4073326   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4073327   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4073328   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4073329   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4073330   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4073331   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4073332   +END;
MPRINT(EM_DIAGRAM):   END;
4073333   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4073334   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4073335   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4073336   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4073337   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4073338   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4073339   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4073340   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4073341   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4073342   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4073343   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4073344   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4073345   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4073346   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4073347   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4073348   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4073349   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4073350   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4073351   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4073352   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4073353   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4073354   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4073355   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4073356   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4073357   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4073358   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4073359   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4073360   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4073361   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4073362   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4073363   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4073364   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4073365   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4073366   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4073367   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4073368   +   ELSE S_NumCatalogPurchases
4073369   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4073370   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4073371   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4073372   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4073373   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4073374   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4073375   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4073376   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4073377   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4073378   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4073379   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4073380   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4073381   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4073382   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4073383   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4073384   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4073385   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4073386   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4073387   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4073388   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4073389   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4073390   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4073391   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4073392   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4073393   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4073394   +END;
MPRINT(EM_DIAGRAM):   END;
4073395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073396   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4073397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073399   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4073400   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073402   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4073403   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073404   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4073405   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
4073406   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
4073407   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
4073408   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
4073409   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
4073410   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
4073411   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
4073412   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
4073413   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
4073414   +          +     3.45371614080196 * S_NumDealsPurchases
4073415   +          +     0.19118374544537 * S_NumDistPurchases
4073416   +          +    -2.45138001446793 * S_NumStorePurchases
4073417   +          +    -0.11424280244155 * S_NumWebPurchases
4073418   +          +    -2.31770357716565 * S_NumWebVisitsMonth
4073419   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
4073420   +        S_RMntFrq  +     0.26870809438679 * S_Recency
4073421   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
4073422   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
4073423   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
4073424   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
4073425   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
4073426   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
4073427   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
4073428   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
4073429   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
4073430   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
4073431   +          +    -1.28390925647659 * S_NumDealsPurchases
4073432   +          +     0.82669177239926 * S_NumDistPurchases
4073433   +          +     1.71678585204511 * S_NumStorePurchases
4073434   +          +     1.49226295608046 * S_NumWebPurchases
4073435   +          +     -4.0105103018388 * S_NumWebVisitsMonth
4073436   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
4073437   +        S_RMntFrq  +     4.74241121363086 * S_Recency
4073438   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
4073439   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
4073440   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
4073441   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
4073442   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
4073443   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
4073444   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
4073445   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
4073446   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
4073447   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
4073448   +          +     0.22958626391725 * S_NumDealsPurchases
4073449   +          +    -0.02046515813996 * S_NumDistPurchases
4073450   +          +      0.8618502050837 * S_NumStorePurchases
4073451   +          +     1.45175370326009 * S_NumWebPurchases
4073452   +          +    -0.86122442436156 * S_NumWebVisitsMonth
4073453   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
4073454   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
4073455   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
4073456   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
4073457   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
4073458   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
4073459   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
4073460   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
4073461   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
4073462   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
4073463   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
4073464   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
4073465   +          +     1.25310034610344 * S_NumDealsPurchases
4073466   +          +     0.92141098602176 * S_NumDistPurchases
4073467   +          +    -0.08806509391473 * S_NumStorePurchases
4073468   +          +     -1.0533787624668 * S_NumWebPurchases
4073469   +          +     3.07050739830585 * S_NumWebVisitsMonth
4073470   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
4073471   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
4073472   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
4073473   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
4073474   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
4073475   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
4073476   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
4073477   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
4073478   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
4073479   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
4073480   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
4073481   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
4073482   +          +    -1.68259553608287 * S_NumDealsPurchases
4073483   +          +    -0.53835572290445 * S_NumDistPurchases
4073484   +          +     1.25833922835446 * S_NumStorePurchases
4073485   +          +     0.48300830623998 * S_NumWebPurchases
4073486   +          +    -2.20119275236582 * S_NumWebVisitsMonth
4073487   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
4073488   +        S_RMntFrq  +     0.35692712879409 * S_Recency
4073489   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
4073490   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
4073491   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
4073492   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
4073493   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
4073494   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
4073495   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
4073496   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
4073497   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
4073498   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
4073499   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
4073500   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
4073501   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
4073502   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
4073503   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
4073504   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
4073505   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
4073506   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
4073507   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
4073508   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
4073509   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
4073510   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
4073511   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
4073512   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
4073513   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
4073514   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
4073515   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
4073516   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
4073517   +        EducationGraduation  +     1.25189584055994 * EducationMaster
4073518   +          +     0.26230568150721 * Marital_StatusDivorced
4073519   +          +     0.27563523967756 * Marital_StatusMarried
4073520   +          +     0.54464481618478 * Marital_StatusSingle
4073521   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
4073522   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
4073523   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
4073524   +        EducationGraduation  +     0.29772013614284 * EducationMaster
4073525   +          +    -0.06750661313108 * Marital_StatusDivorced
4073526   +          +     1.48628445854207 * Marital_StatusMarried
4073527   +          +    -0.52197797291165 * Marital_StatusSingle
4073528   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
4073529   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
4073530   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
4073531   +        EducationGraduation  +     0.45665087056809 * EducationMaster
4073532   +          +     0.03219453957597 * Marital_StatusDivorced
4073533   +          +    -0.73835008216677 * Marital_StatusMarried
4073534   +          +     0.11212575818086 * Marital_StatusSingle
4073535   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
4073536   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
4073537   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
4073538   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
4073539   +          +    -0.95055539413405 * Marital_StatusDivorced
4073540   +          +    -1.65922419336067 * Marital_StatusMarried
4073541   +          +     0.78727538125107 * Marital_StatusSingle
4073542   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
4073543   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
4073544   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
4073545   +        EducationGraduation  +     0.46710355433642 * EducationMaster
4073546   +          +     -4.1747415035634 * Marital_StatusDivorced
4073547   +          +     3.61194282451968 * Marital_StatusMarried
4073548   +          +     -3.2800495365546 * Marital_StatusSingle
4073549   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
4073550   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
4073551   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
4073552   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
4073553   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
4073554   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
4073555   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4073556   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4073557   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4073558   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
4073559   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
4073560   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
4073561   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
4073562   +END;
MPRINT(EM_DIAGRAM):   END;
4073563   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4073564   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4073565   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4073566   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4073567   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4073568   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4073569   +END;
MPRINT(EM_DIAGRAM):   END;
4073570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073571   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4073572   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073573   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4073574   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
4073575   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
4073576   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
4073577   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
4073578   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
4073579   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
4073580   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
4073581   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
4073582   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
4073583   +          +     1.29727972396867 * S_NumDealsPurchases
4073584   +          +     -0.4796144286007 * S_NumDistPurchases
4073585   +          +     0.88365985808591 * S_NumStorePurchases
4073586   +          +     0.68522096892804 * S_NumWebPurchases
4073587   +          +     0.54931043107798 * S_NumWebVisitsMonth
4073588   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
4073589   +        S_RMntFrq  +     2.35704770144328 * S_Recency
4073590   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
4073591   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
4073592   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
4073593   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
4073594   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
4073595   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
4073596   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
4073597   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
4073598   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
4073599   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
4073600   +          +     0.26997834581422 * S_NumDealsPurchases
4073601   +          +      1.4974894627406 * S_NumDistPurchases
4073602   +          +     0.20577850505638 * S_NumStorePurchases
4073603   +          +     0.67578530037026 * S_NumWebPurchases
4073604   +          +     1.48893165613941 * S_NumWebVisitsMonth
4073605   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
4073606   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
4073607   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
4073608   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
4073609   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
4073610   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
4073611   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
4073612   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
4073613   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
4073614   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
4073615   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
4073616   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
4073617   +          +    -0.75474919633886 * S_NumDealsPurchases
4073618   +          +     2.21872386475638 * S_NumDistPurchases
4073619   +          +    -0.36191460108989 * S_NumStorePurchases
4073620   +          +     0.03160010932412 * S_NumWebPurchases
4073621   +          +     0.00984650739909 * S_NumWebVisitsMonth
4073622   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
4073623   +        S_RMntFrq  +     0.97890474913417 * S_Recency
4073624   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
4073625   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
4073626   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
4073627   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
4073628   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
4073629   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
4073630   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
4073631   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
4073632   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
4073633   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
4073634   +          +    -1.12057357865269 * S_NumDealsPurchases
4073635   +          +    -0.70841760614521 * S_NumDistPurchases
4073636   +          +    -1.39174816270404 * S_NumStorePurchases
4073637   +          +    -1.62343249380806 * S_NumWebPurchases
4073638   +          +    -0.73097954508465 * S_NumWebVisitsMonth
4073639   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
4073640   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
4073641   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
4073642   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
4073643   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
4073644   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
4073645   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
4073646   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
4073647   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
4073648   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
4073649   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
4073650   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
4073651   +          +     0.66880481485557 * S_NumDealsPurchases
4073652   +          +     0.69540174544859 * S_NumDistPurchases
4073653   +          +     1.68246546921736 * S_NumStorePurchases
4073654   +          +     1.85958176898295 * S_NumWebPurchases
4073655   +          +    -0.23815810306565 * S_NumWebVisitsMonth
4073656   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
4073657   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
4073658   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
4073659   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
4073660   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
4073661   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
4073662   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
4073663   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
4073664   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
4073665   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
4073666   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
4073667   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
4073668   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
4073669   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
4073670   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
4073671   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
4073672   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
4073673   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
4073674   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
4073675   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
4073676   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
4073677   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
4073678   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
4073679   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
4073680   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
4073681   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
4073682   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
4073683   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
4073684   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
4073685   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
4073686   +        EducationGraduation  +     0.32623787352656 * EducationMaster
4073687   +          +      0.2766977476799 * Marital_StatusDivorced
4073688   +          +     0.99585126449473 * Marital_StatusMarried
4073689   +          +    -0.71244490682808 * Marital_StatusSingle
4073690   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
4073691   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
4073692   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
4073693   +        EducationGraduation  +     0.47239961039918 * EducationMaster
4073694   +          +     0.04724779113048 * Marital_StatusDivorced
4073695   +          +    -0.80186231440666 * Marital_StatusMarried
4073696   +          +    -0.02226793584171 * Marital_StatusSingle
4073697   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
4073698   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
4073699   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
4073700   +        EducationGraduation  +     0.41284540548646 * EducationMaster
4073701   +          +     0.28206835683721 * Marital_StatusDivorced
4073702   +          +     0.46500886756532 * Marital_StatusMarried
4073703   +          +     0.35327545255503 * Marital_StatusSingle
4073704   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
4073705   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
4073706   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
4073707   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
4073708   +          +     1.22291788006392 * Marital_StatusDivorced
4073709   +          +    -2.27040720272432 * Marital_StatusMarried
4073710   +          +     1.13606780043773 * Marital_StatusSingle
4073711   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
4073712   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
4073713   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
4073714   +        EducationGraduation  +      0.4909097120378 * EducationMaster
4073715   +          +     -0.3999800759199 * Marital_StatusDivorced
4073716   +          +    -0.40978271635345 * Marital_StatusMarried
4073717   +          +    -0.55524279444227 * Marital_StatusSingle
4073718   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
4073719   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
4073720   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
4073721   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
4073722   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
4073723   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
4073724   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4073725   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4073726   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4073727   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
4073728   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
4073729   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
4073730   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
4073731   +END;
MPRINT(EM_DIAGRAM):   END;
4073732   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4073733   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4073734   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4073735   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4073736   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4073737   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4073738   +END;
MPRINT(EM_DIAGRAM):   END;
4073739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073740   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4073741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073742   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4073743   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
4073744   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
4073745   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
4073746   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
4073747   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
4073748   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
4073749   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
4073750   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
4073751   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
4073752   +          +     0.15783958682465 * S_NumDealsPurchases
4073753   +          +     1.52124708558457 * S_NumDistPurchases
4073754   +          +     -1.3804418313581 * S_NumStorePurchases
4073755   +          +    -1.29570111649272 * S_NumWebPurchases
4073756   +          +    -0.64280706056547 * S_NumWebVisitsMonth
4073757   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
4073758   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
4073759   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
4073760   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
4073761   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
4073762   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
4073763   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
4073764   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
4073765   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
4073766   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
4073767   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
4073768   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
4073769   +          +     0.12337111358286 * S_NumDealsPurchases
4073770   +          +     -2.3848926094027 * S_NumDistPurchases
4073771   +          +    -1.20666646996433 * S_NumStorePurchases
4073772   +          +     0.89549302881365 * S_NumWebPurchases
4073773   +          +     0.95359042569947 * S_NumWebVisitsMonth
4073774   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
4073775   +        S_RMntFrq  +     0.17682790616815 * S_Recency
4073776   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
4073777   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
4073778   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
4073779   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
4073780   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
4073781   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
4073782   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
4073783   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
4073784   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
4073785   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
4073786   +          +    -1.05383642674948 * S_NumDealsPurchases
4073787   +          +     1.71861984509369 * S_NumDistPurchases
4073788   +          +     1.47595181536047 * S_NumStorePurchases
4073789   +          +    -1.64165005491178 * S_NumWebPurchases
4073790   +          +    -2.35130004742828 * S_NumWebVisitsMonth
4073791   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
4073792   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
4073793   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
4073794   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
4073795   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
4073796   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
4073797   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
4073798   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
4073799   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
4073800   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
4073801   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
4073802   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
4073803   +          +     0.13347794794222 * S_NumDealsPurchases
4073804   +          +     0.30533639886561 * S_NumDistPurchases
4073805   +          +     1.63892955540526 * S_NumStorePurchases
4073806   +          +     0.43734586516446 * S_NumWebPurchases
4073807   +          +     1.79260779802864 * S_NumWebVisitsMonth
4073808   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
4073809   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
4073810   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
4073811   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
4073812   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
4073813   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
4073814   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
4073815   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
4073816   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
4073817   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
4073818   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
4073819   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
4073820   +          +     1.64209094349557 * S_NumDealsPurchases
4073821   +          +    -0.38876870460627 * S_NumDistPurchases
4073822   +          +    -0.48559309584971 * S_NumStorePurchases
4073823   +          +     0.21254626353218 * S_NumWebPurchases
4073824   +          +    -0.71484448532542 * S_NumWebVisitsMonth
4073825   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
4073826   +        S_RMntFrq  +     0.44893411588775 * S_Recency
4073827   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
4073828   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
4073829   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
4073830   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
4073831   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
4073832   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
4073833   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
4073834   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
4073835   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
4073836   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
4073837   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
4073838   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
4073839   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
4073840   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
4073841   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
4073842   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
4073843   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
4073844   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
4073845   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
4073846   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
4073847   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
4073848   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
4073849   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
4073850   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
4073851   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
4073852   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
4073853   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
4073854   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
4073855   +        EducationGraduation  +     0.46887304015863 * EducationMaster
4073856   +          +     1.33953173091973 * Marital_StatusDivorced
4073857   +          +    -0.26253208073262 * Marital_StatusMarried
4073858   +          +    -0.00960552682431 * Marital_StatusSingle
4073859   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
4073860   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
4073861   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
4073862   +        EducationGraduation  +     1.05325310300372 * EducationMaster
4073863   +          +     1.43150850334311 * Marital_StatusDivorced
4073864   +          +    -0.69239127844934 * Marital_StatusMarried
4073865   +          +     2.08477562471559 * Marital_StatusSingle
4073866   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
4073867   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
4073868   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
4073869   +        EducationGraduation  +     1.80436924796338 * EducationMaster
4073870   +          +     1.08387556786168 * Marital_StatusDivorced
4073871   +          +      1.0283506000217 * Marital_StatusMarried
4073872   +          +    -0.87069431107983 * Marital_StatusSingle
4073873   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
4073874   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
4073875   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
4073876   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
4073877   +          +      -1.347780188307 * Marital_StatusDivorced
4073878   +          +    -0.53911983240372 * Marital_StatusMarried
4073879   +          +     0.22083074159185 * Marital_StatusSingle
4073880   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
4073881   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
4073882   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
4073883   +        EducationGraduation  +      1.6087631135774 * EducationMaster
4073884   +          +     1.46582538311384 * Marital_StatusDivorced
4073885   +          +     0.05256161016002 * Marital_StatusMarried
4073886   +          +    -1.21402967626877 * Marital_StatusSingle
4073887   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
4073888   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
4073889   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
4073890   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
4073891   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
4073892   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
4073893   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4073894   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4073895   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4073896   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
4073897   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
4073898   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
4073899   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
4073900   +END;
MPRINT(EM_DIAGRAM):   END;
4073901   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4073902   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4073903   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
4073904   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
4073905   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
4073906   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
4073907   +END;
MPRINT(EM_DIAGRAM):   END;
4073908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073909   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4073910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073911   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4073912   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
4073913   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
4073914   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
4073915   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
4073916   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
4073917   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
4073918   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
4073919   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
4073920   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
4073921   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
4073922   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
4073923   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
4073924   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
4073925   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
4073926   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
4073927   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
4073928   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
4073929   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
4073930   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
4073931   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
4073932   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
4073933   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
4073934   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
4073935   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
4073936   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
4073937   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
4073938   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
4073939   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
4073940   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
4073941   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
4073942   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
4073943   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
4073944   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
4073945   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
4073946   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
4073947   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
4073948   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
4073949   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
4073950   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
4073951   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
4073952   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
4073953   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
4073954   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4073955   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4073956   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4073957   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4073958   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4073959   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4073960   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4073961   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4073962   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4073963   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4073964   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4073965   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4073966   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4073967   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4073968   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4073969   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4073970   +END;
MPRINT(EM_DIAGRAM):   END;
4073971   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4073972   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4073973   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4073974   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4073975   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4073976   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4073977   +END;
MPRINT(EM_DIAGRAM):   END;
4073978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073979   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4073980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4073981   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4073982   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
4073983   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
4073984   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
4073985   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
4073986   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
4073987   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
4073988   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
4073989   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
4073990   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
4073991   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
4073992   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
4073993   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
4073994   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
4073995   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
4073996   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
4073997   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
4073998   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
4073999   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
4074000   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
4074001   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
4074002   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
4074003   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
4074004   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
4074005   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
4074006   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
4074007   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
4074008   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
4074009   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
4074010   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
4074011   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
4074012   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
4074013   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
4074014   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
4074015   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
4074016   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
4074017   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
4074018   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
4074019   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
4074020   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
4074021   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
4074022   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
4074023   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
4074024   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4074025   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
4074026   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
4074027   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
4074028   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
4074029   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
4074030   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
4074031   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
4074032   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
4074033   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
4074034   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
4074035   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
4074036   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
4074037   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
4074038   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
4074039   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
4074040   +END;
MPRINT(EM_DIAGRAM):   END;
4074041   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4074042   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4074043   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
4074044   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
4074045   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
4074046   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
4074047   +END;
MPRINT(EM_DIAGRAM):   END;
4074048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4074049   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4074050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4074051   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4074052   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
4074053   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
4074054   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
4074055   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
4074056   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
4074057   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
4074058   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
4074059   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
4074060   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
4074061   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
4074062   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
4074063   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
4074064   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
4074065   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
4074066   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
4074067   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
4074068   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
4074069   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
4074070   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
4074071   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
4074072   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
4074073   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
4074074   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
4074075   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
4074076   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
4074077   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
4074078   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
4074079   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
4074080   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
4074081   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
4074082   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4074083   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
4074084   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
4074085   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
4074086   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
4074087   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
4074088   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
4074089   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
4074090   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
4074091   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
4074092   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
4074093   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
4074094   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
4074095   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
4074096   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
4074097   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
4074098   +END;
MPRINT(EM_DIAGRAM):   END;
4074099   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4074100   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4074101   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
4074102   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
4074103   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
4074104   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
4074105   +END;
MPRINT(EM_DIAGRAM):   END;
4074106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4074107   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4074108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4074109   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4074110   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
4074111   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
4074112   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
4074113   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
4074114   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4074115   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4074116   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4074117   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4074118   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4074119   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4074120   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4074121   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4074122   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4074123   +END;
MPRINT(EM_DIAGRAM):   END;
4074124   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4074125   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4074126   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4074127   +END;
MPRINT(EM_DIAGRAM):   END;
4074128   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4074129   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4074130   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4074131   +END;
MPRINT(EM_DIAGRAM):   END;
4074132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4074133   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4074134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4074135   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4074136   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4074137   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4074138   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4074139   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4074140   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4074141   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4074142   +END;
MPRINT(EM_DIAGRAM):   END;
4074143   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4074144   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4074145   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4074146   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4074147    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4074148    quit;
4074149    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4074150    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4074151    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4074152    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
4074153    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4074154    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9109 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9109 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4074155    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4074156    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074157    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9109 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9109 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
4074158    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME
CREATOR);
4074159    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074160    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074161    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4074162    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4074163    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4074164    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074165    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
4074166    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4074167    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4074168    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074169    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 83 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074170    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4074171    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4074172    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074173    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 83 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 83 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4074174    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4074175    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4074175  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4449 rows and 5 columns.
 
4074176    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4074177    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4074178    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 4449 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 4449 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074179    filename _pref
4074179  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4074180    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4074181    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4074182   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4074183   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4074184   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4074185   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4074186   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4074187   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4074188    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4074189    quit;
4074190    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4074191    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4074192    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4074193    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4074194    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4074195    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4074196    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4074197    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074198    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074199    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4074200    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074202    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4074203    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4074204    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4074205    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074206    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4074207    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4074208    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4074209    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074210    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074211    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4074212    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4074213    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074214    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074215    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4074216    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4074216  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
4074217    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074218    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4074219    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 4453 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074220    filename _pref
4074220  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4074221    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4074222    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4074223   +
4074224   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4074225   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4074225  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4074226   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4074227   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4074228   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4074229   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4074230   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4074231    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4074232    quit;
4074233    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4074234    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4074235    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4074236    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4074237    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4074238    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074239    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4074240    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074241    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4074242    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4074243    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074244    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074245    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4074246    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4074247    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4074248    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074249    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4074250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074251    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4074252    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074253    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074254    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4074255    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4074256    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074257    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074258    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4074259    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4074259  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
4074260    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074261    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4074262    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 4492 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4074263    filename _pref
4074263  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4074264    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4074265    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4074266   +
4074267   +
4074268   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4074269   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4074270   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4074271   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4074272   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4074273   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4074274   +
4074275   +
4074276   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4074277   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4074278   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4074279   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4074280   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4074281   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4074282   +
4074283   +
4074284   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4074285   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4074286   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4074287   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4074288   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4074289   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4074290   +
4074291   +
4074292   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4074293   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4074294   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4074295   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4074296   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4074297   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4074298   +
4074299   +
4074300   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4074301   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4074302   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4074303   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4074304   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4074305   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4074306   +
4074307   +
4074308   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4074309   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4074310   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4074311   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4074312   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4074313   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4074314   +
4074315   +
4074316   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4074317   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4074318   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4074319   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4074320   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4074321   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4074322   +
4074323   +
4074324   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4074325   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4074326   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4074327   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4074328   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4074329   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4074330   +if
4074331   +_FILTERNORM1 not in ( '.')
4074332   + and
4074333   +_FILTERNORM2 not in ( '.')
4074334   + and
4074335   +_FILTERNORM3 not in ( '.')
4074336   + and
4074337   +_FILTERNORM4 not in ( '.')
4074338   + and
4074339   +_FILTERNORM5 not in ( '.')
4074340   + and
4074341   +_FILTERNORM6 not in ( '.')
4074342   + and
4074343   +_FILTERNORM7 not in ( ' ')
4074344   + and
4074345   +_FILTERNORM8 not in ( ' ')
4074346   +and
4074347   +( Dt_Customer ne .)
4074348   +and ( Income ne . and (Income<=107000))
4074349   +and ( Kidhome ne .)
4074350   +and ( MntFishProducts ne .)
4074351   +and ( MntFruits ne .)
4074352   +and ( MntGoldProds ne .)
4074353   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4074354   +and ( MntSweetProducts ne .)
4074355   +and ( MntWines ne .)
4074356   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4074357   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4074358   +and ( NumStorePurchases ne .)
4074359   +and ( NumWebPurchases ne .)
4074360   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4074361   +and ( Recency ne .)
4074362   +and ( Teenhome ne .)
4074363   +and ( Year_Birth ne .)
4074364   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
4074365   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4074366   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4074367   +end;
MPRINT(EM_DIAGRAM):   end;
4074368   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4074369   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4074370    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4074371    quit;
4074372    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4074373    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4074374    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4074375    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4074376    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4074377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074378    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4074379    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074380    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074381    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4074382    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074383    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074384    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4074385    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4074386    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4074387    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4074388    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4074389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4074390    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4074391    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074392    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074393    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4074394    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4074395    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4074396    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074397    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4074398    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4074398  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
4074399    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074400    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4074401    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 4558 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4074402    %macro varDept(fcmpdata=,id=);
4074403    %global nobs&id scoreFlag&id;
4074404    %let scoreFlag&id = 0;
4074405    %if &id=1 or ^&fcmpStart %then %do;
4074406    proc sort data=&fcmpdata out=_temp&id nodupkey;
4074407    by NAME;
4074408    where id=&id and LHS in( %let j=1;
4074409    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4074410    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4074411    "&var" %let j = %eval(&j+1);
4074412    %end;
4074413    );
4074414    run;
4074415    %let dsid = %sysfunc(open(_temp&id));
4074416    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4074417    %let dsid = %sysfunc(close(&dsid));
4074418    %if &&nobs&id %then %do;
4074419    %let scoreFlag&id = 1;
4074420    %let fcmpStart = 1;
4074421    %end;
4074422    %else %let fcmpStart = 0;
4074423    %end;
4074424    %else %do;
4074425    proc sort data=&fcmpdata out=_tempid;
4074426    where id=&id;
4074427    by LHS;
4074428    run;
4074429    %let dsid = %sysfunc(open(_tempid));
4074430    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4074431    %let dsid = %sysfunc(close(&dsid));
4074432    %if ^&&nobs&id %then %do;
4074433    proc datasets lib=work nolist;
4074434    delete _tempid;
4074435    run;
4074436    quit;
4074437    %end;
4074438    %else %do;
4074439    data _tempAll;
4074440    set %let j=%eval(&id-1);
4074441    %do x=1 %to &j;
4074442    %if &&nobs&x %then %do;
4074443    _temp&x %end;
4074444    %end;
4074445    ;
4074446    run;
4074447    proc sql;
4074448    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4074448  ! work._tempid p2 where p.name=p2.lhs;
4074449    quit;
4074450    data _temp&id;
4074451    set _temp&id;
4074452    where LHS ne '' and NAME ne '' and Node ne '';
4074453    run;
4074454    proc datasets lib=work nolist;
4074455    delete _tempAll;
4074456    run;
4074457    %let dsid = %sysfunc(open(_temp&id));
4074458    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4074459    %let dsid = %sysfunc(close(&dsid));
4074460    %if ^&&nobs&id %then %do;
4074461    proc datasets lib=work nolist;
4074462    delete _temp&id;
4074463    run;
4074464    quit;
4074465    %end;
4074466    %else %do;
4074467    %let scoreFlag&id = 1;
4074468    data _temp&id;
4074469    set _temp&id;
4074470    where LHS ne NAME and node ne '';
4074471    run;
4074472    %let dsid = %sysfunc(open(_temp&id));
4074473    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4074474    %let dsid = %sysfunc(close(&dsid));
4074475    %if ^&&nobs&id %then %do;
4074476    proc datasets lib=work nolist;
4074477    delete _temp&id;
4074478    run;
4074479    quit;
4074480    %end;
4074481    %else %do;
4074482    proc sort data=_temp&id nodupkey;
4074483    by LHS NAME;
4074484    run;
4074485    %end;
4074486    %end;
4074487    %end;
4074488    %end;
4074489    %mend varDept;
4074490    %macro optCode(outdata=fcmpdata);
4074491    %global fcmpStart;
4074492    %let fcmpStart = 0;
4074493    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4074494    %let NumNodes=9;
4074495    %do k=1 %to &NumNodes;
4074496    %vardept(fcmpdata=&outdata, id=&k);
4074497    %end;
4074498    %mend optCode;
4074499    %optcode(outData=EMWS8.Ensmbl36_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 224 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 160 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 64 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 107 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
4074500    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4074501    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4074502    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4074503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074504    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4074505    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4074506    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4074507    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
4074508    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4074509    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4074509  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
4074510    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4074511    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4074512    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4074513    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4074514    filename _pref
4074514  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
4074515    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4074516    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
4074517   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4074518   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4074519   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4074520   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4074521   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4074522   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4074523   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4074524   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4074525   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4074526   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4074527   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4074528   +LENGTH _WARN_ $4
4074529   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4074530   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4074531   +
4074532   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4074533   +
4074534   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4074535   +
4074536   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4074537   +
4074538   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4074539   +
4074540   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4074541   +
4074542   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4074543   +
4074544   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4074545   +
4074546   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4074547   +
4074548   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4074549   +
4074550   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4074551   +
4074552   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4074553   +
4074554   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4074555   +
4074556   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4074557   +
4074558   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4074559   +
4074560   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4074561   +
4074562   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4074563   +
4074564   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4074565   +
4074566   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4074567   +
4074568   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4074569   +
4074570   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4074571   +
4074572   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4074573   +
4074574   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4074575   +
4074576   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4074577   +
4074578   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4074579   +
4074580   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4074581   +
4074582   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4074583   +
4074584   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4074585   +
4074586   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4074587   +
4074588   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4074589   +
4074590   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4074591   +
4074592   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4074593   +
4074594   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4074595   +
4074596   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4074597   +
4074598   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4074599   +
4074600   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4074601   +
4074602   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4074603   +
4074604   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4074605   +
4074606   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4074607   +
4074608   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4074609   +
4074610   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4074611   +
4074612   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4074613   +
4074614   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4074615   +
4074616   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4074617   +
4074618   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4074619   +
4074620   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4074621   +
4074622   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4074623   +
4074624   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4074625   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4074626   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4074627   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4074628   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4074629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074630   +end;
MPRINT(EM_DIAGRAM):   end;
4074631   +else do;
MPRINT(EM_DIAGRAM):   else do;
4074632   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4074633   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4074634   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4074635   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4074636   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4074637   +   end;
MPRINT(EM_DIAGRAM):   end;
4074638   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4074639   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4074640   +   end;
MPRINT(EM_DIAGRAM):   end;
4074641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4074642   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4074643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4074644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074645   +   end;
MPRINT(EM_DIAGRAM):   end;
4074646   +end;
MPRINT(EM_DIAGRAM):   end;
4074647   +
4074648   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4074649   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4074650   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4074651   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4074652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4074653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074654   +end;
MPRINT(EM_DIAGRAM):   end;
4074655   +else do;
MPRINT(EM_DIAGRAM):   else do;
4074656   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4074657   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4074658   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4074659   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4074660   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4074661   +   end;
MPRINT(EM_DIAGRAM):   end;
4074662   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4074663   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4074664   +   end;
MPRINT(EM_DIAGRAM):   end;
4074665   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4074666   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4074667   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4074668   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074669   +   end;
MPRINT(EM_DIAGRAM):   end;
4074670   +end;
MPRINT(EM_DIAGRAM):   end;
4074671   +
4074672   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4074673   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4074674   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4074675   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4074676   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4074677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074678   +end;
MPRINT(EM_DIAGRAM):   end;
4074679   +else do;
MPRINT(EM_DIAGRAM):   else do;
4074680   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4074681   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4074682   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4074683   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4074684   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4074685   +   end;
MPRINT(EM_DIAGRAM):   end;
4074686   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4074687   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4074688   +   end;
MPRINT(EM_DIAGRAM):   end;
4074689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4074690   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4074691   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4074692   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074693   +   end;
MPRINT(EM_DIAGRAM):   end;
4074694   +end;
MPRINT(EM_DIAGRAM):   end;
4074695   +
4074696   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4074697   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4074698   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4074699   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4074700   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4074701   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074702   +end;
MPRINT(EM_DIAGRAM):   end;
4074703   +else do;
MPRINT(EM_DIAGRAM):   else do;
4074704   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4074705   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4074706   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4074707   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4074708   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4074709   +   end;
MPRINT(EM_DIAGRAM):   end;
4074710   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4074711   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4074712   +   end;
MPRINT(EM_DIAGRAM):   end;
4074713   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4074714   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4074715   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4074716   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074717   +   end;
MPRINT(EM_DIAGRAM):   end;
4074718   +end;
MPRINT(EM_DIAGRAM):   end;
4074719   +
4074720   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4074721   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4074722   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4074723   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4074724   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4074725   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074726   +end;
MPRINT(EM_DIAGRAM):   end;
4074727   +else do;
MPRINT(EM_DIAGRAM):   else do;
4074728   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4074729   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4074730   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4074731   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4074732   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4074733   +   end;
MPRINT(EM_DIAGRAM):   end;
4074734   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4074735   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4074736   +   end;
MPRINT(EM_DIAGRAM):   end;
4074737   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4074738   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4074739   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4074740   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074741   +   end;
MPRINT(EM_DIAGRAM):   end;
4074742   +end;
MPRINT(EM_DIAGRAM):   end;
4074743   +
4074744   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4074745   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4074746   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4074747   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4074748   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4074749   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074750   +end;
MPRINT(EM_DIAGRAM):   end;
4074751   +else do;
MPRINT(EM_DIAGRAM):   else do;
4074752   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4074753   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4074754   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4074755   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4074756   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4074757   +   end;
MPRINT(EM_DIAGRAM):   end;
4074758   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4074759   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4074760   +   end;
MPRINT(EM_DIAGRAM):   end;
4074761   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4074762   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4074763   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4074764   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074765   +   end;
MPRINT(EM_DIAGRAM):   end;
4074766   +end;
MPRINT(EM_DIAGRAM):   end;
4074767   +
4074768   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4074769   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4074770   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4074771   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4074772   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4074773   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074774   +end;
MPRINT(EM_DIAGRAM):   end;
4074775   +else do;
MPRINT(EM_DIAGRAM):   else do;
4074776   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4074777   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4074778   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4074779   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4074780   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4074781   +   end;
MPRINT(EM_DIAGRAM):   end;
4074782   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4074783   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4074784   +   end;
MPRINT(EM_DIAGRAM):   end;
4074785   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4074786   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4074787   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4074788   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074789   +   end;
MPRINT(EM_DIAGRAM):   end;
4074790   +end;
MPRINT(EM_DIAGRAM):   end;
4074791   +
4074792   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4074793   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4074794   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4074795   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4074796   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4074797   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4074798   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4074799   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4074800   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4074801   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4074802   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4074803   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4074804   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4074805   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074806   +end;
MPRINT(EM_DIAGRAM):   end;
4074807   +else do;
MPRINT(EM_DIAGRAM):   else do;
4074808   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4074809   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4074810   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4074811   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4074812   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4074813   +   end;
MPRINT(EM_DIAGRAM):   end;
4074814   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4074815   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4074816   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4074817   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4074818   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4074819   +   end;
MPRINT(EM_DIAGRAM):   end;
4074820   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4074821   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4074822   +   end;
MPRINT(EM_DIAGRAM):   end;
4074823   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4074824   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4074825   +   end;
MPRINT(EM_DIAGRAM):   end;
4074826   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4074827   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4074828   +   end;
MPRINT(EM_DIAGRAM):   end;
4074829   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4074830   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4074831   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4074832   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4074833   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4074834   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4074835   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074836   +   end;
MPRINT(EM_DIAGRAM):   end;
4074837   +end;
MPRINT(EM_DIAGRAM):   end;
4074838   +
4074839   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4074840   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4074841   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4074842   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4074843   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4074844   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4074845   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4074846   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4074847   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4074848   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4074849   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4074850   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4074851   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4074852   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4074853   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074854   +end;
MPRINT(EM_DIAGRAM):   end;
4074855   +else do;
MPRINT(EM_DIAGRAM):   else do;
4074856   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4074857   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4074858   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4074859   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4074860   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4074861   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4074862   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4074863   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4074864   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4074865   +         end;
MPRINT(EM_DIAGRAM):   end;
4074866   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4074867   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4074868   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4074869   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4074870   +            end;
MPRINT(EM_DIAGRAM):   end;
4074871   +         end;
MPRINT(EM_DIAGRAM):   end;
4074872   +      end;
MPRINT(EM_DIAGRAM):   end;
4074873   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4074874   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4074875   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4074876   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4074877   +         end;
MPRINT(EM_DIAGRAM):   end;
4074878   +      end;
MPRINT(EM_DIAGRAM):   end;
4074879   +   end;
MPRINT(EM_DIAGRAM):   end;
4074880   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4074881   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4074882   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4074883   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4074884   +      end;
MPRINT(EM_DIAGRAM):   end;
4074885   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4074886   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4074887   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4074888   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4074889   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4074890   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4074891   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4074892   +         end;
MPRINT(EM_DIAGRAM):   end;
4074893   +      end;
MPRINT(EM_DIAGRAM):   end;
4074894   +   end;
MPRINT(EM_DIAGRAM):   end;
4074895   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4074896   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4074897   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4074898   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4074899   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4074900   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4074901   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074902   +   end;
MPRINT(EM_DIAGRAM):   end;
4074903   +end;
MPRINT(EM_DIAGRAM):   end;
4074904   +
4074905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4074906   +*** Checking missing input Interval
4074907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4074908   +
4074909   +IF NMISS(
4074910   +   AcceptedCmpTotal ,
4074911   +   Age ,
4074912   +   Frq ,
4074913   +   Income ,
4074914   +   Kidhome ,
4074915   +   Mnt ,
4074916   +   MntFishProducts ,
4074917   +   MntFruits ,
4074918   +   MntGoldProds ,
4074919   +   MntMeatProducts ,
4074920   +   MntSweetProducts ,
4074921   +   MntWines ,
4074922   +   MonthsAsCustomer ,
4074923   +   NumCatalogPurchases ,
4074924   +   NumDealsPurchases ,
4074925   +   NumDistPurchases ,
4074926   +   NumStorePurchases ,
4074927   +   NumWebPurchases ,
4074928   +   NumWebVisitsMonth ,
4074929   +   RFMstat ,
4074930   +   RMntFrq ,
4074931   +   Recency ,
4074932   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4074933   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4074934   +
4074935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4074936   +END;
MPRINT(EM_DIAGRAM):   END;
4074937   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4074938   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4074939   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4074940   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4074941   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4074942   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4074943   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4074944   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4074945   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4074946   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4074947   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4074948   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4074949   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4074950   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4074951   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4074952   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4074953   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4074954   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4074955   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4074956   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4074957   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4074958   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4074959   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4074960   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4074961   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4074962   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4074963   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4074964   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4074965   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4074966   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4074967   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4074968   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4074969   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4074970   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4074971   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4074972   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4074973   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4074974   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4074975   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4074976   +END;
MPRINT(EM_DIAGRAM):   END;
4074977   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4074978   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4074979   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4074980   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4074981   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4074982   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4074983   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4074984   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4074985   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4074986   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4074987   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4074988   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4074989   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4074990   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4074991   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4074992   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4074993   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4074994   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4074995   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4074996   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4074997   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4074998   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4074999   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4075000   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4075001   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4075002   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4075003   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4075004   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4075005   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4075006   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4075007   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4075008   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4075009   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4075010   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4075011   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4075012   +   ELSE S_NumCatalogPurchases
4075013   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4075014   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4075015   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4075016   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4075017   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4075018   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4075019   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4075020   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4075021   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4075022   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4075023   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4075024   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4075025   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4075026   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4075027   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4075028   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4075029   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4075030   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4075031   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4075032   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4075033   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4075034   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4075035   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4075036   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4075037   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4075038   +END;
MPRINT(EM_DIAGRAM):   END;
4075039   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4075040   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4075041   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4075042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4075043   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4075044   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4075045   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4075046   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4075047   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4075048   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4075049   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
4075050   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
4075051   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
4075052   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
4075053   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
4075054   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
4075055   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
4075056   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
4075057   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
4075058   +          +    -1.14704878034134 * S_NumDealsPurchases
4075059   +          +    -0.17763404274659 * S_NumDistPurchases
4075060   +          +     0.08894400267969 * S_NumStorePurchases
4075061   +          +     0.59283747891957 * S_NumWebPurchases
4075062   +          +     0.85268274682505 * S_NumWebVisitsMonth
4075063   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
4075064   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
4075065   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 *
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 *
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts +
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 *
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines +
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases +
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases +
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases +
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 *
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
4075066   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
4075067   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
4075068   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
4075069   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
4075070   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
4075071   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
4075072   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
4075073   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
4075074   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
4075075   +          +    -0.80841566068716 * S_NumDealsPurchases
4075076   +          +    -0.17995640033768 * S_NumDistPurchases
4075077   +          +     0.00713417460936 * S_NumStorePurchases
4075078   +          +     0.57881024323076 * S_NumWebPurchases
4075079   +          +    -1.35134224257365 * S_NumWebVisitsMonth
4075080   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
4075081   +        S_RMntFrq  +     1.16978656262499 * S_Recency
4075082   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 *
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 *
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts +
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 *
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 *
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 *
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 *
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq +
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
4075083   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
4075084   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
4075085   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
4075086   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
4075087   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
4075088   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
4075089   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
4075090   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
4075091   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
4075092   +          +     0.57891364118717 * S_NumDealsPurchases
4075093   +          +    -0.31024556838688 * S_NumDistPurchases
4075094   +          +    -1.48708542986704 * S_NumStorePurchases
4075095   +          +    -0.93009875249206 * S_NumWebPurchases
4075096   +          +     2.01900039122935 * S_NumWebVisitsMonth
4075097   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
4075098   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
4075099   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 *
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 *
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts +
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 *
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 *
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 *
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 *
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq +
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
4075100   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
4075101   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
4075102   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
4075103   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
4075104   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 *
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 +
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 *
HigherEducationBinary0 ;
4075105   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
4075106   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
4075107   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
4075108   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
4075109   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 *
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 +
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 *
HigherEducationBinary0 ;
4075110   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
4075111   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
4075112   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
4075113   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
4075114   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 +
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 *
HigherEducationBinary0 ;
4075115   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
4075116   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
4075117   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
4075118   +          +     0.55883606830033 * Marital_StatusDivorced
4075119   +          +    -0.54530037567066 * Marital_StatusMarried
4075120   +          +    -0.52994736075753 * Marital_StatusSingle
4075121   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle +
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation +
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced +
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle +
-0.53882341831078 * Marital_StatusTogether ;
4075122   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
4075123   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
4075124   +        EducationGraduation  +     0.31201349236277 * EducationMaster
4075125   +          +    -1.07368484057033 * Marital_StatusDivorced
4075126   +          +     2.73313504711262 * Marital_StatusMarried
4075127   +          +    -2.18530462876058 * Marital_StatusSingle
4075128   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle +
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 *
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 *
Marital_StatusTogether ;
4075129   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
4075130   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
4075131   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
4075132   +          +     0.49993144243043 * Marital_StatusDivorced
4075133   +          +    -0.38953339116829 * Marital_StatusMarried
4075134   +          +    -0.10836287319942 * Marital_StatusSingle
4075135   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle +
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation +
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced +
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle +
-0.42049990939036 * Marital_StatusTogether ;
4075136   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
4075137   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
4075138   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
4075139   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
4075140   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
4075141   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4075142   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4075143   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4075144   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4075145   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4075146   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4075147   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4075148   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4075149   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4075150   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4075151   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4075152   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4075153   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4075154   +END;
MPRINT(EM_DIAGRAM):   END;
4075155   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4075156   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4075157   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4075158   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4075159   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4075160   +END;
MPRINT(EM_DIAGRAM):   END;
4075161   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4075162   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4075163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4075164   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4075165   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
4075166   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 +
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
4075167   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
4075168   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4075169   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4075170   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4075171   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4075172   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4075173   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4075174   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4075175   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4075176   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4075177   +END;
MPRINT(EM_DIAGRAM):   END;
4075178   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4075179   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4075180   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4075181   +END;
MPRINT(EM_DIAGRAM):   END;
4075182   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4075183   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4075184   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4075185   +END;
MPRINT(EM_DIAGRAM):   END;
4075186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4075187   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4075188   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4075189   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4075190   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4075191   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4075192   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4075193   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4075194   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4075195   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4075196   +END;
MPRINT(EM_DIAGRAM):   END;
4075197   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4075198   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4075199   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4075200   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4075201    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4075202    quit;
4075203    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4075204    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4075205    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4075206    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
4075207    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4075208    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075209    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4075210    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075211    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075212    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME
CREATOR);
4075213    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075214    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4075215    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4075216    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4075217    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4075218    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075219    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
4075220    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
4075221    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4075222    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075223    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075224    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4075225    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4075226    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075227    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075228    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4075229    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4075229  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.
 
4075230    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4075231    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4075232    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4075233    filename _pref
4075233  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4075234    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4075235    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4075236   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4075237   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4075238   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4075239   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4075240   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4075241   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4075242    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4075243    quit;
4075244    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4075245    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4075246    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4075247    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4075248    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4075249    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4075250    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4075251    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075252    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075253    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4075254    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075255    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4075256    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4075257    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4075258    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4075259    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075260    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4075261    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
4075262    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4075263    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075264    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4075265    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4075266    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4075267    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075268    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075269    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4075270    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4075270  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
4075271    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4075272    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4075273    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075274    filename _pref
4075274  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4075275    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4075276    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4075277   +
4075278   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4075279   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4075279  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4075280   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4075281   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4075282   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4075283   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4075284   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4075285    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4075286    quit;
4075287    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4075288    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4075289    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4075290    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4075291    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4075292    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075293    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4075294    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075295    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4075296    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4075297    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075298    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075299    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4075300    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4075301    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4075302    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075303    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4075304    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4075305    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4075306    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075307    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075308    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4075309    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4075310    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075311    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075312    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4075313    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4075313  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
4075314    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4075315    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4075316    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075317    filename _pref
4075317  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4075318    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4075319    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4075320   +
4075321   +
4075322   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4075323   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4075324   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4075325   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4075326   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4075327   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4075328   +
4075329   +
4075330   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4075331   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4075332   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4075333   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4075334   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4075335   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4075336   +
4075337   +
4075338   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4075339   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4075340   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4075341   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4075342   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4075343   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4075344   +
4075345   +
4075346   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4075347   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4075348   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4075349   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4075350   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4075351   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4075352   +
4075353   +
4075354   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4075355   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4075356   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4075357   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4075358   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4075359   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4075360   +
4075361   +
4075362   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4075363   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4075364   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4075365   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4075366   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4075367   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4075368   +
4075369   +
4075370   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4075371   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4075372   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4075373   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4075374   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4075375   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4075376   +
4075377   +
4075378   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4075379   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4075380   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4075381   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4075382   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4075383   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4075384   +if
4075385   +_FILTERNORM1 not in ( '.')
4075386   + and
4075387   +_FILTERNORM2 not in ( '.')
4075388   + and
4075389   +_FILTERNORM3 not in ( '.')
4075390   + and
4075391   +_FILTERNORM4 not in ( '.')
4075392   + and
4075393   +_FILTERNORM5 not in ( '.')
4075394   + and
4075395   +_FILTERNORM6 not in ( '.')
4075396   + and
4075397   +_FILTERNORM7 not in ( ' ')
4075398   + and
4075399   +_FILTERNORM8 not in ( ' ')
4075400   +and
4075401   +( Dt_Customer ne .)
4075402   +and ( Income ne . and (Income<=107000))
4075403   +and ( Kidhome ne .)
4075404   +and ( MntFishProducts ne .)
4075405   +and ( MntFruits ne .)
4075406   +and ( MntGoldProds ne .)
4075407   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4075408   +and ( MntSweetProducts ne .)
4075409   +and ( MntWines ne .)
4075410   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4075411   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4075412   +and ( NumStorePurchases ne .)
4075413   +and ( NumWebPurchases ne .)
4075414   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4075415   +and ( Recency ne .)
4075416   +and ( Teenhome ne .)
4075417   +and ( Year_Birth ne .)
4075418   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
4075419   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4075420   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4075421   +end;
MPRINT(EM_DIAGRAM):   end;
4075422   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4075423   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4075424    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4075425    quit;
4075426    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4075427    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4075428    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4075429    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4075430    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4075431    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075432    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4075433    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075434    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075435    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4075436    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075437    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4075438    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4075439    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4075440    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4075441    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
4075442    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4075443    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
4075444    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4075445    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075446    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075447    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4075448    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4075449    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4075450    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4075451    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4075452    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4075452  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
4075453    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075454    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4075455    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4075456    %macro varDept(fcmpdata=,id=);
4075457    %global nobs&id scoreFlag&id;
4075458    %let scoreFlag&id = 0;
4075459    %if &id=1 or ^&fcmpStart %then %do;
4075460    proc sort data=&fcmpdata out=_temp&id nodupkey;
4075461    by NAME;
4075462    where id=&id and LHS in( %let j=1;
4075463    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4075464    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4075465    "&var" %let j = %eval(&j+1);
4075466    %end;
4075467    );
4075468    run;
4075469    %let dsid = %sysfunc(open(_temp&id));
4075470    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4075471    %let dsid = %sysfunc(close(&dsid));
4075472    %if &&nobs&id %then %do;
4075473    %let scoreFlag&id = 1;
4075474    %let fcmpStart = 1;
4075475    %end;
4075476    %else %let fcmpStart = 0;
4075477    %end;
4075478    %else %do;
4075479    proc sort data=&fcmpdata out=_tempid;
4075480    where id=&id;
4075481    by LHS;
4075482    run;
4075483    %let dsid = %sysfunc(open(_tempid));
4075484    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4075485    %let dsid = %sysfunc(close(&dsid));
4075486    %if ^&&nobs&id %then %do;
4075487    proc datasets lib=work nolist;
4075488    delete _tempid;
4075489    run;
4075490    quit;
4075491    %end;
4075492    %else %do;
4075493    data _tempAll;
4075494    set %let j=%eval(&id-1);
4075495    %do x=1 %to &j;
4075496    %if &&nobs&x %then %do;
4075497    _temp&x %end;
4075498    %end;
4075499    ;
4075500    run;
4075501    proc sql;
4075502    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4075502  ! work._tempid p2 where p.name=p2.lhs;
4075503    quit;
4075504    data _temp&id;
4075505    set _temp&id;
4075506    where LHS ne '' and NAME ne '' and Node ne '';
4075507    run;
4075508    proc datasets lib=work nolist;
4075509    delete _tempAll;
4075510    run;
4075511    %let dsid = %sysfunc(open(_temp&id));
4075512    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4075513    %let dsid = %sysfunc(close(&dsid));
4075514    %if ^&&nobs&id %then %do;
4075515    proc datasets lib=work nolist;
4075516    delete _temp&id;
4075517    run;
4075518    quit;
4075519    %end;
4075520    %else %do;
4075521    %let scoreFlag&id = 1;
4075522    data _temp&id;
4075523    set _temp&id;
4075524    where LHS ne NAME and node ne '';
4075525    run;
4075526    %let dsid = %sysfunc(open(_temp&id));
4075527    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4075528    %let dsid = %sysfunc(close(&dsid));
4075529    %if ^&&nobs&id %then %do;
4075530    proc datasets lib=work nolist;
4075531    delete _temp&id;
4075532    run;
4075533    quit;
4075534    %end;
4075535    %else %do;
4075536    proc sort data=_temp&id nodupkey;
4075537    by LHS NAME;
4075538    run;
4075539    %end;
4075540    %end;
4075541    %end;
4075542    %end;
4075543    %mend varDept;
4075544    %macro optCode(outdata=fcmpdata);
4075545    %global fcmpStart;
4075546    %let fcmpStart = 0;
4075547    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4075548    %let NumNodes=9;
4075549    %do k=1 %to &NumNodes;
4075550    %vardept(fcmpdata=&outdata, id=&k);
4075551    %end;
4075552    %mend optCode;
4075553    %optcode(outData=EMWS8.Ensmbl36_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 146 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
4075554    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4075555    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4075556    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4075557    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075558    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4075559    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4075560    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4075561    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4075562    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4075563    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4075563  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
4075564    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4075565    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4075566    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4075567    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4075568    filename _pref
4075568  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
4075569    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4075570    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
4075571   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4075572   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4075573   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4075574   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4075575   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4075576   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4075577   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4075578   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4075579   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4075580   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4075581   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4075582   +LENGTH _WARN_ $4
4075583   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4075584   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4075585   +
4075586   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4075587   +
4075588   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4075589   +
4075590   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4075591   +
4075592   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4075593   +
4075594   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4075595   +
4075596   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4075597   +
4075598   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4075599   +
4075600   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4075601   +
4075602   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4075603   +
4075604   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4075605   +
4075606   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4075607   +
4075608   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4075609   +
4075610   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4075611   +
4075612   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4075613   +
4075614   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4075615   +
4075616   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4075617   +
4075618   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4075619   +
4075620   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4075621   +
4075622   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4075623   +
4075624   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4075625   +
4075626   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4075627   +
4075628   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4075629   +
4075630   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4075631   +
4075632   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4075633   +
4075634   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4075635   +
4075636   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4075637   +
4075638   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4075639   +
4075640   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4075641   +
4075642   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4075643   +
4075644   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4075645   +
4075646   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4075647   +
4075648   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4075649   +
4075650   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4075651   +
4075652   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4075653   +
4075654   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4075655   +
4075656   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4075657   +
4075658   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4075659   +
4075660   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4075661   +
4075662   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4075663   +
4075664   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4075665   +
4075666   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4075667   +
4075668   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4075669   +
4075670   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4075671   +
4075672   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4075673   +
4075674   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4075675   +
4075676   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4075677   +
4075678   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4075679   +
4075680   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4075681   +
4075682   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4075683   +
4075684   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4075685   +
4075686   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4075687   +
4075688   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4075689   +
4075690   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4075691   +
4075692   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4075693   +
4075694   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4075695   +
4075696   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4075697   +
4075698   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4075699   +
4075700   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4075701   +
4075702   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4075703   +
4075704   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4075705   +
4075706   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4075707   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4075708   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4075709   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4075710   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4075711   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075712   +end;
MPRINT(EM_DIAGRAM):   end;
4075713   +else do;
MPRINT(EM_DIAGRAM):   else do;
4075714   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4075715   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4075716   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4075717   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4075718   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4075719   +   end;
MPRINT(EM_DIAGRAM):   end;
4075720   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4075721   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4075722   +   end;
MPRINT(EM_DIAGRAM):   end;
4075723   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4075724   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4075725   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4075726   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075727   +   end;
MPRINT(EM_DIAGRAM):   end;
4075728   +end;
MPRINT(EM_DIAGRAM):   end;
4075729   +
4075730   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4075731   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4075732   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4075733   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4075734   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4075735   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075736   +end;
MPRINT(EM_DIAGRAM):   end;
4075737   +else do;
MPRINT(EM_DIAGRAM):   else do;
4075738   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4075739   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4075740   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4075741   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4075742   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4075743   +   end;
MPRINT(EM_DIAGRAM):   end;
4075744   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4075745   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4075746   +   end;
MPRINT(EM_DIAGRAM):   end;
4075747   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4075748   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4075749   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4075750   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075751   +   end;
MPRINT(EM_DIAGRAM):   end;
4075752   +end;
MPRINT(EM_DIAGRAM):   end;
4075753   +
4075754   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4075755   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4075756   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4075757   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4075758   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4075759   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075760   +end;
MPRINT(EM_DIAGRAM):   end;
4075761   +else do;
MPRINT(EM_DIAGRAM):   else do;
4075762   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4075763   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4075764   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4075765   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4075766   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4075767   +   end;
MPRINT(EM_DIAGRAM):   end;
4075768   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4075769   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4075770   +   end;
MPRINT(EM_DIAGRAM):   end;
4075771   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4075772   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4075773   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4075774   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075775   +   end;
MPRINT(EM_DIAGRAM):   end;
4075776   +end;
MPRINT(EM_DIAGRAM):   end;
4075777   +
4075778   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4075779   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4075780   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4075781   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4075782   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4075783   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075784   +end;
MPRINT(EM_DIAGRAM):   end;
4075785   +else do;
MPRINT(EM_DIAGRAM):   else do;
4075786   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4075787   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4075788   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4075789   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4075790   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4075791   +   end;
MPRINT(EM_DIAGRAM):   end;
4075792   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4075793   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4075794   +   end;
MPRINT(EM_DIAGRAM):   end;
4075795   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4075796   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4075797   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4075798   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075799   +   end;
MPRINT(EM_DIAGRAM):   end;
4075800   +end;
MPRINT(EM_DIAGRAM):   end;
4075801   +
4075802   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4075803   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4075804   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4075805   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4075806   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4075807   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075808   +end;
MPRINT(EM_DIAGRAM):   end;
4075809   +else do;
MPRINT(EM_DIAGRAM):   else do;
4075810   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4075811   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4075812   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4075813   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4075814   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4075815   +   end;
MPRINT(EM_DIAGRAM):   end;
4075816   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4075817   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4075818   +   end;
MPRINT(EM_DIAGRAM):   end;
4075819   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4075820   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4075821   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4075822   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075823   +   end;
MPRINT(EM_DIAGRAM):   end;
4075824   +end;
MPRINT(EM_DIAGRAM):   end;
4075825   +
4075826   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4075827   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4075828   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4075829   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4075830   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4075831   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075832   +end;
MPRINT(EM_DIAGRAM):   end;
4075833   +else do;
MPRINT(EM_DIAGRAM):   else do;
4075834   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4075835   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4075836   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4075837   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4075838   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4075839   +   end;
MPRINT(EM_DIAGRAM):   end;
4075840   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4075841   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4075842   +   end;
MPRINT(EM_DIAGRAM):   end;
4075843   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4075844   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4075845   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4075846   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075847   +   end;
MPRINT(EM_DIAGRAM):   end;
4075848   +end;
MPRINT(EM_DIAGRAM):   end;
4075849   +
4075850   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4075851   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4075852   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4075853   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4075854   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4075855   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075856   +end;
MPRINT(EM_DIAGRAM):   end;
4075857   +else do;
MPRINT(EM_DIAGRAM):   else do;
4075858   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4075859   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4075860   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4075861   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4075862   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4075863   +   end;
MPRINT(EM_DIAGRAM):   end;
4075864   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4075865   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4075866   +   end;
MPRINT(EM_DIAGRAM):   end;
4075867   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4075868   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4075869   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4075870   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075871   +   end;
MPRINT(EM_DIAGRAM):   end;
4075872   +end;
MPRINT(EM_DIAGRAM):   end;
4075873   +
4075874   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4075875   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4075876   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4075877   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4075878   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4075879   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4075880   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4075881   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4075882   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4075883   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4075884   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4075885   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4075886   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4075887   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075888   +end;
MPRINT(EM_DIAGRAM):   end;
4075889   +else do;
MPRINT(EM_DIAGRAM):   else do;
4075890   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4075891   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4075892   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4075893   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4075894   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4075895   +   end;
MPRINT(EM_DIAGRAM):   end;
4075896   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4075897   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4075898   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4075899   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4075900   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4075901   +   end;
MPRINT(EM_DIAGRAM):   end;
4075902   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4075903   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4075904   +   end;
MPRINT(EM_DIAGRAM):   end;
4075905   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4075906   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4075907   +   end;
MPRINT(EM_DIAGRAM):   end;
4075908   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4075909   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4075910   +   end;
MPRINT(EM_DIAGRAM):   end;
4075911   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4075912   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4075913   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4075914   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4075915   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4075916   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4075917   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075918   +   end;
MPRINT(EM_DIAGRAM):   end;
4075919   +end;
MPRINT(EM_DIAGRAM):   end;
4075920   +
4075921   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4075922   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4075923   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4075924   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4075925   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4075926   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4075927   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4075928   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4075929   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4075930   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4075931   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4075932   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4075933   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4075934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4075935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075936   +end;
MPRINT(EM_DIAGRAM):   end;
4075937   +else do;
MPRINT(EM_DIAGRAM):   else do;
4075938   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4075939   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4075940   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4075941   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4075942   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4075943   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4075944   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4075945   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4075946   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4075947   +         end;
MPRINT(EM_DIAGRAM):   end;
4075948   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4075949   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4075950   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4075951   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4075952   +            end;
MPRINT(EM_DIAGRAM):   end;
4075953   +         end;
MPRINT(EM_DIAGRAM):   end;
4075954   +      end;
MPRINT(EM_DIAGRAM):   end;
4075955   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4075956   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4075957   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4075958   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4075959   +         end;
MPRINT(EM_DIAGRAM):   end;
4075960   +      end;
MPRINT(EM_DIAGRAM):   end;
4075961   +   end;
MPRINT(EM_DIAGRAM):   end;
4075962   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4075963   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4075964   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4075965   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4075966   +      end;
MPRINT(EM_DIAGRAM):   end;
4075967   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4075968   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4075969   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4075970   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4075971   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4075972   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4075973   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4075974   +         end;
MPRINT(EM_DIAGRAM):   end;
4075975   +      end;
MPRINT(EM_DIAGRAM):   end;
4075976   +   end;
MPRINT(EM_DIAGRAM):   end;
4075977   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4075978   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4075979   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4075980   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4075981   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4075982   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4075983   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4075984   +   end;
MPRINT(EM_DIAGRAM):   end;
4075985   +end;
MPRINT(EM_DIAGRAM):   end;
4075986   +
4075987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4075988   +*** Checking missing input Interval
4075989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4075990   +
4075991   +IF NMISS(
4075992   +   AcceptedCmpTotal ,
4075993   +   Age ,
4075994   +   Frq ,
4075995   +   Income ,
4075996   +   Kidhome ,
4075997   +   Mnt ,
4075998   +   MntFishProducts ,
4075999   +   MntFruits ,
4076000   +   MntGoldProds ,
4076001   +   MntMeatProducts ,
4076002   +   MntSweetProducts ,
4076003   +   MntWines ,
4076004   +   MonthsAsCustomer ,
4076005   +   NumCatalogPurchases ,
4076006   +   NumDealsPurchases ,
4076007   +   NumDistPurchases ,
4076008   +   NumStorePurchases ,
4076009   +   NumWebPurchases ,
4076010   +   NumWebVisitsMonth ,
4076011   +   RFMstat ,
4076012   +   RMntFrq ,
4076013   +   Recency ,
4076014   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4076015   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4076016   +
4076017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4076018   +END;
MPRINT(EM_DIAGRAM):   END;
4076019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076020   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4076021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076022   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4076023   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4076024   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4076025   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4076026   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4076027   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4076028   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4076029   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4076030   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4076031   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4076032   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4076033   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4076034   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4076035   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4076036   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4076037   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4076038   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4076039   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4076040   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4076041   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4076042   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4076043   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4076044   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4076045   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4076046   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4076047   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4076048   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4076049   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4076050   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4076051   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4076052   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4076053   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4076054   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4076055   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4076056   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4076057   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4076058   +END;
MPRINT(EM_DIAGRAM):   END;
4076059   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4076060   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4076061   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4076062   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4076063   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4076064   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4076065   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4076066   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4076067   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4076068   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4076069   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4076070   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4076071   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4076072   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4076073   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4076074   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4076075   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4076076   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4076077   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4076078   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4076079   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4076080   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4076081   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4076082   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4076083   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4076084   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4076085   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4076086   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4076087   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4076088   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4076089   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4076090   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4076091   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4076092   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4076093   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4076094   +   ELSE S_NumCatalogPurchases
4076095   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4076096   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4076097   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4076098   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4076099   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4076100   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4076101   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4076102   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4076103   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4076104   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4076105   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4076106   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4076107   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4076108   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4076109   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4076110   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4076111   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4076112   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4076113   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4076114   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4076115   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4076116   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4076117   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4076118   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4076119   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4076120   +END;
MPRINT(EM_DIAGRAM):   END;
4076121   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076122   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4076123   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076124   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076125   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4076126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076127   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076128   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4076129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076130   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4076131   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
4076132   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
4076133   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
4076134   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
4076135   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
4076136   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
4076137   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
4076138   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
4076139   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
4076140   +          +     0.89422627895323 * S_NumDealsPurchases
4076141   +          +    -0.13304125929765 * S_NumDistPurchases
4076142   +          +    -1.04568442570811 * S_NumStorePurchases
4076143   +          +    -0.28677765126751 * S_NumWebPurchases
4076144   +          +      1.2327638737509 * S_NumWebVisitsMonth
4076145   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
4076146   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
4076147   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
4076148   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
4076149   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
4076150   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
4076151   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
4076152   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
4076153   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
4076154   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
4076155   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
4076156   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
4076157   +          +     0.04224590196535 * S_NumDealsPurchases
4076158   +          +     0.76554742700113 * S_NumDistPurchases
4076159   +          +    -0.49155496870812 * S_NumStorePurchases
4076160   +          +     0.59606812744403 * S_NumWebPurchases
4076161   +          +     1.86809286276405 * S_NumWebVisitsMonth
4076162   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
4076163   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
4076164   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
4076165   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
4076166   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
4076167   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
4076168   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
4076169   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
4076170   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
4076171   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
4076172   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
4076173   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
4076174   +          +    -0.04866536993486 * S_NumDealsPurchases
4076175   +          +    -0.53535979020214 * S_NumDistPurchases
4076176   +          +     2.20634071253676 * S_NumStorePurchases
4076177   +          +      0.6164564989007 * S_NumWebPurchases
4076178   +          +    -0.43396314395263 * S_NumWebVisitsMonth
4076179   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
4076180   +        S_RMntFrq  +     2.37293441098349 * S_Recency
4076181   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
4076182   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
4076183   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
4076184   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
4076185   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
4076186   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
4076187   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
4076188   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
4076189   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
4076190   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
4076191   +          +     1.37461255707863 * S_NumDealsPurchases
4076192   +          +    -0.17684775000818 * S_NumDistPurchases
4076193   +          +    -0.62755623855535 * S_NumStorePurchases
4076194   +          +    -1.46551649022657 * S_NumWebPurchases
4076195   +          +     3.35784247878638 * S_NumWebVisitsMonth
4076196   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
4076197   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
4076198   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
4076199   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
4076200   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
4076201   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
4076202   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
4076203   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
4076204   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
4076205   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
4076206   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
4076207   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
4076208   +          +    -0.76256677907121 * S_NumDealsPurchases
4076209   +          +    -0.31591571751692 * S_NumDistPurchases
4076210   +          +      0.0506832614089 * S_NumStorePurchases
4076211   +          +      1.4636796923764 * S_NumWebPurchases
4076212   +          +     0.37743519705036 * S_NumWebVisitsMonth
4076213   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
4076214   +        S_RMntFrq  +     0.16854775832723 * S_Recency
4076215   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
4076216   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
4076217   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
4076218   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
4076219   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
4076220   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
4076221   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
4076222   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
4076223   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
4076224   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
4076225   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
4076226   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
4076227   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
4076228   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
4076229   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
4076230   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
4076231   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
4076232   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
4076233   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
4076234   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
4076235   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
4076236   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
4076237   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
4076238   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
4076239   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
4076240   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
4076241   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
4076242   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
4076243   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
4076244   +          +     0.68641668264565 * Marital_StatusDivorced
4076245   +          +    -0.81586871439732 * Marital_StatusMarried
4076246   +          +     0.63758920518451 * Marital_StatusSingle
4076247   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
4076248   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
4076249   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
4076250   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
4076251   +          +     0.05137560133238 * Marital_StatusDivorced
4076252   +          +    -2.24401993266209 * Marital_StatusMarried
4076253   +          +     1.57359386216115 * Marital_StatusSingle
4076254   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
4076255   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
4076256   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
4076257   +        EducationGraduation  +     0.61492669859334 * EducationMaster
4076258   +          +     -1.0649987815942 * Marital_StatusDivorced
4076259   +          +     0.76065111692388 * Marital_StatusMarried
4076260   +          +    -0.21694149754801 * Marital_StatusSingle
4076261   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
4076262   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
4076263   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
4076264   +        EducationGraduation  +     0.04208620358211 * EducationMaster
4076265   +          +     2.02155453548328 * Marital_StatusDivorced
4076266   +          +    -2.60190649735306 * Marital_StatusMarried
4076267   +          +     1.09149388354927 * Marital_StatusSingle
4076268   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
4076269   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
4076270   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
4076271   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
4076272   +          +     0.66315970650309 * Marital_StatusDivorced
4076273   +          +    -1.20476729758152 * Marital_StatusMarried
4076274   +          +     0.56175027826397 * Marital_StatusSingle
4076275   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
4076276   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
4076277   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
4076278   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
4076279   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
4076280   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
4076281   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
4076282   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
4076283   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4076284   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4076285   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4076286   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4076287   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4076288   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4076289   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4076290   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4076291   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4076292   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4076293   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4076294   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4076295   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4076296   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4076297   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4076298   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4076299   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4076300   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4076301   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4076302   +END;
MPRINT(EM_DIAGRAM):   END;
4076303   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4076304   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4076305   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4076306   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4076307   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4076308   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4076309   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4076310   +END;
MPRINT(EM_DIAGRAM):   END;
4076311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076312   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4076313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076314   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4076315   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
4076316   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
4076317   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
4076318   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
4076319   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
4076320   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
4076321   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
4076322   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
4076323   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
4076324   +          +     1.50005927423985 * S_NumDealsPurchases
4076325   +          +      0.5590536933569 * S_NumDistPurchases
4076326   +          +    -0.61757824339318 * S_NumStorePurchases
4076327   +          +     0.37259686538158 * S_NumWebPurchases
4076328   +          +     2.59725437895564 * S_NumWebVisitsMonth
4076329   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
4076330   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
4076331   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
4076332   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
4076333   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
4076334   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
4076335   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
4076336   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
4076337   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
4076338   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
4076339   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
4076340   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
4076341   +          +    -0.09282222088797 * S_NumDealsPurchases
4076342   +          +     0.10726247938321 * S_NumDistPurchases
4076343   +          +     -1.1235971458527 * S_NumStorePurchases
4076344   +          +    -0.78304387839877 * S_NumWebPurchases
4076345   +          +    -0.44139243179956 * S_NumWebVisitsMonth
4076346   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
4076347   +        S_RMntFrq  +     2.19072220135069 * S_Recency
4076348   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
4076349   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
4076350   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
4076351   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
4076352   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
4076353   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
4076354   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
4076355   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
4076356   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
4076357   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
4076358   +          +     0.35349185459988 * S_NumDealsPurchases
4076359   +          +     0.06853677714859 * S_NumDistPurchases
4076360   +          +    -1.47546012999338 * S_NumStorePurchases
4076361   +          +     0.20926435398916 * S_NumWebPurchases
4076362   +          +    -1.00535683639093 * S_NumWebVisitsMonth
4076363   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
4076364   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
4076365   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
4076366   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
4076367   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
4076368   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
4076369   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
4076370   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
4076371   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
4076372   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
4076373   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
4076374   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
4076375   +          +      0.3873586120272 * S_NumDealsPurchases
4076376   +          +     0.25911651157596 * S_NumDistPurchases
4076377   +          +     1.58922489084287 * S_NumStorePurchases
4076378   +          +     0.49041797743368 * S_NumWebPurchases
4076379   +          +     -1.5425586871929 * S_NumWebVisitsMonth
4076380   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
4076381   +        S_RMntFrq  +     1.03099569333498 * S_Recency
4076382   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
4076383   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
4076384   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
4076385   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
4076386   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
4076387   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
4076388   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
4076389   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
4076390   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
4076391   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
4076392   +          +    -0.60830880287865 * S_NumDealsPurchases
4076393   +          +      0.0745331267194 * S_NumDistPurchases
4076394   +          +    -1.39472448256952 * S_NumStorePurchases
4076395   +          +     1.95372179969087 * S_NumWebPurchases
4076396   +          +    -0.63307356390404 * S_NumWebVisitsMonth
4076397   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
4076398   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
4076399   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
4076400   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
4076401   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
4076402   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
4076403   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
4076404   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
4076405   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
4076406   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
4076407   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
4076408   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
4076409   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
4076410   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
4076411   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
4076412   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
4076413   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
4076414   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
4076415   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
4076416   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
4076417   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
4076418   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
4076419   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
4076420   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
4076421   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
4076422   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
4076423   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
4076424   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
4076425   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
4076426   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
4076427   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
4076428   +          +    -1.33377871643323 * Marital_StatusDivorced
4076429   +          +    -0.87184228840898 * Marital_StatusMarried
4076430   +          +     1.41223186340257 * Marital_StatusSingle
4076431   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
4076432   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
4076433   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
4076434   +        EducationGraduation  +     0.38341272155343 * EducationMaster
4076435   +          +    -0.21479890935233 * Marital_StatusDivorced
4076436   +          +     -0.0025459519579 * Marital_StatusMarried
4076437   +          +     1.33900491702264 * Marital_StatusSingle
4076438   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
4076439   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
4076440   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
4076441   +        EducationGraduation  +     0.60739269725685 * EducationMaster
4076442   +          +    -0.38307267471999 * Marital_StatusDivorced
4076443   +          +     0.97088969451415 * Marital_StatusMarried
4076444   +          +    -0.28578224473381 * Marital_StatusSingle
4076445   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
4076446   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
4076447   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
4076448   +        EducationGraduation  +     0.14160673378252 * EducationMaster
4076449   +          +    -1.42229401093569 * Marital_StatusDivorced
4076450   +          +      0.7234508382397 * Marital_StatusMarried
4076451   +          +    -0.29062202974628 * Marital_StatusSingle
4076452   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
4076453   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
4076454   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
4076455   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
4076456   +          +    -0.99067637207205 * Marital_StatusDivorced
4076457   +          +    -0.50245902142079 * Marital_StatusMarried
4076458   +          +     0.54214494533793 * Marital_StatusSingle
4076459   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
4076460   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
4076461   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
4076462   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
4076463   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
4076464   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
4076465   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
4076466   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
4076467   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4076468   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4076469   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4076470   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4076471   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4076472   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4076473   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4076474   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4076475   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4076476   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4076477   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4076478   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4076479   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4076480   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4076481   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4076482   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4076483   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4076484   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4076485   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4076486   +END;
MPRINT(EM_DIAGRAM):   END;
4076487   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4076488   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4076489   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4076490   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4076491   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4076492   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4076493   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4076494   +END;
MPRINT(EM_DIAGRAM):   END;
4076495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076496   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4076497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076498   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4076499   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
4076500   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
4076501   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
4076502   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
4076503   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
4076504   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
4076505   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
4076506   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
4076507   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
4076508   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
4076509   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
4076510   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
4076511   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
4076512   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
4076513   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
4076514   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
4076515   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
4076516   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
4076517   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
4076518   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
4076519   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
4076520   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
4076521   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
4076522   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
4076523   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
4076524   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
4076525   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
4076526   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
4076527   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
4076528   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
4076529   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
4076530   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
4076531   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
4076532   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
4076533   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
4076534   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
4076535   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
4076536   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
4076537   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
4076538   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
4076539   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
4076540   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
4076541   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
4076542   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
4076543   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
4076544   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
4076545   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
4076546   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
4076547   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4076548   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4076549   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4076550   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4076551   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4076552   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
4076553   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
4076554   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
4076555   +END;
MPRINT(EM_DIAGRAM):   END;
4076556   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4076557   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4076558   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4076559   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4076560   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4076561   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4076562   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4076563   +END;
MPRINT(EM_DIAGRAM):   END;
4076564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076565   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4076566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076567   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4076568   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
4076569   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
4076570   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
4076571   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
4076572   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4076573   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4076574   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4076575   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4076576   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4076577   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4076578   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4076579   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4076580   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4076581   +END;
MPRINT(EM_DIAGRAM):   END;
4076582   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4076583   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4076584   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4076585   +END;
MPRINT(EM_DIAGRAM):   END;
4076586   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4076587   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4076588   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4076589   +END;
MPRINT(EM_DIAGRAM):   END;
4076590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076591   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4076592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4076593   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4076594   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4076595   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4076596   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4076597   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4076598   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4076599   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4076600   +END;
MPRINT(EM_DIAGRAM):   END;
4076601   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4076602   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4076603   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4076604   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4076605    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4076606    quit;
4076607    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4076608    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4076609    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4076610    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
4076611    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4076612    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076613    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4076614    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076615    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076616    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME
CREATOR);
4076617    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076618    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4076619    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4076620    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4076621    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4076622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076623    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
4076624    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
4076625    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4076626    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076627    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076628    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4076629    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4076630    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076631    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076632    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4076633    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4076633  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.
 
4076634    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076635    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4076636    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076637    filename _pref
4076637  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4076638    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4076639    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4076640   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4076641   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4076642   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4076643   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4076644   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4076645   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4076646    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4076647    quit;
4076648    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4076649    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4076650    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4076651    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4076652    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4076653    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076654    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4076655    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076656    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076657    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4076658    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076659    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076660    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4076661    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4076662    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4076663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076664    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4076665    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
4076666    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4076667    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076669    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4076670    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4076671    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076672    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4076673    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4076674    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4076674  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
4076675    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076676    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4076677    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076678    filename _pref
4076678  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4076679    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4076680    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4076681   +
4076682   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4076683   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4076683  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4076684   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4076685   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4076686   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4076687   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4076688   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4076689    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4076690    quit;
4076691    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4076692    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4076693    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4076694    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4076695    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4076696    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4076697    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4076698    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076699    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076700    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4076701    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076702    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076703    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4076704    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4076705    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4076706    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4076707    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4076708    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076709    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4076710    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076711    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4076712    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4076713    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4076714    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076715    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076716    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4076717    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4076717  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
4076718    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076719    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4076720    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076721    filename _pref
4076721  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4076722    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4076723    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4076724   +
4076725   +
4076726   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4076727   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4076728   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4076729   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4076730   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4076731   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4076732   +
4076733   +
4076734   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4076735   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4076736   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4076737   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4076738   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4076739   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4076740   +
4076741   +
4076742   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4076743   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4076744   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4076745   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4076746   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4076747   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4076748   +
4076749   +
4076750   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4076751   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4076752   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4076753   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4076754   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4076755   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4076756   +
4076757   +
4076758   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4076759   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4076760   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4076761   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4076762   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4076763   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4076764   +
4076765   +
4076766   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4076767   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4076768   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4076769   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4076770   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4076771   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4076772   +
4076773   +
4076774   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4076775   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4076776   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4076777   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4076778   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4076779   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4076780   +
4076781   +
4076782   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4076783   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4076784   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4076785   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4076786   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4076787   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4076788   +if
4076789   +_FILTERNORM1 not in ( '.')
4076790   + and
4076791   +_FILTERNORM2 not in ( '.')
4076792   + and
4076793   +_FILTERNORM3 not in ( '.')
4076794   + and
4076795   +_FILTERNORM4 not in ( '.')
4076796   + and
4076797   +_FILTERNORM5 not in ( '.')
4076798   + and
4076799   +_FILTERNORM6 not in ( '.')
4076800   + and
4076801   +_FILTERNORM7 not in ( ' ')
4076802   + and
4076803   +_FILTERNORM8 not in ( ' ')
4076804   +and
4076805   +( Dt_Customer ne .)
4076806   +and ( Income ne . and (Income<=107000))
4076807   +and ( Kidhome ne .)
4076808   +and ( MntFishProducts ne .)
4076809   +and ( MntFruits ne .)
4076810   +and ( MntGoldProds ne .)
4076811   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4076812   +and ( MntSweetProducts ne .)
4076813   +and ( MntWines ne .)
4076814   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4076815   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4076816   +and ( NumStorePurchases ne .)
4076817   +and ( NumWebPurchases ne .)
4076818   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4076819   +and ( Recency ne .)
4076820   +and ( Teenhome ne .)
4076821   +and ( Year_Birth ne .)
4076822   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
4076823   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4076824   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4076825   +end;
MPRINT(EM_DIAGRAM):   end;
4076826   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4076827   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4076828    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4076829    quit;
4076830    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4076831    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4076832    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4076833    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4076834    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4076835    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4076836    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4076837    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076838    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076839    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4076840    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076841    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4076842    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4076843    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4076844    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4076845    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076846    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4076847    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
4076848    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4076849    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076850    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076851    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4076852    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4076853    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4076854    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076855    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4076856    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4076856  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
4076857    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076858    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4076859    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4076860    %macro varDept(fcmpdata=,id=);
4076861    %global nobs&id scoreFlag&id;
4076862    %let scoreFlag&id = 0;
4076863    %if &id=1 or ^&fcmpStart %then %do;
4076864    proc sort data=&fcmpdata out=_temp&id nodupkey;
4076865    by NAME;
4076866    where id=&id and LHS in( %let j=1;
4076867    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4076868    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4076869    "&var" %let j = %eval(&j+1);
4076870    %end;
4076871    );
4076872    run;
4076873    %let dsid = %sysfunc(open(_temp&id));
4076874    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4076875    %let dsid = %sysfunc(close(&dsid));
4076876    %if &&nobs&id %then %do;
4076877    %let scoreFlag&id = 1;
4076878    %let fcmpStart = 1;
4076879    %end;
4076880    %else %let fcmpStart = 0;
4076881    %end;
4076882    %else %do;
4076883    proc sort data=&fcmpdata out=_tempid;
4076884    where id=&id;
4076885    by LHS;
4076886    run;
4076887    %let dsid = %sysfunc(open(_tempid));
4076888    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4076889    %let dsid = %sysfunc(close(&dsid));
4076890    %if ^&&nobs&id %then %do;
4076891    proc datasets lib=work nolist;
4076892    delete _tempid;
4076893    run;
4076894    quit;
4076895    %end;
4076896    %else %do;
4076897    data _tempAll;
4076898    set %let j=%eval(&id-1);
4076899    %do x=1 %to &j;
4076900    %if &&nobs&x %then %do;
4076901    _temp&x %end;
4076902    %end;
4076903    ;
4076904    run;
4076905    proc sql;
4076906    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4076906  ! work._tempid p2 where p.name=p2.lhs;
4076907    quit;
4076908    data _temp&id;
4076909    set _temp&id;
4076910    where LHS ne '' and NAME ne '' and Node ne '';
4076911    run;
4076912    proc datasets lib=work nolist;
4076913    delete _tempAll;
4076914    run;
4076915    %let dsid = %sysfunc(open(_temp&id));
4076916    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4076917    %let dsid = %sysfunc(close(&dsid));
4076918    %if ^&&nobs&id %then %do;
4076919    proc datasets lib=work nolist;
4076920    delete _temp&id;
4076921    run;
4076922    quit;
4076923    %end;
4076924    %else %do;
4076925    %let scoreFlag&id = 1;
4076926    data _temp&id;
4076927    set _temp&id;
4076928    where LHS ne NAME and node ne '';
4076929    run;
4076930    %let dsid = %sysfunc(open(_temp&id));
4076931    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4076932    %let dsid = %sysfunc(close(&dsid));
4076933    %if ^&&nobs&id %then %do;
4076934    proc datasets lib=work nolist;
4076935    delete _temp&id;
4076936    run;
4076937    quit;
4076938    %end;
4076939    %else %do;
4076940    proc sort data=_temp&id nodupkey;
4076941    by LHS NAME;
4076942    run;
4076943    %end;
4076944    %end;
4076945    %end;
4076946    %end;
4076947    %mend varDept;
4076948    %macro optCode(outdata=fcmpdata);
4076949    %global fcmpStart;
4076950    %let fcmpStart = 0;
4076951    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4076952    %let NumNodes=9;
4076953    %do k=1 %to &NumNodes;
4076954    %vardept(fcmpdata=&outdata, id=&k);
4076955    %end;
4076956    %mend optCode;
4076957    %optcode(outData=EMWS8.Ensmbl36_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 188 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.16 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
4076958    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4076959    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4076960    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4076961    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4076962    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4076963    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4076964    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4076965    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4076966    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4076967    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4076967  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
4076968    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
4076969    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4076970    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4076971    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4076972    filename _pref
4076972  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
4076973    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4076974    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
4076975   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4076976   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4076977   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4076978   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4076979   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4076980   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4076981   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4076982   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4076983   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4076984   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4076985   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4076986   +LENGTH _WARN_ $4
4076987   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4076988   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4076989   +
4076990   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4076991   +
4076992   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4076993   +
4076994   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4076995   +
4076996   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4076997   +
4076998   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4076999   +
4077000   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4077001   +
4077002   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4077003   +
4077004   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4077005   +
4077006   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4077007   +
4077008   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4077009   +
4077010   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4077011   +
4077012   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4077013   +
4077014   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4077015   +
4077016   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4077017   +
4077018   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4077019   +
4077020   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4077021   +
4077022   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4077023   +
4077024   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4077025   +
4077026   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4077027   +
4077028   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4077029   +
4077030   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4077031   +
4077032   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4077033   +
4077034   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4077035   +
4077036   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4077037   +
4077038   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4077039   +
4077040   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4077041   +
4077042   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4077043   +
4077044   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4077045   +
4077046   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4077047   +
4077048   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4077049   +
4077050   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4077051   +
4077052   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4077053   +
4077054   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4077055   +
4077056   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4077057   +
4077058   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4077059   +
4077060   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4077061   +
4077062   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4077063   +
4077064   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4077065   +
4077066   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4077067   +
4077068   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4077069   +
4077070   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4077071   +
4077072   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4077073   +
4077074   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4077075   +
4077076   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
4077077   +
4077078   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4077079   +
4077080   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4077081   +
4077082   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4077083   +
4077084   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4077085   +
4077086   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4077087   +
4077088   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4077089   +
4077090   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
4077091   +
4077092   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4077093   +
4077094   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4077095   +
4077096   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4077097   +
4077098   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4077099   +
4077100   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4077101   +
4077102   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4077103   +
4077104   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
4077105   +
4077106   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4077107   +
4077108   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4077109   +
4077110   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4077111   +
4077112   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4077113   +
4077114   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4077115   +
4077116   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4077117   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4077118   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4077119   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4077120   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4077121   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077122   +end;
MPRINT(EM_DIAGRAM):   end;
4077123   +else do;
MPRINT(EM_DIAGRAM):   else do;
4077124   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4077125   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4077126   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4077127   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4077128   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4077129   +   end;
MPRINT(EM_DIAGRAM):   end;
4077130   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4077131   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4077132   +   end;
MPRINT(EM_DIAGRAM):   end;
4077133   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4077134   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4077135   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4077136   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077137   +   end;
MPRINT(EM_DIAGRAM):   end;
4077138   +end;
MPRINT(EM_DIAGRAM):   end;
4077139   +
4077140   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4077141   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4077142   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4077143   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4077144   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4077145   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077146   +end;
MPRINT(EM_DIAGRAM):   end;
4077147   +else do;
MPRINT(EM_DIAGRAM):   else do;
4077148   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4077149   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4077150   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4077151   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4077152   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4077153   +   end;
MPRINT(EM_DIAGRAM):   end;
4077154   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4077155   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4077156   +   end;
MPRINT(EM_DIAGRAM):   end;
4077157   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4077158   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4077159   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4077160   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077161   +   end;
MPRINT(EM_DIAGRAM):   end;
4077162   +end;
MPRINT(EM_DIAGRAM):   end;
4077163   +
4077164   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4077165   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4077166   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4077167   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4077168   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4077169   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077170   +end;
MPRINT(EM_DIAGRAM):   end;
4077171   +else do;
MPRINT(EM_DIAGRAM):   else do;
4077172   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4077173   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4077174   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4077175   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4077176   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4077177   +   end;
MPRINT(EM_DIAGRAM):   end;
4077178   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4077179   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4077180   +   end;
MPRINT(EM_DIAGRAM):   end;
4077181   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4077182   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4077183   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4077184   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077185   +   end;
MPRINT(EM_DIAGRAM):   end;
4077186   +end;
MPRINT(EM_DIAGRAM):   end;
4077187   +
4077188   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4077189   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4077190   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4077191   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4077192   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4077193   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077194   +end;
MPRINT(EM_DIAGRAM):   end;
4077195   +else do;
MPRINT(EM_DIAGRAM):   else do;
4077196   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4077197   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4077198   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4077199   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4077200   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4077201   +   end;
MPRINT(EM_DIAGRAM):   end;
4077202   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4077203   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4077204   +   end;
MPRINT(EM_DIAGRAM):   end;
4077205   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4077206   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4077207   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4077208   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077209   +   end;
MPRINT(EM_DIAGRAM):   end;
4077210   +end;
MPRINT(EM_DIAGRAM):   end;
4077211   +
4077212   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4077213   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4077214   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4077215   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4077216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4077217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077218   +end;
MPRINT(EM_DIAGRAM):   end;
4077219   +else do;
MPRINT(EM_DIAGRAM):   else do;
4077220   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4077221   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4077222   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4077223   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4077224   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4077225   +   end;
MPRINT(EM_DIAGRAM):   end;
4077226   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4077227   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4077228   +   end;
MPRINT(EM_DIAGRAM):   end;
4077229   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4077230   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4077231   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4077232   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077233   +   end;
MPRINT(EM_DIAGRAM):   end;
4077234   +end;
MPRINT(EM_DIAGRAM):   end;
4077235   +
4077236   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4077237   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4077238   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4077239   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4077240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4077241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077242   +end;
MPRINT(EM_DIAGRAM):   end;
4077243   +else do;
MPRINT(EM_DIAGRAM):   else do;
4077244   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4077245   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4077246   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4077247   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4077248   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4077249   +   end;
MPRINT(EM_DIAGRAM):   end;
4077250   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4077251   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4077252   +   end;
MPRINT(EM_DIAGRAM):   end;
4077253   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4077254   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4077255   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4077256   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077257   +   end;
MPRINT(EM_DIAGRAM):   end;
4077258   +end;
MPRINT(EM_DIAGRAM):   end;
4077259   +
4077260   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4077261   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4077262   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4077263   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4077264   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4077265   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077266   +end;
MPRINT(EM_DIAGRAM):   end;
4077267   +else do;
MPRINT(EM_DIAGRAM):   else do;
4077268   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4077269   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4077270   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4077271   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4077272   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4077273   +   end;
MPRINT(EM_DIAGRAM):   end;
4077274   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4077275   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4077276   +   end;
MPRINT(EM_DIAGRAM):   end;
4077277   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4077278   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4077279   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4077280   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077281   +   end;
MPRINT(EM_DIAGRAM):   end;
4077282   +end;
MPRINT(EM_DIAGRAM):   end;
4077283   +
4077284   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4077285   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
4077286   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4077287   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4077288   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4077289   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4077290   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4077291   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4077292   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4077293   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4077294   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4077295   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4077296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4077297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077298   +end;
MPRINT(EM_DIAGRAM):   end;
4077299   +else do;
MPRINT(EM_DIAGRAM):   else do;
4077300   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4077301   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4077302   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4077303   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4077304   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4077305   +   end;
MPRINT(EM_DIAGRAM):   end;
4077306   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4077307   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4077308   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4077309   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4077310   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4077311   +   end;
MPRINT(EM_DIAGRAM):   end;
4077312   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4077313   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4077314   +   end;
MPRINT(EM_DIAGRAM):   end;
4077315   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4077316   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4077317   +   end;
MPRINT(EM_DIAGRAM):   end;
4077318   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4077319   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4077320   +   end;
MPRINT(EM_DIAGRAM):   end;
4077321   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4077322   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4077323   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4077324   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4077325   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4077326   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4077327   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077328   +   end;
MPRINT(EM_DIAGRAM):   end;
4077329   +end;
MPRINT(EM_DIAGRAM):   end;
4077330   +
4077331   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4077332   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4077333   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
4077334   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4077335   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4077336   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4077337   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4077338   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4077339   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4077340   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4077341   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4077342   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4077343   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4077344   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4077345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077346   +end;
MPRINT(EM_DIAGRAM):   end;
4077347   +else do;
MPRINT(EM_DIAGRAM):   else do;
4077348   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4077349   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4077350   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4077351   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4077352   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4077353   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4077354   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4077355   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4077356   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4077357   +         end;
MPRINT(EM_DIAGRAM):   end;
4077358   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4077359   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4077360   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4077361   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4077362   +            end;
MPRINT(EM_DIAGRAM):   end;
4077363   +         end;
MPRINT(EM_DIAGRAM):   end;
4077364   +      end;
MPRINT(EM_DIAGRAM):   end;
4077365   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4077366   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4077367   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4077368   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4077369   +         end;
MPRINT(EM_DIAGRAM):   end;
4077370   +      end;
MPRINT(EM_DIAGRAM):   end;
4077371   +   end;
MPRINT(EM_DIAGRAM):   end;
4077372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4077373   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4077374   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4077375   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4077376   +      end;
MPRINT(EM_DIAGRAM):   end;
4077377   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4077378   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4077379   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4077380   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4077381   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4077382   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4077383   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4077384   +         end;
MPRINT(EM_DIAGRAM):   end;
4077385   +      end;
MPRINT(EM_DIAGRAM):   end;
4077386   +   end;
MPRINT(EM_DIAGRAM):   end;
4077387   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4077388   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4077389   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4077390   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4077391   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4077392   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4077393   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077394   +   end;
MPRINT(EM_DIAGRAM):   end;
4077395   +end;
MPRINT(EM_DIAGRAM):   end;
4077396   +
4077397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4077398   +*** Checking missing input Interval
4077399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4077400   +
4077401   +IF NMISS(
4077402   +   AcceptedCmpTotal ,
4077403   +   Age ,
4077404   +   Frq ,
4077405   +   Income ,
4077406   +   Kidhome ,
4077407   +   Mnt ,
4077408   +   MntFishProducts ,
4077409   +   MntFruits ,
4077410   +   MntGoldProds ,
4077411   +   MntMeatProducts ,
4077412   +   MntSweetProducts ,
4077413   +   MntWines ,
4077414   +   MonthsAsCustomer ,
4077415   +   NumCatalogPurchases ,
4077416   +   NumDealsPurchases ,
4077417   +   NumDistPurchases ,
4077418   +   NumStorePurchases ,
4077419   +   NumWebPurchases ,
4077420   +   NumWebVisitsMonth ,
4077421   +   RFMstat ,
4077422   +   RMntFrq ,
4077423   +   Recency ,
4077424   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
4077425   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4077426   +
4077427   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4077428   +END;
MPRINT(EM_DIAGRAM):   END;
4077429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4077430   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4077431   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4077432   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4077433   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4077434   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4077435   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4077436   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4077437   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4077438   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4077439   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4077440   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4077441   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4077442   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4077443   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4077444   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4077445   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4077446   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4077447   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4077448   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4077449   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4077450   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4077451   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4077452   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4077453   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4077454   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4077455   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4077456   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4077457   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4077458   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4077459   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4077460   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4077461   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4077462   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4077463   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4077464   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4077465   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4077466   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4077467   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4077468   +END;
MPRINT(EM_DIAGRAM):   END;
4077469   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4077470   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4077471   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4077472   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
4077473   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4077474   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4077475   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4077476   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4077477   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4077478   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4077479   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4077480   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4077481   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4077482   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4077483   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4077484   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4077485   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
4077486   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4077487   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4077488   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4077489   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4077490   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4077491   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
4077492   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4077493   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4077494   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
4077495   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4077496   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4077497   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
4077498   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4077499   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4077500   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4077501   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4077502   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
4077503   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4077504   +   ELSE S_NumCatalogPurchases
4077505   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4077506   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
4077507   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4077508   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4077509   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
4077510   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4077511   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4077512   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
4077513   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4077514   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4077515   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
4077516   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4077517   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4077518   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
4077519   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4077520   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4077521   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
4077522   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4077523   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4077524   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4077525   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4077526   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4077527   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4077528   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4077529   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4077530   +END;
MPRINT(EM_DIAGRAM):   END;
4077531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4077532   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4077533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4077534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4077535   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4077536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4077537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4077538   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4077539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4077540   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4077541   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
4077542   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
4077543   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
4077544   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
4077545   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
4077546   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
4077547   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
4077548   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
4077549   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
4077550   +          +     1.17276395296242 * S_NumDealsPurchases
4077551   +          +     0.26632768295477 * S_NumDistPurchases
4077552   +          +    -1.26575615903579 * S_NumStorePurchases
4077553   +          +    -0.95316107557927 * S_NumWebPurchases
4077554   +          +     1.01828574356487 * S_NumWebVisitsMonth
4077555   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
4077556   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
4077557   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 *
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 *
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts +
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 *
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 *
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 *
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 *
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq +
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
4077558   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
4077559   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
4077560   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
4077561   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
4077562   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
4077563   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
4077564   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
4077565   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
4077566   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
4077567   +          +     1.14485571201233 * S_NumDealsPurchases
4077568   +          +     0.21414266588987 * S_NumDistPurchases
4077569   +          +    -0.10530090074297 * S_NumStorePurchases
4077570   +          +    -0.41712321238458 * S_NumWebPurchases
4077571   +          +    -0.99760766791108 * S_NumWebVisitsMonth
4077572   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
4077573   +        S_RMntFrq  +     1.10040128548883 * S_Recency
The SAS System
 
4077574   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 *
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 *
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts +
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 *
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 *
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 *
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 *
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq +
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
4077575   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
4077576   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
4077577   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
4077578   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
4077579   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
4077580   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
4077581   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
4077582   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
4077583   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
4077584   +          +      0.7196418967437 * S_NumDealsPurchases
4077585   +          +     0.69035286374177 * S_NumDistPurchases
4077586   +          +     0.38027656631135 * S_NumStorePurchases
4077587   +          +    -0.18878358997924 * S_NumWebPurchases
4077588   +          +     1.61962062004798 * S_NumWebVisitsMonth
4077589   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
4077590   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
4077591   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 *
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 *
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts +
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 *
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 *
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 *
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 *
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq +
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
4077592   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
4077593   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
4077594   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
4077595   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
4077596   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
4077597   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
4077598   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
4077599   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
4077600   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
4077601   +          +    -0.00642902007204 * S_NumDealsPurchases
4077602   +          +     0.29785069480367 * S_NumDistPurchases
4077603   +          +    -0.42243322063147 * S_NumStorePurchases
4077604   +          +     0.54880896338383 * S_NumWebPurchases
4077605   +          +    -0.12525846016886 * S_NumWebVisitsMonth
4077606   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
4077607   +        S_RMntFrq  +     0.10252211581449 * S_Recency
4077608   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 *
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 *
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts +
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 *
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines +
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases +
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases +
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases +
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 *
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
4077609   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
4077610   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
4077611   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
4077612   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
4077613   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
4077614   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
4077615   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
4077616   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
4077617   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
4077618   +          +    -0.48404738328225 * S_NumDealsPurchases
4077619   +          +    -0.02464180457879 * S_NumDistPurchases
4077620   +          +     1.17201831082067 * S_NumStorePurchases
4077621   +          +     0.57453655167516 * S_NumWebPurchases
4077622   +          +    -1.94417019790248 * S_NumWebVisitsMonth
4077623   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
4077624   +        S_RMntFrq  +      1.6169916658132 * S_Recency
4077625   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 *
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 *
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts +
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 *
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 *
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 *
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 *
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq +
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
4077626   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
4077627   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
4077628   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
4077629   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
4077630   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
4077631   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
4077632   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
4077633   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
4077634   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
4077635   +          +    -1.49850531967483 * S_NumDealsPurchases
4077636   +          +    -0.82105466264223 * S_NumDistPurchases
4077637   +          +     0.29984603642824 * S_NumStorePurchases
4077638   +          +     0.06557123721611 * S_NumWebPurchases
4077639   +          +     1.04754749365002 * S_NumWebVisitsMonth
4077640   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
4077641   +        S_RMntFrq  +     0.12396789666359 * S_Recency
4077642   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 *
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 *
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts +
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 *
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 *
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 *
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 *
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq +
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
4077643   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
4077644   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
4077645   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
4077646   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
4077647   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 *
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 +
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 *
HigherEducationBinary0 ;
4077648   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
4077649   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
4077650   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
4077651   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
4077652   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 *
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 +
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 *
HigherEducationBinary0 ;
4077653   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
4077654   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
4077655   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
4077656   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
4077657   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 +
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 *
HigherEducationBinary0 ;
4077658   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
4077659   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
4077660   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
4077661   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
4077662   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 *
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 +
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 *
HigherEducationBinary0 ;
4077663   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
4077664   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
4077665   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
4077666   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
4077667   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 *
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 +
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 *
HigherEducationBinary0 ;
4077668   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
4077669   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
4077670   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
4077671   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
4077672   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 +
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 *
HigherEducationBinary0 ;
4077673   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
4077674   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
4077675   +        EducationGraduation  +     0.07595631354847 * EducationMaster
4077676   +          +     0.24583509957712 * Marital_StatusDivorced
4077677   +          +    -0.22681931588361 * Marital_StatusMarried
4077678   +          +    -0.12924106229536 * Marital_StatusSingle
4077679   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried +
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
4077680   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
4077681   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
4077682   +        EducationGraduation  +     0.23015089246655 * EducationMaster
4077683   +          +    -0.12585334311068 * Marital_StatusDivorced
4077684   +          +    -0.20835502467207 * Marital_StatusMarried
4077685   +          +    -0.13839534449368 * Marital_StatusSingle
4077686   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle +
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 *
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 *
Marital_StatusTogether ;
4077687   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
4077688   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
4077689   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
4077690   +          +     0.35106363238113 * Marital_StatusDivorced
4077691   +          +     -1.3414808583918 * Marital_StatusMarried
4077692   +          +     1.40835320798486 * Marital_StatusSingle
4077693   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle +
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation +
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced +
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle +
-1.26805917396788 * Marital_StatusTogether ;
4077694   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
4077695   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
4077696   +        EducationGraduation  +      0.1746658332011 * EducationMaster
4077697   +          +     0.48174546958393 * Marital_StatusDivorced
4077698   +          +    -0.41416978858191 * Marital_StatusMarried
4077699   +          +    -0.23376801546265 * Marital_StatusSingle
4077700   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle +
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 *
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 *
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 *
Marital_StatusTogether ;
4077701   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
4077702   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
4077703   +        EducationGraduation  +     0.68875064631577 * EducationMaster
4077704   +          +    -0.67557643774246 * Marital_StatusDivorced
4077705   +          +     1.63844045917367 * Marital_StatusMarried
4077706   +          +    -0.70320960247699 * Marital_StatusSingle
4077707   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle +
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 *
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 *
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 *
Marital_StatusTogether ;
4077708   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
4077709   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
4077710   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
4077711   +          +    -0.11371453086883 * Marital_StatusDivorced
4077712   +          +    -0.34226997176291 * Marital_StatusMarried
4077713   +          +    -1.01568676685754 * Marital_StatusSingle
4077714   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle +
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation +
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced +
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle +
-0.07673228755579 * Marital_StatusTogether ;
4077715   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
4077716   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
4077717   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
4077718   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
4077719   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
4077720   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
4077721   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
4077722   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
4077723   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
4077724   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4077725   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4077726   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4077727   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4077728   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4077729   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4077730   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4077731   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4077732   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4077733   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4077734   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4077735   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4077736   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4077737   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
4077738   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
4077739   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4077740   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4077741   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4077742   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4077743   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4077744   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4077745   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
4077746   +END;
MPRINT(EM_DIAGRAM):   END;
4077747   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4077748   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4077749   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4077750   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4077751   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4077752   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4077753   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4077754   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
4077755   +END;
MPRINT(EM_DIAGRAM):   END;
4077756   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4077757   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4077758   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4077759   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4077760   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
4077761   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
4077762   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
4077763   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
4077764   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
4077765   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
4077766   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
4077767   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
4077768   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
4077769   +          +    -0.87259051567474 * S_NumDealsPurchases
4077770   +          +    -0.36454149529139 * S_NumDistPurchases
4077771   +          +     0.12447759925061 * S_NumStorePurchases
4077772   +          +    -1.08133487947367 * S_NumWebPurchases
4077773   +          +    -0.49882157745454 * S_NumWebVisitsMonth
4077774   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
4077775   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
4077776   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 *
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 *
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts +
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 *
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 *
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 *
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 *
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq +
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
4077777   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
4077778   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
4077779   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
4077780   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
4077781   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
4077782   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
4077783   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
4077784   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
4077785   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
4077786   +          +     2.23121497416403 * S_NumDealsPurchases
4077787   +          +    -0.48674842191071 * S_NumDistPurchases
4077788   +          +     1.77510728607544 * S_NumStorePurchases
4077789   +          +     0.14647433155436 * S_NumWebPurchases
4077790   +          +    -0.95892686924419 * S_NumWebVisitsMonth
4077791   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
4077792   +        S_RMntFrq  +     2.46497777428475 * S_Recency
4077793   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 *
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 *
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts +
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 *
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 *
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 *
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 *
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq +
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
4077794   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
4077795   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
4077796   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
4077797   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
4077798   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
4077799   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
4077800   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
4077801   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
4077802   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
4077803   +          +     0.14338855349611 * S_NumDealsPurchases
4077804   +          +    -2.21071010829235 * S_NumDistPurchases
4077805   +          +    -0.21795889348002 * S_NumStorePurchases
4077806   +          +     1.98825087883535 * S_NumWebPurchases
4077807   +          +     1.02482442531149 * S_NumWebVisitsMonth
4077808   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
4077809   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
4077810   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 *
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 *
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts +
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 *
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 *
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 *
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 *
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq +
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
4077811   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
4077812   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
4077813   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
4077814   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
4077815   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
4077816   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
4077817   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
4077818   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
4077819   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
4077820   +          +     0.30041205661012 * S_NumDealsPurchases
4077821   +          +    -0.63499849986918 * S_NumDistPurchases
4077822   +          +    -0.34155713433714 * S_NumStorePurchases
4077823   +          +    -1.14183354933936 * S_NumWebPurchases
4077824   +          +    -0.42681980262973 * S_NumWebVisitsMonth
4077825   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
4077826   +        S_RMntFrq  +     1.25852246467612 * S_Recency
4077827   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 *
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 *
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts +
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 *
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 *
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 *
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 *
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq +
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
4077828   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
4077829   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
4077830   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
4077831   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
4077832   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
4077833   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
4077834   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
4077835   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
4077836   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
4077837   +          +    -0.21237915559831 * S_NumDealsPurchases
4077838   +          +     0.48256923764182 * S_NumDistPurchases
4077839   +          +    -0.45553093140641 * S_NumStorePurchases
4077840   +          +      0.5593655963659 * S_NumWebPurchases
4077841   +          +     0.27943768691188 * S_NumWebVisitsMonth
4077842   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
4077843   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
4077844   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 *
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome +
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 *
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts +
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 *
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 *
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 *
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 *
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq +
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
4077845   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
4077846   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
4077847   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
4077848   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
4077849   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
4077850   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
4077851   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
4077852   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
4077853   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
4077854   +          +     2.38967021388062 * S_NumDealsPurchases
4077855   +          +    -0.97722398866481 * S_NumDistPurchases
4077856   +          +     1.57612333191312 * S_NumStorePurchases
4077857   +          +    -0.75968679115983 * S_NumWebPurchases
4077858   +          +    -0.64207187757251 * S_NumWebVisitsMonth
4077859   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
4077860   +        S_RMntFrq  +     1.71313869798331 * S_Recency
4077861   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 *
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome +
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 *
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts +
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 *
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 *
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 *
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 *
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq +
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
4077862   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
4077863   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
4077864   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
4077865   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
4077866   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 +
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 *
HigherEducationBinary0 ;
4077867   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
4077868   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
4077869   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
4077870   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
4077871   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 *
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 +
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 *
HigherEducationBinary0 ;
4077872   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
4077873   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
4077874   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
4077875   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
4077876   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 *
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 +
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 *
HigherEducationBinary0 ;
4077877   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
4077878   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
4077879   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
4077880   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
4077881   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 *
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 +
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 *
HigherEducationBinary0 ;
4077882   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
4077883   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
4077884   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
4077885   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
4077886   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 *
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 +
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 *
HigherEducationBinary0 ;
4077887   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
4077888   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
4077889   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
4077890   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
4077891   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 *
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 +
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 *
HigherEducationBinary0 ;
4077892   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
4077893   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
4077894   +        EducationGraduation  +      0.1073450284316 * EducationMaster
4077895   +          +     0.96470902298142 * Marital_StatusDivorced
4077896   +          +     0.94805959268314 * Marital_StatusMarried
4077897   +          +     -0.6523948769616 * Marital_StatusSingle
4077898   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle +
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 *
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 *
Marital_StatusTogether ;
4077899   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
4077900   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
4077901   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
4077902   +          +      0.3918249505531 * Marital_StatusDivorced
4077903   +          +    -0.00968091979586 * Marital_StatusMarried
4077904   +          +     0.84615379885071 * Marital_StatusSingle
4077905   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle +
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation +
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced +
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle +
0.34817324570682 * Marital_StatusTogether ;
4077906   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
4077907   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
4077908   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
4077909   +          +     1.14335160313191 * Marital_StatusDivorced
4077910   +          +     0.50580517192175 * Marital_StatusMarried
4077911   +          +     0.17264295020921 * Marital_StatusSingle
4077912   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle +
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 *
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 *
Marital_StatusTogether ;
4077913   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
4077914   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
4077915   +        EducationGraduation  +     1.95818378342783 * EducationMaster
4077916   +          +    -0.11238504444225 * Marital_StatusDivorced
4077917   +          +    -0.81348274043749 * Marital_StatusMarried
4077918   +          +     0.46075415610001 * Marital_StatusSingle
4077919   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle +
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 *
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 *
Marital_StatusTogether ;
4077920   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
4077921   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
4077922   +        EducationGraduation  +     0.08396135672504 * EducationMaster
4077923   +          +    -0.46342068701431 * Marital_StatusDivorced
4077924   +          +    -0.41667845270204 * Marital_StatusMarried
4077925   +          +    -0.47166707496281 * Marital_StatusSingle
4077926   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle +
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 *
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 *
Marital_StatusTogether ;
4077927   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
4077928   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
4077929   +        EducationGraduation  +     0.36656103863186 * EducationMaster
4077930   +          +    -0.45376613787812 * Marital_StatusDivorced
4077931   +          +     0.01337046049801 * Marital_StatusMarried
4077932   +          +    -0.92811489484121 * Marital_StatusSingle
4077933   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle +
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 *
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 *
Marital_StatusTogether ;
4077934   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
4077935   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
4077936   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
4077937   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
4077938   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
4077939   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
4077940   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
4077941   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
4077942   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
4077943   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4077944   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4077945   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4077946   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4077947   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4077948   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4077949   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4077950   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4077951   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4077952   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4077953   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4077954   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4077955   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4077956   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
4077957   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
4077958   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4077959   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4077960   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4077961   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4077962   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4077963   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4077964   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
4077965   +END;
MPRINT(EM_DIAGRAM):   END;
4077966   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4077967   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4077968   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4077969   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4077970   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4077971   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4077972   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4077973   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
4077974   +END;
MPRINT(EM_DIAGRAM):   END;
4077975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4077976   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4077977   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4077978   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4077979   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
4077980   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
4077981   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
4077982   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 +
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 +
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
4077983   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
4077984   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
4077985   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
4077986   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 +
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 +
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
4077987   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
4077988   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
4077989   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
4077990   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 +
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 +
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
4077991   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
4077992   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
4077993   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
4077994   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 +
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 +
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
4077995   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
4077996   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
4077997   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
4077998   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 +
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 +
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
4077999   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
4078000   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
4078001   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
4078002   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 +
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 +
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
4078003   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
4078004   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
4078005   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
4078006   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 +
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
4078007   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
4078008   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
4078009   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
4078010   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 +
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
4078011   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
4078012   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
4078013   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
4078014   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 +
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
4078015   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
4078016   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
4078017   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
4078018   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 +
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
4078019   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
4078020   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
4078021   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
4078022   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 +
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
4078023   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
4078024   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
4078025   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
4078026   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 +
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
4078027   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
4078028   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
4078029   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
4078030   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
4078031   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
4078032   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
4078033   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
4078034   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
4078035   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
4078036   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4078037   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4078038   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4078039   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4078040   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4078041   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4078042   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4078043   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4078044   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4078045   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4078046   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4078047   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
4078048   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
4078049   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
4078050   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
4078051   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4078052   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4078053   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4078054   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4078055   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4078056   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
4078057   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
4078058   +END;
MPRINT(EM_DIAGRAM):   END;
4078059   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4078060   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4078061   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4078062   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4078063   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4078064   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4078065   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4078066   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
4078067   +END;
MPRINT(EM_DIAGRAM):   END;
4078068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4078069   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4078070   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4078071   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4078072   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
4078073   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
4078074   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
4078075   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 +
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 +
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
4078076   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
4078077   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4078078   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4078079   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4078080   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4078081   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4078082   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4078083   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4078084   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4078085   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4078086   +END;
MPRINT(EM_DIAGRAM):   END;
4078087   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4078088   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4078089   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4078090   +END;
MPRINT(EM_DIAGRAM):   END;
4078091   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4078092   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4078093   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4078094   +END;
MPRINT(EM_DIAGRAM):   END;
4078095   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4078096   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4078097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4078098   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4078099   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4078100   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4078101   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4078102   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4078103   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4078104   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4078105   +END;
MPRINT(EM_DIAGRAM):   END;
4078106   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4078107   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4078108   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4078109   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4078110    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4078111    quit;
4078112    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4078113    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4078114    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4078115    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
4078116    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4078117    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078118    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4078119    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078120    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4078121    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME
CREATOR);
4078122    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078123    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078124    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4078125    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4078126    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4078127    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078128    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
4078129    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4078130    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4078131    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078132    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078133    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4078134    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4078135    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078136    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078137    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4078138    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4078138  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3727 rows and 5 columns.
 
4078139    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4078140    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4078141    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3727 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 3727 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078142    filename _pref
4078142  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4078143    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4078144    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4078145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4078146   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4078147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4078148   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4078149   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4078150   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4078151    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4078152    quit;
4078153    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4078154    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4078155    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4078156    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4078157    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4078158    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078159    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4078160    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078161    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078162    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4078163    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078164    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078165    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4078166    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4078167    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4078168    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078169    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4078170    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
4078171    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4078172    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078173    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078174    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4078175    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4078176    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078177    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078178    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4078179    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4078179  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
4078180    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078181    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4078182    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 3731 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4078183    filename _pref
4078183  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4078184    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4078185    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4078186   +
4078187   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4078188   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4078188  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4078189   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4078190   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4078191   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4078192   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4078193   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4078194    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4078195    quit;
4078196    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4078197    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4078198    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4078199    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4078200    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4078201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078202    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4078203    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078204    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078205    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4078206    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078207    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4078208    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4078209    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4078210    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4078211    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078212    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4078213    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078214    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4078215    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078216    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078217    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4078218    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4078219    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078220    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078221    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4078222    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4078222  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
4078223    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4078224    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4078225    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 3770 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078226    filename _pref
4078226  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4078227    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4078228    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4078229   +
4078230   +
4078231   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4078232   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4078233   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4078234   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4078235   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4078236   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4078237   +
4078238   +
4078239   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4078240   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4078241   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4078242   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4078243   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4078244   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4078245   +
4078246   +
4078247   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4078248   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4078249   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4078250   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4078251   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4078252   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4078253   +
4078254   +
4078255   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4078256   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4078257   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4078258   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4078259   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4078260   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4078261   +
4078262   +
4078263   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4078264   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4078265   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4078266   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4078267   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4078268   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4078269   +
4078270   +
4078271   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4078272   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4078273   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4078274   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4078275   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4078276   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4078277   +
4078278   +
4078279   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4078280   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4078281   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4078282   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4078283   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4078284   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4078285   +
4078286   +
4078287   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4078288   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4078289   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4078290   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4078291   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4078292   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4078293   +if
4078294   +_FILTERNORM1 not in ( '.')
4078295   + and
4078296   +_FILTERNORM2 not in ( '.')
4078297   + and
4078298   +_FILTERNORM3 not in ( '.')
4078299   + and
4078300   +_FILTERNORM4 not in ( '.')
4078301   + and
4078302   +_FILTERNORM5 not in ( '.')
4078303   + and
4078304   +_FILTERNORM6 not in ( '.')
4078305   + and
4078306   +_FILTERNORM7 not in ( ' ')
4078307   + and
4078308   +_FILTERNORM8 not in ( ' ')
4078309   +and
4078310   +( Dt_Customer ne .)
4078311   +and ( Income ne . and (Income<=107000))
4078312   +and ( Kidhome ne .)
4078313   +and ( MntFishProducts ne .)
4078314   +and ( MntFruits ne .)
4078315   +and ( MntGoldProds ne .)
4078316   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4078317   +and ( MntSweetProducts ne .)
4078318   +and ( MntWines ne .)
4078319   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4078320   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4078321   +and ( NumStorePurchases ne .)
4078322   +and ( NumWebPurchases ne .)
4078323   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4078324   +and ( Recency ne .)
4078325   +and ( Teenhome ne .)
4078326   +and ( Year_Birth ne .)
4078327   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
4078328   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4078329   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4078330   +end;
MPRINT(EM_DIAGRAM):   end;
4078331   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4078332   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4078333    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
4078334    quit;
4078335    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4078336    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4078337    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4078338    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4078339    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4078340    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078341    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4078342    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078343    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4078344    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4078345    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078346    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078347    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4078348    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4078349    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4078350    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078351    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4078352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
4078353    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4078354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078355    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078356    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4078357    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4078358    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078359    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078360    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4078361    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4078361  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
4078362    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4078363    proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl36_FCMP data=_tempx;
4078364    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL36_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL36_FCMP has 3836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078365    %macro varDept(fcmpdata=,id=);
4078366    %global nobs&id scoreFlag&id;
4078367    %let scoreFlag&id = 0;
4078368    %if &id=1 or ^&fcmpStart %then %do;
4078369    proc sort data=&fcmpdata out=_temp&id nodupkey;
4078370    by NAME;
4078371    where id=&id and LHS in( %let j=1;
4078372    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4078373    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4078374    "&var" %let j = %eval(&j+1);
4078375    %end;
4078376    );
4078377    run;
4078378    %let dsid = %sysfunc(open(_temp&id));
4078379    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4078380    %let dsid = %sysfunc(close(&dsid));
4078381    %if &&nobs&id %then %do;
4078382    %let scoreFlag&id = 1;
4078383    %let fcmpStart = 1;
4078384    %end;
4078385    %else %let fcmpStart = 0;
4078386    %end;
4078387    %else %do;
4078388    proc sort data=&fcmpdata out=_tempid;
4078389    where id=&id;
4078390    by LHS;
4078391    run;
4078392    %let dsid = %sysfunc(open(_tempid));
4078393    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4078394    %let dsid = %sysfunc(close(&dsid));
4078395    %if ^&&nobs&id %then %do;
4078396    proc datasets lib=work nolist;
4078397    delete _tempid;
4078398    run;
4078399    quit;
4078400    %end;
4078401    %else %do;
4078402    data _tempAll;
4078403    set %let j=%eval(&id-1);
4078404    %do x=1 %to &j;
4078405    %if &&nobs&x %then %do;
4078406    _temp&x %end;
4078407    %end;
4078408    ;
4078409    run;
4078410    proc sql;
4078411    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4078411  ! work._tempid p2 where p.name=p2.lhs;
4078412    quit;
4078413    data _temp&id;
4078414    set _temp&id;
4078415    where LHS ne '' and NAME ne '' and Node ne '';
4078416    run;
4078417    proc datasets lib=work nolist;
4078418    delete _tempAll;
4078419    run;
4078420    %let dsid = %sysfunc(open(_temp&id));
4078421    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4078422    %let dsid = %sysfunc(close(&dsid));
4078423    %if ^&&nobs&id %then %do;
4078424    proc datasets lib=work nolist;
4078425    delete _temp&id;
4078426    run;
4078427    quit;
4078428    %end;
4078429    %else %do;
4078430    %let scoreFlag&id = 1;
4078431    data _temp&id;
4078432    set _temp&id;
4078433    where LHS ne NAME and node ne '';
4078434    run;
4078435    %let dsid = %sysfunc(open(_temp&id));
4078436    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4078437    %let dsid = %sysfunc(close(&dsid));
4078438    %if ^&&nobs&id %then %do;
4078439    proc datasets lib=work nolist;
4078440    delete _temp&id;
4078441    run;
4078442    quit;
4078443    %end;
4078444    %else %do;
4078445    proc sort data=_temp&id nodupkey;
4078446    by LHS NAME;
4078447    run;
4078448    %end;
4078449    %end;
4078450    %end;
4078451    %end;
4078452    %mend varDept;
4078453    %macro optCode(outdata=fcmpdata);
4078454    %global fcmpStart;
4078455    %let fcmpStart = 0;
4078456    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4078457    %let NumNodes=9;
4078458    %do k=1 %to &NumNodes;
4078459    %vardept(fcmpdata=&outdata, id=&k);
4078460    %end;
4078461    %mend optCode;
4078462    %optcode(outData=EMWS8.Ensmbl36_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 197 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 142 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 55 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 59 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 98 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl36_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
4078463    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4078464    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4078465    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4078466    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078467    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4078468    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4078469    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4078470    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078471    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4078472    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4078472  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
4078473    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4078474    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4078475    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4078476    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078477    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
4078478    * Ensmbl36: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing metadata for TRAIN data;
4078479    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL36_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl36_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl36_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl36_TRAIN out=WORK.M1RYX1LW noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RYX1LW;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1RYX1LW(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RYX1LW;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1RYX1LW;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0XU3FR1 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0XU3FR1;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0XU3FR1;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M14TUK63(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0XU3FR1;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0XU3FR1;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0XU3FR1;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0XU3FR1;
MPRINT(EMADVISECOLUMNS):   set WORK.M0XU3FR1;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl36";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl36";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl36";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
4078799    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
4078800    set EMWS8.Ensmbl36_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_EMINFO;
4078801    where DATA='Ensmbl36' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl36' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
4078802    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_EMINFO.
      WHERE (DATA='Ensmbl36') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078803    data EMWS8.Ensmbl36_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl36_EMINFO;
4078804    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
4078805    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
4078806    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL36_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
4078810    run;
4078811    data EMWS8.Ensmbl36_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_EMINFO;
4078812    set EMWS8.Ensmbl36_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_EMINFO WORK.MODELTEMP_INFO;
4078813    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL36_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL36_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078814    proc sort data = EMWS8.Ensmbl36_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl36_EMINFO NOTHREADS;
4078815    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
4078816    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL36_EMINFO.
NOTE: The data set EMWS8.ENSMBL36_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4078817    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
4078818    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
4078819    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078820    proc sort data = EMWS8.Ensmbl36_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl36_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
4078821    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
4078822    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL36_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078823    data EMWS8.Ensmbl36_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_EMINFO;
4078824    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
4078825    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
4078826    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL36_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078827    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
4078828    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
4078829    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
4078830    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
NOTE: View EMWS8.ENSMBL36_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL36_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.35 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                11.35 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0LTG2UT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0LTG2UT new;
MPRINT(EM_DIAGRAM):   run;
4078854    data EMWS8.Ensmbl36_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl36_EMOUTFIT;
4078855    set EMWS8.Ensmbl36_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_EMOUTFIT;
4078856    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
4078857    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
4078857  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
4078858    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
4078859    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL36_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL36_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078860    proc sort data=EMWS8.Ensmbl36_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl36_EMREPORTFIT nothreads;
4078861    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
4078862    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL36_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL36_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078863    %let _EMwarndup = 0;
4078864    %let _EMtargetdup =;
4078865    %let _EMASEtargetdup =;
4078866    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
4078867    set EMWS8.Ensmbl36_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_EMOUTFIT;
4078868    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
4078869    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
4078870    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
4078871    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
4078872    end;
MPRINT(EM_DIAGRAM):   end;
4078873    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL36_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078874    proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=WORK.SUBSETINMETA;
4078875    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078876    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set EMWS8.AUTONEURAL6_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 50 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078877    proc sort data=EMWS8.Ensmbl36_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl36_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
4078878    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078879    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL36_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 40 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078880    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
4078881    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
4078882    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4078883    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 40 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 50 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4078884    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
4078885    set EMWS8.Ensmbl36_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_CMeta_TRAIN;
4078886    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
4078886  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
4078887    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL36_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4078888    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
4078889    set EMWS8.Ensmbl36_TRAIN(keep=
4078890    F_DepVar
4078891    I_DepVar
4078892    P_DepVar0
4078893    P_DepVar1
4078894    R_DepVar0
4078895    R_DepVar1
4078896    U_DepVar
4078897    _WARN_
4078898    DepVar
4078899    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
4078900    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL36_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL6_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL36_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl36_0JRCTV4 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl36_0JRCTV4;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl36_0JRCTV4(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl36_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl36_0JRCTV4;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl36_0JRCTV4;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl36_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0163173494 OVLMAX 0.9742773601 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
4083166    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
4083167    set EMWS8.Ensmbl36_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_CMeta_TRAIN;
4083168    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
4083168  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
4083169    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL36_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4083170    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
4083171    set EMWS8.Ensmbl36_VALIDATE(keep=
4083172    F_DepVar
4083173    I_DepVar
4083174    P_DepVar0
4083175    P_DepVar1
4083176    R_DepVar0
4083177    R_DepVar1
4083178    U_DepVar
4083179    _WARN_
4083180    DepVar
4083181    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
4083182    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL36_VALIDATE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL6_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL36_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl36_3PD_U3I nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl36_3PD_U3I;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl36_3PD_U3I(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl36_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_EMCLASSIFICATION WORK.Ensmbl36_3PD_U3I;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl36_3PD_U3I;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl36_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0163208873 OVLMAX 0.9723449044 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
4087457    %let _cn = %sysfunc(getoption(CENTER));
4087458    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
4087459    proc print data=EMWS8.Ensmbl36_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl36_EMREPORTFIT noobs label;
4087460    var STAT LABEL TRAIN
4087461    VALIDATE
4087462    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
4087463    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
4087464    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4087465    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
4087466    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL36_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 3427.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4087467    title10;
MPRINT(EM_DIAGRAM):   title10;
4087468    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
4087469    proc sort data=EMWS8.Ensmbl36_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl36_EMCLASSIFICATION nothreads;
4087470    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
4087471    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.ENSMBL36_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL36_EMCLASSIFICATION has 7 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4087472    %let _cn = %sysfunc(getoption(CENTER));
4087473    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
4087474    proc print data=EMWS8.Ensmbl36_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl36_EMCLASSIFICATION noobs label;
4087475    var from into pct_row pct_col count percent
4087476    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
4087477    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
4087478    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
4087479    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
4087480    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
4087481    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
4087482    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
4087483    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
4087484    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
4087485    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4087486    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
4087487    run;
 
NOTE: There were 7 observations read from the data set EMWS8.ENSMBL36_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 3428.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4087488    title9;
MPRINT(EM_DIAGRAM):   title9;
4087489    title10;
MPRINT(EM_DIAGRAM):   title10;
4087490    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
4087491    %let _cn = %sysfunc(getoption(CENTER));
4087492    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
4087493    data EMWS8.Ensmbl36_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl36_EMEVENTREPORT;
4087494    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
4087494  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
4087495    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
4087495  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
4087495  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
4087495  ! FALSEEVENT
4087496    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
4087496  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
4087496  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
4087497       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
4087498    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
4087499    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
4087500    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
4087501    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
4087502    set EMWS8.Ensmbl36_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_EMEVENTREPORT;
4087503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL36_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL36_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
4087504    proc print data=EMWS8.Ensmbl36_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl36_EMEVENTREPORT noobs label;
4087505    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4087506    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
4087507    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
4087508    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL36_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 3429.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4087509    title10;
MPRINT(EM_DIAGRAM):   title10;
4087510    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
4087511    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
4087512    modify Ensmbl36_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl36_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
4087513    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
4087514    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
4087514  ! ;
MPRINT(EM_DIAGRAM):   run;
4087515    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL36_EMRANK.DATA.
4087516    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
4087517    %let _cn = %sysfunc(getoption(CENTER));
4087518    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
4087519    proc print data=EMWS8.Ensmbl36_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl36_EMRANK label noobs;
4087520    var
4087521    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
4087522    by
4087523    notsorted DATAROLE
4087524    notsorted TARGET
4087525    notsorted TARGETLABEL
4087526    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
4087527    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
4087528    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
4087529    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL36_EMRANK.
NOTE: The PROCEDURE PRINT printed page 3430.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
4087530    title10;
MPRINT(EM_DIAGRAM):   title10;
4087531    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
4087532    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
4087533    modify Ensmbl36_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl36_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
4087534    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
4087534  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
4087535    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
4087535  ! ;
MPRINT(EM_DIAGRAM):   run;
4087536    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL36_EMSCOREDIST.DATA.
4087537    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl36_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
