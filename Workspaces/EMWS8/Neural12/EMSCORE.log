MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.25 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                09.25 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1SHNO7Z 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1SHNO7Z new;
MPRINT(EM_DIAGRAM):   run;
1506974    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
1506975    set EMWS8.Neural12_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural12_OUTKEY;
1506976    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
1506977    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 37 observations read from the data set EMWS8.NEURAL12_OUTKEY.
NOTE: The data set WORK.OUTKEY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1506978    filename emflow
1506978  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural12: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1506979    *------------------------------------------------------------*;
1506980    * Neural12: Scoring DATA data;
1506981    *------------------------------------------------------------*;
1506982    data EMWS8.Neural12_TRAIN
1506983    / view=EMWS8.Neural12_TRAIN
1506984    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_TRAIN / view=EMWS8.Neural12_TRAIN ;
1506985    set EMWS8.PRINCOMP_TRAIN
1506986    ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
1506987    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas.
1506988   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1506989   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1506990   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1506991   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1506992   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1506993   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1506994   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1506995   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1506996   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1506997   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1506998   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1506999   +LENGTH _WARN_ $4
1507000   +      F_DepVar  $ 12
1507001   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1507002   +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
1507003   +
1507004   +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
1507005   +
1507006   +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
1507007   +
1507008   +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
1507009   +
1507010   +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
1507011   +
1507012   +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
1507013   +
1507014   +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
1507015   +
1507016   +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
1507017   +
1507018   +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
1507019   +
1507020   +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
1507021   +
1507022   +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
1507023   +
1507024   +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
1507025   +
1507026   +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
1507027   +
1507028   +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
1507029   +
1507030   +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
1507031   +
1507032   +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
1507033   +
1507034   +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
1507035   +
1507036   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1507037   +
1507038   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1507039   +
1507040   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1507041   +
1507042   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1507043   +
1507044   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1507045   +
1507046   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1507047   +
1507048   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1507049   +
1507050   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1507051   +
1507052   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1507053   +
1507054   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1507055   +
1507056   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1507057   +
1507058   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1507059   +
1507060   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1507061   +
1507062   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1507063   +
1507064   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1507065   +
1507066   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1507067   +
1507068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507069   +*** Checking missing input Interval
1507070   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1507071   +
1507072   +IF NMISS(
1507073   +   PC_1 ,
1507074   +   PC_10 ,
1507075   +   PC_11 ,
1507076   +   PC_12 ,
1507077   +   PC_13 ,
1507078   +   PC_14 ,
1507079   +   PC_15 ,
1507080   +   PC_16 ,
1507081   +   PC_17 ,
1507082   +   PC_2 ,
1507083   +   PC_3 ,
1507084   +   PC_4 ,
1507085   +   PC_5 ,
1507086   +   PC_6 ,
1507087   +   PC_7 ,
1507088   +   PC_8 ,
1507089   +   PC_9 ,
1507090   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
1507091   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1507092   +
1507093   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1507094   +END;
MPRINT(EM_DIAGRAM):   END;
1507095   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507096   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1507097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507098   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1507099   +   S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1507100   +   S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1507101   +   S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1507102   +   S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1507103   +   S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1507104   +   S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1507105   +   S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1507106   +   S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1507107   +   S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1507108   +   S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1507109   +   S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1507110   +   S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1507111   +   S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1507112   +   S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1507113   +   S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1507114   +   S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1507115   +   S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1507116   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1507117   +END;
MPRINT(EM_DIAGRAM):   END;
1507118   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1507119   +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
1507120   +   ELSE S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1507121   +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
1507122   +   ELSE S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1507123   +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
1507124   +   ELSE S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1507125   +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
1507126   +   ELSE S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1507127   +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
1507128   +   ELSE S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1507129   +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
1507130   +   ELSE S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1507131   +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
1507132   +   ELSE S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1507133   +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
1507134   +   ELSE S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1507135   +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
1507136   +   ELSE S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1507137   +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
1507138   +   ELSE S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1507139   +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
1507140   +   ELSE S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1507141   +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
1507142   +   ELSE S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1507143   +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
1507144   +   ELSE S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1507145   +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
1507146   +   ELSE S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1507147   +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
1507148   +   ELSE S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1507149   +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
1507150   +   ELSE S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1507151   +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
1507152   +   ELSE S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1507153   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1507154   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1507155   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1507156   +END;
MPRINT(EM_DIAGRAM):   END;
1507157   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507158   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1507159   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507160   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1507161   +   H11  =    -0.57635658190396 * S_PC_1  +    -0.31351012201247 * S_PC_10
1507162   +          +     0.35554236871072 * S_PC_11  +     0.46825529128996 * S_PC_12
1507163   +          +    -0.37534513422477 * S_PC_13  +    -0.27110906744409 * S_PC_14
1507164   +          +    -0.03970223918992 * S_PC_15  +    -0.00368328213623 * S_PC_16
1507165   +          +     0.08494552733159 * S_PC_17  +     0.14575286148432 * S_PC_2
1507166   +          +     0.10708586704976 * S_PC_3  +    -0.57137094863252 * S_PC_4
1507167   +          +     0.33654954830967 * S_PC_5  +    -0.19099897947761 * S_PC_6
1507168   +          +    -0.54884274488614 * S_PC_7  +    -0.53626765517945 * S_PC_8
1507169   +          +    -0.95844798051607 * S_PC_9  +    -0.15346954705487 *
1507170   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.57635658190396 * S_PC_1 + -0.31351012201247 * S_PC_10 + 
0.35554236871072 * S_PC_11 + 0.46825529128996 * S_PC_12 + -0.37534513422477 * S_PC_13 + 
-0.27110906744409 * S_PC_14 + -0.03970223918992 * S_PC_15 + -0.00368328213623 * S_PC_16 + 
0.08494552733159 * S_PC_17 + 0.14575286148432 * S_PC_2 + 0.10708586704976 * S_PC_3 + 
-0.57137094863252 * S_PC_4 + 0.33654954830967 * S_PC_5 + -0.19099897947761 * S_PC_6 + 
-0.54884274488614 * S_PC_7 + -0.53626765517945 * S_PC_8 + -0.95844798051607 * S_PC_9 + 
-0.15346954705487 * S_Year_Birth ;
1507171   +   H12  =    -0.99754140868259 * S_PC_1  +     0.48432033889368 * S_PC_10
1507172   +          +     0.13485378897804 * S_PC_11  +     0.70654387154986 * S_PC_12
1507173   +          +     0.31535013010443 * S_PC_13  +     0.13352150372021 * S_PC_14
1507174   +          +     0.02266953346702 * S_PC_15  +     -0.4891980125355 * S_PC_16
1507175   +          +    -0.19919312353832 * S_PC_17  +    -0.19402007559395 * S_PC_2
1507176   +          +    -0.44787100056646 * S_PC_3  +    -0.34998796930312 * S_PC_4
1507177   +          +     0.18268054629551 * S_PC_5  +     0.39959406390493 * S_PC_6
1507178   +          +     0.29629443914547 * S_PC_7  +     0.11287954527851 * S_PC_8
1507179   +          +    -0.64839515869454 * S_PC_9  +    -0.19380600849554 *
1507180   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.99754140868259 * S_PC_1 + 0.48432033889368 * S_PC_10 + 
0.13485378897804 * S_PC_11 + 0.70654387154986 * S_PC_12 + 0.31535013010443 * S_PC_13 + 
0.13352150372021 * S_PC_14 + 0.02266953346702 * S_PC_15 + -0.4891980125355 * S_PC_16 + 
-0.19919312353832 * S_PC_17 + -0.19402007559395 * S_PC_2 + -0.44787100056646 * S_PC_3 + 
-0.34998796930312 * S_PC_4 + 0.18268054629551 * S_PC_5 + 0.39959406390493 * S_PC_6 + 
0.29629443914547 * S_PC_7 + 0.11287954527851 * S_PC_8 + -0.64839515869454 * S_PC_9 + 
-0.19380600849554 * S_Year_Birth ;
1507181   +   H13  =     -1.0823067374947 * S_PC_1  +     0.03757671255421 * S_PC_10
1507182   +          +    -0.88553156949014 * S_PC_11  +    -1.14340212735558 * S_PC_12
1507183   +          +     0.21740954678016 * S_PC_13  +     -0.3725711948052 * S_PC_14
1507184   +          +     0.31479165759956 * S_PC_15  +    -0.12010822665038 * S_PC_16
1507185   +          +     0.25822787581675 * S_PC_17  +     0.20473449568327 * S_PC_2
1507186   +          +     0.42895056545479 * S_PC_3  +     0.58129578141832 * S_PC_4
1507187   +          +     0.81812143004044 * S_PC_5  +    -0.08541579592673 * S_PC_6
1507188   +          +    -0.08298404993106 * S_PC_7  +    -0.06771155681427 * S_PC_8
1507189   +          +     0.23336761981714 * S_PC_9  +      0.0401091765443 *
1507190   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -1.0823067374947 * S_PC_1 + 0.03757671255421 * S_PC_10 + 
-0.88553156949014 * S_PC_11 + -1.14340212735558 * S_PC_12 + 0.21740954678016 * S_PC_13 + 
-0.3725711948052 * S_PC_14 + 0.31479165759956 * S_PC_15 + -0.12010822665038 * S_PC_16 + 
0.25822787581675 * S_PC_17 + 0.20473449568327 * S_PC_2 + 0.42895056545479 * S_PC_3 + 
0.58129578141832 * S_PC_4 + 0.81812143004044 * S_PC_5 + -0.08541579592673 * S_PC_6 + 
-0.08298404993106 * S_PC_7 + -0.06771155681427 * S_PC_8 + 0.23336761981714 * S_PC_9 + 
0.0401091765443 * S_Year_Birth ;
1507191   +   H14  =    -0.31646532994072 * S_PC_1  +     0.62489375771545 * S_PC_10
1507192   +          +    -0.53010968080053 * S_PC_11  +    -0.23968869971937 * S_PC_12
1507193   +          +     1.03461385619659 * S_PC_13  +    -0.46882027028342 * S_PC_14
1507194   +          +     0.46734491267632 * S_PC_15  +     0.39229663491061 * S_PC_16
1507195   +          +     0.08012897742232 * S_PC_17  +     0.04675555594631 * S_PC_2
1507196   +          +     0.00464369091888 * S_PC_3  +     0.09395424337114 * S_PC_4
1507197   +          +    -0.13384452448773 * S_PC_5  +    -0.25307416163671 * S_PC_6
1507198   +          +    -0.02506188916405 * S_PC_7  +     -0.1509186430772 * S_PC_8
1507199   +          +    -0.04892999983232 * S_PC_9  +    -0.13112409612727 *
1507200   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.31646532994072 * S_PC_1 + 0.62489375771545 * S_PC_10 + 
-0.53010968080053 * S_PC_11 + -0.23968869971937 * S_PC_12 + 1.03461385619659 * S_PC_13 + 
-0.46882027028342 * S_PC_14 + 0.46734491267632 * S_PC_15 + 0.39229663491061 * S_PC_16 + 
0.08012897742232 * S_PC_17 + 0.04675555594631 * S_PC_2 + 0.00464369091888 * S_PC_3 + 
0.09395424337114 * S_PC_4 + -0.13384452448773 * S_PC_5 + -0.25307416163671 * S_PC_6 + 
-0.02506188916405 * S_PC_7 + -0.1509186430772 * S_PC_8 + -0.04892999983232 * S_PC_9 + 
-0.13112409612727 * S_Year_Birth ;
1507201   +   H15  =    -0.36792335928443 * S_PC_1  +     0.37715022064516 * S_PC_10
1507202   +          +    -0.34263128406455 * S_PC_11  +     0.30201456615476 * S_PC_12
1507203   +          +    -0.45934658855136 * S_PC_13  +    -0.26533309504931 * S_PC_14
1507204   +          +     0.36238053824316 * S_PC_15  +    -0.31713865718922 * S_PC_16
1507205   +          +     -0.0765828768821 * S_PC_17  +    -0.77974070972324 * S_PC_2
1507206   +          +     0.12886823717699 * S_PC_3  +     0.45610079035114 * S_PC_4
1507207   +          +      0.2567880548249 * S_PC_5  +     0.23940714475233 * S_PC_6
1507208   +          +    -0.06293859719329 * S_PC_7  +    -0.05522982795714 * S_PC_8
1507209   +          +    -0.03013010516899 * S_PC_9  +     0.27486484306687 *
1507210   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.36792335928443 * S_PC_1 + 0.37715022064516 * S_PC_10 + 
-0.34263128406455 * S_PC_11 + 0.30201456615476 * S_PC_12 + -0.45934658855136 * S_PC_13 + 
-0.26533309504931 * S_PC_14 + 0.36238053824316 * S_PC_15 + -0.31713865718922 * S_PC_16 + 
-0.0765828768821 * S_PC_17 + -0.77974070972324 * S_PC_2 + 0.12886823717699 * S_PC_3 + 
0.45610079035114 * S_PC_4 + 0.2567880548249 * S_PC_5 + 0.23940714475233 * S_PC_6 + 
-0.06293859719329 * S_PC_7 + -0.05522982795714 * S_PC_8 + -0.03013010516899 * S_PC_9 + 
0.27486484306687 * S_Year_Birth ;
1507211   +   H16  =     0.13975575860529 * S_PC_1  +    -0.35575487248938 * S_PC_10
1507212   +          +     0.02983601640638 * S_PC_11  +     0.26434219975941 * S_PC_12
1507213   +          +    -0.40948666727232 * S_PC_13  +     0.20186769345139 * S_PC_14
1507214   +          +     0.45170616775352 * S_PC_15  +     0.00258771853777 * S_PC_16
1507215   +          +    -0.40888320799045 * S_PC_17  +    -0.18037761561331 * S_PC_2
1507216   +          +     0.37721304589753 * S_PC_3  +    -0.19118634307032 * S_PC_4
1507217   +          +    -0.63151251587428 * S_PC_5  +    -0.23281740347406 * S_PC_6
1507218   +          +     -0.0828679380821 * S_PC_7  +     0.76178109678759 * S_PC_8
1507219   +          +     0.57258725782556 * S_PC_9  +    -0.15432480762964 *
1507220   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.13975575860529 * S_PC_1 + -0.35575487248938 * S_PC_10 + 
0.02983601640638 * S_PC_11 + 0.26434219975941 * S_PC_12 + -0.40948666727232 * S_PC_13 + 
0.20186769345139 * S_PC_14 + 0.45170616775352 * S_PC_15 + 0.00258771853777 * S_PC_16 + 
-0.40888320799045 * S_PC_17 + -0.18037761561331 * S_PC_2 + 0.37721304589753 * S_PC_3 + 
-0.19118634307032 * S_PC_4 + -0.63151251587428 * S_PC_5 + -0.23281740347406 * S_PC_6 + 
-0.0828679380821 * S_PC_7 + 0.76178109678759 * S_PC_8 + 0.57258725782556 * S_PC_9 + 
-0.15432480762964 * S_Year_Birth ;
1507221   +   H17  =     0.31605900784266 * S_PC_1  +     0.34833374230803 * S_PC_10
1507222   +          +     0.23320656792555 * S_PC_11  +     0.16099686297534 * S_PC_12
1507223   +          +     0.27657165659696 * S_PC_13  +    -0.16386328713702 * S_PC_14
1507224   +          +    -0.07457567503477 * S_PC_15  +    -0.48573025440334 * S_PC_16
1507225   +          +      0.0321218057153 * S_PC_17  +     0.75395393692804 * S_PC_2
1507226   +          +     0.58102263323057 * S_PC_3  +     0.03732139018296 * S_PC_4
1507227   +          +     0.21321560935535 * S_PC_5  +    -0.17682802646605 * S_PC_6
1507228   +          +    -0.25681275271584 * S_PC_7  +    -0.26821028181474 * S_PC_8
1507229   +          +     0.15279812226638 * S_PC_9  +     0.37146205771289 *
1507230   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = 0.31605900784266 * S_PC_1 + 0.34833374230803 * S_PC_10 + 
0.23320656792555 * S_PC_11 + 0.16099686297534 * S_PC_12 + 0.27657165659696 * S_PC_13 + 
-0.16386328713702 * S_PC_14 + -0.07457567503477 * S_PC_15 + -0.48573025440334 * S_PC_16 + 
0.0321218057153 * S_PC_17 + 0.75395393692804 * S_PC_2 + 0.58102263323057 * S_PC_3 + 
0.03732139018296 * S_PC_4 + 0.21321560935535 * S_PC_5 + -0.17682802646605 * S_PC_6 + 
-0.25681275271584 * S_PC_7 + -0.26821028181474 * S_PC_8 + 0.15279812226638 * S_PC_9 + 
0.37146205771289 * S_Year_Birth ;
1507231   +   H11  =    -1.16794994414366 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.16794994414366 + H11 ;
1507232   +   H12  =     1.34950067589415 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.34950067589415 + H12 ;
1507233   +   H13  =    -0.44254911274099 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44254911274099 + H13 ;
1507234   +   H14  =     0.15367849524818 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.15367849524818 + H14 ;
1507235   +   H15  =    -1.51939092158903 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.51939092158903 + H15 ;
1507236   +   H16  =      0.6953452432569 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.6953452432569 + H16 ;
1507237   +   H17  =     0.58084316489966 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.58084316489966 + H17 ;
1507238   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1507239   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1507240   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1507241   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1507242   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1507243   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1507244   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1507245   +END;
MPRINT(EM_DIAGRAM):   END;
1507246   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1507247   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1507248   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1507249   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1507250   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1507251   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1507252   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1507253   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1507254   +END;
MPRINT(EM_DIAGRAM):   END;
1507255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507256   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1507257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507258   +
1507259   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1507260   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1507261   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1507262   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1507263   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1507264   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1507265   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1507266   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1507267   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1507268   +end;
MPRINT(EM_DIAGRAM):   end;
1507269   +else do;
MPRINT(EM_DIAGRAM):   else do;
1507270   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1507271   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1507272   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1507273   +   end;
MPRINT(EM_DIAGRAM):   end;
1507274   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1507275   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1507276   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1507277   +   end;
MPRINT(EM_DIAGRAM):   end;
1507278   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1507279   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1507280   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1507281   +   end;
MPRINT(EM_DIAGRAM):   end;
1507282   +end;
MPRINT(EM_DIAGRAM):   end;
1507283   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1507284   +   P_DepVar1  =    -1.61984691421844 * H11  +    -2.05503974494971 * H12
1507285   +          +    -1.93074257008285 * H13  +    -2.19463525441367 * H14
1507286   +          +     1.77553865420261 * H15  +     1.01400297881478 * H16
1507287   +          +     -1.9246974233586 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.61984691421844 * H11 + -2.05503974494971 * H12 + 
-1.93074257008285 * H13 + -2.19463525441367 * H14 + 1.77553865420261 * H15 + 1.01400297881478 
* H16 + -1.9246974233586 * H17 ;
1507288   +   P_DepVar1  =    -2.20781421095695 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.20781421095695 + P_DepVar1 ;
1507289   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1507290   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1507291   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1507292   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1507293   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1507294   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1507295   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1507296   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1507297   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1507298   +END;
MPRINT(EM_DIAGRAM):   END;
1507299   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1507300   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1507301   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1507302   +END;
MPRINT(EM_DIAGRAM):   END;
1507303   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1507304   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1507305   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1507306   +END;
MPRINT(EM_DIAGRAM):   END;
1507307   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1507308   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1507309   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1507310   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1507311   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1507312   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1507313   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1507314   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507315   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1507316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507317   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1507318   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1507319   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1507320   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1507321   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1507322   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1507323   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1507324   +END;
MPRINT(EM_DIAGRAM):   END;
1507325   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1507326   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1507327   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1507328   +drop
1507329   +H11
1507330   +H12
1507331   +H13
1507332   +H14
1507333   +H15
1507334   +H16
1507335   +H17
1507336   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1507337   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1507338    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL12_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1507339    quit;
1507340    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1507341    filename emflow
1507341  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural12: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1507342    *------------------------------------------------------------*;
1507343    * Neural12: Scoring VALIDATE data;
1507344    *------------------------------------------------------------*;
1507345    data EMWS8.Neural12_VALIDATE
1507346    / view=EMWS8.Neural12_VALIDATE
1507347    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_VALIDATE / view=EMWS8.Neural12_VALIDATE ;
1507348    set EMWS8.PRINCOMP_VALIDATE
1507349    ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
1507350    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas.
1507351   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1507352   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1507353   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1507354   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1507355   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1507356   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1507357   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1507358   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1507359   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1507360   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1507361   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1507362   +LENGTH _WARN_ $4
1507363   +      F_DepVar  $ 12
1507364   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1507365   +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
1507366   +
1507367   +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
1507368   +
1507369   +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
1507370   +
1507371   +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
1507372   +
1507373   +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
1507374   +
1507375   +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
1507376   +
1507377   +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
1507378   +
1507379   +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
1507380   +
1507381   +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
1507382   +
1507383   +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
1507384   +
1507385   +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
1507386   +
1507387   +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
1507388   +
1507389   +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
1507390   +
1507391   +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
1507392   +
1507393   +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
1507394   +
1507395   +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
1507396   +
1507397   +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
1507398   +
1507399   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1507400   +
1507401   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1507402   +
1507403   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1507404   +
1507405   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1507406   +
1507407   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1507408   +
1507409   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1507410   +
1507411   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1507412   +
1507413   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1507414   +
1507415   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1507416   +
1507417   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1507418   +
1507419   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1507420   +
1507421   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1507422   +
1507423   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1507424   +
1507425   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1507426   +
1507427   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1507428   +
1507429   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1507430   +
1507431   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507432   +*** Checking missing input Interval
1507433   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1507434   +
1507435   +IF NMISS(
1507436   +   PC_1 ,
1507437   +   PC_10 ,
1507438   +   PC_11 ,
1507439   +   PC_12 ,
1507440   +   PC_13 ,
1507441   +   PC_14 ,
1507442   +   PC_15 ,
1507443   +   PC_16 ,
1507444   +   PC_17 ,
1507445   +   PC_2 ,
1507446   +   PC_3 ,
1507447   +   PC_4 ,
1507448   +   PC_5 ,
1507449   +   PC_6 ,
1507450   +   PC_7 ,
1507451   +   PC_8 ,
1507452   +   PC_9 ,
1507453   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
1507454   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1507455   +
1507456   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1507457   +END;
MPRINT(EM_DIAGRAM):   END;
1507458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507459   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1507460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507461   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1507462   +   S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1507463   +   S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1507464   +   S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1507465   +   S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1507466   +   S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1507467   +   S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1507468   +   S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1507469   +   S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1507470   +   S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1507471   +   S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1507472   +   S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1507473   +   S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1507474   +   S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1507475   +   S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1507476   +   S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1507477   +   S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1507478   +   S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1507479   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1507480   +END;
MPRINT(EM_DIAGRAM):   END;
1507481   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1507482   +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
1507483   +   ELSE S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1507484   +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
1507485   +   ELSE S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1507486   +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
1507487   +   ELSE S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1507488   +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
1507489   +   ELSE S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1507490   +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
1507491   +   ELSE S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1507492   +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
1507493   +   ELSE S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1507494   +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
1507495   +   ELSE S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1507496   +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
1507497   +   ELSE S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1507498   +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
1507499   +   ELSE S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1507500   +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
1507501   +   ELSE S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1507502   +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
1507503   +   ELSE S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1507504   +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
1507505   +   ELSE S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1507506   +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
1507507   +   ELSE S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1507508   +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
1507509   +   ELSE S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1507510   +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
1507511   +   ELSE S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1507512   +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
1507513   +   ELSE S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1507514   +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
1507515   +   ELSE S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1507516   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1507517   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1507518   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1507519   +END;
MPRINT(EM_DIAGRAM):   END;
1507520   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507521   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1507522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507523   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1507524   +   H11  =    -0.57635658190396 * S_PC_1  +    -0.31351012201247 * S_PC_10
1507525   +          +     0.35554236871072 * S_PC_11  +     0.46825529128996 * S_PC_12
1507526   +          +    -0.37534513422477 * S_PC_13  +    -0.27110906744409 * S_PC_14
1507527   +          +    -0.03970223918992 * S_PC_15  +    -0.00368328213623 * S_PC_16
1507528   +          +     0.08494552733159 * S_PC_17  +     0.14575286148432 * S_PC_2
1507529   +          +     0.10708586704976 * S_PC_3  +    -0.57137094863252 * S_PC_4
1507530   +          +     0.33654954830967 * S_PC_5  +    -0.19099897947761 * S_PC_6
1507531   +          +    -0.54884274488614 * S_PC_7  +    -0.53626765517945 * S_PC_8
1507532   +          +    -0.95844798051607 * S_PC_9  +    -0.15346954705487 *
1507533   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.57635658190396 * S_PC_1 + -0.31351012201247 * S_PC_10 + 
0.35554236871072 * S_PC_11 + 0.46825529128996 * S_PC_12 + -0.37534513422477 * S_PC_13 + 
-0.27110906744409 * S_PC_14 + -0.03970223918992 * S_PC_15 + -0.00368328213623 * S_PC_16 + 
0.08494552733159 * S_PC_17 + 0.14575286148432 * S_PC_2 + 0.10708586704976 * S_PC_3 + 
-0.57137094863252 * S_PC_4 + 0.33654954830967 * S_PC_5 + -0.19099897947761 * S_PC_6 + 
-0.54884274488614 * S_PC_7 + -0.53626765517945 * S_PC_8 + -0.95844798051607 * S_PC_9 + 
-0.15346954705487 * S_Year_Birth ;
1507534   +   H12  =    -0.99754140868259 * S_PC_1  +     0.48432033889368 * S_PC_10
1507535   +          +     0.13485378897804 * S_PC_11  +     0.70654387154986 * S_PC_12
1507536   +          +     0.31535013010443 * S_PC_13  +     0.13352150372021 * S_PC_14
1507537   +          +     0.02266953346702 * S_PC_15  +     -0.4891980125355 * S_PC_16
1507538   +          +    -0.19919312353832 * S_PC_17  +    -0.19402007559395 * S_PC_2
1507539   +          +    -0.44787100056646 * S_PC_3  +    -0.34998796930312 * S_PC_4
1507540   +          +     0.18268054629551 * S_PC_5  +     0.39959406390493 * S_PC_6
1507541   +          +     0.29629443914547 * S_PC_7  +     0.11287954527851 * S_PC_8
1507542   +          +    -0.64839515869454 * S_PC_9  +    -0.19380600849554 *
1507543   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.99754140868259 * S_PC_1 + 0.48432033889368 * S_PC_10 + 
0.13485378897804 * S_PC_11 + 0.70654387154986 * S_PC_12 + 0.31535013010443 * S_PC_13 + 
0.13352150372021 * S_PC_14 + 0.02266953346702 * S_PC_15 + -0.4891980125355 * S_PC_16 + 
-0.19919312353832 * S_PC_17 + -0.19402007559395 * S_PC_2 + -0.44787100056646 * S_PC_3 + 
-0.34998796930312 * S_PC_4 + 0.18268054629551 * S_PC_5 + 0.39959406390493 * S_PC_6 + 
0.29629443914547 * S_PC_7 + 0.11287954527851 * S_PC_8 + -0.64839515869454 * S_PC_9 + 
-0.19380600849554 * S_Year_Birth ;
1507544   +   H13  =     -1.0823067374947 * S_PC_1  +     0.03757671255421 * S_PC_10
1507545   +          +    -0.88553156949014 * S_PC_11  +    -1.14340212735558 * S_PC_12
1507546   +          +     0.21740954678016 * S_PC_13  +     -0.3725711948052 * S_PC_14
1507547   +          +     0.31479165759956 * S_PC_15  +    -0.12010822665038 * S_PC_16
1507548   +          +     0.25822787581675 * S_PC_17  +     0.20473449568327 * S_PC_2
1507549   +          +     0.42895056545479 * S_PC_3  +     0.58129578141832 * S_PC_4
1507550   +          +     0.81812143004044 * S_PC_5  +    -0.08541579592673 * S_PC_6
1507551   +          +    -0.08298404993106 * S_PC_7  +    -0.06771155681427 * S_PC_8
1507552   +          +     0.23336761981714 * S_PC_9  +      0.0401091765443 *
1507553   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -1.0823067374947 * S_PC_1 + 0.03757671255421 * S_PC_10 + 
-0.88553156949014 * S_PC_11 + -1.14340212735558 * S_PC_12 + 0.21740954678016 * S_PC_13 + 
-0.3725711948052 * S_PC_14 + 0.31479165759956 * S_PC_15 + -0.12010822665038 * S_PC_16 + 
0.25822787581675 * S_PC_17 + 0.20473449568327 * S_PC_2 + 0.42895056545479 * S_PC_3 + 
0.58129578141832 * S_PC_4 + 0.81812143004044 * S_PC_5 + -0.08541579592673 * S_PC_6 + 
-0.08298404993106 * S_PC_7 + -0.06771155681427 * S_PC_8 + 0.23336761981714 * S_PC_9 + 
0.0401091765443 * S_Year_Birth ;
1507554   +   H14  =    -0.31646532994072 * S_PC_1  +     0.62489375771545 * S_PC_10
1507555   +          +    -0.53010968080053 * S_PC_11  +    -0.23968869971937 * S_PC_12
1507556   +          +     1.03461385619659 * S_PC_13  +    -0.46882027028342 * S_PC_14
1507557   +          +     0.46734491267632 * S_PC_15  +     0.39229663491061 * S_PC_16
1507558   +          +     0.08012897742232 * S_PC_17  +     0.04675555594631 * S_PC_2
1507559   +          +     0.00464369091888 * S_PC_3  +     0.09395424337114 * S_PC_4
1507560   +          +    -0.13384452448773 * S_PC_5  +    -0.25307416163671 * S_PC_6
1507561   +          +    -0.02506188916405 * S_PC_7  +     -0.1509186430772 * S_PC_8
1507562   +          +    -0.04892999983232 * S_PC_9  +    -0.13112409612727 *
1507563   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.31646532994072 * S_PC_1 + 0.62489375771545 * S_PC_10 + 
-0.53010968080053 * S_PC_11 + -0.23968869971937 * S_PC_12 + 1.03461385619659 * S_PC_13 + 
-0.46882027028342 * S_PC_14 + 0.46734491267632 * S_PC_15 + 0.39229663491061 * S_PC_16 + 
0.08012897742232 * S_PC_17 + 0.04675555594631 * S_PC_2 + 0.00464369091888 * S_PC_3 + 
0.09395424337114 * S_PC_4 + -0.13384452448773 * S_PC_5 + -0.25307416163671 * S_PC_6 + 
-0.02506188916405 * S_PC_7 + -0.1509186430772 * S_PC_8 + -0.04892999983232 * S_PC_9 + 
-0.13112409612727 * S_Year_Birth ;
1507564   +   H15  =    -0.36792335928443 * S_PC_1  +     0.37715022064516 * S_PC_10
1507565   +          +    -0.34263128406455 * S_PC_11  +     0.30201456615476 * S_PC_12
1507566   +          +    -0.45934658855136 * S_PC_13  +    -0.26533309504931 * S_PC_14
1507567   +          +     0.36238053824316 * S_PC_15  +    -0.31713865718922 * S_PC_16
1507568   +          +     -0.0765828768821 * S_PC_17  +    -0.77974070972324 * S_PC_2
1507569   +          +     0.12886823717699 * S_PC_3  +     0.45610079035114 * S_PC_4
1507570   +          +      0.2567880548249 * S_PC_5  +     0.23940714475233 * S_PC_6
1507571   +          +    -0.06293859719329 * S_PC_7  +    -0.05522982795714 * S_PC_8
1507572   +          +    -0.03013010516899 * S_PC_9  +     0.27486484306687 *
1507573   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.36792335928443 * S_PC_1 + 0.37715022064516 * S_PC_10 + 
-0.34263128406455 * S_PC_11 + 0.30201456615476 * S_PC_12 + -0.45934658855136 * S_PC_13 + 
-0.26533309504931 * S_PC_14 + 0.36238053824316 * S_PC_15 + -0.31713865718922 * S_PC_16 + 
-0.0765828768821 * S_PC_17 + -0.77974070972324 * S_PC_2 + 0.12886823717699 * S_PC_3 + 
0.45610079035114 * S_PC_4 + 0.2567880548249 * S_PC_5 + 0.23940714475233 * S_PC_6 + 
-0.06293859719329 * S_PC_7 + -0.05522982795714 * S_PC_8 + -0.03013010516899 * S_PC_9 + 
0.27486484306687 * S_Year_Birth ;
1507574   +   H16  =     0.13975575860529 * S_PC_1  +    -0.35575487248938 * S_PC_10
1507575   +          +     0.02983601640638 * S_PC_11  +     0.26434219975941 * S_PC_12
1507576   +          +    -0.40948666727232 * S_PC_13  +     0.20186769345139 * S_PC_14
1507577   +          +     0.45170616775352 * S_PC_15  +     0.00258771853777 * S_PC_16
1507578   +          +    -0.40888320799045 * S_PC_17  +    -0.18037761561331 * S_PC_2
1507579   +          +     0.37721304589753 * S_PC_3  +    -0.19118634307032 * S_PC_4
1507580   +          +    -0.63151251587428 * S_PC_5  +    -0.23281740347406 * S_PC_6
1507581   +          +     -0.0828679380821 * S_PC_7  +     0.76178109678759 * S_PC_8
1507582   +          +     0.57258725782556 * S_PC_9  +    -0.15432480762964 *
1507583   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.13975575860529 * S_PC_1 + -0.35575487248938 * S_PC_10 + 
0.02983601640638 * S_PC_11 + 0.26434219975941 * S_PC_12 + -0.40948666727232 * S_PC_13 + 
0.20186769345139 * S_PC_14 + 0.45170616775352 * S_PC_15 + 0.00258771853777 * S_PC_16 + 
-0.40888320799045 * S_PC_17 + -0.18037761561331 * S_PC_2 + 0.37721304589753 * S_PC_3 + 
-0.19118634307032 * S_PC_4 + -0.63151251587428 * S_PC_5 + -0.23281740347406 * S_PC_6 + 
-0.0828679380821 * S_PC_7 + 0.76178109678759 * S_PC_8 + 0.57258725782556 * S_PC_9 + 
-0.15432480762964 * S_Year_Birth ;
1507584   +   H17  =     0.31605900784266 * S_PC_1  +     0.34833374230803 * S_PC_10
1507585   +          +     0.23320656792555 * S_PC_11  +     0.16099686297534 * S_PC_12
1507586   +          +     0.27657165659696 * S_PC_13  +    -0.16386328713702 * S_PC_14
1507587   +          +    -0.07457567503477 * S_PC_15  +    -0.48573025440334 * S_PC_16
1507588   +          +      0.0321218057153 * S_PC_17  +     0.75395393692804 * S_PC_2
1507589   +          +     0.58102263323057 * S_PC_3  +     0.03732139018296 * S_PC_4
1507590   +          +     0.21321560935535 * S_PC_5  +    -0.17682802646605 * S_PC_6
1507591   +          +    -0.25681275271584 * S_PC_7  +    -0.26821028181474 * S_PC_8
1507592   +          +     0.15279812226638 * S_PC_9  +     0.37146205771289 *
1507593   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = 0.31605900784266 * S_PC_1 + 0.34833374230803 * S_PC_10 + 
0.23320656792555 * S_PC_11 + 0.16099686297534 * S_PC_12 + 0.27657165659696 * S_PC_13 + 
-0.16386328713702 * S_PC_14 + -0.07457567503477 * S_PC_15 + -0.48573025440334 * S_PC_16 + 
0.0321218057153 * S_PC_17 + 0.75395393692804 * S_PC_2 + 0.58102263323057 * S_PC_3 + 
0.03732139018296 * S_PC_4 + 0.21321560935535 * S_PC_5 + -0.17682802646605 * S_PC_6 + 
-0.25681275271584 * S_PC_7 + -0.26821028181474 * S_PC_8 + 0.15279812226638 * S_PC_9 + 
0.37146205771289 * S_Year_Birth ;
1507594   +   H11  =    -1.16794994414366 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.16794994414366 + H11 ;
1507595   +   H12  =     1.34950067589415 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.34950067589415 + H12 ;
1507596   +   H13  =    -0.44254911274099 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44254911274099 + H13 ;
1507597   +   H14  =     0.15367849524818 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.15367849524818 + H14 ;
1507598   +   H15  =    -1.51939092158903 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.51939092158903 + H15 ;
1507599   +   H16  =      0.6953452432569 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.6953452432569 + H16 ;
1507600   +   H17  =     0.58084316489966 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.58084316489966 + H17 ;
1507601   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1507602   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1507603   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1507604   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1507605   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1507606   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1507607   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1507608   +END;
MPRINT(EM_DIAGRAM):   END;
1507609   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1507610   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1507611   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1507612   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1507613   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1507614   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1507615   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1507616   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1507617   +END;
MPRINT(EM_DIAGRAM):   END;
1507618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507619   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1507620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507621   +
1507622   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1507623   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1507624   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1507625   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1507626   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1507627   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1507628   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1507629   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1507630   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1507631   +end;
MPRINT(EM_DIAGRAM):   end;
1507632   +else do;
MPRINT(EM_DIAGRAM):   else do;
1507633   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1507634   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1507635   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1507636   +   end;
MPRINT(EM_DIAGRAM):   end;
1507637   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1507638   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1507639   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1507640   +   end;
MPRINT(EM_DIAGRAM):   end;
1507641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1507642   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1507643   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1507644   +   end;
MPRINT(EM_DIAGRAM):   end;
1507645   +end;
MPRINT(EM_DIAGRAM):   end;
1507646   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1507647   +   P_DepVar1  =    -1.61984691421844 * H11  +    -2.05503974494971 * H12
1507648   +          +    -1.93074257008285 * H13  +    -2.19463525441367 * H14
1507649   +          +     1.77553865420261 * H15  +     1.01400297881478 * H16
1507650   +          +     -1.9246974233586 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.61984691421844 * H11 + -2.05503974494971 * H12 + 
-1.93074257008285 * H13 + -2.19463525441367 * H14 + 1.77553865420261 * H15 + 1.01400297881478 
* H16 + -1.9246974233586 * H17 ;
1507651   +   P_DepVar1  =    -2.20781421095695 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.20781421095695 + P_DepVar1 ;
1507652   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1507653   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1507654   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1507655   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1507656   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1507657   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1507658   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1507659   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1507660   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1507661   +END;
MPRINT(EM_DIAGRAM):   END;
1507662   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1507663   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1507664   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1507665   +END;
MPRINT(EM_DIAGRAM):   END;
1507666   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1507667   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1507668   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1507669   +END;
MPRINT(EM_DIAGRAM):   END;
1507670   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1507671   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1507672   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1507673   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1507674   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1507675   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1507676   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1507677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507678   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1507679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1507680   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1507681   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1507682   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1507683   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1507684   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1507685   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1507686   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1507687   +END;
MPRINT(EM_DIAGRAM):   END;
1507688   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1507689   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1507690   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1507691   +drop
1507692   +H11
1507693   +H12
1507694   +H13
1507695   +H14
1507696   +H15
1507697   +H16
1507698   +H17
1507699   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1507700   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1507701    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL12_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1507702    quit;
1507703    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1507704    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1507705    * Neural12: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural12: Computing metadata for TRAIN data;
1507706    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural12\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural12_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural12_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural12_TRAIN out=WORK.M3QMAOPP noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QMAOPP;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QMAOPP(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QMAOPP;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QMAOPP;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2_G3A0B NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_G3A0B;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_G3A0B;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2IQP9X7(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_G3A0B;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_G3A0B;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_G3A0B;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_G3A0B;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_G3A0B;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural12";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural12";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural12: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1508018    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1508019    set EMWS8.Neural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural12_EMINFO;
1508020    where DATA='Neural12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1508021    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL12_EMINFO.
      WHERE (DATA='Neural12') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1508022    data EMWS8.Neural12_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural12_EMINFO;
1508023    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1508024    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1508025    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1508029    run;
1508030    data EMWS8.Neural12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_EMINFO;
1508031    set EMWS8.Neural12_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural12_EMINFO WORK.MODELTEMP_INFO;
1508032    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL12_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1508033    proc sort data = EMWS8.Neural12_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural12_EMINFO NOTHREADS;
1508034    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1508035    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL12_EMINFO.
NOTE: The data set EMWS8.NEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1508036    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1508037    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1508038    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1508039    proc sort data = EMWS8.Neural12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1508040    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1508041    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL12_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1508042    data EMWS8.Neural12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_EMINFO;
1508043    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1508044    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1508045    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL12_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1508046    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1508047    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1508048    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1508049    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL12_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
