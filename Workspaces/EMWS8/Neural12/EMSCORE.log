MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.12 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                16. April 2016
Time:                20.12 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O07RVMIJ 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O07RVMIJ new;
MPRINT(EM_DIAGRAM):   run;
397368     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
397369     set EMWS8.Neural12_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural12_OUTKEY;
397370     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
397371     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set EMWS8.NEURAL12_OUTKEY.
NOTE: The data set WORK.OUTKEY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

397372     filename emflow
397372   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural12: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
397373     *------------------------------------------------------------*;
397374     * Neural12: Scoring DATA data;
397375     *------------------------------------------------------------*;
397376     data EMWS8.Neural12_TRAIN
397377     / view=EMWS8.Neural12_TRAIN
397378     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_TRAIN / view=EMWS8.Neural12_TRAIN ;
397379     set EMWS8.PRINCOMP_TRAIN
397380     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
397381     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas.
397382    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
397383    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
397384    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
397385    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
397386    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
397387    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
397388    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
397389    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
397390    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
397391    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
397392    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
397393    +LENGTH _WARN_ $4
397394    +      F_DepVar  $ 12
397395    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
397396    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
397397    +
397398    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
397399    +
397400    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
397401    +
397402    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
397403    +
397404    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
397405    +
397406    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
397407    +
397408    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
397409    +
397410    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
397411    +
397412    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
397413    +
397414    +      label S_PC_18 = 'Standard: PC_18' ;
MPRINT(EM_DIAGRAM):   label S_PC_18 = 'Standard: PC_18' ;
397415    +
397416    +      label S_PC_19 = 'Standard: PC_19' ;
MPRINT(EM_DIAGRAM):   label S_PC_19 = 'Standard: PC_19' ;
397417    +
397418    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
397419    +
397420    +      label S_PC_20 = 'Standard: PC_20' ;
MPRINT(EM_DIAGRAM):   label S_PC_20 = 'Standard: PC_20' ;
397421    +
397422    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
397423    +
397424    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
397425    +
397426    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
397427    +
397428    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
397429    +
397430    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
397431    +
397432    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
397433    +
397434    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
397435    +
397436    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
397437    +
397438    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
397439    +
397440    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
397441    +
397442    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
397443    +
397444    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
397445    +
397446    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
397447    +
397448    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
397449    +
397450    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
397451    +
397452    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
397453    +
397454    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
397455    +
397456    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
397457    +
397458    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
397459    +
397460    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
397461    +
397462    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
397463    +
397464    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
397465    +
397466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
397467    +*** Checking missing input Interval
397468    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
397469    +
397470    +IF NMISS(
397471    +   PC_1 ,
397472    +   PC_10 ,
397473    +   PC_11 ,
397474    +   PC_12 ,
397475    +   PC_13 ,
397476    +   PC_14 ,
397477    +   PC_15 ,
397478    +   PC_16 ,
397479    +   PC_17 ,
397480    +   PC_18 ,
397481    +   PC_19 ,
397482    +   PC_2 ,
397483    +   PC_20 ,
397484    +   PC_3 ,
397485    +   PC_4 ,
397486    +   PC_5 ,
397487    +   PC_6 ,
397488    +   PC_7 ,
397489    +   PC_8 ,
397490    +   PC_9   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_18 , PC_19 , PC_2 , PC_20 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 ) THEN 
DO;
397491    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
397492    +
397493    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
397494    +END;
MPRINT(EM_DIAGRAM):   END;
397495    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
397496    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
397497    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
397498    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
397499    +   S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
397500    +   S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
397501    +   S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
397502    +   S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
397503    +   S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
397504    +   S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
397505    +   S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
397506    +   S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
397507    +   S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
397508    +   S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
397509    +   S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
397510    +   S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
397511    +   S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
397512    +   S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
397513    +   S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
397514    +   S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
397515    +   S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
397516    +   S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
397517    +   S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
397518    +   S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
397519    +END;
MPRINT(EM_DIAGRAM):   END;
397520    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
397521    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
397522    +   ELSE S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
397523    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
397524    +   ELSE S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
397525    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
397526    +   ELSE S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
397527    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
397528    +   ELSE S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
397529    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
397530    +   ELSE S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
397531    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
397532    +   ELSE S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
397533    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
397534    +   ELSE S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
397535    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
397536    +   ELSE S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
397537    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
397538    +   ELSE S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
397539    +   IF MISSING( PC_18 ) THEN S_PC_18  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_18 ) THEN S_PC_18 = . ;
397540    +   ELSE S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
397541    +   IF MISSING( PC_19 ) THEN S_PC_19  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_19 ) THEN S_PC_19 = . ;
397542    +   ELSE S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
397543    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
397544    +   ELSE S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
397545    +   IF MISSING( PC_20 ) THEN S_PC_20  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_20 ) THEN S_PC_20 = . ;
397546    +   ELSE S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
397547    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
397548    +   ELSE S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
397549    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
397550    +   ELSE S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
397551    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
397552    +   ELSE S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
397553    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
397554    +   ELSE S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
397555    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
397556    +   ELSE S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
397557    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
397558    +   ELSE S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
397559    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
397560    +   ELSE S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
397561    +END;
MPRINT(EM_DIAGRAM):   END;
397562    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
397563    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
397564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
397565    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
397566    +   H11  =     0.21037801380944 * S_PC_1  +    -0.08720829282004 * S_PC_10
397567    +          +     0.25215120033315 * S_PC_11  +    -0.10961191645583 * S_PC_12
397568    +          +     0.02959554437113 * S_PC_13  +     0.07624433904545 * S_PC_14
397569    +          +    -0.22491072953103 * S_PC_15  +     0.29449064969788 * S_PC_16
397570    +          +     0.17317833744584 * S_PC_17  +     0.05429827397853 * S_PC_18
397571    +          +    -0.33992024219542 * S_PC_19  +     0.16054216143875 * S_PC_2
397572    +          +    -0.10166058652456 * S_PC_20  +     0.52599949123306 * S_PC_3
397573    +          +    -0.17932881666828 * S_PC_4  +     0.23725630406368 * S_PC_5
397574    +          +     0.07212115381489 * S_PC_6  +    -0.03071464968752 * S_PC_7
397575    +          +     0.15702910019697 * S_PC_8  +     0.14453952623388 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H11 = 0.21037801380944 * S_PC_1 + -0.08720829282004 * S_PC_10 + 
0.25215120033315 * S_PC_11 + -0.10961191645583 * S_PC_12 + 0.02959554437113 * S_PC_13 + 
0.07624433904545 * S_PC_14 + -0.22491072953103 * S_PC_15 + 0.29449064969788 * S_PC_16 + 
0.17317833744584 * S_PC_17 + 0.05429827397853 * S_PC_18 + -0.33992024219542 * S_PC_19 + 
0.16054216143875 * S_PC_2 + -0.10166058652456 * S_PC_20 + 0.52599949123306 * S_PC_3 + 
-0.17932881666828 * S_PC_4 + 0.23725630406368 * S_PC_5 + 0.07212115381489 * S_PC_6 + 
-0.03071464968752 * S_PC_7 + 0.15702910019697 * S_PC_8 + 0.14453952623388 * S_PC_9 ;
397576    +   H12  =     0.88405095372457 * S_PC_1  +     0.10148398864269 * S_PC_10
397577    +          +    -0.20705974766573 * S_PC_11  +     0.57551339495197 * S_PC_12
397578    +          +     0.16357248480022 * S_PC_13  +     0.24116548390027 * S_PC_14
397579    +          +     -0.6508034312555 * S_PC_15  +     -0.0243960411688 * S_PC_16
397580    +          +     0.30769870057511 * S_PC_17  +    -0.30964713660972 * S_PC_18
397581    +          +    -0.13939406660467 * S_PC_19  +    -0.34991654543716 * S_PC_2
397582    +          +     0.64413592233679 * S_PC_20  +      0.0658962473494 * S_PC_3
397583    +          +    -0.12286813779535 * S_PC_4  +     0.26819293542507 * S_PC_5
397584    +          +    -0.04181157680526 * S_PC_6  +    -0.07508075768059 * S_PC_7
397585    +          +     0.05928089157964 * S_PC_8  +    -0.08986153416155 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88405095372457 * S_PC_1 + 0.10148398864269 * S_PC_10 + 
-0.20705974766573 * S_PC_11 + 0.57551339495197 * S_PC_12 + 0.16357248480022 * S_PC_13 + 
0.24116548390027 * S_PC_14 + -0.6508034312555 * S_PC_15 + -0.0243960411688 * S_PC_16 + 
0.30769870057511 * S_PC_17 + -0.30964713660972 * S_PC_18 + -0.13939406660467 * S_PC_19 + 
-0.34991654543716 * S_PC_2 + 0.64413592233679 * S_PC_20 + 0.0658962473494 * S_PC_3 + 
-0.12286813779535 * S_PC_4 + 0.26819293542507 * S_PC_5 + -0.04181157680526 * S_PC_6 + 
-0.07508075768059 * S_PC_7 + 0.05928089157964 * S_PC_8 + -0.08986153416155 * S_PC_9 ;
397586    +   H13  =    -0.26220753747273 * S_PC_1  +     0.03442558202065 * S_PC_10
397587    +          +    -0.19433654238588 * S_PC_11  +     0.85130648090662 * S_PC_12
397588    +          +     0.21422389390385 * S_PC_13  +    -0.52342060859662 * S_PC_14
397589    +          +      0.0388266527387 * S_PC_15  +     0.56471604935065 * S_PC_16
397590    +          +     0.22585809206344 * S_PC_17  +     0.07524663398993 * S_PC_18
397591    +          +    -0.38946225238309 * S_PC_19  +    -0.11615992943564 * S_PC_2
397592    +          +     0.26054241711905 * S_PC_20  +    -0.75992066813022 * S_PC_3
397593    +          +    -0.00432991607862 * S_PC_4  +     0.44052817293218 * S_PC_5
397594    +          +    -0.08395801527515 * S_PC_6  +    -0.12591883723345 * S_PC_7
397595    +          +     0.36879609646015 * S_PC_8  +      0.2632138000896 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H13 = -0.26220753747273 * S_PC_1 + 0.03442558202065 * S_PC_10 + 
-0.19433654238588 * S_PC_11 + 0.85130648090662 * S_PC_12 + 0.21422389390385 * S_PC_13 + 
-0.52342060859662 * S_PC_14 + 0.0388266527387 * S_PC_15 + 0.56471604935065 * S_PC_16 + 
0.22585809206344 * S_PC_17 + 0.07524663398993 * S_PC_18 + -0.38946225238309 * S_PC_19 + 
-0.11615992943564 * S_PC_2 + 0.26054241711905 * S_PC_20 + -0.75992066813022 * S_PC_3 + 
-0.00432991607862 * S_PC_4 + 0.44052817293218 * S_PC_5 + -0.08395801527515 * S_PC_6 + 
-0.12591883723345 * S_PC_7 + 0.36879609646015 * S_PC_8 + 0.2632138000896 * S_PC_9 ;
397596    +   H14  =    -1.10332079251724 * S_PC_1  +    -0.08123568455324 * S_PC_10
397597    +          +     0.42261570085907 * S_PC_11  +     0.36758900386029 * S_PC_12
397598    +          +    -0.23703857950508 * S_PC_13  +     0.18032772888517 * S_PC_14
397599    +          +    -0.15053571104265 * S_PC_15  +     -0.1589584091009 * S_PC_16
397600    +          +     0.21333658464729 * S_PC_17  +    -0.16393759287422 * S_PC_18
397601    +          +    -0.22679606018271 * S_PC_19  +      0.3541992287872 * S_PC_2
397602    +          +     0.63757273317394 * S_PC_20  +    -0.30553453071452 * S_PC_3
397603    +          +     0.45024455800823 * S_PC_4  +     0.38062279600912 * S_PC_5
397604    +          +     0.05271603852281 * S_PC_6  +      0.1172059009627 * S_PC_7
397605    +          +     0.15540054384439 * S_PC_8  +    -0.22351383134415 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H14 = -1.10332079251724 * S_PC_1 + -0.08123568455324 * S_PC_10 + 
0.42261570085907 * S_PC_11 + 0.36758900386029 * S_PC_12 + -0.23703857950508 * S_PC_13 + 
0.18032772888517 * S_PC_14 + -0.15053571104265 * S_PC_15 + -0.1589584091009 * S_PC_16 + 
0.21333658464729 * S_PC_17 + -0.16393759287422 * S_PC_18 + -0.22679606018271 * S_PC_19 + 
0.3541992287872 * S_PC_2 + 0.63757273317394 * S_PC_20 + -0.30553453071452 * S_PC_3 + 
0.45024455800823 * S_PC_4 + 0.38062279600912 * S_PC_5 + 0.05271603852281 * S_PC_6 + 
0.1172059009627 * S_PC_7 + 0.15540054384439 * S_PC_8 + -0.22351383134415 * S_PC_9 ;
397606    +   H15  =     0.19722861430254 * S_PC_1  +      -0.667653482864 * S_PC_10
397607    +          +    -0.19496333828312 * S_PC_11  +     0.79234299110326 * S_PC_12
397608    +          +     0.51866755972719 * S_PC_13  +    -0.43702026903245 * S_PC_14
397609    +          +    -0.82282394942135 * S_PC_15  +      0.0235853486695 * S_PC_16
397610    +          +      0.3602307738079 * S_PC_17  +     0.19705006062864 * S_PC_18
397611    +          +     0.02386851976074 * S_PC_19  +    -0.19836948779695 * S_PC_2
397612    +          +    -0.01490769126602 * S_PC_20  +      0.4581541549854 * S_PC_3
397613    +          +     0.07547366568267 * S_PC_4  +    -0.06699445246048 * S_PC_5
397614    +          +     0.13752724959699 * S_PC_6  +    -0.17050272374436 * S_PC_7
397615    +          +     0.24809374094175 * S_PC_8  +      0.3051219560598 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H15 = 0.19722861430254 * S_PC_1 + -0.667653482864 * S_PC_10 + 
-0.19496333828312 * S_PC_11 + 0.79234299110326 * S_PC_12 + 0.51866755972719 * S_PC_13 + 
-0.43702026903245 * S_PC_14 + -0.82282394942135 * S_PC_15 + 0.0235853486695 * S_PC_16 + 
0.3602307738079 * S_PC_17 + 0.19705006062864 * S_PC_18 + 0.02386851976074 * S_PC_19 + 
-0.19836948779695 * S_PC_2 + -0.01490769126602 * S_PC_20 + 0.4581541549854 * S_PC_3 + 
0.07547366568267 * S_PC_4 + -0.06699445246048 * S_PC_5 + 0.13752724959699 * S_PC_6 + 
-0.17050272374436 * S_PC_7 + 0.24809374094175 * S_PC_8 + 0.3051219560598 * S_PC_9 ;
397616    +   H16  =     0.04979563116116 * S_PC_1  +     0.37425456473496 * S_PC_10
397617    +          +    -0.52183397584571 * S_PC_11  +     -0.0492951707684 * S_PC_12
397618    +          +     0.49720884559544 * S_PC_13  +      0.0687562053267 * S_PC_14
397619    +          +     0.34758368501778 * S_PC_15  +    -0.46010673440088 * S_PC_16
397620    +          +    -0.23718460209136 * S_PC_17  +     0.52295717376588 * S_PC_18
397621    +          +     -0.1312007800799 * S_PC_19  +    -0.54336616713197 * S_PC_2
397622    +          +     0.01512890583449 * S_PC_20  +    -0.45766049132105 * S_PC_3
397623    +          +     0.08818801221838 * S_PC_4  +     0.91033430252186 * S_PC_5
397624    +          +     0.13421592394868 * S_PC_6  +    -0.02478206071544 * S_PC_7
397625    +          +     0.16086023782085 * S_PC_8  +    -0.04221322893874 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H16 = 0.04979563116116 * S_PC_1 + 0.37425456473496 * S_PC_10 + 
-0.52183397584571 * S_PC_11 + -0.0492951707684 * S_PC_12 + 0.49720884559544 * S_PC_13 + 
0.0687562053267 * S_PC_14 + 0.34758368501778 * S_PC_15 + -0.46010673440088 * S_PC_16 + 
-0.23718460209136 * S_PC_17 + 0.52295717376588 * S_PC_18 + -0.1312007800799 * S_PC_19 + 
-0.54336616713197 * S_PC_2 + 0.01512890583449 * S_PC_20 + -0.45766049132105 * S_PC_3 + 
0.08818801221838 * S_PC_4 + 0.91033430252186 * S_PC_5 + 0.13421592394868 * S_PC_6 + 
-0.02478206071544 * S_PC_7 + 0.16086023782085 * S_PC_8 + -0.04221322893874 * S_PC_9 ;
397626    +   H17  =     0.26181771079411 * S_PC_1  +     0.15488655843145 * S_PC_10
397627    +          +     0.09890835982688 * S_PC_11  +     0.38169216125028 * S_PC_12
397628    +          +     0.35884179766984 * S_PC_13  +    -0.11600943215112 * S_PC_14
397629    +          +    -0.35075827402374 * S_PC_15  +     0.30212406237593 * S_PC_16
397630    +          +     0.35993569225677 * S_PC_17  +    -0.34585866895929 * S_PC_18
397631    +          +     0.31800568920635 * S_PC_19  +    -0.04922893376182 * S_PC_2
397632    +          +    -0.31518322301322 * S_PC_20  +    -0.20723868513881 * S_PC_3
397633    +          +     0.14733585684097 * S_PC_4  +     0.53855314474497 * S_PC_5
397634    +          +     0.33707150284902 * S_PC_6  +     0.30926728458609 * S_PC_7
397635    +          +     0.19917027684509 * S_PC_8  +     0.31578868608197 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H17 = 0.26181771079411 * S_PC_1 + 0.15488655843145 * S_PC_10 + 
0.09890835982688 * S_PC_11 + 0.38169216125028 * S_PC_12 + 0.35884179766984 * S_PC_13 + 
-0.11600943215112 * S_PC_14 + -0.35075827402374 * S_PC_15 + 0.30212406237593 * S_PC_16 + 
0.35993569225677 * S_PC_17 + -0.34585866895929 * S_PC_18 + 0.31800568920635 * S_PC_19 + 
-0.04922893376182 * S_PC_2 + -0.31518322301322 * S_PC_20 + -0.20723868513881 * S_PC_3 + 
0.14733585684097 * S_PC_4 + 0.53855314474497 * S_PC_5 + 0.33707150284902 * S_PC_6 + 
0.30926728458609 * S_PC_7 + 0.19917027684509 * S_PC_8 + 0.31578868608197 * S_PC_9 ;
397636    +   H11  =     0.91208584176561 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.91208584176561 + H11 ;
397637    +   H12  =      0.2919162127953 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.2919162127953 + H12 ;
397638    +   H13  =    -0.58626673853356 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.58626673853356 + H13 ;
397639    +   H14  =     1.84514271278893 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.84514271278893 + H14 ;
397640    +   H15  =    -0.12598092081233 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.12598092081233 + H15 ;
397641    +   H16  =     0.44088612390896 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.44088612390896 + H16 ;
397642    +   H17  =     0.10026569431322 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.10026569431322 + H17 ;
397643    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
397644    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
397645    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
397646    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
397647    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
397648    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
397649    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
397650    +END;
MPRINT(EM_DIAGRAM):   END;
397651    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
397652    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
397653    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
397654    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
397655    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
397656    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
397657    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
397658    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
397659    +END;
MPRINT(EM_DIAGRAM):   END;
397660    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
397661    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
397662    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
397663    +
397664    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
397665    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
397666    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
397667    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
397668    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
397669    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
397670    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
397671    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
397672    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
397673    +end;
MPRINT(EM_DIAGRAM):   end;
397674    +else do;
MPRINT(EM_DIAGRAM):   else do;
397675    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
397676    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
397677    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
397678    +   end;
MPRINT(EM_DIAGRAM):   end;
397679    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
397680    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
397681    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
397682    +   end;
MPRINT(EM_DIAGRAM):   end;
397683    +   else do;
MPRINT(EM_DIAGRAM):   else do;
397684    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
397685    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
397686    +   end;
MPRINT(EM_DIAGRAM):   end;
397687    +end;
MPRINT(EM_DIAGRAM):   end;
397688    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
397689    +   P_DepVar1  =    -0.61260323097533 * H11  +     1.30090555711801 * H12
397690    +          +      1.7362874913532 * H13  +    -2.09287445327585 * H14
397691    +          +     1.21665749212191 * H15  +      1.4839177023068 * H16
397692    +          +      0.9955783523079 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.61260323097533 * H11 + 1.30090555711801 * H12 + 
1.7362874913532 * H13 + -2.09287445327585 * H14 + 1.21665749212191 * H15 + 1.4839177023068 * 
H16 + 0.9955783523079 * H17 ;
397693    +   P_DepVar1  =    -1.81991298094829 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.81991298094829 + P_DepVar1 ;
397694    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
397695    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
397696    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
397697    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
397698    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
397699    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
397700    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
397701    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
397702    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
397703    +END;
MPRINT(EM_DIAGRAM):   END;
397704    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
397705    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
397706    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
397707    +END;
MPRINT(EM_DIAGRAM):   END;
397708    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
397709    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
397710    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
397711    +END;
MPRINT(EM_DIAGRAM):   END;
397712    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
397713    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
397714    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
397715    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
397716    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
397717    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
397718    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
397719    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
397720    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
397721    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
397722    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
397723    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
397724    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
397725    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
397726    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
397727    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
397728    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
397729    +END;
MPRINT(EM_DIAGRAM):   END;
397730    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
397731    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
397732    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
397733    +drop
397734    +H11
397735    +H12
397736    +H13
397737    +H14
397738    +H15
397739    +H16
397740    +H17
397741    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
397742    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
397743     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL12_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
397744     quit;
397745     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
397746     filename emflow
397746   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural12: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
397747     *------------------------------------------------------------*;
397748     * Neural12: Scoring VALIDATE data;
397749     *------------------------------------------------------------*;
397750     data EMWS8.Neural12_VALIDATE
397751     / view=EMWS8.Neural12_VALIDATE
397752     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_VALIDATE / view=EMWS8.Neural12_VALIDATE ;
397753     set EMWS8.PRINCOMP_VALIDATE
397754     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
397755     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas.
397756    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
397757    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
397758    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
397759    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
397760    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
397761    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
397762    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
397763    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
397764    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
397765    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
397766    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
397767    +LENGTH _WARN_ $4
397768    +      F_DepVar  $ 12
397769    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
397770    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
397771    +
397772    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
397773    +
397774    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
397775    +
397776    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
397777    +
397778    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
397779    +
397780    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
397781    +
397782    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
397783    +
397784    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
397785    +
397786    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
397787    +
397788    +      label S_PC_18 = 'Standard: PC_18' ;
MPRINT(EM_DIAGRAM):   label S_PC_18 = 'Standard: PC_18' ;
397789    +
397790    +      label S_PC_19 = 'Standard: PC_19' ;
MPRINT(EM_DIAGRAM):   label S_PC_19 = 'Standard: PC_19' ;
397791    +
397792    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
397793    +
397794    +      label S_PC_20 = 'Standard: PC_20' ;
MPRINT(EM_DIAGRAM):   label S_PC_20 = 'Standard: PC_20' ;
397795    +
397796    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
397797    +
397798    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
397799    +
397800    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
397801    +
397802    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
397803    +
397804    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
397805    +
397806    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
397807    +
397808    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
397809    +
397810    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
397811    +
397812    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
397813    +
397814    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
397815    +
397816    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
397817    +
397818    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
397819    +
397820    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
397821    +
397822    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
397823    +
397824    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
397825    +
397826    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
397827    +
397828    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
397829    +
397830    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
397831    +
397832    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
397833    +
397834    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
397835    +
397836    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
397837    +
397838    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
397839    +
397840    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
397841    +*** Checking missing input Interval
397842    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
397843    +
397844    +IF NMISS(
397845    +   PC_1 ,
397846    +   PC_10 ,
397847    +   PC_11 ,
397848    +   PC_12 ,
397849    +   PC_13 ,
397850    +   PC_14 ,
397851    +   PC_15 ,
397852    +   PC_16 ,
397853    +   PC_17 ,
397854    +   PC_18 ,
397855    +   PC_19 ,
397856    +   PC_2 ,
397857    +   PC_20 ,
397858    +   PC_3 ,
397859    +   PC_4 ,
397860    +   PC_5 ,
397861    +   PC_6 ,
397862    +   PC_7 ,
397863    +   PC_8 ,
397864    +   PC_9   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_18 , PC_19 , PC_2 , PC_20 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 ) THEN 
DO;
397865    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
397866    +
397867    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
397868    +END;
MPRINT(EM_DIAGRAM):   END;
397869    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
397870    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
397871    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
397872    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
397873    +   S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
397874    +   S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
397875    +   S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
397876    +   S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
397877    +   S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
397878    +   S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
397879    +   S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
397880    +   S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
397881    +   S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
397882    +   S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
397883    +   S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
397884    +   S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
397885    +   S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
397886    +   S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
397887    +   S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
397888    +   S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
397889    +   S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
397890    +   S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
397891    +   S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
397892    +   S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
397893    +END;
MPRINT(EM_DIAGRAM):   END;
397894    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
397895    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
397896    +   ELSE S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
397897    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
397898    +   ELSE S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
397899    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
397900    +   ELSE S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
397901    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
397902    +   ELSE S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
397903    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
397904    +   ELSE S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
397905    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
397906    +   ELSE S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
397907    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
397908    +   ELSE S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
397909    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
397910    +   ELSE S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
397911    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
397912    +   ELSE S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
397913    +   IF MISSING( PC_18 ) THEN S_PC_18  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_18 ) THEN S_PC_18 = . ;
397914    +   ELSE S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
397915    +   IF MISSING( PC_19 ) THEN S_PC_19  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_19 ) THEN S_PC_19 = . ;
397916    +   ELSE S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
397917    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
397918    +   ELSE S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
397919    +   IF MISSING( PC_20 ) THEN S_PC_20  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_20 ) THEN S_PC_20 = . ;
397920    +   ELSE S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
397921    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
397922    +   ELSE S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
397923    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
397924    +   ELSE S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
397925    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
397926    +   ELSE S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
397927    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
397928    +   ELSE S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
397929    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
397930    +   ELSE S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
397931    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
397932    +   ELSE S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
397933    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
397934    +   ELSE S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
397935    +END;
MPRINT(EM_DIAGRAM):   END;
397936    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
397937    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
397938    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
397939    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
397940    +   H11  =     0.21037801380944 * S_PC_1  +    -0.08720829282004 * S_PC_10
397941    +          +     0.25215120033315 * S_PC_11  +    -0.10961191645583 * S_PC_12
397942    +          +     0.02959554437113 * S_PC_13  +     0.07624433904545 * S_PC_14
397943    +          +    -0.22491072953103 * S_PC_15  +     0.29449064969788 * S_PC_16
397944    +          +     0.17317833744584 * S_PC_17  +     0.05429827397853 * S_PC_18
397945    +          +    -0.33992024219542 * S_PC_19  +     0.16054216143875 * S_PC_2
397946    +          +    -0.10166058652456 * S_PC_20  +     0.52599949123306 * S_PC_3
397947    +          +    -0.17932881666828 * S_PC_4  +     0.23725630406368 * S_PC_5
397948    +          +     0.07212115381489 * S_PC_6  +    -0.03071464968752 * S_PC_7
397949    +          +     0.15702910019697 * S_PC_8  +     0.14453952623388 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H11 = 0.21037801380944 * S_PC_1 + -0.08720829282004 * S_PC_10 + 
0.25215120033315 * S_PC_11 + -0.10961191645583 * S_PC_12 + 0.02959554437113 * S_PC_13 + 
0.07624433904545 * S_PC_14 + -0.22491072953103 * S_PC_15 + 0.29449064969788 * S_PC_16 + 
0.17317833744584 * S_PC_17 + 0.05429827397853 * S_PC_18 + -0.33992024219542 * S_PC_19 + 
0.16054216143875 * S_PC_2 + -0.10166058652456 * S_PC_20 + 0.52599949123306 * S_PC_3 + 
-0.17932881666828 * S_PC_4 + 0.23725630406368 * S_PC_5 + 0.07212115381489 * S_PC_6 + 
-0.03071464968752 * S_PC_7 + 0.15702910019697 * S_PC_8 + 0.14453952623388 * S_PC_9 ;
397950    +   H12  =     0.88405095372457 * S_PC_1  +     0.10148398864269 * S_PC_10
397951    +          +    -0.20705974766573 * S_PC_11  +     0.57551339495197 * S_PC_12
397952    +          +     0.16357248480022 * S_PC_13  +     0.24116548390027 * S_PC_14
397953    +          +     -0.6508034312555 * S_PC_15  +     -0.0243960411688 * S_PC_16
397954    +          +     0.30769870057511 * S_PC_17  +    -0.30964713660972 * S_PC_18
397955    +          +    -0.13939406660467 * S_PC_19  +    -0.34991654543716 * S_PC_2
397956    +          +     0.64413592233679 * S_PC_20  +      0.0658962473494 * S_PC_3
397957    +          +    -0.12286813779535 * S_PC_4  +     0.26819293542507 * S_PC_5
397958    +          +    -0.04181157680526 * S_PC_6  +    -0.07508075768059 * S_PC_7
397959    +          +     0.05928089157964 * S_PC_8  +    -0.08986153416155 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88405095372457 * S_PC_1 + 0.10148398864269 * S_PC_10 + 
-0.20705974766573 * S_PC_11 + 0.57551339495197 * S_PC_12 + 0.16357248480022 * S_PC_13 + 
0.24116548390027 * S_PC_14 + -0.6508034312555 * S_PC_15 + -0.0243960411688 * S_PC_16 + 
0.30769870057511 * S_PC_17 + -0.30964713660972 * S_PC_18 + -0.13939406660467 * S_PC_19 + 
-0.34991654543716 * S_PC_2 + 0.64413592233679 * S_PC_20 + 0.0658962473494 * S_PC_3 + 
-0.12286813779535 * S_PC_4 + 0.26819293542507 * S_PC_5 + -0.04181157680526 * S_PC_6 + 
-0.07508075768059 * S_PC_7 + 0.05928089157964 * S_PC_8 + -0.08986153416155 * S_PC_9 ;
397960    +   H13  =    -0.26220753747273 * S_PC_1  +     0.03442558202065 * S_PC_10
397961    +          +    -0.19433654238588 * S_PC_11  +     0.85130648090662 * S_PC_12
397962    +          +     0.21422389390385 * S_PC_13  +    -0.52342060859662 * S_PC_14
397963    +          +      0.0388266527387 * S_PC_15  +     0.56471604935065 * S_PC_16
397964    +          +     0.22585809206344 * S_PC_17  +     0.07524663398993 * S_PC_18
397965    +          +    -0.38946225238309 * S_PC_19  +    -0.11615992943564 * S_PC_2
397966    +          +     0.26054241711905 * S_PC_20  +    -0.75992066813022 * S_PC_3
397967    +          +    -0.00432991607862 * S_PC_4  +     0.44052817293218 * S_PC_5
397968    +          +    -0.08395801527515 * S_PC_6  +    -0.12591883723345 * S_PC_7
397969    +          +     0.36879609646015 * S_PC_8  +      0.2632138000896 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H13 = -0.26220753747273 * S_PC_1 + 0.03442558202065 * S_PC_10 + 
-0.19433654238588 * S_PC_11 + 0.85130648090662 * S_PC_12 + 0.21422389390385 * S_PC_13 + 
-0.52342060859662 * S_PC_14 + 0.0388266527387 * S_PC_15 + 0.56471604935065 * S_PC_16 + 
0.22585809206344 * S_PC_17 + 0.07524663398993 * S_PC_18 + -0.38946225238309 * S_PC_19 + 
-0.11615992943564 * S_PC_2 + 0.26054241711905 * S_PC_20 + -0.75992066813022 * S_PC_3 + 
-0.00432991607862 * S_PC_4 + 0.44052817293218 * S_PC_5 + -0.08395801527515 * S_PC_6 + 
-0.12591883723345 * S_PC_7 + 0.36879609646015 * S_PC_8 + 0.2632138000896 * S_PC_9 ;
397970    +   H14  =    -1.10332079251724 * S_PC_1  +    -0.08123568455324 * S_PC_10
397971    +          +     0.42261570085907 * S_PC_11  +     0.36758900386029 * S_PC_12
397972    +          +    -0.23703857950508 * S_PC_13  +     0.18032772888517 * S_PC_14
397973    +          +    -0.15053571104265 * S_PC_15  +     -0.1589584091009 * S_PC_16
397974    +          +     0.21333658464729 * S_PC_17  +    -0.16393759287422 * S_PC_18
397975    +          +    -0.22679606018271 * S_PC_19  +      0.3541992287872 * S_PC_2
397976    +          +     0.63757273317394 * S_PC_20  +    -0.30553453071452 * S_PC_3
397977    +          +     0.45024455800823 * S_PC_4  +     0.38062279600912 * S_PC_5
397978    +          +     0.05271603852281 * S_PC_6  +      0.1172059009627 * S_PC_7
397979    +          +     0.15540054384439 * S_PC_8  +    -0.22351383134415 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H14 = -1.10332079251724 * S_PC_1 + -0.08123568455324 * S_PC_10 + 
0.42261570085907 * S_PC_11 + 0.36758900386029 * S_PC_12 + -0.23703857950508 * S_PC_13 + 
0.18032772888517 * S_PC_14 + -0.15053571104265 * S_PC_15 + -0.1589584091009 * S_PC_16 + 
0.21333658464729 * S_PC_17 + -0.16393759287422 * S_PC_18 + -0.22679606018271 * S_PC_19 + 
0.3541992287872 * S_PC_2 + 0.63757273317394 * S_PC_20 + -0.30553453071452 * S_PC_3 + 
0.45024455800823 * S_PC_4 + 0.38062279600912 * S_PC_5 + 0.05271603852281 * S_PC_6 + 
0.1172059009627 * S_PC_7 + 0.15540054384439 * S_PC_8 + -0.22351383134415 * S_PC_9 ;
397980    +   H15  =     0.19722861430254 * S_PC_1  +      -0.667653482864 * S_PC_10
397981    +          +    -0.19496333828312 * S_PC_11  +     0.79234299110326 * S_PC_12
397982    +          +     0.51866755972719 * S_PC_13  +    -0.43702026903245 * S_PC_14
397983    +          +    -0.82282394942135 * S_PC_15  +      0.0235853486695 * S_PC_16
397984    +          +      0.3602307738079 * S_PC_17  +     0.19705006062864 * S_PC_18
397985    +          +     0.02386851976074 * S_PC_19  +    -0.19836948779695 * S_PC_2
397986    +          +    -0.01490769126602 * S_PC_20  +      0.4581541549854 * S_PC_3
397987    +          +     0.07547366568267 * S_PC_4  +    -0.06699445246048 * S_PC_5
397988    +          +     0.13752724959699 * S_PC_6  +    -0.17050272374436 * S_PC_7
397989    +          +     0.24809374094175 * S_PC_8  +      0.3051219560598 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H15 = 0.19722861430254 * S_PC_1 + -0.667653482864 * S_PC_10 + 
-0.19496333828312 * S_PC_11 + 0.79234299110326 * S_PC_12 + 0.51866755972719 * S_PC_13 + 
-0.43702026903245 * S_PC_14 + -0.82282394942135 * S_PC_15 + 0.0235853486695 * S_PC_16 + 
0.3602307738079 * S_PC_17 + 0.19705006062864 * S_PC_18 + 0.02386851976074 * S_PC_19 + 
-0.19836948779695 * S_PC_2 + -0.01490769126602 * S_PC_20 + 0.4581541549854 * S_PC_3 + 
0.07547366568267 * S_PC_4 + -0.06699445246048 * S_PC_5 + 0.13752724959699 * S_PC_6 + 
-0.17050272374436 * S_PC_7 + 0.24809374094175 * S_PC_8 + 0.3051219560598 * S_PC_9 ;
397990    +   H16  =     0.04979563116116 * S_PC_1  +     0.37425456473496 * S_PC_10
397991    +          +    -0.52183397584571 * S_PC_11  +     -0.0492951707684 * S_PC_12
397992    +          +     0.49720884559544 * S_PC_13  +      0.0687562053267 * S_PC_14
397993    +          +     0.34758368501778 * S_PC_15  +    -0.46010673440088 * S_PC_16
397994    +          +    -0.23718460209136 * S_PC_17  +     0.52295717376588 * S_PC_18
397995    +          +     -0.1312007800799 * S_PC_19  +    -0.54336616713197 * S_PC_2
397996    +          +     0.01512890583449 * S_PC_20  +    -0.45766049132105 * S_PC_3
397997    +          +     0.08818801221838 * S_PC_4  +     0.91033430252186 * S_PC_5
397998    +          +     0.13421592394868 * S_PC_6  +    -0.02478206071544 * S_PC_7
397999    +          +     0.16086023782085 * S_PC_8  +    -0.04221322893874 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H16 = 0.04979563116116 * S_PC_1 + 0.37425456473496 * S_PC_10 + 
-0.52183397584571 * S_PC_11 + -0.0492951707684 * S_PC_12 + 0.49720884559544 * S_PC_13 + 
0.0687562053267 * S_PC_14 + 0.34758368501778 * S_PC_15 + -0.46010673440088 * S_PC_16 + 
-0.23718460209136 * S_PC_17 + 0.52295717376588 * S_PC_18 + -0.1312007800799 * S_PC_19 + 
-0.54336616713197 * S_PC_2 + 0.01512890583449 * S_PC_20 + -0.45766049132105 * S_PC_3 + 
0.08818801221838 * S_PC_4 + 0.91033430252186 * S_PC_5 + 0.13421592394868 * S_PC_6 + 
-0.02478206071544 * S_PC_7 + 0.16086023782085 * S_PC_8 + -0.04221322893874 * S_PC_9 ;
398000    +   H17  =     0.26181771079411 * S_PC_1  +     0.15488655843145 * S_PC_10
398001    +          +     0.09890835982688 * S_PC_11  +     0.38169216125028 * S_PC_12
398002    +          +     0.35884179766984 * S_PC_13  +    -0.11600943215112 * S_PC_14
398003    +          +    -0.35075827402374 * S_PC_15  +     0.30212406237593 * S_PC_16
398004    +          +     0.35993569225677 * S_PC_17  +    -0.34585866895929 * S_PC_18
398005    +          +     0.31800568920635 * S_PC_19  +    -0.04922893376182 * S_PC_2
398006    +          +    -0.31518322301322 * S_PC_20  +    -0.20723868513881 * S_PC_3
398007    +          +     0.14733585684097 * S_PC_4  +     0.53855314474497 * S_PC_5
398008    +          +     0.33707150284902 * S_PC_6  +     0.30926728458609 * S_PC_7
398009    +          +     0.19917027684509 * S_PC_8  +     0.31578868608197 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H17 = 0.26181771079411 * S_PC_1 + 0.15488655843145 * S_PC_10 + 
0.09890835982688 * S_PC_11 + 0.38169216125028 * S_PC_12 + 0.35884179766984 * S_PC_13 + 
-0.11600943215112 * S_PC_14 + -0.35075827402374 * S_PC_15 + 0.30212406237593 * S_PC_16 + 
0.35993569225677 * S_PC_17 + -0.34585866895929 * S_PC_18 + 0.31800568920635 * S_PC_19 + 
-0.04922893376182 * S_PC_2 + -0.31518322301322 * S_PC_20 + -0.20723868513881 * S_PC_3 + 
0.14733585684097 * S_PC_4 + 0.53855314474497 * S_PC_5 + 0.33707150284902 * S_PC_6 + 
0.30926728458609 * S_PC_7 + 0.19917027684509 * S_PC_8 + 0.31578868608197 * S_PC_9 ;
398010    +   H11  =     0.91208584176561 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.91208584176561 + H11 ;
398011    +   H12  =      0.2919162127953 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.2919162127953 + H12 ;
398012    +   H13  =    -0.58626673853356 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.58626673853356 + H13 ;
398013    +   H14  =     1.84514271278893 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.84514271278893 + H14 ;
398014    +   H15  =    -0.12598092081233 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.12598092081233 + H15 ;
398015    +   H16  =     0.44088612390896 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.44088612390896 + H16 ;
398016    +   H17  =     0.10026569431322 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.10026569431322 + H17 ;
398017    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
398018    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
398019    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
398020    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
398021    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
398022    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
398023    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
398024    +END;
MPRINT(EM_DIAGRAM):   END;
398025    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
398026    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
398027    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
398028    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
398029    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
398030    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
398031    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
398032    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
398033    +END;
MPRINT(EM_DIAGRAM):   END;
398034    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
398035    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
398036    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
398037    +
398038    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
398039    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
398040    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
398041    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
398042    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
398043    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
398044    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
398045    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
398046    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
398047    +end;
MPRINT(EM_DIAGRAM):   end;
398048    +else do;
MPRINT(EM_DIAGRAM):   else do;
398049    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
398050    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
398051    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
398052    +   end;
MPRINT(EM_DIAGRAM):   end;
398053    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
398054    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
398055    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
398056    +   end;
MPRINT(EM_DIAGRAM):   end;
398057    +   else do;
MPRINT(EM_DIAGRAM):   else do;
398058    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
398059    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
398060    +   end;
MPRINT(EM_DIAGRAM):   end;
398061    +end;
MPRINT(EM_DIAGRAM):   end;
398062    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
398063    +   P_DepVar1  =    -0.61260323097533 * H11  +     1.30090555711801 * H12
398064    +          +      1.7362874913532 * H13  +    -2.09287445327585 * H14
398065    +          +     1.21665749212191 * H15  +      1.4839177023068 * H16
398066    +          +      0.9955783523079 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.61260323097533 * H11 + 1.30090555711801 * H12 + 
1.7362874913532 * H13 + -2.09287445327585 * H14 + 1.21665749212191 * H15 + 1.4839177023068 * 
H16 + 0.9955783523079 * H17 ;
398067    +   P_DepVar1  =    -1.81991298094829 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.81991298094829 + P_DepVar1 ;
398068    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
398069    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
398070    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
398071    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
398072    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
398073    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
398074    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
398075    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
398076    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
398077    +END;
MPRINT(EM_DIAGRAM):   END;
398078    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
398079    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
398080    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
398081    +END;
MPRINT(EM_DIAGRAM):   END;
398082    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
398083    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
398084    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
398085    +END;
MPRINT(EM_DIAGRAM):   END;
398086    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
398087    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
398088    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
398089    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
398090    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
398091    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
398092    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
398093    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
398094    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
398095    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
398096    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
398097    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
398098    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
398099    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
398100    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
398101    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
398102    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
398103    +END;
MPRINT(EM_DIAGRAM):   END;
398104    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
398105    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
398106    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
398107    +drop
398108    +H11
398109    +H12
398110    +H13
398111    +H14
398112    +H15
398113    +H16
398114    +H17
398115    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
398116    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
398117     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL12_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
398118     quit;
398119     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
398120     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
398121     * Neural12: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural12: Computing metadata for TRAIN data;
398122     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural12\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural12_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural12_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural12_TRAIN out=WORK.M1_02VSV noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_02VSV;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_02VSV(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_02VSV;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_02VSV;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M10AOV86 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10AOV86;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M10AOV86;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1I9DWFY(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M10AOV86;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10AOV86;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M10AOV86;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10AOV86;
MPRINT(EMADVISECOLUMNS):   set WORK.M10AOV86;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural12";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural12";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural12: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
398434     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
398435     set EMWS8.Neural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural12_EMINFO;
398436     where DATA='Neural12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
398437     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL12_EMINFO.
      WHERE (DATA='Neural12') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

398438     data EMWS8.Neural12_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural12_EMINFO;
398439     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
398440     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
398441     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
398445     run;
398446     data EMWS8.Neural12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_EMINFO;
398447     set EMWS8.Neural12_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural12_EMINFO WORK.MODELTEMP_INFO;
398448     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL12_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

398449     proc sort data = EMWS8.Neural12_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural12_EMINFO NOTHREADS;
398450     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
398451     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL12_EMINFO.
NOTE: The data set EMWS8.NEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

398452     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
398453     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
398454     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

398455     proc sort data = EMWS8.Neural12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
398456     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
398457     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL12_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

398458     data EMWS8.Neural12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_EMINFO;
398459     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
398460     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
398461     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL12_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

398462     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
398463     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
398464     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
398465     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL12_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
