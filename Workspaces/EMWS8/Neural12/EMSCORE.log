MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.26 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.26 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1GJ2L2T 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1GJ2L2T new;
MPRINT(EM_DIAGRAM):   run;
737878     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
737879     set EMWS8.Neural12_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural12_OUTKEY;
737880     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
737881     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 37 observations read from the data set EMWS8.NEURAL12_OUTKEY.
NOTE: The data set WORK.OUTKEY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

737882     filename emflow
737882   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural12: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
737883     *------------------------------------------------------------*;
737884     * Neural12: Scoring DATA data;
737885     *------------------------------------------------------------*;
737886     data EMWS8.Neural12_TRAIN
737887     / view=EMWS8.Neural12_TRAIN
737888     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_TRAIN / view=EMWS8.Neural12_TRAIN ;
737889     set EMWS8.PRINCOMP_TRAIN
737890     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
737891     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas.
737892    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
737893    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
737894    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
737895    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
737896    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
737897    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
737898    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
737899    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
737900    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
737901    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
737902    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
737903    +LENGTH _WARN_ $4
737904    +      F_DepVar  $ 12
737905    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
737906    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
737907    +
737908    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
737909    +
737910    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
737911    +
737912    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
737913    +
737914    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
737915    +
737916    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
737917    +
737918    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
737919    +
737920    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
737921    +
737922    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
737923    +
737924    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
737925    +
737926    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
737927    +
737928    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
737929    +
737930    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
737931    +
737932    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
737933    +
737934    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
737935    +
737936    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
737937    +
737938    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
737939    +
737940    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
737941    +
737942    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
737943    +
737944    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
737945    +
737946    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
737947    +
737948    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
737949    +
737950    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
737951    +
737952    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
737953    +
737954    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
737955    +
737956    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
737957    +
737958    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
737959    +
737960    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
737961    +
737962    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
737963    +
737964    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
737965    +
737966    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
737967    +
737968    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
737969    +
737970    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
737971    +
737972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
737973    +*** Checking missing input Interval
737974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
737975    +
737976    +IF NMISS(
737977    +   PC_1 ,
737978    +   PC_10 ,
737979    +   PC_11 ,
737980    +   PC_12 ,
737981    +   PC_13 ,
737982    +   PC_14 ,
737983    +   PC_15 ,
737984    +   PC_16 ,
737985    +   PC_17 ,
737986    +   PC_2 ,
737987    +   PC_3 ,
737988    +   PC_4 ,
737989    +   PC_5 ,
737990    +   PC_6 ,
737991    +   PC_7 ,
737992    +   PC_8 ,
737993    +   PC_9 ,
737994    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
737995    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
737996    +
737997    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
737998    +END;
MPRINT(EM_DIAGRAM):   END;
737999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738000    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
738001    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738002    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
738003    +   S_PC_1  = -3.6488918403387E-15 +     0.29892759566822 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.6488918403387E-15 + 0.29892759566822 * PC_1 ;
738004    +   S_PC_10  = -6.1105909646702E-15 +     0.82174055927533 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.1105909646702E-15 + 0.82174055927533 * PC_10 ;
738005    +   S_PC_11  =  5.5953279603159E-15 +       0.856249156402 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 5.5953279603159E-15 + 0.856249156402 * PC_11 ;
738006    +   S_PC_12  = -4.1145821078075E-15 +     0.88806609097186 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -4.1145821078075E-15 + 0.88806609097186 * PC_12 ;
738007    +   S_PC_13  =  1.4849812030115E-15 +     0.89678852922943 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4849812030115E-15 + 0.89678852922943 * PC_13 ;
738008    +   S_PC_14  = -6.2973928075572E-15 +     0.90339751679168 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.2973928075572E-15 + 0.90339751679168 * PC_14 ;
738009    +   S_PC_15  = -5.8948982757007E-16 +     0.92999222699092 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -5.8948982757007E-16 + 0.92999222699092 * PC_15 ;
738010    +   S_PC_16  = -2.5957971712491E-15 +      0.9511809992322 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.5957971712491E-15 + 0.9511809992322 * PC_16 ;
738011    +   S_PC_17  =  3.6303451348395E-15 +     0.99884839954107 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 3.6303451348395E-15 + 0.99884839954107 * PC_17 ;
738012    +   S_PC_2  =  6.4135165190946E-15 +     0.54372947518581 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4135165190946E-15 + 0.54372947518581 * PC_2 ;
738013    +   S_PC_3  =  2.2514555608207E-15 +     0.55367420195889 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2514555608207E-15 + 0.55367420195889 * PC_3 ;
738014    +   S_PC_4  = -3.8797382198993E-15 +     0.63693509045378 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.8797382198993E-15 + 0.63693509045378 * PC_4 ;
738015    +   S_PC_5  = -4.8238591945923E-15 +      0.6666904967587 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.8238591945923E-15 + 0.6666904967587 * PC_5 ;
738016    +   S_PC_6  =  1.5849559140428E-15 +     0.70534780307004 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5849559140428E-15 + 0.70534780307004 * PC_6 ;
738017    +   S_PC_7  =  3.1562291763867E-16 +     0.74930538239816 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 3.1562291763867E-16 + 0.74930538239816 * PC_7 ;
738018    +   S_PC_8  = -2.4599196832342E-15 +     0.77164443961071 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.4599196832342E-15 + 0.77164443961071 * PC_8 ;
738019    +   S_PC_9  = -4.1449869562181E-15 +      0.8081978480865 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -4.1449869562181E-15 + 0.8081978480865 * PC_9 ;
738020    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
738021    +END;
MPRINT(EM_DIAGRAM):   END;
738022    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
738023    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
738024    +   ELSE S_PC_1  = -3.6488918403387E-15 +     0.29892759566822 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.6488918403387E-15 + 0.29892759566822 * PC_1 ;
738025    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
738026    +   ELSE S_PC_10  = -6.1105909646702E-15 +     0.82174055927533 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.1105909646702E-15 + 0.82174055927533 * PC_10 ;
738027    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
738028    +   ELSE S_PC_11  =  5.5953279603159E-15 +       0.856249156402 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 5.5953279603159E-15 + 0.856249156402 * PC_11 ;
738029    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
738030    +   ELSE S_PC_12  = -4.1145821078075E-15 +     0.88806609097186 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -4.1145821078075E-15 + 0.88806609097186 * PC_12 ;
738031    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
738032    +   ELSE S_PC_13  =  1.4849812030115E-15 +     0.89678852922943 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4849812030115E-15 + 0.89678852922943 * PC_13 ;
738033    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
738034    +   ELSE S_PC_14  = -6.2973928075572E-15 +     0.90339751679168 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.2973928075572E-15 + 0.90339751679168 * PC_14 ;
738035    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
738036    +   ELSE S_PC_15  = -5.8948982757007E-16 +     0.92999222699092 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -5.8948982757007E-16 + 0.92999222699092 * PC_15 ;
738037    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
738038    +   ELSE S_PC_16  = -2.5957971712491E-15 +      0.9511809992322 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.5957971712491E-15 + 0.9511809992322 * PC_16 ;
738039    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
738040    +   ELSE S_PC_17  =  3.6303451348395E-15 +     0.99884839954107 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 3.6303451348395E-15 + 0.99884839954107 * PC_17 ;
738041    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
738042    +   ELSE S_PC_2  =  6.4135165190946E-15 +     0.54372947518581 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4135165190946E-15 + 0.54372947518581 * PC_2 ;
738043    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
738044    +   ELSE S_PC_3  =  2.2514555608207E-15 +     0.55367420195889 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2514555608207E-15 + 0.55367420195889 * PC_3 ;
738045    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
738046    +   ELSE S_PC_4  = -3.8797382198993E-15 +     0.63693509045378 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.8797382198993E-15 + 0.63693509045378 * PC_4 ;
738047    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
738048    +   ELSE S_PC_5  = -4.8238591945923E-15 +      0.6666904967587 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.8238591945923E-15 + 0.6666904967587 * PC_5 ;
738049    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
738050    +   ELSE S_PC_6  =  1.5849559140428E-15 +     0.70534780307004 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5849559140428E-15 + 0.70534780307004 * PC_6 ;
738051    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
738052    +   ELSE S_PC_7  =  3.1562291763867E-16 +     0.74930538239816 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 3.1562291763867E-16 + 0.74930538239816 * PC_7 ;
738053    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
738054    +   ELSE S_PC_8  = -2.4599196832342E-15 +     0.77164443961071 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.4599196832342E-15 + 0.77164443961071 * PC_8 ;
738055    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
738056    +   ELSE S_PC_9  = -4.1449869562181E-15 +      0.8081978480865 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -4.1449869562181E-15 + 0.8081978480865 * PC_9 ;
738057    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
738058    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
738059    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
738060    +END;
MPRINT(EM_DIAGRAM):   END;
738061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738062    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
738063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738064    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
738065    +   H11  =    -0.55342153424625 * S_PC_1  +    -0.29323467331544 * S_PC_10
738066    +          +     0.33965172324926 * S_PC_11  +     0.49000556060396 * S_PC_12
738067    +          +    -0.34110824735492 * S_PC_13  +    -0.24287054403528 * S_PC_14
738068    +          +    -0.02501080366447 * S_PC_15  +    -0.02679419599111 * S_PC_16
738069    +          +     0.09844374274586 * S_PC_17  +     0.13878811412798 * S_PC_2
738070    +          +     0.10801571799328 * S_PC_3  +    -0.58531553567813 * S_PC_4
738071    +          +     0.31533819069473 * S_PC_5  +    -0.19214671008198 * S_PC_6
738072    +          +    -0.51179938713553 * S_PC_7  +    -0.50670206584236 * S_PC_8
738073    +          +    -0.97231420794389 * S_PC_9  +    -0.16137966362464 *
738074    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.55342153424625 * S_PC_1 + -0.29323467331544 * S_PC_10 + 
0.33965172324926 * S_PC_11 + 0.49000556060396 * S_PC_12 + -0.34110824735492 * S_PC_13 + 
-0.24287054403528 * S_PC_14 + -0.02501080366447 * S_PC_15 + -0.02679419599111 * S_PC_16 + 
0.09844374274586 * S_PC_17 + 0.13878811412798 * S_PC_2 + 0.10801571799328 * S_PC_3 + 
-0.58531553567813 * S_PC_4 + 0.31533819069473 * S_PC_5 + -0.19214671008198 * S_PC_6 + 
-0.51179938713553 * S_PC_7 + -0.50670206584236 * S_PC_8 + -0.97231420794389 * S_PC_9 + 
-0.16137966362464 * S_Year_Birth ;
738075    +   H12  =    -0.99502274940017 * S_PC_1  +     0.49237671874688 * S_PC_10
738076    +          +     0.12210745945974 * S_PC_11  +     0.72021579354775 * S_PC_12
738077    +          +      0.3393754550733 * S_PC_13  +     0.13986168240251 * S_PC_14
738078    +          +     0.04811901065181 * S_PC_15  +    -0.53520625287765 * S_PC_16
738079    +          +    -0.19673918666042 * S_PC_17  +     -0.2054947890231 * S_PC_2
738080    +          +    -0.43750641244546 * S_PC_3  +    -0.30212148993997 * S_PC_4
738081    +          +     0.15193420944594 * S_PC_5  +     0.41173144589147 * S_PC_6
738082    +          +     0.30810633295335 * S_PC_7  +     0.12469809630723 * S_PC_8
738083    +          +    -0.64078531647299 * S_PC_9  +    -0.19774667470024 *
738084    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.99502274940017 * S_PC_1 + 0.49237671874688 * S_PC_10 + 
0.12210745945974 * S_PC_11 + 0.72021579354775 * S_PC_12 + 0.3393754550733 * S_PC_13 + 
0.13986168240251 * S_PC_14 + 0.04811901065181 * S_PC_15 + -0.53520625287765 * S_PC_16 + 
-0.19673918666042 * S_PC_17 + -0.2054947890231 * S_PC_2 + -0.43750641244546 * S_PC_3 + 
-0.30212148993997 * S_PC_4 + 0.15193420944594 * S_PC_5 + 0.41173144589147 * S_PC_6 + 
0.30810633295335 * S_PC_7 + 0.12469809630723 * S_PC_8 + -0.64078531647299 * S_PC_9 + 
-0.19774667470024 * S_Year_Birth ;
738085    +   H13  =    -1.08978244664773 * S_PC_1  +     0.03100578006881 * S_PC_10
738086    +          +    -0.86965903394255 * S_PC_11  +    -1.12965112824775 * S_PC_12
738087    +          +     0.22635891501443 * S_PC_13  +      -0.370668142629 * S_PC_14
738088    +          +     0.30597502081665 * S_PC_15  +    -0.15658987227197 * S_PC_16
738089    +          +      0.2668499246416 * S_PC_17  +     0.19436681461642 * S_PC_2
738090    +          +     0.44869442712318 * S_PC_3  +     0.57307437095431 * S_PC_4
738091    +          +     0.80776612713283 * S_PC_5  +    -0.08822515374977 * S_PC_6
738092    +          +    -0.09284418945373 * S_PC_7  +    -0.06028855495338 * S_PC_8
738093    +          +     0.21586614421723 * S_PC_9  +     0.04888429457745 *
738094    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -1.08978244664773 * S_PC_1 + 0.03100578006881 * S_PC_10 + 
-0.86965903394255 * S_PC_11 + -1.12965112824775 * S_PC_12 + 0.22635891501443 * S_PC_13 + 
-0.370668142629 * S_PC_14 + 0.30597502081665 * S_PC_15 + -0.15658987227197 * S_PC_16 + 
0.2668499246416 * S_PC_17 + 0.19436681461642 * S_PC_2 + 0.44869442712318 * S_PC_3 + 
0.57307437095431 * S_PC_4 + 0.80776612713283 * S_PC_5 + -0.08822515374977 * S_PC_6 + 
-0.09284418945373 * S_PC_7 + -0.06028855495338 * S_PC_8 + 0.21586614421723 * S_PC_9 + 
0.04888429457745 * S_Year_Birth ;
738095    +   H14  =    -0.28593618538042 * S_PC_1  +     0.59937027421068 * S_PC_10
738096    +          +    -0.55184433419032 * S_PC_11  +     -0.2301871208647 * S_PC_12
738097    +          +     1.01178018574556 * S_PC_13  +    -0.48252128489132 * S_PC_14
738098    +          +     0.48647706305442 * S_PC_15  +     0.38826674709309 * S_PC_16
738099    +          +     0.06640068764932 * S_PC_17  +      0.0476622971963 * S_PC_2
738100    +          +     0.02272352093671 * S_PC_3  +     0.10081179767275 * S_PC_4
738101    +          +    -0.13769487622721 * S_PC_5  +    -0.24922377953623 * S_PC_6
738102    +          +    -0.05671479273459 * S_PC_7  +    -0.13408005038028 * S_PC_8
738103    +          +    -0.06327123090628 * S_PC_9  +    -0.10370487024911 *
738104    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.28593618538042 * S_PC_1 + 0.59937027421068 * S_PC_10 + 
-0.55184433419032 * S_PC_11 + -0.2301871208647 * S_PC_12 + 1.01178018574556 * S_PC_13 + 
-0.48252128489132 * S_PC_14 + 0.48647706305442 * S_PC_15 + 0.38826674709309 * S_PC_16 + 
0.06640068764932 * S_PC_17 + 0.0476622971963 * S_PC_2 + 0.02272352093671 * S_PC_3 + 
0.10081179767275 * S_PC_4 + -0.13769487622721 * S_PC_5 + -0.24922377953623 * S_PC_6 + 
-0.05671479273459 * S_PC_7 + -0.13408005038028 * S_PC_8 + -0.06327123090628 * S_PC_9 + 
-0.10370487024911 * S_Year_Birth ;
738105    +   H15  =    -0.33708904537859 * S_PC_1  +     0.37424167610601 * S_PC_10
738106    +          +    -0.31135313745496 * S_PC_11  +     0.30453947982614 * S_PC_12
738107    +          +    -0.49544019618096 * S_PC_13  +    -0.26793473780514 * S_PC_14
738108    +          +     0.33164121549835 * S_PC_15  +    -0.31758743327631 * S_PC_16
738109    +          +    -0.05779041880921 * S_PC_17  +    -0.76996955995367 * S_PC_2
738110    +          +     0.13746794831625 * S_PC_3  +     0.46608112761099 * S_PC_4
738111    +          +     0.27002996418456 * S_PC_5  +     0.23180249614069 * S_PC_6
738112    +          +    -0.08059651309604 * S_PC_7  +    -0.03561134620766 * S_PC_8
738113    +          +    -0.03059416422876 * S_PC_9  +     0.26625248867973 *
738114    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.33708904537859 * S_PC_1 + 0.37424167610601 * S_PC_10 + 
-0.31135313745496 * S_PC_11 + 0.30453947982614 * S_PC_12 + -0.49544019618096 * S_PC_13 + 
-0.26793473780514 * S_PC_14 + 0.33164121549835 * S_PC_15 + -0.31758743327631 * S_PC_16 + 
-0.05779041880921 * S_PC_17 + -0.76996955995367 * S_PC_2 + 0.13746794831625 * S_PC_3 + 
0.46608112761099 * S_PC_4 + 0.27002996418456 * S_PC_5 + 0.23180249614069 * S_PC_6 + 
-0.08059651309604 * S_PC_7 + -0.03561134620766 * S_PC_8 + -0.03059416422876 * S_PC_9 + 
0.26625248867973 * S_Year_Birth ;
738115    +   H16  =     0.15017999188962 * S_PC_1  +    -0.33783019008081 * S_PC_10
738116    +          +     0.03105737534224 * S_PC_11  +     0.26111468755191 * S_PC_12
738117    +          +    -0.41128593451888 * S_PC_13  +     0.20048648875339 * S_PC_14
738118    +          +     0.45863219433154 * S_PC_15  +    -0.01258422577707 * S_PC_16
738119    +          +    -0.40610693500982 * S_PC_17  +    -0.15850867686128 * S_PC_2
738120    +          +     0.36950881975001 * S_PC_3  +    -0.17134002892283 * S_PC_4
738121    +          +      -0.628869137697 * S_PC_5  +    -0.23379385585096 * S_PC_6
738122    +          +    -0.08458064547675 * S_PC_7  +     0.74760782214014 * S_PC_8
738123    +          +     0.56234207099634 * S_PC_9  +    -0.14984712441736 *
738124    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.15017999188962 * S_PC_1 + -0.33783019008081 * S_PC_10 + 
0.03105737534224 * S_PC_11 + 0.26111468755191 * S_PC_12 + -0.41128593451888 * S_PC_13 + 
0.20048648875339 * S_PC_14 + 0.45863219433154 * S_PC_15 + -0.01258422577707 * S_PC_16 + 
-0.40610693500982 * S_PC_17 + -0.15850867686128 * S_PC_2 + 0.36950881975001 * S_PC_3 + 
-0.17134002892283 * S_PC_4 + -0.628869137697 * S_PC_5 + -0.23379385585096 * S_PC_6 + 
-0.08458064547675 * S_PC_7 + 0.74760782214014 * S_PC_8 + 0.56234207099634 * S_PC_9 + 
-0.14984712441736 * S_Year_Birth ;
738125    +   H17  =     0.30849857328204 * S_PC_1  +     0.33064134865883 * S_PC_10
738126    +          +     0.23827611784637 * S_PC_11  +     0.13303512224297 * S_PC_12
738127    +          +     0.28560416047256 * S_PC_13  +    -0.15117991713253 * S_PC_14
738128    +          +    -0.08257856642011 * S_PC_15  +    -0.50665244726973 * S_PC_16
738129    +          +      0.0274411962906 * S_PC_17  +     0.74919575098467 * S_PC_2
738130    +          +     0.57348166343361 * S_PC_3  +     0.03517396803125 * S_PC_4
738131    +          +     0.21522947410365 * S_PC_5  +    -0.17904742140357 * S_PC_6
738132    +          +    -0.28202941925014 * S_PC_7  +    -0.28392079981156 * S_PC_8
738133    +          +     0.15375921681792 * S_PC_9  +     0.37391488433781 *
738134    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = 0.30849857328204 * S_PC_1 + 0.33064134865883 * S_PC_10 + 
0.23827611784637 * S_PC_11 + 0.13303512224297 * S_PC_12 + 0.28560416047256 * S_PC_13 + 
-0.15117991713253 * S_PC_14 + -0.08257856642011 * S_PC_15 + -0.50665244726973 * S_PC_16 + 
0.0274411962906 * S_PC_17 + 0.74919575098467 * S_PC_2 + 0.57348166343361 * S_PC_3 + 
0.03517396803125 * S_PC_4 + 0.21522947410365 * S_PC_5 + -0.17904742140357 * S_PC_6 + 
-0.28202941925014 * S_PC_7 + -0.28392079981156 * S_PC_8 + 0.15375921681792 * S_PC_9 + 
0.37391488433781 * S_Year_Birth ;
738135    +   H11  =     -1.1594247768044 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1594247768044 + H11 ;
738136    +   H12  =     1.34180472342355 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.34180472342355 + H12 ;
738137    +   H13  =     -0.4765158697282 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4765158697282 + H13 ;
738138    +   H14  =     0.12408462982581 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.12408462982581 + H14 ;
738139    +   H15  =    -1.51733223495167 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.51733223495167 + H15 ;
738140    +   H16  =     0.70412113613226 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.70412113613226 + H16 ;
738141    +   H17  =     0.56926526451324 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.56926526451324 + H17 ;
738142    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
738143    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
738144    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
738145    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
738146    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
738147    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
738148    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
738149    +END;
MPRINT(EM_DIAGRAM):   END;
738150    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
738151    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
738152    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
738153    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
738154    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
738155    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
738156    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
738157    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
738158    +END;
MPRINT(EM_DIAGRAM):   END;
738159    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738160    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
738161    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738162    +
738163    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
738164    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
738165    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
738166    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
738167    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
738168    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
738169    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
738170    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
738171    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
738172    +end;
MPRINT(EM_DIAGRAM):   end;
738173    +else do;
MPRINT(EM_DIAGRAM):   else do;
738174    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
738175    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
738176    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
738177    +   end;
MPRINT(EM_DIAGRAM):   end;
738178    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
738179    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
738180    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
738181    +   end;
MPRINT(EM_DIAGRAM):   end;
738182    +   else do;
MPRINT(EM_DIAGRAM):   else do;
738183    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
738184    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
738185    +   end;
MPRINT(EM_DIAGRAM):   end;
738186    +end;
MPRINT(EM_DIAGRAM):   end;
738187    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
738188    +   P_DepVar1  =    -1.58910967945868 * H11  +    -2.05915787974985 * H12
738189    +          +     -1.9012823868264 * H13  +    -2.18074438153672 * H14
738190    +          +     1.75831238575242 * H15  +     0.98715125973424 * H16
738191    +          +    -1.91091089802337 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.58910967945868 * H11 + -2.05915787974985 * H12 + 
-1.9012823868264 * H13 + -2.18074438153672 * H14 + 1.75831238575242 * H15 + 0.98715125973424 * 
H16 + -1.91091089802337 * H17 ;
738192    +   P_DepVar1  =     -2.2147071267261 + P_DepVar1 ;
The SAS System

MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.2147071267261 + P_DepVar1 ;
738193    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
738194    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
738195    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
738196    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
738197    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
738198    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
738199    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
738200    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
738201    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
738202    +END;
MPRINT(EM_DIAGRAM):   END;
738203    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
738204    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
738205    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
738206    +END;
MPRINT(EM_DIAGRAM):   END;
738207    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
738208    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
738209    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
738210    +END;
MPRINT(EM_DIAGRAM):   END;
738211    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
738212    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
738213    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
738214    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
738215    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
738216    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
738217    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
738218    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738219    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
738220    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738221    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
738222    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
738223    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
738224    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
738225    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
738226    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
738227    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
738228    +END;
MPRINT(EM_DIAGRAM):   END;
738229    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
738230    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
738231    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
738232    +drop
738233    +H11
738234    +H12
738235    +H13
738236    +H14
738237    +H15
738238    +H16
738239    +H17
738240    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
738241    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
738242     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL12_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
738243     quit;
738244     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
738245     filename emflow
738245   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural12: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
738246     *------------------------------------------------------------*;
738247     * Neural12: Scoring VALIDATE data;
738248     *------------------------------------------------------------*;
738249     data EMWS8.Neural12_VALIDATE
738250     / view=EMWS8.Neural12_VALIDATE
738251     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_VALIDATE / view=EMWS8.Neural12_VALIDATE ;
738252     set EMWS8.PRINCOMP_VALIDATE
738253     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
738254     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural12\EMFLOWSCORE.sas.
738255    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
738256    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
738257    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
738258    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
738259    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
738260    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
738261    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
738262    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
738263    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
738264    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
738265    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
738266    +LENGTH _WARN_ $4
738267    +      F_DepVar  $ 12
738268    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
738269    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
738270    +
738271    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
738272    +
738273    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
738274    +
738275    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
738276    +
738277    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
738278    +
738279    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
738280    +
738281    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
738282    +
738283    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
738284    +
738285    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
738286    +
738287    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
738288    +
738289    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
738290    +
738291    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
738292    +
738293    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
738294    +
738295    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
738296    +
738297    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
738298    +
738299    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
738300    +
738301    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
738302    +
738303    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
738304    +
738305    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
738306    +
738307    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
738308    +
738309    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
738310    +
738311    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
738312    +
738313    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
738314    +
738315    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
738316    +
738317    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
738318    +
738319    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
738320    +
738321    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
738322    +
738323    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
738324    +
738325    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
738326    +
738327    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
738328    +
738329    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
738330    +
738331    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
738332    +
738333    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
738334    +
738335    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738336    +*** Checking missing input Interval
738337    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
738338    +
738339    +IF NMISS(
738340    +   PC_1 ,
738341    +   PC_10 ,
738342    +   PC_11 ,
738343    +   PC_12 ,
738344    +   PC_13 ,
738345    +   PC_14 ,
738346    +   PC_15 ,
738347    +   PC_16 ,
738348    +   PC_17 ,
738349    +   PC_2 ,
738350    +   PC_3 ,
738351    +   PC_4 ,
738352    +   PC_5 ,
738353    +   PC_6 ,
738354    +   PC_7 ,
738355    +   PC_8 ,
738356    +   PC_9 ,
738357    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
738358    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
738359    +
738360    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
738361    +END;
MPRINT(EM_DIAGRAM):   END;
738362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738363    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
738364    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738365    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
738366    +   S_PC_1  = -3.6488918403387E-15 +     0.29892759566822 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.6488918403387E-15 + 0.29892759566822 * PC_1 ;
738367    +   S_PC_10  = -6.1105909646702E-15 +     0.82174055927533 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.1105909646702E-15 + 0.82174055927533 * PC_10 ;
738368    +   S_PC_11  =  5.5953279603159E-15 +       0.856249156402 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 5.5953279603159E-15 + 0.856249156402 * PC_11 ;
738369    +   S_PC_12  = -4.1145821078075E-15 +     0.88806609097186 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -4.1145821078075E-15 + 0.88806609097186 * PC_12 ;
738370    +   S_PC_13  =  1.4849812030115E-15 +     0.89678852922943 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4849812030115E-15 + 0.89678852922943 * PC_13 ;
738371    +   S_PC_14  = -6.2973928075572E-15 +     0.90339751679168 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.2973928075572E-15 + 0.90339751679168 * PC_14 ;
738372    +   S_PC_15  = -5.8948982757007E-16 +     0.92999222699092 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -5.8948982757007E-16 + 0.92999222699092 * PC_15 ;
738373    +   S_PC_16  = -2.5957971712491E-15 +      0.9511809992322 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.5957971712491E-15 + 0.9511809992322 * PC_16 ;
738374    +   S_PC_17  =  3.6303451348395E-15 +     0.99884839954107 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 3.6303451348395E-15 + 0.99884839954107 * PC_17 ;
738375    +   S_PC_2  =  6.4135165190946E-15 +     0.54372947518581 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4135165190946E-15 + 0.54372947518581 * PC_2 ;
738376    +   S_PC_3  =  2.2514555608207E-15 +     0.55367420195889 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2514555608207E-15 + 0.55367420195889 * PC_3 ;
738377    +   S_PC_4  = -3.8797382198993E-15 +     0.63693509045378 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.8797382198993E-15 + 0.63693509045378 * PC_4 ;
738378    +   S_PC_5  = -4.8238591945923E-15 +      0.6666904967587 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.8238591945923E-15 + 0.6666904967587 * PC_5 ;
738379    +   S_PC_6  =  1.5849559140428E-15 +     0.70534780307004 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5849559140428E-15 + 0.70534780307004 * PC_6 ;
738380    +   S_PC_7  =  3.1562291763867E-16 +     0.74930538239816 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 3.1562291763867E-16 + 0.74930538239816 * PC_7 ;
738381    +   S_PC_8  = -2.4599196832342E-15 +     0.77164443961071 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.4599196832342E-15 + 0.77164443961071 * PC_8 ;
738382    +   S_PC_9  = -4.1449869562181E-15 +      0.8081978480865 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -4.1449869562181E-15 + 0.8081978480865 * PC_9 ;
738383    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
738384    +END;
MPRINT(EM_DIAGRAM):   END;
738385    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
738386    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
738387    +   ELSE S_PC_1  = -3.6488918403387E-15 +     0.29892759566822 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.6488918403387E-15 + 0.29892759566822 * PC_1 ;
738388    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
738389    +   ELSE S_PC_10  = -6.1105909646702E-15 +     0.82174055927533 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.1105909646702E-15 + 0.82174055927533 * PC_10 ;
738390    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
738391    +   ELSE S_PC_11  =  5.5953279603159E-15 +       0.856249156402 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 5.5953279603159E-15 + 0.856249156402 * PC_11 ;
738392    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
738393    +   ELSE S_PC_12  = -4.1145821078075E-15 +     0.88806609097186 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -4.1145821078075E-15 + 0.88806609097186 * PC_12 ;
738394    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
738395    +   ELSE S_PC_13  =  1.4849812030115E-15 +     0.89678852922943 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4849812030115E-15 + 0.89678852922943 * PC_13 ;
738396    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
738397    +   ELSE S_PC_14  = -6.2973928075572E-15 +     0.90339751679168 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.2973928075572E-15 + 0.90339751679168 * PC_14 ;
738398    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
738399    +   ELSE S_PC_15  = -5.8948982757007E-16 +     0.92999222699092 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -5.8948982757007E-16 + 0.92999222699092 * PC_15 ;
738400    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
738401    +   ELSE S_PC_16  = -2.5957971712491E-15 +      0.9511809992322 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.5957971712491E-15 + 0.9511809992322 * PC_16 ;
738402    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
738403    +   ELSE S_PC_17  =  3.6303451348395E-15 +     0.99884839954107 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 3.6303451348395E-15 + 0.99884839954107 * PC_17 ;
738404    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
738405    +   ELSE S_PC_2  =  6.4135165190946E-15 +     0.54372947518581 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4135165190946E-15 + 0.54372947518581 * PC_2 ;
738406    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
738407    +   ELSE S_PC_3  =  2.2514555608207E-15 +     0.55367420195889 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2514555608207E-15 + 0.55367420195889 * PC_3 ;
738408    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
738409    +   ELSE S_PC_4  = -3.8797382198993E-15 +     0.63693509045378 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.8797382198993E-15 + 0.63693509045378 * PC_4 ;
738410    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
738411    +   ELSE S_PC_5  = -4.8238591945923E-15 +      0.6666904967587 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.8238591945923E-15 + 0.6666904967587 * PC_5 ;
738412    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
738413    +   ELSE S_PC_6  =  1.5849559140428E-15 +     0.70534780307004 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5849559140428E-15 + 0.70534780307004 * PC_6 ;
738414    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
738415    +   ELSE S_PC_7  =  3.1562291763867E-16 +     0.74930538239816 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 3.1562291763867E-16 + 0.74930538239816 * PC_7 ;
738416    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
738417    +   ELSE S_PC_8  = -2.4599196832342E-15 +     0.77164443961071 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.4599196832342E-15 + 0.77164443961071 * PC_8 ;
738418    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
738419    +   ELSE S_PC_9  = -4.1449869562181E-15 +      0.8081978480865 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -4.1449869562181E-15 + 0.8081978480865 * PC_9 ;
738420    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
738421    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
738422    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
738423    +END;
MPRINT(EM_DIAGRAM):   END;
738424    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738425    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
738426    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738427    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
738428    +   H11  =    -0.55342153424625 * S_PC_1  +    -0.29323467331544 * S_PC_10
738429    +          +     0.33965172324926 * S_PC_11  +     0.49000556060396 * S_PC_12
738430    +          +    -0.34110824735492 * S_PC_13  +    -0.24287054403528 * S_PC_14
738431    +          +    -0.02501080366447 * S_PC_15  +    -0.02679419599111 * S_PC_16
738432    +          +     0.09844374274586 * S_PC_17  +     0.13878811412798 * S_PC_2
738433    +          +     0.10801571799328 * S_PC_3  +    -0.58531553567813 * S_PC_4
738434    +          +     0.31533819069473 * S_PC_5  +    -0.19214671008198 * S_PC_6
738435    +          +    -0.51179938713553 * S_PC_7  +    -0.50670206584236 * S_PC_8
738436    +          +    -0.97231420794389 * S_PC_9  +    -0.16137966362464 *
738437    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.55342153424625 * S_PC_1 + -0.29323467331544 * S_PC_10 + 
0.33965172324926 * S_PC_11 + 0.49000556060396 * S_PC_12 + -0.34110824735492 * S_PC_13 + 
-0.24287054403528 * S_PC_14 + -0.02501080366447 * S_PC_15 + -0.02679419599111 * S_PC_16 + 
0.09844374274586 * S_PC_17 + 0.13878811412798 * S_PC_2 + 0.10801571799328 * S_PC_3 + 
-0.58531553567813 * S_PC_4 + 0.31533819069473 * S_PC_5 + -0.19214671008198 * S_PC_6 + 
-0.51179938713553 * S_PC_7 + -0.50670206584236 * S_PC_8 + -0.97231420794389 * S_PC_9 + 
-0.16137966362464 * S_Year_Birth ;
738438    +   H12  =    -0.99502274940017 * S_PC_1  +     0.49237671874688 * S_PC_10
738439    +          +     0.12210745945974 * S_PC_11  +     0.72021579354775 * S_PC_12
738440    +          +      0.3393754550733 * S_PC_13  +     0.13986168240251 * S_PC_14
738441    +          +     0.04811901065181 * S_PC_15  +    -0.53520625287765 * S_PC_16
738442    +          +    -0.19673918666042 * S_PC_17  +     -0.2054947890231 * S_PC_2
738443    +          +    -0.43750641244546 * S_PC_3  +    -0.30212148993997 * S_PC_4
738444    +          +     0.15193420944594 * S_PC_5  +     0.41173144589147 * S_PC_6
738445    +          +     0.30810633295335 * S_PC_7  +     0.12469809630723 * S_PC_8
738446    +          +    -0.64078531647299 * S_PC_9  +    -0.19774667470024 *
738447    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.99502274940017 * S_PC_1 + 0.49237671874688 * S_PC_10 + 
0.12210745945974 * S_PC_11 + 0.72021579354775 * S_PC_12 + 0.3393754550733 * S_PC_13 + 
0.13986168240251 * S_PC_14 + 0.04811901065181 * S_PC_15 + -0.53520625287765 * S_PC_16 + 
-0.19673918666042 * S_PC_17 + -0.2054947890231 * S_PC_2 + -0.43750641244546 * S_PC_3 + 
-0.30212148993997 * S_PC_4 + 0.15193420944594 * S_PC_5 + 0.41173144589147 * S_PC_6 + 
0.30810633295335 * S_PC_7 + 0.12469809630723 * S_PC_8 + -0.64078531647299 * S_PC_9 + 
-0.19774667470024 * S_Year_Birth ;
738448    +   H13  =    -1.08978244664773 * S_PC_1  +     0.03100578006881 * S_PC_10
738449    +          +    -0.86965903394255 * S_PC_11  +    -1.12965112824775 * S_PC_12
738450    +          +     0.22635891501443 * S_PC_13  +      -0.370668142629 * S_PC_14
738451    +          +     0.30597502081665 * S_PC_15  +    -0.15658987227197 * S_PC_16
738452    +          +      0.2668499246416 * S_PC_17  +     0.19436681461642 * S_PC_2
738453    +          +     0.44869442712318 * S_PC_3  +     0.57307437095431 * S_PC_4
738454    +          +     0.80776612713283 * S_PC_5  +    -0.08822515374977 * S_PC_6
738455    +          +    -0.09284418945373 * S_PC_7  +    -0.06028855495338 * S_PC_8
738456    +          +     0.21586614421723 * S_PC_9  +     0.04888429457745 *
738457    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -1.08978244664773 * S_PC_1 + 0.03100578006881 * S_PC_10 + 
-0.86965903394255 * S_PC_11 + -1.12965112824775 * S_PC_12 + 0.22635891501443 * S_PC_13 + 
-0.370668142629 * S_PC_14 + 0.30597502081665 * S_PC_15 + -0.15658987227197 * S_PC_16 + 
0.2668499246416 * S_PC_17 + 0.19436681461642 * S_PC_2 + 0.44869442712318 * S_PC_3 + 
0.57307437095431 * S_PC_4 + 0.80776612713283 * S_PC_5 + -0.08822515374977 * S_PC_6 + 
-0.09284418945373 * S_PC_7 + -0.06028855495338 * S_PC_8 + 0.21586614421723 * S_PC_9 + 
0.04888429457745 * S_Year_Birth ;
738458    +   H14  =    -0.28593618538042 * S_PC_1  +     0.59937027421068 * S_PC_10
738459    +          +    -0.55184433419032 * S_PC_11  +     -0.2301871208647 * S_PC_12
738460    +          +     1.01178018574556 * S_PC_13  +    -0.48252128489132 * S_PC_14
738461    +          +     0.48647706305442 * S_PC_15  +     0.38826674709309 * S_PC_16
738462    +          +     0.06640068764932 * S_PC_17  +      0.0476622971963 * S_PC_2
738463    +          +     0.02272352093671 * S_PC_3  +     0.10081179767275 * S_PC_4
738464    +          +    -0.13769487622721 * S_PC_5  +    -0.24922377953623 * S_PC_6
738465    +          +    -0.05671479273459 * S_PC_7  +    -0.13408005038028 * S_PC_8
738466    +          +    -0.06327123090628 * S_PC_9  +    -0.10370487024911 *
738467    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.28593618538042 * S_PC_1 + 0.59937027421068 * S_PC_10 + 
-0.55184433419032 * S_PC_11 + -0.2301871208647 * S_PC_12 + 1.01178018574556 * S_PC_13 + 
-0.48252128489132 * S_PC_14 + 0.48647706305442 * S_PC_15 + 0.38826674709309 * S_PC_16 + 
0.06640068764932 * S_PC_17 + 0.0476622971963 * S_PC_2 + 0.02272352093671 * S_PC_3 + 
0.10081179767275 * S_PC_4 + -0.13769487622721 * S_PC_5 + -0.24922377953623 * S_PC_6 + 
-0.05671479273459 * S_PC_7 + -0.13408005038028 * S_PC_8 + -0.06327123090628 * S_PC_9 + 
-0.10370487024911 * S_Year_Birth ;
738468    +   H15  =    -0.33708904537859 * S_PC_1  +     0.37424167610601 * S_PC_10
738469    +          +    -0.31135313745496 * S_PC_11  +     0.30453947982614 * S_PC_12
738470    +          +    -0.49544019618096 * S_PC_13  +    -0.26793473780514 * S_PC_14
738471    +          +     0.33164121549835 * S_PC_15  +    -0.31758743327631 * S_PC_16
738472    +          +    -0.05779041880921 * S_PC_17  +    -0.76996955995367 * S_PC_2
738473    +          +     0.13746794831625 * S_PC_3  +     0.46608112761099 * S_PC_4
738474    +          +     0.27002996418456 * S_PC_5  +     0.23180249614069 * S_PC_6
738475    +          +    -0.08059651309604 * S_PC_7  +    -0.03561134620766 * S_PC_8
738476    +          +    -0.03059416422876 * S_PC_9  +     0.26625248867973 *
738477    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.33708904537859 * S_PC_1 + 0.37424167610601 * S_PC_10 + 
-0.31135313745496 * S_PC_11 + 0.30453947982614 * S_PC_12 + -0.49544019618096 * S_PC_13 + 
-0.26793473780514 * S_PC_14 + 0.33164121549835 * S_PC_15 + -0.31758743327631 * S_PC_16 + 
-0.05779041880921 * S_PC_17 + -0.76996955995367 * S_PC_2 + 0.13746794831625 * S_PC_3 + 
0.46608112761099 * S_PC_4 + 0.27002996418456 * S_PC_5 + 0.23180249614069 * S_PC_6 + 
-0.08059651309604 * S_PC_7 + -0.03561134620766 * S_PC_8 + -0.03059416422876 * S_PC_9 + 
0.26625248867973 * S_Year_Birth ;
738478    +   H16  =     0.15017999188962 * S_PC_1  +    -0.33783019008081 * S_PC_10
738479    +          +     0.03105737534224 * S_PC_11  +     0.26111468755191 * S_PC_12
738480    +          +    -0.41128593451888 * S_PC_13  +     0.20048648875339 * S_PC_14
738481    +          +     0.45863219433154 * S_PC_15  +    -0.01258422577707 * S_PC_16
738482    +          +    -0.40610693500982 * S_PC_17  +    -0.15850867686128 * S_PC_2
738483    +          +     0.36950881975001 * S_PC_3  +    -0.17134002892283 * S_PC_4
738484    +          +      -0.628869137697 * S_PC_5  +    -0.23379385585096 * S_PC_6
738485    +          +    -0.08458064547675 * S_PC_7  +     0.74760782214014 * S_PC_8
738486    +          +     0.56234207099634 * S_PC_9  +    -0.14984712441736 *
738487    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.15017999188962 * S_PC_1 + -0.33783019008081 * S_PC_10 + 
0.03105737534224 * S_PC_11 + 0.26111468755191 * S_PC_12 + -0.41128593451888 * S_PC_13 + 
0.20048648875339 * S_PC_14 + 0.45863219433154 * S_PC_15 + -0.01258422577707 * S_PC_16 + 
-0.40610693500982 * S_PC_17 + -0.15850867686128 * S_PC_2 + 0.36950881975001 * S_PC_3 + 
-0.17134002892283 * S_PC_4 + -0.628869137697 * S_PC_5 + -0.23379385585096 * S_PC_6 + 
-0.08458064547675 * S_PC_7 + 0.74760782214014 * S_PC_8 + 0.56234207099634 * S_PC_9 + 
-0.14984712441736 * S_Year_Birth ;
738488    +   H17  =     0.30849857328204 * S_PC_1  +     0.33064134865883 * S_PC_10
738489    +          +     0.23827611784637 * S_PC_11  +     0.13303512224297 * S_PC_12
738490    +          +     0.28560416047256 * S_PC_13  +    -0.15117991713253 * S_PC_14
738491    +          +    -0.08257856642011 * S_PC_15  +    -0.50665244726973 * S_PC_16
738492    +          +      0.0274411962906 * S_PC_17  +     0.74919575098467 * S_PC_2
738493    +          +     0.57348166343361 * S_PC_3  +     0.03517396803125 * S_PC_4
738494    +          +     0.21522947410365 * S_PC_5  +    -0.17904742140357 * S_PC_6
738495    +          +    -0.28202941925014 * S_PC_7  +    -0.28392079981156 * S_PC_8
738496    +          +     0.15375921681792 * S_PC_9  +     0.37391488433781 *
738497    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = 0.30849857328204 * S_PC_1 + 0.33064134865883 * S_PC_10 + 
0.23827611784637 * S_PC_11 + 0.13303512224297 * S_PC_12 + 0.28560416047256 * S_PC_13 + 
-0.15117991713253 * S_PC_14 + -0.08257856642011 * S_PC_15 + -0.50665244726973 * S_PC_16 + 
0.0274411962906 * S_PC_17 + 0.74919575098467 * S_PC_2 + 0.57348166343361 * S_PC_3 + 
0.03517396803125 * S_PC_4 + 0.21522947410365 * S_PC_5 + -0.17904742140357 * S_PC_6 + 
-0.28202941925014 * S_PC_7 + -0.28392079981156 * S_PC_8 + 0.15375921681792 * S_PC_9 + 
0.37391488433781 * S_Year_Birth ;
738498    +   H11  =     -1.1594247768044 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1594247768044 + H11 ;
738499    +   H12  =     1.34180472342355 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.34180472342355 + H12 ;
738500    +   H13  =     -0.4765158697282 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4765158697282 + H13 ;
738501    +   H14  =     0.12408462982581 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.12408462982581 + H14 ;
738502    +   H15  =    -1.51733223495167 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.51733223495167 + H15 ;
738503    +   H16  =     0.70412113613226 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.70412113613226 + H16 ;
738504    +   H17  =     0.56926526451324 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.56926526451324 + H17 ;
738505    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
738506    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
738507    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
738508    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
738509    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
738510    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
738511    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
738512    +END;
MPRINT(EM_DIAGRAM):   END;
738513    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
738514    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
738515    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
738516    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
738517    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
738518    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
738519    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
738520    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
738521    +END;
MPRINT(EM_DIAGRAM):   END;
738522    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738523    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
738524    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738525    +
738526    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
738527    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
738528    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
738529    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
738530    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
738531    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
738532    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
738533    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
738534    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
738535    +end;
MPRINT(EM_DIAGRAM):   end;
738536    +else do;
MPRINT(EM_DIAGRAM):   else do;
738537    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
738538    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
738539    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
738540    +   end;
MPRINT(EM_DIAGRAM):   end;
738541    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
738542    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
738543    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
738544    +   end;
MPRINT(EM_DIAGRAM):   end;
738545    +   else do;
MPRINT(EM_DIAGRAM):   else do;
738546    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
738547    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
738548    +   end;
MPRINT(EM_DIAGRAM):   end;
738549    +end;
MPRINT(EM_DIAGRAM):   end;
738550    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
738551    +   P_DepVar1  =    -1.58910967945868 * H11  +    -2.05915787974985 * H12
738552    +          +     -1.9012823868264 * H13  +    -2.18074438153672 * H14
738553    +          +     1.75831238575242 * H15  +     0.98715125973424 * H16
738554    +          +    -1.91091089802337 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.58910967945868 * H11 + -2.05915787974985 * H12 + 
-1.9012823868264 * H13 + -2.18074438153672 * H14 + 1.75831238575242 * H15 + 0.98715125973424 * 
H16 + -1.91091089802337 * H17 ;
738555    +   P_DepVar1  =     -2.2147071267261 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.2147071267261 + P_DepVar1 ;
738556    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
738557    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
738558    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
738559    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
738560    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
738561    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
738562    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
738563    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
738564    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
738565    +END;
MPRINT(EM_DIAGRAM):   END;
738566    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
738567    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
738568    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
738569    +END;
MPRINT(EM_DIAGRAM):   END;
738570    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
738571    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
738572    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
738573    +END;
MPRINT(EM_DIAGRAM):   END;
738574    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
738575    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
738576    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
738577    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
738578    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
738579    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
738580    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
738581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738582    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
738583    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
738584    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
738585    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
738586    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
738587    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
738588    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
738589    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
738590    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
738591    +END;
MPRINT(EM_DIAGRAM):   END;
738592    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
738593    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
738594    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
738595    +drop
738596    +H11
738597    +H12
738598    +H13
738599    +H14
738600    +H15
738601    +H16
738602    +H17
738603    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
738604    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
738605     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL12_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
738606     quit;
738607     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
738608     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
738609     * Neural12: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural12: Computing metadata for TRAIN data;
738610     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural12\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural12_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural12_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural12_TRAIN out=WORK.M2Z0KHKA noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Z0KHKA;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Z0KHKA(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Z0KHKA;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Z0KHKA;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2CCPGZN NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2CCPGZN;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2CCPGZN;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M303GHQA(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2CCPGZN;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2CCPGZN;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2CCPGZN;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2CCPGZN;
MPRINT(EMADVISECOLUMNS):   set WORK.M2CCPGZN;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural12";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural12";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural12";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural12: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
738922     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
738923     set EMWS8.Neural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural12_EMINFO;
738924     where DATA='Neural12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
738925     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL12_EMINFO.
      WHERE (DATA='Neural12') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

738926     data EMWS8.Neural12_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural12_EMINFO;
738927     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
738928     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
738929     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
738933     run;
738934     data EMWS8.Neural12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_EMINFO;
738935     set EMWS8.Neural12_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural12_EMINFO WORK.MODELTEMP_INFO;
738936     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL12_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

738937     proc sort data = EMWS8.Neural12_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural12_EMINFO NOTHREADS;
738938     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
738939     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL12_EMINFO.
NOTE: The data set EMWS8.NEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

738940     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
738941     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
738942     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

738943     proc sort data = EMWS8.Neural12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
738944     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
738945     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL12_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

738946     data EMWS8.Neural12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural12_EMINFO;
738947     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
738948     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
738949     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL12_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

738950     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
738951     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
738952     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
738953     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL12_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
