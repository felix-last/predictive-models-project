***********************************;
*** Begin Scoring Code for Neural;
***********************************;
DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
 _DM_BAD = 0;
 _NOCL_ = .;
 _MAX_ = .;
 _MAXP_ = .;
 _SUM_ = .;
 _NTRIALS = .;
 _EPS =                1E-10;
LENGTH _WARN_ $4
;
      label S_PC_1 = 'Standard: PC_1' ;

      label S_PC_10 = 'Standard: PC_10' ;

      label S_PC_11 = 'Standard: PC_11' ;

      label S_PC_12 = 'Standard: PC_12' ;

      label S_PC_13 = 'Standard: PC_13' ;

      label S_PC_14 = 'Standard: PC_14' ;

      label S_PC_15 = 'Standard: PC_15' ;

      label S_PC_16 = 'Standard: PC_16' ;

      label S_PC_17 = 'Standard: PC_17' ;

      label S_PC_18 = 'Standard: PC_18' ;

      label S_PC_19 = 'Standard: PC_19' ;

      label S_PC_2 = 'Standard: PC_2' ;

      label S_PC_20 = 'Standard: PC_20' ;

      label S_PC_3 = 'Standard: PC_3' ;

      label S_PC_4 = 'Standard: PC_4' ;

      label S_PC_5 = 'Standard: PC_5' ;

      label S_PC_6 = 'Standard: PC_6' ;

      label S_PC_7 = 'Standard: PC_7' ;

      label S_PC_8 = 'Standard: PC_8' ;

      label S_PC_9 = 'Standard: PC_9' ;

      label H11 = 'Hidden: H1=1' ;

      label H12 = 'Hidden: H1=2' ;

      label H13 = 'Hidden: H1=3' ;

      label H14 = 'Hidden: H1=4' ;

      label H15 = 'Hidden: H1=5' ;

      label H16 = 'Hidden: H1=6' ;

      label H17 = 'Hidden: H1=7' ;

      label I_DepVar = 'Into: DepVar' ;

      label U_DepVar = 'Unnormalized Into: DepVar' ;

      label P_DepVar1 = 'Predicted: DepVar=1' ;

      label P_DepVar0 = 'Predicted: DepVar=0' ;

      label  _WARN_ = "Warnings";

*** *************************;
*** Checking missing input Interval
*** *************************;

IF NMISS(
   PC_1 ,
   PC_10 ,
   PC_11 ,
   PC_12 ,
   PC_13 ,
   PC_14 ,
   PC_15 ,
   PC_16 ,
   PC_17 ,
   PC_18 ,
   PC_19 ,
   PC_2 ,
   PC_20 ,
   PC_3 ,
   PC_4 ,
   PC_5 ,
   PC_6 ,
   PC_7 ,
   PC_8 ,
   PC_9   ) THEN DO;
   SUBSTR(_WARN_, 1, 1) = 'M';

   _DM_BAD = 1;
END;
*** *************************;
*** Writing the Node intvl ;
*** *************************;
IF _DM_BAD EQ 0 THEN DO;
   S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
   S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
   S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
   S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
   S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
   S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
   S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
   S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
   S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
   S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
   S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
   S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
   S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
   S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
   S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
   S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
   S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
   S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
   S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
   S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
END;
ELSE DO;
   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
   ELSE S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
   ELSE S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
   ELSE S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
   ELSE S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
   ELSE S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
   ELSE S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
   ELSE S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
   ELSE S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
   ELSE S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
   IF MISSING( PC_18 ) THEN S_PC_18  = . ;
   ELSE S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
   IF MISSING( PC_19 ) THEN S_PC_19  = . ;
   ELSE S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
   ELSE S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
   IF MISSING( PC_20 ) THEN S_PC_20  = . ;
   ELSE S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
   ELSE S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
   ELSE S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
   ELSE S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
   ELSE S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
   ELSE S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
   ELSE S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
   ELSE S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
END;
*** *************************;
*** Writing the Node H1 ;
*** *************************;
IF _DM_BAD EQ 0 THEN DO;
   H11  =     0.21037801380944 * S_PC_1  +    -0.08720829282004 * S_PC_10
          +     0.25215120033315 * S_PC_11  +    -0.10961191645583 * S_PC_12
          +     0.02959554437113 * S_PC_13  +     0.07624433904545 * S_PC_14
          +    -0.22491072953103 * S_PC_15  +     0.29449064969788 * S_PC_16
          +     0.17317833744584 * S_PC_17  +     0.05429827397853 * S_PC_18
          +    -0.33992024219542 * S_PC_19  +     0.16054216143875 * S_PC_2
          +    -0.10166058652456 * S_PC_20  +     0.52599949123306 * S_PC_3
          +    -0.17932881666828 * S_PC_4  +     0.23725630406368 * S_PC_5
          +     0.07212115381489 * S_PC_6  +    -0.03071464968752 * S_PC_7
          +     0.15702910019697 * S_PC_8  +     0.14453952623388 * S_PC_9 ;
   H12  =     0.88405095372457 * S_PC_1  +     0.10148398864269 * S_PC_10
          +    -0.20705974766573 * S_PC_11  +     0.57551339495197 * S_PC_12
          +     0.16357248480022 * S_PC_13  +     0.24116548390027 * S_PC_14
          +     -0.6508034312555 * S_PC_15  +     -0.0243960411688 * S_PC_16
          +     0.30769870057511 * S_PC_17  +    -0.30964713660972 * S_PC_18
          +    -0.13939406660467 * S_PC_19  +    -0.34991654543716 * S_PC_2
          +     0.64413592233679 * S_PC_20  +      0.0658962473494 * S_PC_3
          +    -0.12286813779535 * S_PC_4  +     0.26819293542507 * S_PC_5
          +    -0.04181157680526 * S_PC_6  +    -0.07508075768059 * S_PC_7
          +     0.05928089157964 * S_PC_8  +    -0.08986153416155 * S_PC_9 ;
   H13  =    -0.26220753747273 * S_PC_1  +     0.03442558202065 * S_PC_10
          +    -0.19433654238588 * S_PC_11  +     0.85130648090662 * S_PC_12
          +     0.21422389390385 * S_PC_13  +    -0.52342060859662 * S_PC_14
          +      0.0388266527387 * S_PC_15  +     0.56471604935065 * S_PC_16
          +     0.22585809206344 * S_PC_17  +     0.07524663398993 * S_PC_18
          +    -0.38946225238309 * S_PC_19  +    -0.11615992943564 * S_PC_2
          +     0.26054241711905 * S_PC_20  +    -0.75992066813022 * S_PC_3
          +    -0.00432991607862 * S_PC_4  +     0.44052817293218 * S_PC_5
          +    -0.08395801527515 * S_PC_6  +    -0.12591883723345 * S_PC_7
          +     0.36879609646015 * S_PC_8  +      0.2632138000896 * S_PC_9 ;
   H14  =    -1.10332079251724 * S_PC_1  +    -0.08123568455324 * S_PC_10
          +     0.42261570085907 * S_PC_11  +     0.36758900386029 * S_PC_12
          +    -0.23703857950508 * S_PC_13  +     0.18032772888517 * S_PC_14
          +    -0.15053571104265 * S_PC_15  +     -0.1589584091009 * S_PC_16
          +     0.21333658464729 * S_PC_17  +    -0.16393759287422 * S_PC_18
          +    -0.22679606018271 * S_PC_19  +      0.3541992287872 * S_PC_2
          +     0.63757273317394 * S_PC_20  +    -0.30553453071452 * S_PC_3
          +     0.45024455800823 * S_PC_4  +     0.38062279600912 * S_PC_5
          +     0.05271603852281 * S_PC_6  +      0.1172059009627 * S_PC_7
          +     0.15540054384439 * S_PC_8  +    -0.22351383134415 * S_PC_9 ;
   H15  =     0.19722861430254 * S_PC_1  +      -0.667653482864 * S_PC_10
          +    -0.19496333828312 * S_PC_11  +     0.79234299110326 * S_PC_12
          +     0.51866755972719 * S_PC_13  +    -0.43702026903245 * S_PC_14
          +    -0.82282394942135 * S_PC_15  +      0.0235853486695 * S_PC_16
          +      0.3602307738079 * S_PC_17  +     0.19705006062864 * S_PC_18
          +     0.02386851976074 * S_PC_19  +    -0.19836948779695 * S_PC_2
          +    -0.01490769126602 * S_PC_20  +      0.4581541549854 * S_PC_3
          +     0.07547366568267 * S_PC_4  +    -0.06699445246048 * S_PC_5
          +     0.13752724959699 * S_PC_6  +    -0.17050272374436 * S_PC_7
          +     0.24809374094175 * S_PC_8  +      0.3051219560598 * S_PC_9 ;
   H16  =     0.04979563116116 * S_PC_1  +     0.37425456473496 * S_PC_10
          +    -0.52183397584571 * S_PC_11  +     -0.0492951707684 * S_PC_12
          +     0.49720884559544 * S_PC_13  +      0.0687562053267 * S_PC_14
          +     0.34758368501778 * S_PC_15  +    -0.46010673440088 * S_PC_16
          +    -0.23718460209136 * S_PC_17  +     0.52295717376588 * S_PC_18
          +     -0.1312007800799 * S_PC_19  +    -0.54336616713197 * S_PC_2
          +     0.01512890583449 * S_PC_20  +    -0.45766049132105 * S_PC_3
          +     0.08818801221838 * S_PC_4  +     0.91033430252186 * S_PC_5
          +     0.13421592394868 * S_PC_6  +    -0.02478206071544 * S_PC_7
          +     0.16086023782085 * S_PC_8  +    -0.04221322893874 * S_PC_9 ;
   H17  =     0.26181771079411 * S_PC_1  +     0.15488655843145 * S_PC_10
          +     0.09890835982688 * S_PC_11  +     0.38169216125028 * S_PC_12
          +     0.35884179766984 * S_PC_13  +    -0.11600943215112 * S_PC_14
          +    -0.35075827402374 * S_PC_15  +     0.30212406237593 * S_PC_16
          +     0.35993569225677 * S_PC_17  +    -0.34585866895929 * S_PC_18
          +     0.31800568920635 * S_PC_19  +    -0.04922893376182 * S_PC_2
          +    -0.31518322301322 * S_PC_20  +    -0.20723868513881 * S_PC_3
          +     0.14733585684097 * S_PC_4  +     0.53855314474497 * S_PC_5
          +     0.33707150284902 * S_PC_6  +     0.30926728458609 * S_PC_7
          +     0.19917027684509 * S_PC_8  +     0.31578868608197 * S_PC_9 ;
   H11  =     0.91208584176561 + H11 ;
   H12  =      0.2919162127953 + H12 ;
   H13  =    -0.58626673853356 + H13 ;
   H14  =     1.84514271278893 + H14 ;
   H15  =    -0.12598092081233 + H15 ;
   H16  =     0.44088612390896 + H16 ;
   H17  =     0.10026569431322 + H17 ;
   H11  = TANH(H11 );
   H12  = TANH(H12 );
   H13  = TANH(H13 );
   H14  = TANH(H14 );
   H15  = TANH(H15 );
   H16  = TANH(H16 );
   H17  = TANH(H17 );
END;
ELSE DO;
   H11  = .;
   H12  = .;
   H13  = .;
   H14  = .;
   H15  = .;
   H16  = .;
   H17  = .;
END;
*** *************************;
*** Writing the Node DepVar ;
*** *************************;
IF _DM_BAD EQ 0 THEN DO;
   P_DepVar1  =    -0.61260323097533 * H11  +     1.30090555711801 * H12
          +      1.7362874913532 * H13  +    -2.09287445327585 * H14
          +     1.21665749212191 * H15  +      1.4839177023068 * H16
          +      0.9955783523079 * H17 ;
   P_DepVar1  =    -1.81991298094829 + P_DepVar1 ;
   P_DepVar0  = 0;
   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
   _SUM_ = 0.;
   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
   _SUM_ = _SUM_ + P_DepVar1 ;
   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
   _SUM_ = _SUM_ + P_DepVar0 ;
   P_DepVar1  = P_DepVar1  / _SUM_;
   P_DepVar0  = P_DepVar0  / _SUM_;
END;
ELSE DO;
   P_DepVar1  = .;
   P_DepVar0  = .;
END;
IF _DM_BAD EQ 1 THEN DO;
   P_DepVar1  =     0.15122156697556;
   P_DepVar0  =     0.84877843302443;
END;
*** *************************;
*** Writing the I_DepVar  AND U_DepVar ;
*** *************************;
_MAXP_ = P_DepVar1 ;
I_DepVar  = "1           " ;
U_DepVar  =                    1;
IF( _MAXP_ LT P_DepVar0  ) THEN DO;
   _MAXP_ = P_DepVar0 ;
   I_DepVar  = "0           " ;
   U_DepVar  =                    0;
END;
********************************;
*** End Scoring Code for Neural;
********************************;
drop
H11
H12
H13
H14
H15
H16
H17
;
drop S_:;
