MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10.08 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                10.08 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3E5M9P0 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3E5M9P0 new;
MPRINT(EM_DIAGRAM):   run;
2194402    filename emflow
2194402  ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2194403    *------------------------------------------------------------*;
2194404    * Tree3: Scoring DATA data;
2194405    *------------------------------------------------------------*;
2194406    data EMWS8.Tree3_TRAIN
2194407    / view=EMWS8.Tree3_TRAIN
2194408    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree3_TRAIN / view=EMWS8.Tree3_TRAIN ;
2194409    set EMWS8.BINNING_TRAIN
2194410    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
2194411    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Tree3\EMFLOWSCORE.sas.
2194412   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2194413   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
2194414   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2194415   +
2194416   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
2194417   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
2194418   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
2194419   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
2194420   +
2194421   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
2194422   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
2194423   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
2194424   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
2194425   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
2194426   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
2194427   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
2194428   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
2194429   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
2194430   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
2194431   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
2194432   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
2194433   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
2194434   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
2194435   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
2194436   +
2194437   +
2194438   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
2194439   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
2194440   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
2194441   +
2194442   +
2194443   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
2194444   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2194445   +
2194446   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
2194447   +_ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
2194448   + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194449   +IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
2194450   +  _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
2194451   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194452   +  IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
2194453   +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
2194454   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194455   +    IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
2194456   +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
2194457   +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
2194458   +      P_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.11111111111111;
2194459   +      P_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.88888888888888;
2194460   +      Q_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.11111111111111;
2194461   +      Q_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.88888888888888;
2194462   +      V_DepVar0  =                  0.1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.1;
2194463   +      V_DepVar1  =                  0.9;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.9;
2194464   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2194465   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2194466   +      END;
MPRINT(EM_DIAGRAM):   END;
2194467   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194468   +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
2194469   +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
2194470   +      P_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.54430379746835;
2194471   +      P_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45569620253164;
2194472   +      Q_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.54430379746835;
2194473   +      Q_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.45569620253164;
2194474   +      V_DepVar0  =     0.56756756756756;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.56756756756756;
2194475   +      V_DepVar1  =     0.43243243243243;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.43243243243243;
2194476   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2194477   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2194478   +      END;
MPRINT(EM_DIAGRAM):   END;
2194479   +    END;
MPRINT(EM_DIAGRAM):   END;
2194480   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194481   +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
2194482   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194483   +    IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
2194484   +      _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
2194485   +      _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
2194486   +      P_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82027649769585;
2194487   +      P_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17972350230414;
2194488   +      Q_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82027649769585;
2194489   +      Q_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17972350230414;
2194490   +      V_DepVar0  =     0.82222222222222;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.82222222222222;
2194491   +      V_DepVar1  =     0.17777777777777;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.17777777777777;
2194492   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2194493   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2194494   +      END;
MPRINT(EM_DIAGRAM):   END;
2194495   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194496   +      _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
2194497   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194498   +      IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
2194499   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
2194500   +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
2194501   +        P_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.4758064516129;
2194502   +        P_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.52419354838709;
2194503   +        Q_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.4758064516129;
2194504   +        Q_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.52419354838709;
2194505   +        V_DepVar0  =     0.48333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.48333333333333;
2194506   +        V_DepVar1  =     0.51666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.51666666666666;
2194507   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2194508   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2194509   +        END;
MPRINT(EM_DIAGRAM):   END;
2194510   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194511   +        _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
2194512   +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
2194513   +        P_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.7734375;
2194514   +        P_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.2265625;
2194515   +        Q_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.7734375;
2194516   +        Q_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.2265625;
2194517   +        V_DepVar0  =     0.75510204081632;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.75510204081632;
2194518   +        V_DepVar1  =     0.24489795918367;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.24489795918367;
2194519   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2194520   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2194521   +        END;
MPRINT(EM_DIAGRAM):   END;
2194522   +      END;
MPRINT(EM_DIAGRAM):   END;
2194523   +    END;
MPRINT(EM_DIAGRAM):   END;
2194524   +  END;
MPRINT(EM_DIAGRAM):   END;
2194525   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194526   +  _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
2194527   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194528   +  IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
2194529   +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
2194530   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
2194531   +    P_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.79078014184397;
2194532   +    P_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.20921985815602;
2194533   +    Q_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.79078014184397;
2194534   +    Q_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.20921985815602;
2194535   +    V_DepVar0  =     0.72268907563025;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.72268907563025;
2194536   +    V_DepVar1  =     0.27731092436974;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.27731092436974;
2194537   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2194538   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2194539   +    END;
MPRINT(EM_DIAGRAM):   END;
2194540   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194541   +    _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
2194542   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194543   +    IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
2194544   +      _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
2194545   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194546   +      IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
2194547   +        _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
2194548   +        _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
2194549   +        P_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26315789473684;
2194550   +        P_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73684210526315;
2194551   +        Q_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26315789473684;
2194552   +        Q_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73684210526315;
2194553   +        V_DepVar0  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.28571428571428;
2194554   +        V_DepVar1  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.71428571428571;
2194555   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2194556   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2194557   +        END;
MPRINT(EM_DIAGRAM):   END;
2194558   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194559   +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
2194560   +        _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
2194561   +        P_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81818181818181;
2194562   +        P_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18181818181818;
2194563   +        Q_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81818181818181;
2194564   +        Q_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18181818181818;
2194565   +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
2194566   +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
2194567   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2194568   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2194569   +        END;
MPRINT(EM_DIAGRAM):   END;
2194570   +      END;
MPRINT(EM_DIAGRAM):   END;
2194571   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194572   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
2194573   +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
2194574   +      P_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.95194986072423;
2194575   +      P_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.04805013927576;
2194576   +      Q_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.95194986072423;
2194577   +      Q_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.04805013927576;
2194578   +      V_DepVar0  =     0.95980707395498;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.95980707395498;
2194579   +      V_DepVar1  =     0.04019292604501;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.04019292604501;
2194580   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2194581   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2194582   +      END;
MPRINT(EM_DIAGRAM):   END;
2194583   +    END;
MPRINT(EM_DIAGRAM):   END;
2194584   +  END;
MPRINT(EM_DIAGRAM):   END;
2194585   +
2194586   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
2194587   +IF  F_DepVar  NE '0'
2194588   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
2194589   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2194590   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2194591   + END;
MPRINT(EM_DIAGRAM):   END;
2194592   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194593   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
2194594   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
2194595   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
2194596   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
2194597   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
2194598   +       END;
MPRINT(EM_DIAGRAM):   END;
2194599   + END;
MPRINT(EM_DIAGRAM):   END;
2194600   +
2194601   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2194602   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
2194603   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2194604   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2194605    run;

NOTE: DATA STEP view saved on file EMWS8.TREE3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2194606    quit;
2194607    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2194608    filename emflow
2194608  ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2194609    *------------------------------------------------------------*;
2194610    * Tree3: Scoring VALIDATE data;
2194611    *------------------------------------------------------------*;
2194612    data EMWS8.Tree3_VALIDATE
2194613    / view=EMWS8.Tree3_VALIDATE
2194614    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree3_VALIDATE / view=EMWS8.Tree3_VALIDATE ;
2194615    set EMWS8.BINNING_VALIDATE
2194616    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
2194617    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Tree3\EMFLOWSCORE.sas.
2194618   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2194619   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
2194620   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2194621   +
2194622   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
2194623   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
2194624   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
2194625   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
2194626   +
2194627   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
2194628   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
2194629   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
2194630   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
2194631   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
2194632   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
2194633   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
2194634   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
2194635   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
2194636   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
2194637   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
2194638   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
2194639   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
2194640   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
2194641   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
2194642   +
2194643   +
2194644   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
2194645   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
2194646   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
2194647   +
2194648   +
2194649   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
2194650   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2194651   +
2194652   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
2194653   +_ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
2194654   + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194655   +IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
2194656   +  _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
2194657   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194658   +  IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
2194659   +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
2194660   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194661   +    IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
2194662   +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
2194663   +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
2194664   +      P_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.11111111111111;
2194665   +      P_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.88888888888888;
2194666   +      Q_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.11111111111111;
2194667   +      Q_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.88888888888888;
2194668   +      V_DepVar0  =                  0.1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.1;
2194669   +      V_DepVar1  =                  0.9;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.9;
2194670   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2194671   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2194672   +      END;
MPRINT(EM_DIAGRAM):   END;
2194673   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194674   +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
2194675   +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
2194676   +      P_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.54430379746835;
2194677   +      P_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45569620253164;
2194678   +      Q_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.54430379746835;
2194679   +      Q_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.45569620253164;
2194680   +      V_DepVar0  =     0.56756756756756;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.56756756756756;
2194681   +      V_DepVar1  =     0.43243243243243;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.43243243243243;
2194682   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2194683   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2194684   +      END;
MPRINT(EM_DIAGRAM):   END;
2194685   +    END;
MPRINT(EM_DIAGRAM):   END;
2194686   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194687   +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
2194688   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194689   +    IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
2194690   +      _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
2194691   +      _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
2194692   +      P_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82027649769585;
2194693   +      P_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17972350230414;
2194694   +      Q_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82027649769585;
2194695   +      Q_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17972350230414;
2194696   +      V_DepVar0  =     0.82222222222222;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.82222222222222;
2194697   +      V_DepVar1  =     0.17777777777777;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.17777777777777;
2194698   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2194699   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2194700   +      END;
MPRINT(EM_DIAGRAM):   END;
2194701   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194702   +      _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
2194703   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194704   +      IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
2194705   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
2194706   +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
2194707   +        P_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.4758064516129;
2194708   +        P_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.52419354838709;
2194709   +        Q_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.4758064516129;
2194710   +        Q_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.52419354838709;
2194711   +        V_DepVar0  =     0.48333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.48333333333333;
2194712   +        V_DepVar1  =     0.51666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.51666666666666;
2194713   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2194714   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2194715   +        END;
MPRINT(EM_DIAGRAM):   END;
2194716   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194717   +        _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
2194718   +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
2194719   +        P_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.7734375;
2194720   +        P_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.2265625;
2194721   +        Q_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.7734375;
2194722   +        Q_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.2265625;
2194723   +        V_DepVar0  =     0.75510204081632;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.75510204081632;
2194724   +        V_DepVar1  =     0.24489795918367;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.24489795918367;
2194725   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2194726   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2194727   +        END;
MPRINT(EM_DIAGRAM):   END;
2194728   +      END;
MPRINT(EM_DIAGRAM):   END;
2194729   +    END;
MPRINT(EM_DIAGRAM):   END;
2194730   +  END;
MPRINT(EM_DIAGRAM):   END;
2194731   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194732   +  _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
2194733   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194734   +  IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
2194735   +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
2194736   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
2194737   +    P_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.79078014184397;
2194738   +    P_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.20921985815602;
2194739   +    Q_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.79078014184397;
2194740   +    Q_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.20921985815602;
2194741   +    V_DepVar0  =     0.72268907563025;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.72268907563025;
2194742   +    V_DepVar1  =     0.27731092436974;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.27731092436974;
2194743   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2194744   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2194745   +    END;
MPRINT(EM_DIAGRAM):   END;
2194746   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194747   +    _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
2194748   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194749   +    IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
2194750   +      _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
2194751   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2194752   +      IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
2194753   +        _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
2194754   +        _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
2194755   +        P_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26315789473684;
2194756   +        P_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73684210526315;
2194757   +        Q_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26315789473684;
2194758   +        Q_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73684210526315;
2194759   +        V_DepVar0  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.28571428571428;
2194760   +        V_DepVar1  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.71428571428571;
2194761   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2194762   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2194763   +        END;
MPRINT(EM_DIAGRAM):   END;
2194764   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194765   +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
2194766   +        _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
2194767   +        P_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81818181818181;
2194768   +        P_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18181818181818;
2194769   +        Q_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81818181818181;
2194770   +        Q_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18181818181818;
2194771   +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
2194772   +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
2194773   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2194774   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2194775   +        END;
MPRINT(EM_DIAGRAM):   END;
2194776   +      END;
MPRINT(EM_DIAGRAM):   END;
2194777   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194778   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
2194779   +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
2194780   +      P_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.95194986072423;
2194781   +      P_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.04805013927576;
2194782   +      Q_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.95194986072423;
2194783   +      Q_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.04805013927576;
2194784   +      V_DepVar0  =     0.95980707395498;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.95980707395498;
2194785   +      V_DepVar1  =     0.04019292604501;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.04019292604501;
2194786   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2194787   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2194788   +      END;
MPRINT(EM_DIAGRAM):   END;
2194789   +    END;
MPRINT(EM_DIAGRAM):   END;
2194790   +  END;
MPRINT(EM_DIAGRAM):   END;
2194791   +
2194792   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
2194793   +IF  F_DepVar  NE '0'
2194794   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
2194795   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2194796   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2194797   + END;
MPRINT(EM_DIAGRAM):   END;
2194798   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2194799   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
2194800   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
2194801   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
2194802   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
2194803   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
2194804   +       END;
MPRINT(EM_DIAGRAM):   END;
2194805   + END;
MPRINT(EM_DIAGRAM):   END;
2194806   +
2194807   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2194808   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
2194809   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2194810   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2194811    run;

NOTE: DATA STEP view saved on file EMWS8.TREE3_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2194812    quit;
2194813    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2194814    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2194815    * Tree3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Tree3: Computing metadata for TRAIN data;
2194816    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.TREE3_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Tree3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Tree3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Tree3_TRAIN out=WORK.M1X2AIKS noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1X2AIKS;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1X2AIKS(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1X2AIKS;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1X2AIKS;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M29BZBSJ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M29BZBSJ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M29BZBSJ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M08XI9VV(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M29BZBSJ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M29BZBSJ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M29BZBSJ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M29BZBSJ;
MPRINT(EMADVISECOLUMNS):   set WORK.M29BZBSJ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Tree3";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Tree3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Tree3";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Tree3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Tree3";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Tree3";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Tree3";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Tree3";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Tree3";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Tree3";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if name = '_NODE_' then do;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'GRP_RFMSTAT' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GRP_ACCEPTEDCMP5' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GRP_RECENCY' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GRP_NUMCATALOGPURCHASES' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GRP_MNTWINES' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GRP_MNTMEATPRODUCTS' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree3: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GRP_INCOME' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree3: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GRP_FRQ' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree3: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GRP_NUMWEBPURCHASES' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree3: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'YEAR_BIRTH' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree3: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GRP_MNTFISHPRODUCTS' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree3: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GRP_NUMDISTPURCHASES' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree3: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GRP_RMNTFRQ' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree3: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GRP_MNT' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree3: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GRP_MNTGOLDPRODS' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree3: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'Q_DepVar1' then role = "ASSESS";
MPRINT(EM_DIAGRAM):   if upcase(name) = 'Q_DepVar0' then role = "ASSESS";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2195193    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2195194    set EMWS8.Tree3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Tree3_EMINFO;
2195195    where DATA='Tree3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Tree3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
2195196    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TREE3_EMINFO.
      WHERE (DATA='Tree3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2195197    data EMWS8.Tree3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Tree3_EMINFO;
2195198    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2195199    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2195200    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.TREE3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
2195204    run;
2195205    data EMWS8.Tree3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree3_EMINFO;
2195206    set EMWS8.Tree3_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Tree3_EMINFO WORK.MODELTEMP_INFO;
2195207    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.TREE3_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.TREE3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2195208    proc sort data = EMWS8.Tree3_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Tree3_EMINFO NOTHREADS;
2195209    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2195210    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.TREE3_EMINFO.
NOTE: The data set EMWS8.TREE3_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2195211    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2195212    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2195213    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2195214    proc sort data = EMWS8.Tree3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Tree3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2195215    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2195216    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.TREE3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2195217    data EMWS8.Tree3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree3_EMINFO;
2195218    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2195219    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2195220    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.TREE3_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2195221    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2195222    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2195223    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2195224    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.TREE3_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.TREE3_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
