MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10.46 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                10.46 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3QFC8A6 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3QFC8A6 new;
MPRINT(EM_DIAGRAM):   run;
2748438    filename emflow
2748438  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural44: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2748439    *------------------------------------------------------------*;
2748440    * AutoNeural44: Scoring DATA data;
2748441    *------------------------------------------------------------*;
2748442    data EMWS8.AutoNeural44_TRAIN
2748443    / view=EMWS8.AutoNeural44_TRAIN
2748444    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural44_TRAIN / view=EMWS8.AutoNeural44_TRAIN ;
2748445    set EMWS8.Meta2_TRAIN
2748446    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
2748447    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMFLOWSCORE.sas.
2748448   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2748449   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2748450   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2748451   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2748452   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2748453   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2748454   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2748455   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2748456   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2748457   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2748458   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2748459   +LENGTH _WARN_ $4
2748460   +      F_DepVar  $ 12
2748461   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2748462   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2748463   +
2748464   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2748465   +
2748466   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2748467   +
2748468   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2748469   +
2748470   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2748471   +
2748472   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2748473   +
2748474   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2748475   +
2748476   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2748477   +
2748478   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2748479   +
2748480   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2748481   +
2748482   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2748483   +
2748484   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2748485   +
2748486   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2748487   +
2748488   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2748489   +
2748490   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2748491   +
2748492   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2748493   +
2748494   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2748495   +
2748496   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2748497   +
2748498   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2748499   +
2748500   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2748501   +
2748502   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2748503   +
2748504   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2748505   +
2748506   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2748507   +
2748508   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2748509   +
2748510   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2748511   +
2748512   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2748513   +
2748514   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2748515   +
2748516   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2748517   +
2748518   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2748519   +
2748520   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2748521   +
2748522   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2748523   +
2748524   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2748525   +
2748526   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2748527   +
2748528   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2748529   +
2748530   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2748531   +
2748532   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2748533   +
2748534   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2748535   +
2748536   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2748537   +
2748538   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2748539   +
2748540   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2748541   +
2748542   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2748543   +
2748544   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2748545   +
2748546   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2748547   +
2748548   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2748549   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2748550   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2748551   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2748552   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2748553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748554   +end;
MPRINT(EM_DIAGRAM):   end;
2748555   +else do;
MPRINT(EM_DIAGRAM):   else do;
2748556   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2748557   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2748558   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2748559   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2748560   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2748561   +   end;
MPRINT(EM_DIAGRAM):   end;
2748562   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2748563   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2748564   +   end;
MPRINT(EM_DIAGRAM):   end;
2748565   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2748566   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2748567   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2748568   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748569   +   end;
MPRINT(EM_DIAGRAM):   end;
2748570   +end;
MPRINT(EM_DIAGRAM):   end;
2748571   +
2748572   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2748573   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2748574   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2748575   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2748576   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2748577   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748578   +end;
MPRINT(EM_DIAGRAM):   end;
2748579   +else do;
MPRINT(EM_DIAGRAM):   else do;
2748580   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2748581   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2748582   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2748583   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2748584   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2748585   +   end;
MPRINT(EM_DIAGRAM):   end;
2748586   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2748587   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2748588   +   end;
MPRINT(EM_DIAGRAM):   end;
2748589   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2748590   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2748591   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2748592   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748593   +   end;
MPRINT(EM_DIAGRAM):   end;
2748594   +end;
MPRINT(EM_DIAGRAM):   end;
2748595   +
2748596   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2748597   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2748598   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2748599   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2748600   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2748601   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748602   +end;
MPRINT(EM_DIAGRAM):   end;
2748603   +else do;
MPRINT(EM_DIAGRAM):   else do;
2748604   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2748605   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2748606   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2748607   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2748608   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2748609   +   end;
MPRINT(EM_DIAGRAM):   end;
2748610   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2748611   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2748612   +   end;
MPRINT(EM_DIAGRAM):   end;
2748613   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2748614   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2748615   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2748616   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748617   +   end;
MPRINT(EM_DIAGRAM):   end;
2748618   +end;
MPRINT(EM_DIAGRAM):   end;
2748619   +
2748620   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2748621   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2748622   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2748623   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2748624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2748625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748626   +end;
MPRINT(EM_DIAGRAM):   end;
2748627   +else do;
MPRINT(EM_DIAGRAM):   else do;
2748628   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2748629   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2748630   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2748631   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2748632   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2748633   +   end;
MPRINT(EM_DIAGRAM):   end;
2748634   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2748635   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2748636   +   end;
MPRINT(EM_DIAGRAM):   end;
2748637   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2748638   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2748639   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2748640   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748641   +   end;
MPRINT(EM_DIAGRAM):   end;
2748642   +end;
MPRINT(EM_DIAGRAM):   end;
2748643   +
2748644   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2748645   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2748646   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2748647   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2748648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2748649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748650   +end;
MPRINT(EM_DIAGRAM):   end;
2748651   +else do;
MPRINT(EM_DIAGRAM):   else do;
2748652   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2748653   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2748654   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2748655   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2748656   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2748657   +   end;
MPRINT(EM_DIAGRAM):   end;
2748658   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2748659   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2748660   +   end;
MPRINT(EM_DIAGRAM):   end;
2748661   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2748662   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2748663   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2748664   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748665   +   end;
MPRINT(EM_DIAGRAM):   end;
2748666   +end;
MPRINT(EM_DIAGRAM):   end;
2748667   +
2748668   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2748669   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2748670   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2748671   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2748672   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2748673   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748674   +end;
MPRINT(EM_DIAGRAM):   end;
2748675   +else do;
MPRINT(EM_DIAGRAM):   else do;
2748676   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2748677   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2748678   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2748679   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2748680   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2748681   +   end;
MPRINT(EM_DIAGRAM):   end;
2748682   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2748683   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2748684   +   end;
MPRINT(EM_DIAGRAM):   end;
2748685   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2748686   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2748687   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2748688   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748689   +   end;
MPRINT(EM_DIAGRAM):   end;
2748690   +end;
MPRINT(EM_DIAGRAM):   end;
2748691   +
2748692   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2748693   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2748694   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2748695   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2748696   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2748697   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2748698   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2748699   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2748700   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2748701   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2748702   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2748703   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2748704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2748705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748706   +end;
MPRINT(EM_DIAGRAM):   end;
2748707   +else do;
MPRINT(EM_DIAGRAM):   else do;
2748708   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2748709   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2748710   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2748711   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2748712   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2748713   +   end;
MPRINT(EM_DIAGRAM):   end;
2748714   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2748715   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2748716   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2748717   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2748718   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2748719   +   end;
MPRINT(EM_DIAGRAM):   end;
2748720   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2748721   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2748722   +   end;
MPRINT(EM_DIAGRAM):   end;
2748723   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2748724   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2748725   +   end;
MPRINT(EM_DIAGRAM):   end;
2748726   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2748727   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2748728   +   end;
MPRINT(EM_DIAGRAM):   end;
2748729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2748730   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2748731   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2748732   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2748733   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2748734   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2748735   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748736   +   end;
MPRINT(EM_DIAGRAM):   end;
2748737   +end;
MPRINT(EM_DIAGRAM):   end;
2748738   +
2748739   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2748740   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2748741   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2748742   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2748743   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2748744   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2748745   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2748746   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2748747   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2748748   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2748749   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2748750   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2748751   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2748752   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2748753   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748754   +end;
MPRINT(EM_DIAGRAM):   end;
2748755   +else do;
MPRINT(EM_DIAGRAM):   else do;
2748756   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2748757   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2748758   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2748759   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2748760   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2748761   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2748762   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2748763   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2748764   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2748765   +         end;
MPRINT(EM_DIAGRAM):   end;
2748766   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2748767   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2748768   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2748769   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2748770   +            end;
MPRINT(EM_DIAGRAM):   end;
2748771   +         end;
MPRINT(EM_DIAGRAM):   end;
2748772   +      end;
MPRINT(EM_DIAGRAM):   end;
2748773   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2748774   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2748775   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2748776   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2748777   +         end;
MPRINT(EM_DIAGRAM):   end;
2748778   +      end;
MPRINT(EM_DIAGRAM):   end;
2748779   +   end;
MPRINT(EM_DIAGRAM):   end;
2748780   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2748781   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2748782   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2748783   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2748784   +      end;
MPRINT(EM_DIAGRAM):   end;
2748785   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2748786   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2748787   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2748788   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2748789   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2748790   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2748791   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2748792   +         end;
MPRINT(EM_DIAGRAM):   end;
2748793   +      end;
MPRINT(EM_DIAGRAM):   end;
2748794   +   end;
MPRINT(EM_DIAGRAM):   end;
2748795   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2748796   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2748797   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2748798   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2748799   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2748800   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2748801   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748802   +   end;
MPRINT(EM_DIAGRAM):   end;
2748803   +end;
MPRINT(EM_DIAGRAM):   end;
2748804   +
2748805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2748806   +*** Checking missing input Interval
2748807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2748808   +
2748809   +IF NMISS(
2748810   +   Income ,
2748811   +   Kidhome ,
2748812   +   MntFishProducts ,
2748813   +   MntFruits ,
2748814   +   MntGoldProds ,
2748815   +   MntMeatProducts ,
2748816   +   MntSweetProducts ,
2748817   +   MntWines ,
2748818   +   NumCatalogPurchases ,
2748819   +   NumDealsPurchases ,
2748820   +   NumStorePurchases ,
2748821   +   NumWebPurchases ,
2748822   +   NumWebVisitsMonth ,
2748823   +   Recency ,
2748824   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2748825   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2748826   +
2748827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2748828   +END;
MPRINT(EM_DIAGRAM):   END;
2748829   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2748830   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2748831   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2748832   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2748833   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2748834   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2748835   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2748836   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2748837   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2748838   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2748839   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2748840   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2748841   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2748842   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2748843   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2748844   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2748845   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2748846   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2748847   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2748848   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2748849   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2748850   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2748851   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2748852   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2748853   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2748854   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2748855   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2748856   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2748857   +END;
MPRINT(EM_DIAGRAM):   END;
2748858   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2748859   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2748860   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2748861   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2748862   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2748863   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2748864   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2748865   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2748866   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2748867   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2748868   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2748869   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2748870   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2748871   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2748872   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2748873   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2748874   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2748875   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2748876   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2748877   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2748878   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2748879   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2748880   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2748881   +   ELSE S_NumCatalogPurchases
2748882   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2748883   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2748884   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2748885   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2748886   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2748887   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2748888   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2748889   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2748890   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2748891   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2748892   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2748893   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2748894   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2748895   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2748896   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2748897   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2748898   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2748899   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2748900   +END;
MPRINT(EM_DIAGRAM):   END;
2748901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2748902   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2748903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2748904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2748905   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2748906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2748907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2748908   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2748909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2748910   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2748911   +   H1x1_1  =     0.60821559277699 * S_Income  +     0.78245878520575 *
2748912   +        S_Kidhome  +     3.02629225919456 * S_MntFishProducts
2748913   +          +     1.44208452883494 * S_MntFruits  +     -0.8161710906244 *
2748914   +        S_MntGoldProds  +    -5.65479728306763 * S_MntMeatProducts
2748915   +          +     2.41993296129914 * S_MntSweetProducts
2748916   +          +     16.1416936305202 * S_MntWines  +    -0.30170648366369 *
2748917   +        S_NumCatalogPurchases  +    -4.40539425596446 * S_NumDealsPurchases
2748918   +          +     7.59231492380468 * S_NumStorePurchases
2748919   +          +    -0.47095655313121 * S_NumWebPurchases
2748920   +          +     2.65669932372712 * S_NumWebVisitsMonth
2748921   +          +     0.92605434462951 * S_Recency  +     0.27595278529362 *
2748922   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.60821559277699 * S_Income + 0.78245878520575 * S_Kidhome + 
3.02629225919456 * S_MntFishProducts + 1.44208452883494 * S_MntFruits + -0.8161710906244 * 
S_MntGoldProds + -5.65479728306763 * S_MntMeatProducts + 2.41993296129914 * S_MntSweetProducts 
+ 16.1416936305202 * S_MntWines + -0.30170648366369 * S_NumCatalogPurchases + 
-4.40539425596446 * S_NumDealsPurchases + 7.59231492380468 * S_NumStorePurchases + 
-0.47095655313121 * S_NumWebPurchases + 2.65669932372712 * S_NumWebVisitsMonth + 
0.92605434462951 * S_Recency + 0.27595278529362 * S_Teenhome ;
2748923   +   H1x1_1  = H1x1_1  +     2.22617132301519 * AcceptedCmp10
2748924   +          +     2.97389891933054 * AcceptedCmp20  +    -0.25852677589668 *
2748925   +        AcceptedCmp30  +     0.29740935303964 * AcceptedCmp40
2748926   +          +     6.80320564322924 * AcceptedCmp50  +     2.19745012825493 *
2748927   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.22617132301519 * AcceptedCmp10 + 2.97389891933054 * 
AcceptedCmp20 + -0.25852677589668 * AcceptedCmp30 + 0.29740935303964 * AcceptedCmp40 + 
6.80320564322924 * AcceptedCmp50 + 2.19745012825493 * Complain0 ;
2748928   +   H1x1_1  = H1x1_1  +     2.55205464559227 * Education2n_Cycle
2748929   +          +    -0.98577713200024 * EducationBasic  +     1.74619403557996 *
2748930   +        EducationGraduation  +    -3.89600865490994 * EducationMaster
2748931   +          +     0.44728218776544 * Marital_StatusDivorced
2748932   +          +    -1.62458831276183 * Marital_StatusMarried
2748933   +          +    -0.42858616367237 * Marital_StatusSingle
2748934   +          +    -0.29553796445711 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.55205464559227 * Education2n_Cycle + 
-0.98577713200024 * EducationBasic + 1.74619403557996 * EducationGraduation + 
-3.89600865490994 * EducationMaster + 0.44728218776544 * Marital_StatusDivorced + 
-1.62458831276183 * Marital_StatusMarried + -0.42858616367237 * Marital_StatusSingle + 
-0.29553796445711 * Marital_StatusTogether ;
2748935   +   H1x1_1  =     3.59078196202385 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.59078196202385 + H1x1_1 ;
2748936   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2748937   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2748938   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2748939   +END;
MPRINT(EM_DIAGRAM):   END;
2748940   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2748941   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2748942   +END;
MPRINT(EM_DIAGRAM):   END;
2748943   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2748944   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2748945   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2748946   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2748947   +   H1x2_1  =    -0.99188645731967 * S_Income  +    -0.76771098590807 *
2748948   +        S_Kidhome  +      0.8287505285538 * S_MntFishProducts
2748949   +          +     0.45999682434351 * S_MntFruits  +      0.4293543408639 *
2748950   +        S_MntGoldProds  +    -9.07723801877759 * S_MntMeatProducts
2748951   +          +    -1.37098390846164 * S_MntSweetProducts
2748952   +          +    -0.51776810310879 * S_MntWines  +    -1.37476010659628 *
2748953   +        S_NumCatalogPurchases  +    -1.10451572937532 * S_NumDealsPurchases
2748954   +          +     0.58246769316602 * S_NumStorePurchases
2748955   +          +     2.72780243156581 * S_NumWebPurchases
2748956   +          +    -1.73896446530763 * S_NumWebVisitsMonth
2748957   +          +      0.7638963348072 * S_Recency  +     0.26979377997458 *
2748958   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.99188645731967 * S_Income + -0.76771098590807 * S_Kidhome + 
0.8287505285538 * S_MntFishProducts + 0.45999682434351 * S_MntFruits + 0.4293543408639 * 
S_MntGoldProds + -9.07723801877759 * S_MntMeatProducts + -1.37098390846164 * 
S_MntSweetProducts + -0.51776810310879 * S_MntWines + -1.37476010659628 * 
S_NumCatalogPurchases + -1.10451572937532 * S_NumDealsPurchases + 0.58246769316602 * 
S_NumStorePurchases + 2.72780243156581 * S_NumWebPurchases + -1.73896446530763 * 
S_NumWebVisitsMonth + 0.7638963348072 * S_Recency + 0.26979377997458 * S_Teenhome ;
2748959   +   H1x2_1  = H1x2_1  +     2.43014219686416 * AcceptedCmp10
2748960   +          +    -4.74345515374868 * AcceptedCmp20  +     0.62579233621413 *
2748961   +        AcceptedCmp30  +     0.64637471234006 * AcceptedCmp40
2748962   +          +     1.70767935570268 * AcceptedCmp50  +    -0.94631514600478 *
2748963   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 2.43014219686416 * AcceptedCmp10 + -4.74345515374868 * 
AcceptedCmp20 + 0.62579233621413 * AcceptedCmp30 + 0.64637471234006 * AcceptedCmp40 + 
1.70767935570268 * AcceptedCmp50 + -0.94631514600478 * Complain0 ;
2748964   +   H1x2_1  = H1x2_1  +    -0.98761508407831 * Education2n_Cycle
2748965   +          +     0.88643388278508 * EducationBasic  +    -0.83878459420096 *
2748966   +        EducationGraduation  +     1.01072132252596 * EducationMaster
2748967   +          +     0.08221095774854 * Marital_StatusDivorced
2748968   +          +    -0.13062113450086 * Marital_StatusMarried
2748969   +          +      0.1912119500185 * Marital_StatusSingle
2748970   +          +     -0.3728209764276 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.98761508407831 * Education2n_Cycle + 
0.88643388278508 * EducationBasic + -0.83878459420096 * EducationGraduation + 1.01072132252596 
* EducationMaster + 0.08221095774854 * Marital_StatusDivorced + -0.13062113450086 * 
Marital_StatusMarried + 0.1912119500185 * Marital_StatusSingle + -0.3728209764276 * 
Marital_StatusTogether ;
2748971   +   H1x2_1  =    -3.03275566330542 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -3.03275566330542 + H1x2_1 ;
2748972   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2748973   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2748974   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2748975   +END;
MPRINT(EM_DIAGRAM):   END;
2748976   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2748977   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2748978   +END;
MPRINT(EM_DIAGRAM):   END;
2748979   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2748980   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2748981   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2748982   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2748983   +   H1x3_1  =    -1.55963738420881 * S_Income  +     0.71964926339388 *
2748984   +        S_Kidhome  +    -0.47208108972067 * S_MntFishProducts
2748985   +          +      0.6450894987393 * S_MntFruits  +     0.06261669147127 *
2748986   +        S_MntGoldProds  +     0.14975522509881 * S_MntMeatProducts
2748987   +          +     -0.4771357321143 * S_MntSweetProducts
2748988   +          +     0.66709116843422 * S_MntWines  +     0.90111404700817 *
2748989   +        S_NumCatalogPurchases  +     0.17723895187345 * S_NumDealsPurchases
2748990   +          +     0.38755002642582 * S_NumStorePurchases
2748991   +          +     0.65178643881164 * S_NumWebPurchases
2748992   +          +    -0.83170832622452 * S_NumWebVisitsMonth
2748993   +          +     2.65115346957983 * S_Recency  +     1.27228948382376 *
2748994   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.55963738420881 * S_Income + 0.71964926339388 * S_Kidhome + 
-0.47208108972067 * S_MntFishProducts + 0.6450894987393 * S_MntFruits + 0.06261669147127 * 
S_MntGoldProds + 0.14975522509881 * S_MntMeatProducts + -0.4771357321143 * S_MntSweetProducts 
+ 0.66709116843422 * S_MntWines + 0.90111404700817 * S_NumCatalogPurchases + 0.17723895187345 
* S_NumDealsPurchases + 0.38755002642582 * S_NumStorePurchases + 0.65178643881164 * 
S_NumWebPurchases + -0.83170832622452 * S_NumWebVisitsMonth + 2.65115346957983 * S_Recency + 
1.27228948382376 * S_Teenhome ;
2748995   +   H1x3_1  = H1x3_1  +     0.29816272417051 * AcceptedCmp10
2748996   +          +    -0.71154376870988 * AcceptedCmp20  +    -0.39513051704909 *
2748997   +        AcceptedCmp30  +     1.19068615672558 * AcceptedCmp40
2748998   +          +     -1.9640044684445 * AcceptedCmp50  +    -0.09395110959453 *
2748999   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.29816272417051 * AcceptedCmp10 + -0.71154376870988 * 
AcceptedCmp20 + -0.39513051704909 * AcceptedCmp30 + 1.19068615672558 * AcceptedCmp40 + 
-1.9640044684445 * AcceptedCmp50 + -0.09395110959453 * Complain0 ;
2749000   +   H1x3_1  = H1x3_1  +    -0.43809514270646 * Education2n_Cycle
2749001   +          +     0.27926697891252 * EducationBasic  +     1.12178568429269 *
2749002   +        EducationGraduation  +      0.9696976240987 * EducationMaster
2749003   +          +    -0.13574340372484 * Marital_StatusDivorced
2749004   +          +     1.26001446384238 * Marital_StatusMarried
2749005   +          +    -0.16294618258246 * Marital_StatusSingle
2749006   +          +    -0.31789534786196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.43809514270646 * Education2n_Cycle + 
0.27926697891252 * EducationBasic + 1.12178568429269 * EducationGraduation + 0.9696976240987 * 
EducationMaster + -0.13574340372484 * Marital_StatusDivorced + 1.26001446384238 * 
Marital_StatusMarried + -0.16294618258246 * Marital_StatusSingle + -0.31789534786196 * 
Marital_StatusTogether ;
2749007   +   H1x3_1  =     0.67537485509128 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67537485509128 + H1x3_1 ;
2749008   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2749009   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2749010   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
2749011   +END;
MPRINT(EM_DIAGRAM):   END;
2749012   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2749013   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2749014   +END;
MPRINT(EM_DIAGRAM):   END;
2749015   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749016   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2749017   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749018   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2749019   +   H2x1_1  =     1.66176856703373 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.66176856703373 * H1x1_1 ;
2749020   +   H2x1_1  = H2x1_1  +     2.22197952592224 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.22197952592224 * H1x2_1 ;
2749021   +   H2x1_1  = H2x1_1  +     1.05148827727504 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.05148827727504 * H1x3_1 ;
2749022   +   H2x1_1  =    -1.97152028826028 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.97152028826028 + H2x1_1 ;
2749023   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
2749024   +END;
MPRINT(EM_DIAGRAM):   END;
2749025   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2749026   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2749027   +END;
MPRINT(EM_DIAGRAM):   END;
2749028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749029   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2749030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749031   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2749032   +   H2x2_1  =     0.45033423451322 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.45033423451322 * H1x1_1 ;
2749033   +   H2x2_1  = H2x2_1  +     2.46855103154551 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.46855103154551 * H1x2_1 ;
2749034   +   H2x2_1  = H2x2_1  +    -0.77837055555012 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.77837055555012 * H1x3_1 ;
2749035   +   H2x2_1  =     -0.9821313826813 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.9821313826813 + H2x2_1 ;
2749036   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
2749037   +END;
MPRINT(EM_DIAGRAM):   END;
2749038   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2749039   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2749040   +END;
MPRINT(EM_DIAGRAM):   END;
2749041   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749042   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2749043   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749044   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2749045   +   H3x1_1  =    -4.89394761736069 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -4.89394761736069 * H2x1_1 ;
2749046   +   H3x1_1  = H3x1_1  +    -3.02496799626931 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -3.02496799626931 * H2x2_1 ;
2749047   +   H3x1_1  =    -2.03654026915424 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -2.03654026915424 + H3x1_1 ;
2749048   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2749049   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2749050   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
2749051   +END;
MPRINT(EM_DIAGRAM):   END;
2749052   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2749053   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2749054   +END;
MPRINT(EM_DIAGRAM):   END;
2749055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749056   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2749057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749058   +
2749059   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2749060   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2749061   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2749062   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2749063   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2749064   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2749065   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2749066   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2749067   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2749068   +end;
MPRINT(EM_DIAGRAM):   end;
2749069   +else do;
MPRINT(EM_DIAGRAM):   else do;
2749070   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2749071   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2749072   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2749073   +   end;
MPRINT(EM_DIAGRAM):   end;
2749074   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2749075   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2749076   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2749077   +   end;
MPRINT(EM_DIAGRAM):   end;
2749078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2749079   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2749080   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2749081   +   end;
MPRINT(EM_DIAGRAM):   end;
2749082   +end;
MPRINT(EM_DIAGRAM):   end;
2749083   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2749084   +   P_DepVar1  =      11.443408553765 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 11.443408553765 * H3x1_1 ;
2749085   +   P_DepVar1  =     0.39570054021751 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.39570054021751 + P_DepVar1 ;
2749086   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2749087   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2749088   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2749089   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2749090   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2749091   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2749092   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2749093   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2749094   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2749095   +END;
MPRINT(EM_DIAGRAM):   END;
2749096   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2749097   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2749098   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2749099   +END;
MPRINT(EM_DIAGRAM):   END;
2749100   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2749101   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2749102   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2749103   +END;
MPRINT(EM_DIAGRAM):   END;
2749104   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2749105   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2749106   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2749107   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2749108   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2749109   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2749110   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2749111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749112   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2749113   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749114   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2749115   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2749116   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2749117   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2749118   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2749119   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2749120   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2749121   +END;
MPRINT(EM_DIAGRAM):   END;
2749122   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2749123   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2749124   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2749125   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2749126    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL44_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2749127    quit;
2749128    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2749129    filename emflow
2749129  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural44: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2749130    *------------------------------------------------------------*;
2749131    * AutoNeural44: Scoring VALIDATE data;
2749132    *------------------------------------------------------------*;
2749133    data EMWS8.AutoNeural44_VALIDATE
2749134    / view=EMWS8.AutoNeural44_VALIDATE
2749135    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural44_VALIDATE / view=EMWS8.AutoNeural44_VALIDATE ;
2749136    set EMWS8.Meta2_VALIDATE
2749137    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
2749138    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMFLOWSCORE.sas.
2749139   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2749140   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2749141   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2749142   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2749143   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2749144   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2749145   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2749146   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2749147   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2749148   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2749149   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2749150   +LENGTH _WARN_ $4
2749151   +      F_DepVar  $ 12
2749152   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2749153   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2749154   +
2749155   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2749156   +
2749157   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2749158   +
2749159   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2749160   +
2749161   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2749162   +
2749163   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2749164   +
2749165   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2749166   +
2749167   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2749168   +
2749169   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2749170   +
2749171   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2749172   +
2749173   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2749174   +
2749175   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2749176   +
2749177   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2749178   +
2749179   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2749180   +
2749181   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2749182   +
2749183   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2749184   +
2749185   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2749186   +
2749187   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2749188   +
2749189   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2749190   +
2749191   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2749192   +
2749193   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2749194   +
2749195   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2749196   +
2749197   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2749198   +
2749199   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2749200   +
2749201   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2749202   +
2749203   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2749204   +
2749205   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2749206   +
2749207   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2749208   +
2749209   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2749210   +
2749211   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2749212   +
2749213   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2749214   +
2749215   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2749216   +
2749217   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2749218   +
2749219   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2749220   +
2749221   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2749222   +
2749223   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2749224   +
2749225   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2749226   +
2749227   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2749228   +
2749229   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2749230   +
2749231   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2749232   +
2749233   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2749234   +
2749235   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2749236   +
2749237   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2749238   +
2749239   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2749240   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2749241   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2749242   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2749243   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2749244   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749245   +end;
MPRINT(EM_DIAGRAM):   end;
2749246   +else do;
MPRINT(EM_DIAGRAM):   else do;
2749247   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2749248   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2749249   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2749250   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2749251   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2749252   +   end;
MPRINT(EM_DIAGRAM):   end;
2749253   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2749254   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2749255   +   end;
MPRINT(EM_DIAGRAM):   end;
2749256   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2749257   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2749258   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2749259   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749260   +   end;
MPRINT(EM_DIAGRAM):   end;
2749261   +end;
MPRINT(EM_DIAGRAM):   end;
2749262   +
2749263   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2749264   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2749265   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2749266   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2749267   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2749268   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749269   +end;
MPRINT(EM_DIAGRAM):   end;
2749270   +else do;
MPRINT(EM_DIAGRAM):   else do;
2749271   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2749272   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2749273   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2749274   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2749275   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2749276   +   end;
MPRINT(EM_DIAGRAM):   end;
2749277   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2749278   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2749279   +   end;
MPRINT(EM_DIAGRAM):   end;
2749280   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2749281   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2749282   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2749283   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749284   +   end;
MPRINT(EM_DIAGRAM):   end;
2749285   +end;
MPRINT(EM_DIAGRAM):   end;
2749286   +
2749287   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2749288   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2749289   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2749290   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2749291   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2749292   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749293   +end;
MPRINT(EM_DIAGRAM):   end;
2749294   +else do;
MPRINT(EM_DIAGRAM):   else do;
2749295   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2749296   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2749297   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2749298   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2749299   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2749300   +   end;
MPRINT(EM_DIAGRAM):   end;
2749301   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2749302   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2749303   +   end;
MPRINT(EM_DIAGRAM):   end;
2749304   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2749305   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2749306   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2749307   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749308   +   end;
MPRINT(EM_DIAGRAM):   end;
2749309   +end;
MPRINT(EM_DIAGRAM):   end;
2749310   +
2749311   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2749312   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2749313   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2749314   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2749315   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2749316   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749317   +end;
MPRINT(EM_DIAGRAM):   end;
2749318   +else do;
MPRINT(EM_DIAGRAM):   else do;
2749319   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2749320   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2749321   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2749322   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2749323   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2749324   +   end;
MPRINT(EM_DIAGRAM):   end;
2749325   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2749326   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2749327   +   end;
MPRINT(EM_DIAGRAM):   end;
2749328   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2749329   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2749330   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2749331   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749332   +   end;
MPRINT(EM_DIAGRAM):   end;
2749333   +end;
MPRINT(EM_DIAGRAM):   end;
2749334   +
2749335   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2749336   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2749337   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2749338   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2749339   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2749340   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749341   +end;
MPRINT(EM_DIAGRAM):   end;
2749342   +else do;
MPRINT(EM_DIAGRAM):   else do;
2749343   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2749344   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2749345   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2749346   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2749347   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2749348   +   end;
MPRINT(EM_DIAGRAM):   end;
2749349   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2749350   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2749351   +   end;
MPRINT(EM_DIAGRAM):   end;
2749352   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2749353   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2749354   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2749355   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749356   +   end;
MPRINT(EM_DIAGRAM):   end;
2749357   +end;
MPRINT(EM_DIAGRAM):   end;
2749358   +
2749359   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2749360   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2749361   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2749362   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2749363   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2749364   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749365   +end;
MPRINT(EM_DIAGRAM):   end;
2749366   +else do;
MPRINT(EM_DIAGRAM):   else do;
2749367   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2749368   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2749369   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2749370   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2749371   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2749372   +   end;
MPRINT(EM_DIAGRAM):   end;
2749373   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2749374   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2749375   +   end;
MPRINT(EM_DIAGRAM):   end;
2749376   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2749377   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2749378   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2749379   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749380   +   end;
MPRINT(EM_DIAGRAM):   end;
2749381   +end;
MPRINT(EM_DIAGRAM):   end;
2749382   +
2749383   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2749384   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2749385   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2749386   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2749387   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2749388   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2749389   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2749390   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2749391   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2749392   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2749393   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2749394   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2749395   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2749396   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749397   +end;
MPRINT(EM_DIAGRAM):   end;
2749398   +else do;
MPRINT(EM_DIAGRAM):   else do;
2749399   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2749400   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2749401   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2749402   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2749403   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2749404   +   end;
MPRINT(EM_DIAGRAM):   end;
2749405   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2749406   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2749407   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2749408   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2749409   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2749410   +   end;
MPRINT(EM_DIAGRAM):   end;
2749411   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2749412   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2749413   +   end;
MPRINT(EM_DIAGRAM):   end;
2749414   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2749415   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2749416   +   end;
MPRINT(EM_DIAGRAM):   end;
2749417   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2749418   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2749419   +   end;
MPRINT(EM_DIAGRAM):   end;
2749420   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2749421   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2749422   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2749423   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2749424   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2749425   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2749426   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749427   +   end;
MPRINT(EM_DIAGRAM):   end;
2749428   +end;
MPRINT(EM_DIAGRAM):   end;
2749429   +
2749430   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2749431   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2749432   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2749433   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2749434   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2749435   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2749436   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2749437   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2749438   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2749439   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2749440   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2749441   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2749442   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2749443   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2749444   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749445   +end;
MPRINT(EM_DIAGRAM):   end;
2749446   +else do;
MPRINT(EM_DIAGRAM):   else do;
2749447   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2749448   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2749449   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2749450   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2749451   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2749452   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2749453   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2749454   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2749455   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2749456   +         end;
MPRINT(EM_DIAGRAM):   end;
2749457   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2749458   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2749459   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2749460   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2749461   +            end;
MPRINT(EM_DIAGRAM):   end;
2749462   +         end;
MPRINT(EM_DIAGRAM):   end;
2749463   +      end;
MPRINT(EM_DIAGRAM):   end;
2749464   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2749465   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2749466   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2749467   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2749468   +         end;
MPRINT(EM_DIAGRAM):   end;
2749469   +      end;
MPRINT(EM_DIAGRAM):   end;
2749470   +   end;
MPRINT(EM_DIAGRAM):   end;
2749471   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2749472   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2749473   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2749474   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2749475   +      end;
MPRINT(EM_DIAGRAM):   end;
2749476   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2749477   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2749478   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2749479   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2749480   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2749481   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2749482   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2749483   +         end;
MPRINT(EM_DIAGRAM):   end;
2749484   +      end;
MPRINT(EM_DIAGRAM):   end;
2749485   +   end;
MPRINT(EM_DIAGRAM):   end;
2749486   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2749487   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2749488   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2749489   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2749490   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2749491   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2749492   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749493   +   end;
MPRINT(EM_DIAGRAM):   end;
2749494   +end;
MPRINT(EM_DIAGRAM):   end;
2749495   +
2749496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749497   +*** Checking missing input Interval
2749498   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2749499   +
2749500   +IF NMISS(
2749501   +   Income ,
2749502   +   Kidhome ,
2749503   +   MntFishProducts ,
2749504   +   MntFruits ,
2749505   +   MntGoldProds ,
2749506   +   MntMeatProducts ,
2749507   +   MntSweetProducts ,
2749508   +   MntWines ,
2749509   +   NumCatalogPurchases ,
2749510   +   NumDealsPurchases ,
2749511   +   NumStorePurchases ,
2749512   +   NumWebPurchases ,
2749513   +   NumWebVisitsMonth ,
2749514   +   Recency ,
2749515   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2749516   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2749517   +
2749518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2749519   +END;
MPRINT(EM_DIAGRAM):   END;
2749520   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749521   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2749522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749523   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2749524   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2749525   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2749526   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2749527   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2749528   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2749529   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2749530   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2749531   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2749532   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2749533   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2749534   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2749535   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2749536   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2749537   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2749538   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2749539   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2749540   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2749541   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2749542   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2749543   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2749544   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2749545   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2749546   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2749547   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2749548   +END;
MPRINT(EM_DIAGRAM):   END;
2749549   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2749550   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2749551   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2749552   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2749553   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2749554   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2749555   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2749556   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2749557   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2749558   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2749559   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2749560   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2749561   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2749562   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2749563   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2749564   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2749565   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2749566   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2749567   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2749568   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2749569   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2749570   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2749571   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2749572   +   ELSE S_NumCatalogPurchases
2749573   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2749574   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2749575   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2749576   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2749577   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2749578   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2749579   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2749580   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2749581   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2749582   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2749583   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2749584   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2749585   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2749586   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2749587   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2749588   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2749589   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2749590   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2749591   +END;
MPRINT(EM_DIAGRAM):   END;
2749592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749593   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2749594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749596   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2749597   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749598   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749599   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2749600   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749601   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2749602   +   H1x1_1  =     0.60821559277699 * S_Income  +     0.78245878520575 *
2749603   +        S_Kidhome  +     3.02629225919456 * S_MntFishProducts
2749604   +          +     1.44208452883494 * S_MntFruits  +     -0.8161710906244 *
2749605   +        S_MntGoldProds  +    -5.65479728306763 * S_MntMeatProducts
2749606   +          +     2.41993296129914 * S_MntSweetProducts
2749607   +          +     16.1416936305202 * S_MntWines  +    -0.30170648366369 *
2749608   +        S_NumCatalogPurchases  +    -4.40539425596446 * S_NumDealsPurchases
2749609   +          +     7.59231492380468 * S_NumStorePurchases
2749610   +          +    -0.47095655313121 * S_NumWebPurchases
2749611   +          +     2.65669932372712 * S_NumWebVisitsMonth
2749612   +          +     0.92605434462951 * S_Recency  +     0.27595278529362 *
2749613   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.60821559277699 * S_Income + 0.78245878520575 * S_Kidhome + 
3.02629225919456 * S_MntFishProducts + 1.44208452883494 * S_MntFruits + -0.8161710906244 * 
S_MntGoldProds + -5.65479728306763 * S_MntMeatProducts + 2.41993296129914 * S_MntSweetProducts 
+ 16.1416936305202 * S_MntWines + -0.30170648366369 * S_NumCatalogPurchases + 
-4.40539425596446 * S_NumDealsPurchases + 7.59231492380468 * S_NumStorePurchases + 
-0.47095655313121 * S_NumWebPurchases + 2.65669932372712 * S_NumWebVisitsMonth + 
0.92605434462951 * S_Recency + 0.27595278529362 * S_Teenhome ;
2749614   +   H1x1_1  = H1x1_1  +     2.22617132301519 * AcceptedCmp10
2749615   +          +     2.97389891933054 * AcceptedCmp20  +    -0.25852677589668 *
2749616   +        AcceptedCmp30  +     0.29740935303964 * AcceptedCmp40
2749617   +          +     6.80320564322924 * AcceptedCmp50  +     2.19745012825493 *
2749618   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.22617132301519 * AcceptedCmp10 + 2.97389891933054 * 
AcceptedCmp20 + -0.25852677589668 * AcceptedCmp30 + 0.29740935303964 * AcceptedCmp40 + 
6.80320564322924 * AcceptedCmp50 + 2.19745012825493 * Complain0 ;
2749619   +   H1x1_1  = H1x1_1  +     2.55205464559227 * Education2n_Cycle
2749620   +          +    -0.98577713200024 * EducationBasic  +     1.74619403557996 *
2749621   +        EducationGraduation  +    -3.89600865490994 * EducationMaster
2749622   +          +     0.44728218776544 * Marital_StatusDivorced
2749623   +          +    -1.62458831276183 * Marital_StatusMarried
2749624   +          +    -0.42858616367237 * Marital_StatusSingle
2749625   +          +    -0.29553796445711 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.55205464559227 * Education2n_Cycle + 
-0.98577713200024 * EducationBasic + 1.74619403557996 * EducationGraduation + 
-3.89600865490994 * EducationMaster + 0.44728218776544 * Marital_StatusDivorced + 
-1.62458831276183 * Marital_StatusMarried + -0.42858616367237 * Marital_StatusSingle + 
-0.29553796445711 * Marital_StatusTogether ;
2749626   +   H1x1_1  =     3.59078196202385 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.59078196202385 + H1x1_1 ;
2749627   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2749628   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2749629   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2749630   +END;
MPRINT(EM_DIAGRAM):   END;
2749631   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2749632   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2749633   +END;
MPRINT(EM_DIAGRAM):   END;
2749634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749635   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2749636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749637   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2749638   +   H1x2_1  =    -0.99188645731967 * S_Income  +    -0.76771098590807 *
2749639   +        S_Kidhome  +      0.8287505285538 * S_MntFishProducts
2749640   +          +     0.45999682434351 * S_MntFruits  +      0.4293543408639 *
2749641   +        S_MntGoldProds  +    -9.07723801877759 * S_MntMeatProducts
2749642   +          +    -1.37098390846164 * S_MntSweetProducts
2749643   +          +    -0.51776810310879 * S_MntWines  +    -1.37476010659628 *
2749644   +        S_NumCatalogPurchases  +    -1.10451572937532 * S_NumDealsPurchases
2749645   +          +     0.58246769316602 * S_NumStorePurchases
2749646   +          +     2.72780243156581 * S_NumWebPurchases
2749647   +          +    -1.73896446530763 * S_NumWebVisitsMonth
2749648   +          +      0.7638963348072 * S_Recency  +     0.26979377997458 *
2749649   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.99188645731967 * S_Income + -0.76771098590807 * S_Kidhome + 
0.8287505285538 * S_MntFishProducts + 0.45999682434351 * S_MntFruits + 0.4293543408639 * 
S_MntGoldProds + -9.07723801877759 * S_MntMeatProducts + -1.37098390846164 * 
S_MntSweetProducts + -0.51776810310879 * S_MntWines + -1.37476010659628 * 
S_NumCatalogPurchases + -1.10451572937532 * S_NumDealsPurchases + 0.58246769316602 * 
S_NumStorePurchases + 2.72780243156581 * S_NumWebPurchases + -1.73896446530763 * 
S_NumWebVisitsMonth + 0.7638963348072 * S_Recency + 0.26979377997458 * S_Teenhome ;
2749650   +   H1x2_1  = H1x2_1  +     2.43014219686416 * AcceptedCmp10
2749651   +          +    -4.74345515374868 * AcceptedCmp20  +     0.62579233621413 *
2749652   +        AcceptedCmp30  +     0.64637471234006 * AcceptedCmp40
2749653   +          +     1.70767935570268 * AcceptedCmp50  +    -0.94631514600478 *
2749654   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 2.43014219686416 * AcceptedCmp10 + -4.74345515374868 * 
AcceptedCmp20 + 0.62579233621413 * AcceptedCmp30 + 0.64637471234006 * AcceptedCmp40 + 
1.70767935570268 * AcceptedCmp50 + -0.94631514600478 * Complain0 ;
2749655   +   H1x2_1  = H1x2_1  +    -0.98761508407831 * Education2n_Cycle
2749656   +          +     0.88643388278508 * EducationBasic  +    -0.83878459420096 *
2749657   +        EducationGraduation  +     1.01072132252596 * EducationMaster
2749658   +          +     0.08221095774854 * Marital_StatusDivorced
2749659   +          +    -0.13062113450086 * Marital_StatusMarried
2749660   +          +      0.1912119500185 * Marital_StatusSingle
2749661   +          +     -0.3728209764276 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.98761508407831 * Education2n_Cycle + 
0.88643388278508 * EducationBasic + -0.83878459420096 * EducationGraduation + 1.01072132252596 
* EducationMaster + 0.08221095774854 * Marital_StatusDivorced + -0.13062113450086 * 
Marital_StatusMarried + 0.1912119500185 * Marital_StatusSingle + -0.3728209764276 * 
Marital_StatusTogether ;
2749662   +   H1x2_1  =    -3.03275566330542 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -3.03275566330542 + H1x2_1 ;
2749663   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2749664   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2749665   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2749666   +END;
MPRINT(EM_DIAGRAM):   END;
2749667   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2749668   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2749669   +END;
MPRINT(EM_DIAGRAM):   END;
2749670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749671   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2749672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749673   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2749674   +   H1x3_1  =    -1.55963738420881 * S_Income  +     0.71964926339388 *
2749675   +        S_Kidhome  +    -0.47208108972067 * S_MntFishProducts
2749676   +          +      0.6450894987393 * S_MntFruits  +     0.06261669147127 *
2749677   +        S_MntGoldProds  +     0.14975522509881 * S_MntMeatProducts
2749678   +          +     -0.4771357321143 * S_MntSweetProducts
2749679   +          +     0.66709116843422 * S_MntWines  +     0.90111404700817 *
2749680   +        S_NumCatalogPurchases  +     0.17723895187345 * S_NumDealsPurchases
2749681   +          +     0.38755002642582 * S_NumStorePurchases
2749682   +          +     0.65178643881164 * S_NumWebPurchases
2749683   +          +    -0.83170832622452 * S_NumWebVisitsMonth
2749684   +          +     2.65115346957983 * S_Recency  +     1.27228948382376 *
2749685   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.55963738420881 * S_Income + 0.71964926339388 * S_Kidhome + 
-0.47208108972067 * S_MntFishProducts + 0.6450894987393 * S_MntFruits + 0.06261669147127 * 
S_MntGoldProds + 0.14975522509881 * S_MntMeatProducts + -0.4771357321143 * S_MntSweetProducts 
+ 0.66709116843422 * S_MntWines + 0.90111404700817 * S_NumCatalogPurchases + 0.17723895187345 
* S_NumDealsPurchases + 0.38755002642582 * S_NumStorePurchases + 0.65178643881164 * 
S_NumWebPurchases + -0.83170832622452 * S_NumWebVisitsMonth + 2.65115346957983 * S_Recency + 
1.27228948382376 * S_Teenhome ;
2749686   +   H1x3_1  = H1x3_1  +     0.29816272417051 * AcceptedCmp10
2749687   +          +    -0.71154376870988 * AcceptedCmp20  +    -0.39513051704909 *
2749688   +        AcceptedCmp30  +     1.19068615672558 * AcceptedCmp40
2749689   +          +     -1.9640044684445 * AcceptedCmp50  +    -0.09395110959453 *
2749690   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.29816272417051 * AcceptedCmp10 + -0.71154376870988 * 
AcceptedCmp20 + -0.39513051704909 * AcceptedCmp30 + 1.19068615672558 * AcceptedCmp40 + 
-1.9640044684445 * AcceptedCmp50 + -0.09395110959453 * Complain0 ;
2749691   +   H1x3_1  = H1x3_1  +    -0.43809514270646 * Education2n_Cycle
2749692   +          +     0.27926697891252 * EducationBasic  +     1.12178568429269 *
2749693   +        EducationGraduation  +      0.9696976240987 * EducationMaster
2749694   +          +    -0.13574340372484 * Marital_StatusDivorced
2749695   +          +     1.26001446384238 * Marital_StatusMarried
2749696   +          +    -0.16294618258246 * Marital_StatusSingle
2749697   +          +    -0.31789534786196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.43809514270646 * Education2n_Cycle + 
0.27926697891252 * EducationBasic + 1.12178568429269 * EducationGraduation + 0.9696976240987 * 
EducationMaster + -0.13574340372484 * Marital_StatusDivorced + 1.26001446384238 * 
Marital_StatusMarried + -0.16294618258246 * Marital_StatusSingle + -0.31789534786196 * 
Marital_StatusTogether ;
2749698   +   H1x3_1  =     0.67537485509128 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67537485509128 + H1x3_1 ;
2749699   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2749700   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2749701   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
2749702   +END;
MPRINT(EM_DIAGRAM):   END;
2749703   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2749704   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2749705   +END;
MPRINT(EM_DIAGRAM):   END;
2749706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749707   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2749708   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749709   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2749710   +   H2x1_1  =     1.66176856703373 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.66176856703373 * H1x1_1 ;
2749711   +   H2x1_1  = H2x1_1  +     2.22197952592224 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.22197952592224 * H1x2_1 ;
2749712   +   H2x1_1  = H2x1_1  +     1.05148827727504 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.05148827727504 * H1x3_1 ;
2749713   +   H2x1_1  =    -1.97152028826028 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.97152028826028 + H2x1_1 ;
2749714   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
2749715   +END;
MPRINT(EM_DIAGRAM):   END;
2749716   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2749717   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2749718   +END;
MPRINT(EM_DIAGRAM):   END;
2749719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749720   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2749721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749722   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2749723   +   H2x2_1  =     0.45033423451322 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.45033423451322 * H1x1_1 ;
2749724   +   H2x2_1  = H2x2_1  +     2.46855103154551 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.46855103154551 * H1x2_1 ;
2749725   +   H2x2_1  = H2x2_1  +    -0.77837055555012 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.77837055555012 * H1x3_1 ;
2749726   +   H2x2_1  =     -0.9821313826813 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.9821313826813 + H2x2_1 ;
2749727   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
2749728   +END;
MPRINT(EM_DIAGRAM):   END;
2749729   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2749730   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2749731   +END;
MPRINT(EM_DIAGRAM):   END;
2749732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749733   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2749734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749735   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2749736   +   H3x1_1  =    -4.89394761736069 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -4.89394761736069 * H2x1_1 ;
2749737   +   H3x1_1  = H3x1_1  +    -3.02496799626931 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -3.02496799626931 * H2x2_1 ;
2749738   +   H3x1_1  =    -2.03654026915424 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -2.03654026915424 + H3x1_1 ;
2749739   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2749740   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2749741   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
2749742   +END;
MPRINT(EM_DIAGRAM):   END;
2749743   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2749744   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2749745   +END;
MPRINT(EM_DIAGRAM):   END;
2749746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749747   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2749748   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749749   +
2749750   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2749751   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2749752   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2749753   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2749754   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2749755   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2749756   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2749757   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2749758   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2749759   +end;
MPRINT(EM_DIAGRAM):   end;
2749760   +else do;
MPRINT(EM_DIAGRAM):   else do;
2749761   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2749762   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2749763   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2749764   +   end;
MPRINT(EM_DIAGRAM):   end;
2749765   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2749766   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2749767   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2749768   +   end;
MPRINT(EM_DIAGRAM):   end;
2749769   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2749770   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2749771   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2749772   +   end;
MPRINT(EM_DIAGRAM):   end;
2749773   +end;
MPRINT(EM_DIAGRAM):   end;
2749774   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2749775   +   P_DepVar1  =      11.443408553765 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 11.443408553765 * H3x1_1 ;
2749776   +   P_DepVar1  =     0.39570054021751 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.39570054021751 + P_DepVar1 ;
2749777   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2749778   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2749779   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2749780   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2749781   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2749782   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2749783   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2749784   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2749785   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2749786   +END;
MPRINT(EM_DIAGRAM):   END;
2749787   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2749788   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2749789   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2749790   +END;
MPRINT(EM_DIAGRAM):   END;
2749791   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2749792   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2749793   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2749794   +END;
MPRINT(EM_DIAGRAM):   END;
2749795   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2749796   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2749797   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2749798   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2749799   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2749800   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2749801   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2749802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749803   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2749804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2749805   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2749806   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2749807   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2749808   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2749809   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2749810   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2749811   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2749812   +END;
MPRINT(EM_DIAGRAM):   END;
2749813   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2749814   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2749815   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2749816   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2749817    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL44_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2749818    quit;
2749819    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2749820    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2749821    * AutoNeural44: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural44: Computing metadata for TRAIN data;
2749822    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL44_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural44_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural44_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural44_TRAIN out=WORK.M0UX9K6Y 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0UX9K6Y;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0UX9K6Y(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0UX9K6Y;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0UX9K6Y;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0365WI4 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0365WI4;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0365WI4;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M30NH1CG(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0365WI4;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0365WI4;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0365WI4;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0365WI4;
MPRINT(EMADVISECOLUMNS):   set WORK.M0365WI4;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural44_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural44";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural44";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural44";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural44";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural44";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural44";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural44";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural44";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural44";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural44";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural44: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2750134    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2750135    set EMWS8.AutoNeural44_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural44_EMINFO;
2750136    where DATA='AutoNeural44' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural44' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
2750137    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL44_EMINFO.
      WHERE (DATA='AutoNeural44') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2750138    data EMWS8.AutoNeural44_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural44_EMINFO;
2750139    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2750140    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2750141    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL44_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2750145    run;
2750146    data EMWS8.AutoNeural44_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural44_EMINFO;
2750147    set EMWS8.AutoNeural44_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural44_EMINFO WORK.MODELTEMP_INFO;
2750148    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL44_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL44_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2750149    proc sort data = EMWS8.AutoNeural44_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural44_EMINFO NOTHREADS;
2750150    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2750151    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL44_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL44_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2750152    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2750153    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2750154    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2750155    proc sort data = EMWS8.AutoNeural44_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural44_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2750156    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2750157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL44_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2750158    data EMWS8.AutoNeural44_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural44_EMINFO;
2750159    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2750160    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2750161    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL44_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2750162    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2750163    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2750164    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2750165    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

NOTE: View EMWS8.AUTONEURAL44_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL44_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
