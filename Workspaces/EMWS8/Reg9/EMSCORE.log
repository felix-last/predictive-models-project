MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.24 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.24 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O22OJF54 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg9\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O22OJF54 new;
MPRINT(EM_DIAGRAM):   run;
444812     proc transpose data=EMWS8.Reg9_EMESTIMATE out=WORK.TEMPREG;
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS8.Reg9_EMESTIMATE out=WORK.TEMPREG;
444813     where _CHOSEN_ ne '' and _TYPE_='PARMS';
MPRINT(EM_DIAGRAM):   where _CHOSEN_ ne '' and _TYPE_='PARMS';
444814     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.REG9_EMESTIMATE.
      WHERE (_CHOSEN_ not = ' ') and (_TYPE_='PARMS');
NOTE: The data set WORK.TEMPREG has 63 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

444815     proc transpose data=EMWS8.Reg9_MAPDS out=WORK.TEMPREG2;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS8.Reg9_MAPDS out=WORK.TEMPREG2;
444816     var "AcceptedCmp10"n--"Teenhome"n;
MPRINT(EM_DIAGRAM):   var "AcceptedCmp10"n--"Teenhome"n;
444817     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS8.REG9_MAPDS.
NOTE: The data set WORK.TEMPREG2 has 29 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444818     proc sort data=WORK.TEMPREG NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG NOTHREADS;
444819     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
444820     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 63 observations read from the data set WORK.TEMPREG.
NOTE: The data set WORK.TEMPREG has 63 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444821     proc sort data=WORK.TEMPREG2 NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG2 NOTHREADS;
444822     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
444823     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 29 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG2 has 29 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444824     data WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3;
444825     merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
MPRINT(EM_DIAGRAM):   merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
444826     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
444827     if (ina and inb) and DepVar ne . then output;
MPRINT(EM_DIAGRAM):   if (ina and inb) and DepVar ne . then output;
444828     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 63 observations read from the data set WORK.TEMPREG.
NOTE: There were 29 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG3 has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444829     data WORK.TEMPREG3(KEEP=TERM);
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3(KEEP=TERM);
444830     length term $32;
MPRINT(EM_DIAGRAM):   length term $32;
444831     set WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   set WORK.TEMPREG3;
444832     i=1;
MPRINT(EM_DIAGRAM):   i=1;
444833     do while( scan(input , i, '*') ne '' );
MPRINT(EM_DIAGRAM):   do while( scan(input , i, '*') ne '' );
444834     term= scan(input , i, '*');
MPRINT(EM_DIAGRAM):   term= scan(input , i, '*');
444835     i=i+1;
MPRINT(EM_DIAGRAM):   i=i+1;
444836     output;
MPRINT(EM_DIAGRAM):   output;
444837     end;
MPRINT(EM_DIAGRAM):   end;
444838     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 21 observations read from the data set WORK.TEMPREG3.
NOTE: The data set WORK.TEMPREG3 has 21 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444839     proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
444840     by TERM;
MPRINT(EM_DIAGRAM):   by TERM;
444841     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 21 observations read from the data set WORK.TEMPREG3.
NOTE: 3 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPREG3 has 18 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444842     filename emflow
444842   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg9: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
444843     *------------------------------------------------------------*;
444844     * Reg9: Scoring DATA data;
444845     *------------------------------------------------------------*;
444846     data EMWS8.Reg9_TRAIN
444847     / view=EMWS8.Reg9_TRAIN
444848     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg9_TRAIN / view=EMWS8.Reg9_TRAIN ;
444849     set EMWS8.Meta2_TRAIN
444850     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
444851     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg9\EMFLOWSCORE.sas.
444852    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
444853    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
444854    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
444855    +
444856    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
444857    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
444858    +
444859    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
444860    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
444861    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
444862    +array REG9DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG9DRF [2] $12 _temporary_ ('1' '0' );
444863    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
444864    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
444865    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
444866    +ARRAY REG9DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG9DRU[2] _TEMPORARY_ (1 0);
444867    +
444868    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
444869    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
444870    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
444871    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
444872    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
444873    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444874    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
444875    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
444876    +end;
MPRINT(EM_DIAGRAM):   end;
444877    +else do;
MPRINT(EM_DIAGRAM):   else do;
444878    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
444879    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
444880    +   end;
MPRINT(EM_DIAGRAM):   end;
444881    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
444882    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
444883    +   end;
MPRINT(EM_DIAGRAM):   end;
444884    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444885    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
444886    +   end;
MPRINT(EM_DIAGRAM):   end;
444887    +end;
MPRINT(EM_DIAGRAM):   end;
444888    +
444889    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
444890    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
444891    +
444892    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
444893    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
444894    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444895    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444896    +end;
MPRINT(EM_DIAGRAM):   end;
444897    +
444898    +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
444899    +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
444900    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444901    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444902    +end;
MPRINT(EM_DIAGRAM):   end;
444903    +
444904    +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
444905    +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
444906    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444907    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444908    +end;
MPRINT(EM_DIAGRAM):   end;
444909    +
444910    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
444911    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
444912    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444913    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444914    +end;
MPRINT(EM_DIAGRAM):   end;
444915    +
444916    +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
444917    +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
444918    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444919    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444920    +end;
MPRINT(EM_DIAGRAM):   end;
444921    +
444922    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
444923    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
444924    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444925    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444926    +end;
MPRINT(EM_DIAGRAM):   end;
444927    +
444928    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
444929    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
444930    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444931    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444932    +end;
MPRINT(EM_DIAGRAM):   end;
444933    +
444934    +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
444935    +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
444936    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444937    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444938    +end;
MPRINT(EM_DIAGRAM):   end;
444939    +
444940    +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
444941    +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
444942    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444943    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444944    +end;
MPRINT(EM_DIAGRAM):   end;
444945    +
444946    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
444947    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
444948    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444949    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444950    +end;
MPRINT(EM_DIAGRAM):   end;
444951    +
444952    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
444953    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
444954    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444955    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444956    +end;
MPRINT(EM_DIAGRAM):   end;
444957    +
444958    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
444959    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
444960    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444961    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444962    +end;
MPRINT(EM_DIAGRAM):   end;
444963    +
444964    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
444965    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
444966    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
444967    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
444968    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444969    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444970    +end;
MPRINT(EM_DIAGRAM):   end;
444971    +else do;
MPRINT(EM_DIAGRAM):   else do;
444972    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444973    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
444974    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444975    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
444976    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
444977    +   end;
MPRINT(EM_DIAGRAM):   end;
444978    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
444979    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
444980    +   end;
MPRINT(EM_DIAGRAM):   end;
444981    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444982    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
444983    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444984    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444985    +   end;
MPRINT(EM_DIAGRAM):   end;
444986    +end;
MPRINT(EM_DIAGRAM):   end;
444987    +
444988    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
444989    +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
444990    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
444991    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
444992    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444993    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444994    +end;
MPRINT(EM_DIAGRAM):   end;
444995    +else do;
MPRINT(EM_DIAGRAM):   else do;
444996    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444997    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
444998    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444999    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
445000    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
445001    +   end;
MPRINT(EM_DIAGRAM):   end;
445002    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
445003    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
445004    +   end;
MPRINT(EM_DIAGRAM):   end;
445005    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445006    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
445007    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
445008    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445009    +   end;
MPRINT(EM_DIAGRAM):   end;
445010    +end;
MPRINT(EM_DIAGRAM):   end;
445011    +
445012    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
445013    +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
445014    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
445015    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
445016    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445017    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445018    +end;
MPRINT(EM_DIAGRAM):   end;
445019    +else do;
MPRINT(EM_DIAGRAM):   else do;
445020    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
445021    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
445022    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445023    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
445024    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
445025    +   end;
MPRINT(EM_DIAGRAM):   end;
445026    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
445027    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
445028    +   end;
MPRINT(EM_DIAGRAM):   end;
445029    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445030    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
445031    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
445032    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445033    +   end;
MPRINT(EM_DIAGRAM):   end;
445034    +end;
MPRINT(EM_DIAGRAM):   end;
445035    +
445036    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
445037    +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
445038    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
445039    +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
445040    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445041    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445042    +end;
MPRINT(EM_DIAGRAM):   end;
445043    +else do;
MPRINT(EM_DIAGRAM):   else do;
445044    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
445045    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
445046    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445047    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
445048    +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
445049    +   end;
MPRINT(EM_DIAGRAM):   end;
445050    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
445051    +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
445052    +   end;
MPRINT(EM_DIAGRAM):   end;
445053    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445054    +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
445055    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
445056    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445057    +   end;
MPRINT(EM_DIAGRAM):   end;
445058    +end;
MPRINT(EM_DIAGRAM):   end;
445059    +
445060    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
445061    +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
445062    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
445063    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
445064    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445065    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445066    +end;
MPRINT(EM_DIAGRAM):   end;
445067    +else do;
MPRINT(EM_DIAGRAM):   else do;
445068    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
445069    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
445070    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445071    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
445072    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
445073    +   end;
MPRINT(EM_DIAGRAM):   end;
445074    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
445075    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
445076    +   end;
MPRINT(EM_DIAGRAM):   end;
445077    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445078    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
445079    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
445080    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445081    +   end;
MPRINT(EM_DIAGRAM):   end;
445082    +end;
MPRINT(EM_DIAGRAM):   end;
445083    +
445084    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
445085    +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
445086    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
445087    +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
445088    +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
445089    +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
445090    +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
445091    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
445092    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
445093    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
445094    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
445095    +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
445096    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445097    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445098    +end;
MPRINT(EM_DIAGRAM):   end;
445099    +else do;
MPRINT(EM_DIAGRAM):   else do;
445100    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
445101    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
445102    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445103    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
445104    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
445105    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
445106    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
445107    +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
445108    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445109    +         end;
MPRINT(EM_DIAGRAM):   end;
445110    +         else do;
MPRINT(EM_DIAGRAM):   else do;
445111    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
445112    +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
445113    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445114    +            end;
MPRINT(EM_DIAGRAM):   end;
445115    +         end;
MPRINT(EM_DIAGRAM):   end;
445116    +      end;
MPRINT(EM_DIAGRAM):   end;
445117    +      else do;
MPRINT(EM_DIAGRAM):   else do;
445118    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
445119    +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
445120    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445121    +         end;
MPRINT(EM_DIAGRAM):   end;
445122    +      end;
MPRINT(EM_DIAGRAM):   end;
445123    +   end;
MPRINT(EM_DIAGRAM):   end;
445124    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445125    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
445126    +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
445127    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445128    +      end;
MPRINT(EM_DIAGRAM):   end;
445129    +      else do;
MPRINT(EM_DIAGRAM):   else do;
445130    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
445131    +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
445132    +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
445133    +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
445134    +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
445135    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445136    +         end;
MPRINT(EM_DIAGRAM):   end;
445137    +      end;
MPRINT(EM_DIAGRAM):   end;
445138    +   end;
MPRINT(EM_DIAGRAM):   end;
445139    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
445140    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
445141    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
445142    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
445143    +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
445144    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
445145    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445146    +   end;
MPRINT(EM_DIAGRAM):   end;
445147    +end;
MPRINT(EM_DIAGRAM):   end;
445148    +
445149    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
445150    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
445151    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
445152    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
445153    +   goto REG9DR1;
MPRINT(EM_DIAGRAM):   goto REG9DR1;
445154    +end;
MPRINT(EM_DIAGRAM):   end;
445155    +
445156    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
445157    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
445158    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
445159    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
445160    +
445161    +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
445162    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
445163    +_LP0 = _LP0 + (   -1.28114872833376) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.28114872833376) * _TEMP * _1_0;
445164    +
445165    +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
445166    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
445167    +_LP0 = _LP0 + (    -1.4871451186069) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.4871451186069) * _TEMP * _2_0;
445168    +
445169    +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
445170    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
445171    +_LP0 = _LP0 + (   -1.58721567367346) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.58721567367346) * _TEMP * _3_0;
445172    +
445173    +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
445174    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
445175    +_LP0 = _LP0 + (    -1.1573037622615) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.1573037622615) * _TEMP * _4_0;
445176    +
445177    +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
445178    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
445179    +_LP0 = _LP0 + (   -1.68835129992038) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.68835129992038) * _TEMP * _5_0;
445180    +
445181    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
445182    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
445183    +_LP0 = _LP0 + (    0.00006770818936 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006770818936 * _TEMP);
445184    +
445185    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
445186    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
445187    +_LP0 = _LP0 + (    0.18351716765826) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18351716765826) * _TEMP * _8_0;
445188    +_LP0 = _LP0 + (   -0.88993819943493) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.88993819943493) * _TEMP * _8_1;
445189    +_LP0 = _LP0 + (    0.89971120865107) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.89971120865107) * _TEMP * _8_2;
445190    +_LP0 = _LP0 + (   -0.96825171718714) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.96825171718714) * _TEMP * _8_3;
445191    +
445192    +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
445193    +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
445194    +_LP0 = _LP0 + (    -0.0053789406447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0053789406447 * _TEMP);
445195    +
445196    +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
445197    +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
445198    +_LP0 = _LP0 + (   -0.00810096702081 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00810096702081 * _TEMP);
445199    +
445200    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
445201    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
445202    +_LP0 = _LP0 + (    0.00876618054091 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00876618054091 * _TEMP);
445203    +
445204    +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
445205    +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
445206    +_LP0 = _LP0 + (   -0.00323708533956 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00323708533956 * _TEMP);
445207    +
445208    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
445209    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
445210    +_LP0 = _LP0 + (    0.72583602627024 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.72583602627024 * _TEMP);
445211    +
445212    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
445213    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
445214    +_LP0 = _LP0 + (    0.71587738133808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71587738133808 * _TEMP);
445215    +
445216    +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
445217    +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
445218    +_LP0 = _LP0 + (   -0.38414846639641 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.38414846639641 * _TEMP);
445219    +
445220    +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
445221    +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
445222    +_LP0 = _LP0 + (   -0.39960732899531 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.39960732899531 * _TEMP);
445223    +
445224    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
445225    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
445226    +_LP0 = _LP0 + (    1.00690630599849 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.00690630599849 * _TEMP);
445227    +
445228    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
445229    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
445230    +_LP0 = _LP0 + (   -0.10368937560371 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.10368937560371 * _TEMP);
445231    +
445232    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
445233    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
445234    +_LP0 = _LP0 + (   -1.33387551959166 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33387551959166 * _TEMP);
445235    +
445236    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
445237    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
445238    +_TEMP =    -1.29156803352583 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.29156803352583 + _LP0;
445239    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
445240    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
445241    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
445242    +end;
MPRINT(EM_DIAGRAM):   end;
445243    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
445244    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
445245    +
445246    +REG9DR1:
445247    +
445248    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG9DR1: *** Residuals;
445249    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
445250    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
445251    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
445252    +end;
MPRINT(EM_DIAGRAM):   end;
445253    +else do;
MPRINT(EM_DIAGRAM):   else do;
445254    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
445255    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
445256    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
445257    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
445258    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
445259    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
445260    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
445261    +   end;
MPRINT(EM_DIAGRAM):   end;
445262    +end;
MPRINT(EM_DIAGRAM):   end;
445263    +
445264    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
445265    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
445266    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
445267    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
445268    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
445269    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
445270    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
445271    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
445272    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
445273    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
445274    +end;
MPRINT(EM_DIAGRAM):   end;
445275    +I_DepVar = REG9DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG9DRF[_IY];
445276    +U_DepVar = REG9DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG9DRU[_IY];
445277    +
445278    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
445279    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
445280    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
445281     run;

NOTE: DATA STEP view saved on file EMWS8.REG9_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
445282     quit;
445283     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
445284     filename emflow
445284   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg9: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
445285     *------------------------------------------------------------*;
445286     * Reg9: Scoring VALIDATE data;
445287     *------------------------------------------------------------*;
445288     data EMWS8.Reg9_VALIDATE
445289     / view=EMWS8.Reg9_VALIDATE
445290     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg9_VALIDATE / view=EMWS8.Reg9_VALIDATE ;
445291     set EMWS8.Meta2_VALIDATE
445292     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
445293     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg9\EMFLOWSCORE.sas.
445294    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
445295    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
445296    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
445297    +
445298    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
445299    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
445300    +
445301    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
445302    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
445303    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
445304    +array REG9DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG9DRF [2] $12 _temporary_ ('1' '0' );
445305    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
445306    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
445307    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
445308    +ARRAY REG9DRU[2]  _TEMPORARY_ (1 0);
The SAS System

MPRINT(EM_DIAGRAM):   ARRAY REG9DRU[2] _TEMPORARY_ (1 0);
445309    +
445310    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
445311    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
445312    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
445313    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
445314    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
445315    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445316    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
445317    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
445318    +end;
MPRINT(EM_DIAGRAM):   end;
445319    +else do;
MPRINT(EM_DIAGRAM):   else do;
445320    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
445321    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
445322    +   end;
MPRINT(EM_DIAGRAM):   end;
445323    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
445324    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
445325    +   end;
MPRINT(EM_DIAGRAM):   end;
445326    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445327    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
445328    +   end;
MPRINT(EM_DIAGRAM):   end;
445329    +end;
MPRINT(EM_DIAGRAM):   end;
445330    +
445331    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
445332    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
445333    +
445334    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
445335    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
445336    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445337    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445338    +end;
MPRINT(EM_DIAGRAM):   end;
445339    +
445340    +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
445341    +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
445342    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445343    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445344    +end;
MPRINT(EM_DIAGRAM):   end;
445345    +
445346    +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
445347    +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
445348    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445349    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445350    +end;
MPRINT(EM_DIAGRAM):   end;
445351    +
445352    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
445353    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
445354    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445355    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445356    +end;
MPRINT(EM_DIAGRAM):   end;
445357    +
445358    +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
445359    +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
445360    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445361    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445362    +end;
MPRINT(EM_DIAGRAM):   end;
445363    +
445364    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
445365    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
445366    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445367    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445368    +end;
MPRINT(EM_DIAGRAM):   end;
445369    +
445370    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
445371    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
445372    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445373    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445374    +end;
MPRINT(EM_DIAGRAM):   end;
445375    +
445376    +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
445377    +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
445378    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445379    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445380    +end;
MPRINT(EM_DIAGRAM):   end;
445381    +
445382    +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
445383    +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
445384    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445385    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445386    +end;
MPRINT(EM_DIAGRAM):   end;
445387    +
445388    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
445389    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
445390    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445391    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445392    +end;
MPRINT(EM_DIAGRAM):   end;
445393    +
445394    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
445395    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
445396    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445397    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445398    +end;
MPRINT(EM_DIAGRAM):   end;
445399    +
445400    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
445401    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
445402    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445403    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445404    +end;
MPRINT(EM_DIAGRAM):   end;
445405    +
445406    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
445407    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
445408    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
445409    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
445410    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445411    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445412    +end;
MPRINT(EM_DIAGRAM):   end;
445413    +else do;
MPRINT(EM_DIAGRAM):   else do;
445414    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
445415    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
445416    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445417    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
445418    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
445419    +   end;
MPRINT(EM_DIAGRAM):   end;
445420    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
445421    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
445422    +   end;
MPRINT(EM_DIAGRAM):   end;
445423    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445424    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
445425    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
445426    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445427    +   end;
MPRINT(EM_DIAGRAM):   end;
445428    +end;
MPRINT(EM_DIAGRAM):   end;
445429    +
445430    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
445431    +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
445432    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
445433    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
445434    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445435    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445436    +end;
MPRINT(EM_DIAGRAM):   end;
445437    +else do;
MPRINT(EM_DIAGRAM):   else do;
445438    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
445439    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
445440    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445441    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
445442    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
445443    +   end;
MPRINT(EM_DIAGRAM):   end;
445444    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
445445    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
445446    +   end;
MPRINT(EM_DIAGRAM):   end;
445447    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445448    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
445449    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
445450    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445451    +   end;
MPRINT(EM_DIAGRAM):   end;
445452    +end;
MPRINT(EM_DIAGRAM):   end;
445453    +
445454    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
445455    +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
445456    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
445457    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
445458    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445459    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445460    +end;
MPRINT(EM_DIAGRAM):   end;
445461    +else do;
MPRINT(EM_DIAGRAM):   else do;
445462    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
445463    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
445464    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445465    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
445466    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
445467    +   end;
MPRINT(EM_DIAGRAM):   end;
445468    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
445469    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
445470    +   end;
MPRINT(EM_DIAGRAM):   end;
445471    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445472    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
445473    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
445474    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445475    +   end;
MPRINT(EM_DIAGRAM):   end;
445476    +end;
MPRINT(EM_DIAGRAM):   end;
445477    +
445478    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
445479    +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
445480    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
445481    +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
445482    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445483    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445484    +end;
MPRINT(EM_DIAGRAM):   end;
445485    +else do;
MPRINT(EM_DIAGRAM):   else do;
445486    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
445487    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
445488    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445489    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
445490    +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
445491    +   end;
MPRINT(EM_DIAGRAM):   end;
445492    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
445493    +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
445494    +   end;
MPRINT(EM_DIAGRAM):   end;
445495    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445496    +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
445497    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
445498    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445499    +   end;
MPRINT(EM_DIAGRAM):   end;
445500    +end;
MPRINT(EM_DIAGRAM):   end;
445501    +
445502    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
445503    +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
445504    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
445505    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
445506    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445507    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445508    +end;
MPRINT(EM_DIAGRAM):   end;
445509    +else do;
MPRINT(EM_DIAGRAM):   else do;
445510    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
445511    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
445512    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445513    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
445514    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
445515    +   end;
MPRINT(EM_DIAGRAM):   end;
445516    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
445517    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
445518    +   end;
MPRINT(EM_DIAGRAM):   end;
445519    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445520    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
445521    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
445522    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445523    +   end;
MPRINT(EM_DIAGRAM):   end;
445524    +end;
MPRINT(EM_DIAGRAM):   end;
445525    +
445526    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
445527    +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
445528    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
445529    +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
445530    +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
445531    +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
445532    +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
445533    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
445534    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
445535    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
445536    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
445537    +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
445538    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445539    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445540    +end;
MPRINT(EM_DIAGRAM):   end;
445541    +else do;
MPRINT(EM_DIAGRAM):   else do;
445542    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
445543    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
445544    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445545    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
445546    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
445547    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
445548    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
445549    +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
445550    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445551    +         end;
MPRINT(EM_DIAGRAM):   end;
445552    +         else do;
MPRINT(EM_DIAGRAM):   else do;
445553    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
445554    +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
445555    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445556    +            end;
MPRINT(EM_DIAGRAM):   end;
445557    +         end;
MPRINT(EM_DIAGRAM):   end;
445558    +      end;
MPRINT(EM_DIAGRAM):   end;
445559    +      else do;
MPRINT(EM_DIAGRAM):   else do;
445560    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
445561    +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
445562    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445563    +         end;
MPRINT(EM_DIAGRAM):   end;
445564    +      end;
MPRINT(EM_DIAGRAM):   end;
445565    +   end;
MPRINT(EM_DIAGRAM):   end;
445566    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445567    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
445568    +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
445569    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445570    +      end;
MPRINT(EM_DIAGRAM):   end;
445571    +      else do;
MPRINT(EM_DIAGRAM):   else do;
445572    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
445573    +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
445574    +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
445575    +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
445576    +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
445577    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445578    +         end;
MPRINT(EM_DIAGRAM):   end;
445579    +      end;
MPRINT(EM_DIAGRAM):   end;
445580    +   end;
MPRINT(EM_DIAGRAM):   end;
445581    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
445582    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
445583    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
445584    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
445585    +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
445586    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
445587    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445588    +   end;
MPRINT(EM_DIAGRAM):   end;
445589    +end;
MPRINT(EM_DIAGRAM):   end;
445590    +
445591    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
445592    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
445593    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
445594    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
445595    +   goto REG9DR1;
MPRINT(EM_DIAGRAM):   goto REG9DR1;
445596    +end;
MPRINT(EM_DIAGRAM):   end;
445597    +
445598    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
445599    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
445600    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
445601    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
445602    +
445603    +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
445604    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
445605    +_LP0 = _LP0 + (   -1.28114872833376) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.28114872833376) * _TEMP * _1_0;
445606    +
445607    +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
445608    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
445609    +_LP0 = _LP0 + (    -1.4871451186069) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.4871451186069) * _TEMP * _2_0;
445610    +
445611    +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
445612    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
445613    +_LP0 = _LP0 + (   -1.58721567367346) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.58721567367346) * _TEMP * _3_0;
445614    +
445615    +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
445616    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
445617    +_LP0 = _LP0 + (    -1.1573037622615) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.1573037622615) * _TEMP * _4_0;
445618    +
445619    +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
445620    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
445621    +_LP0 = _LP0 + (   -1.68835129992038) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.68835129992038) * _TEMP * _5_0;
445622    +
445623    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
445624    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
445625    +_LP0 = _LP0 + (    0.00006770818936 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006770818936 * _TEMP);
445626    +
445627    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
445628    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
445629    +_LP0 = _LP0 + (    0.18351716765826) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18351716765826) * _TEMP * _8_0;
445630    +_LP0 = _LP0 + (   -0.88993819943493) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.88993819943493) * _TEMP * _8_1;
445631    +_LP0 = _LP0 + (    0.89971120865107) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.89971120865107) * _TEMP * _8_2;
445632    +_LP0 = _LP0 + (   -0.96825171718714) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.96825171718714) * _TEMP * _8_3;
445633    +
445634    +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
445635    +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
445636    +_LP0 = _LP0 + (    -0.0053789406447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0053789406447 * _TEMP);
445637    +
445638    +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
445639    +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
445640    +_LP0 = _LP0 + (   -0.00810096702081 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00810096702081 * _TEMP);
445641    +
445642    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
445643    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
445644    +_LP0 = _LP0 + (    0.00876618054091 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00876618054091 * _TEMP);
445645    +
445646    +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
445647    +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
445648    +_LP0 = _LP0 + (   -0.00323708533956 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00323708533956 * _TEMP);
445649    +
445650    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
445651    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
445652    +_LP0 = _LP0 + (    0.72583602627024 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.72583602627024 * _TEMP);
445653    +
445654    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
445655    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
445656    +_LP0 = _LP0 + (    0.71587738133808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71587738133808 * _TEMP);
445657    +
445658    +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
445659    +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
445660    +_LP0 = _LP0 + (   -0.38414846639641 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.38414846639641 * _TEMP);
445661    +
445662    +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
445663    +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
445664    +_LP0 = _LP0 + (   -0.39960732899531 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.39960732899531 * _TEMP);
445665    +
445666    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
445667    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
445668    +_LP0 = _LP0 + (    1.00690630599849 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.00690630599849 * _TEMP);
445669    +
445670    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
445671    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
445672    +_LP0 = _LP0 + (   -0.10368937560371 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.10368937560371 * _TEMP);
445673    +
445674    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
445675    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
445676    +_LP0 = _LP0 + (   -1.33387551959166 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33387551959166 * _TEMP);
445677    +
445678    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
445679    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
445680    +_TEMP =    -1.29156803352583 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.29156803352583 + _LP0;
445681    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
445682    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
445683    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
445684    +end;
MPRINT(EM_DIAGRAM):   end;
445685    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
445686    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
445687    +
445688    +REG9DR1:
445689    +
445690    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG9DR1: *** Residuals;
445691    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
445692    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
445693    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
445694    +end;
MPRINT(EM_DIAGRAM):   end;
445695    +else do;
MPRINT(EM_DIAGRAM):   else do;
445696    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
445697    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
445698    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
445699    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
445700    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
445701    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
445702    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
445703    +   end;
MPRINT(EM_DIAGRAM):   end;
445704    +end;
MPRINT(EM_DIAGRAM):   end;
445705    +
445706    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
445707    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
445708    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
445709    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
445710    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
445711    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
445712    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
445713    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
445714    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
445715    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
445716    +end;
MPRINT(EM_DIAGRAM):   end;
445717    +I_DepVar = REG9DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG9DRF[_IY];
445718    +U_DepVar = REG9DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG9DRU[_IY];
445719    +
445720    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
445721    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
445722    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
445723     run;

NOTE: DATA STEP view saved on file EMWS8.REG9_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
445724     quit;
445725     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
445726     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
445727     * Reg9: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Reg9: Computing metadata for TRAIN data;
445728     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.REG9_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg9\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Reg9_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Reg9_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Reg9_TRAIN out=WORK.M2IGPNLS noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2IGPNLS;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2IGPNLS(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2IGPNLS;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2IGPNLS;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2_E1560 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_E1560;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_E1560;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QRUPO2(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_E1560;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_E1560;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_E1560;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_E1560;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_E1560;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Reg9";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Reg9";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Reg9";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Reg9";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Reg9";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Reg9";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Reg9";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Reg9";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Reg9";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Reg9";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg9: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if ROLE in('INPUT', 'REJECTED') then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) in( 'ACCEPTEDCMP1' 'ACCEPTEDCMP2' 'ACCEPTEDCMP3' 
'ACCEPTEDCMP4' 'ACCEPTEDCMP5' 'INCOME' 'MARITAL_STATUS' 'MNTFISHPRODUCTS' 'MNTFRUITS' 
'MNTMEATPRODUCTS' 'MNTWINES' 'NUMCATALOGPURCHASES' 'NUMDEALSPURCHASES' 'NUMSTOREPURCHASES' 
'NUMWEBPURCHASES' 'NUMWEBVISITSMONTH' 'RECENCY' 'TEENHOME' ) then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   COMMENT = "Reg9: Rejected using stepwise selection";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
446066     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
446067     set EMWS8.Reg9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg9_EMINFO;
446068     where DATA='Reg9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Reg9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
446069     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.REG9_EMINFO.
      WHERE (DATA='Reg9') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446070     data EMWS8.Reg9_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg9_EMINFO;
446071     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
446072     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
446073     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.REG9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
446077     run;
446078     data EMWS8.Reg9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg9_EMINFO;
446079     set EMWS8.Reg9_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg9_EMINFO WORK.MODELTEMP_INFO;
446080     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.REG9_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.REG9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446081     proc sort data = EMWS8.Reg9_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg9_EMINFO NOTHREADS;
446082     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
446083     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.REG9_EMINFO.
NOTE: The data set EMWS8.REG9_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446084     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
446085     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
446086     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446087     proc sort data = EMWS8.Reg9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Reg9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
446088     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
446089     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.REG9_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446090     data EMWS8.Reg9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg9_EMINFO;
446091     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
446092     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
446093     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.REG9_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

446094     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
446095     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
446096     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
446097     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.REG9_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.REG9_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
